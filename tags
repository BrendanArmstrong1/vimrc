!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/brendan/.vim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
#	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map #  <Plug>(incsearch-nohl-#)$/;"	m
#	plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap #  #$/;"	m
#	plugged/vim-polyglot/indent/dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	plugged/vim-polyglot/indent/dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
#	plugged/vim-polyglot/indent/ps1.vim	/^inoremap <buffer> # X#$/;"	m
#	vimrc	/^map #   <Plug>(incsearch-nohl)<Plug>(asterisk-#)$/;"	m
$	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> $ <Plug>(calendar_line_last)$/;"	m
$FZF_DEFAULT_COMMAND	vimrc	/^let $FZF_DEFAULT_COMMAND = 'rg --files --hidden$/;"	v
$PYTHONWARNINGS	plugged/vim-polyglot/compiler/python.vim	/^  let $PYTHONWARNINGS="ignore"$/;"	v
$TF_CLI_ARGS_fmt	plugged/vim-polyglot/autoload/terraform.vim	/^let $TF_CLI_ARGS_fmt=''$/;"	v
(	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ( <Plug>(calendar_first_line)$/;"	m
(optional) if you don't want to use default/vimrc.vim, add:	plugged/vim-visual-multi/test/README.md	/^## (optional) if you don't want to use default\/vimrc.vim, add:$/;"	s	chapter:Add a Test
(optional) if you want to add extra constraints, add:	plugged/vim-visual-multi/test/README.md	/^## (optional) if you want to add extra constraints, add:$/;"	s	chapter:Add a Test
)	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ) <Plug>(calendar_last_line)$/;"	m
*	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map *  <Plug>(incsearch-nohl-*)$/;"	m
*	plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap *  *$/;"	m
*	vimrc	/^map *   <Plug>(incsearch-nohl)<Plug>(asterisk-*)$/;"	m
*Backward incompatible changes*	plugged/fzf/CHANGELOG.md	/^### *Backward incompatible changes*$/;"	S	section:CHANGELOG""0.9.4
+	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> + <Plug>(calendar_plus)$/;"	m
,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
,	vimrc	/^nmap , <Plug>(incsearch-nohl)<Plug>(easymotion-prev)$/;"	m
,st	after/ftplugin/tex.vim	/^inoremap ,st \\documentclass{article}<CR><CR><CR>\\begin{document}<CR><CR><CR>\\end{document}<Es/;"	m
,ta	after/ftplugin/tex.vim	/^inoremap ,ta <Esc>ggo\\author{}<Esc>T{i$/;"	m
,tt	after/ftplugin/tex.vim	/^inoremap ,tt <Esc>\/\\\\begin{document}<CR>o\\maketitle<Esc>ggo\\title{}<Esc>T{i$/;"	m
-	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> - <Plug>(calendar_minus)$/;"	m
.	plugged/vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
.center	plugged/vimwiki/autoload/vimwiki/style.css	/^.center {$/;"	c
.done0	plugged/vimwiki/autoload/vimwiki/style.css	/^.done0 {$/;"	c
.done1	plugged/vimwiki/autoload/vimwiki/style.css	/^.done1 {$/;"	c
.done2	plugged/vimwiki/autoload/vimwiki/style.css	/^.done2 {$/;"	c
.done3	plugged/vimwiki/autoload/vimwiki/style.css	/^.done3 {$/;"	c
.done4	plugged/vimwiki/autoload/vimwiki/style.css	/^.done4 {$/;"	c
.gsub!(/\\s*?[|]{0,2}=\\s*?/,	plugged/vim-polyglot/autoload/rubycomplete.vim	/^                ln.gsub!(\/\\s*?[|]{0,2}=\\s*?\/, '||=')$/;"	m
.header a	plugged/vimwiki/autoload/vimwiki/style.css	/^.header a {$/;"	s
.justcenter	plugged/vimwiki/autoload/vimwiki/style.css	/^.justcenter { text-align: center; }$/;"	c
.justleft	plugged/vimwiki/autoload/vimwiki/style.css	/^.justleft { text-align: left; }$/;"	c
.justright	plugged/vimwiki/autoload/vimwiki/style.css	/^.justright { text-align: right; }$/;"	c
.rejected	plugged/vimwiki/autoload/vimwiki/style.css	/^.rejected {$/;"	c
.tag	plugged/vimwiki/autoload/vimwiki/style.css	/^.tag {$/;"	c
.toc li	plugged/vimwiki/autoload/vimwiki/style.css	/^.toc li { list-style-type: none; }$/;"	s
.todo	plugged/vimwiki/autoload/vimwiki/style.css	/^.todo {$/;"	c
/	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/cancel.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/count.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/default_behaviors.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/default_behaviors.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/error_warning_emulation.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/fold.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/fold.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/highlight.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/history.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/incremental_next_prev.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/insert_register.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/jumplist.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/magic_option.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/module.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/n_and_N.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/nomagic.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/nomagic.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/register.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/repetition.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/scroll.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/incsearch.vim/test/visual_behavior.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    nmap              <nowait> <buffer> \/          <Plug>(VM-\/)$/;"	m
/	vimrc	/^map \/  <Plug>(incsearch-nohl)<Plug>(incsearch-forward)$/;"	m
0	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> 0 <Plug>(calendar_line_head)$/;"	m
0.10.0	plugged/fzf/CHANGELOG.md	/^0.10.0$/;"	s	chapter:CHANGELOG
0.10.1	plugged/fzf/CHANGELOG.md	/^0.10.1$/;"	s	chapter:CHANGELOG
0.10.2	plugged/fzf/CHANGELOG.md	/^0.10.2$/;"	s	chapter:CHANGELOG
0.10.3	plugged/fzf/CHANGELOG.md	/^0.10.3$/;"	s	chapter:CHANGELOG
0.10.4	plugged/fzf/CHANGELOG.md	/^0.10.4$/;"	s	chapter:CHANGELOG
0.10.5	plugged/fzf/CHANGELOG.md	/^0.10.5$/;"	s	chapter:CHANGELOG
0.10.6	plugged/fzf/CHANGELOG.md	/^0.10.6$/;"	s	chapter:CHANGELOG
0.10.7	plugged/fzf/CHANGELOG.md	/^0.10.7$/;"	s	chapter:CHANGELOG
0.10.8	plugged/fzf/CHANGELOG.md	/^0.10.8$/;"	s	chapter:CHANGELOG
0.10.9	plugged/fzf/CHANGELOG.md	/^0.10.9$/;"	s	chapter:CHANGELOG
0.11.0	plugged/fzf/CHANGELOG.md	/^0.11.0$/;"	s	chapter:CHANGELOG
0.11.1	plugged/fzf/CHANGELOG.md	/^0.11.1$/;"	s	chapter:CHANGELOG
0.11.2	plugged/fzf/CHANGELOG.md	/^0.11.2$/;"	s	chapter:CHANGELOG
0.11.3	plugged/fzf/CHANGELOG.md	/^0.11.3$/;"	s	chapter:CHANGELOG
0.11.4	plugged/fzf/CHANGELOG.md	/^0.11.4$/;"	s	chapter:CHANGELOG
0.12.0	plugged/fzf/CHANGELOG.md	/^0.12.0$/;"	s	chapter:CHANGELOG
0.12.1	plugged/fzf/CHANGELOG.md	/^0.12.1$/;"	s	chapter:CHANGELOG
0.12.2	plugged/fzf/CHANGELOG.md	/^0.12.2$/;"	s	chapter:CHANGELOG
0.13.0	plugged/fzf/CHANGELOG.md	/^0.13.0$/;"	s	chapter:CHANGELOG
0.13.1	plugged/fzf/CHANGELOG.md	/^0.13.1$/;"	s	chapter:CHANGELOG
0.13.2	plugged/fzf/CHANGELOG.md	/^0.13.2$/;"	s	chapter:CHANGELOG
0.13.3	plugged/fzf/CHANGELOG.md	/^0.13.3$/;"	s	chapter:CHANGELOG
0.13.4	plugged/fzf/CHANGELOG.md	/^0.13.4$/;"	s	chapter:CHANGELOG
0.13.5	plugged/fzf/CHANGELOG.md	/^0.13.5$/;"	s	chapter:CHANGELOG
0.15.0	plugged/fzf/CHANGELOG.md	/^0.15.0$/;"	s	chapter:CHANGELOG
0.15.1	plugged/fzf/CHANGELOG.md	/^0.15.1$/;"	s	chapter:CHANGELOG
0.15.2	plugged/fzf/CHANGELOG.md	/^0.15.2$/;"	s	chapter:CHANGELOG
0.15.3	plugged/fzf/CHANGELOG.md	/^0.15.3$/;"	s	chapter:CHANGELOG
0.15.4	plugged/fzf/CHANGELOG.md	/^0.15.4$/;"	s	chapter:CHANGELOG
0.15.5	plugged/fzf/CHANGELOG.md	/^0.15.5$/;"	s	chapter:CHANGELOG
0.15.6	plugged/fzf/CHANGELOG.md	/^0.15.6$/;"	s	chapter:CHANGELOG
0.15.7	plugged/fzf/CHANGELOG.md	/^0.15.7$/;"	s	chapter:CHANGELOG
0.15.8	plugged/fzf/CHANGELOG.md	/^0.15.8$/;"	s	chapter:CHANGELOG
0.15.9	plugged/fzf/CHANGELOG.md	/^0.15.9$/;"	s	chapter:CHANGELOG
0.16.0	plugged/fzf/CHANGELOG.md	/^0.16.0$/;"	s	chapter:CHANGELOG
0.16.1	plugged/fzf/CHANGELOG.md	/^0.16.1$/;"	s	chapter:CHANGELOG
0.16.10	plugged/fzf/CHANGELOG.md	/^0.16.10$/;"	s	chapter:CHANGELOG
0.16.11	plugged/fzf/CHANGELOG.md	/^0.16.11$/;"	s	chapter:CHANGELOG
0.16.2	plugged/fzf/CHANGELOG.md	/^0.16.2$/;"	s	chapter:CHANGELOG
0.16.3	plugged/fzf/CHANGELOG.md	/^0.16.3$/;"	s	chapter:CHANGELOG
0.16.4	plugged/fzf/CHANGELOG.md	/^0.16.4$/;"	s	chapter:CHANGELOG
0.16.5	plugged/fzf/CHANGELOG.md	/^0.16.5$/;"	s	chapter:CHANGELOG
0.16.6	plugged/fzf/CHANGELOG.md	/^0.16.6$/;"	s	chapter:CHANGELOG
0.16.7	plugged/fzf/CHANGELOG.md	/^0.16.7$/;"	s	chapter:CHANGELOG
0.16.8	plugged/fzf/CHANGELOG.md	/^0.16.8$/;"	s	chapter:CHANGELOG
0.16.9	plugged/fzf/CHANGELOG.md	/^0.16.9$/;"	s	chapter:CHANGELOG
0.17.0	plugged/fzf/CHANGELOG.md	/^0.17.0$/;"	s	chapter:CHANGELOG
0.17.0-2	plugged/fzf/CHANGELOG.md	/^0.17.0-2$/;"	s	chapter:CHANGELOG
0.17.1	plugged/fzf/CHANGELOG.md	/^0.17.1$/;"	s	chapter:CHANGELOG
0.17.3	plugged/fzf/CHANGELOG.md	/^0.17.3$/;"	s	chapter:CHANGELOG
0.17.4	plugged/fzf/CHANGELOG.md	/^0.17.4$/;"	s	chapter:CHANGELOG
0.17.5	plugged/fzf/CHANGELOG.md	/^0.17.5$/;"	s	chapter:CHANGELOG
0.18.0	plugged/fzf/CHANGELOG.md	/^0.18.0$/;"	s	chapter:CHANGELOG
0.19.0	plugged/fzf/CHANGELOG.md	/^0.19.0$/;"	s	chapter:CHANGELOG
0.20.0	plugged/fzf/CHANGELOG.md	/^0.20.0$/;"	s	chapter:CHANGELOG
0.21.1	plugged/fzf/CHANGELOG.md	/^0.21.1$/;"	s	chapter:CHANGELOG
0.22.0	plugged/fzf/CHANGELOG.md	/^0.22.0$/;"	s	chapter:CHANGELOG
0.23.0	plugged/fzf/CHANGELOG.md	/^0.23.0$/;"	s	chapter:CHANGELOG
0.23.1	plugged/fzf/CHANGELOG.md	/^0.23.1$/;"	s	chapter:CHANGELOG
0.24.0	plugged/fzf/CHANGELOG.md	/^0.24.0$/;"	s	chapter:CHANGELOG
0.24.1	plugged/fzf/CHANGELOG.md	/^0.24.1$/;"	s	chapter:CHANGELOG
0.24.2	plugged/fzf/CHANGELOG.md	/^0.24.2$/;"	s	chapter:CHANGELOG
0.24.3	plugged/fzf/CHANGELOG.md	/^0.24.3$/;"	s	chapter:CHANGELOG
0.24.4	plugged/fzf/CHANGELOG.md	/^0.24.4$/;"	s	chapter:CHANGELOG
0.25.0	plugged/fzf/CHANGELOG.md	/^0.25.0$/;"	s	chapter:CHANGELOG
0.25.1	plugged/fzf/CHANGELOG.md	/^0.25.1$/;"	s	chapter:CHANGELOG
0.26.0	plugged/fzf/CHANGELOG.md	/^0.26.0$/;"	s	chapter:CHANGELOG
0.27.0	plugged/fzf/CHANGELOG.md	/^0.27.0$/;"	s	chapter:CHANGELOG
0.27.1	plugged/fzf/CHANGELOG.md	/^0.27.1$/;"	s	chapter:CHANGELOG
0.27.2	plugged/fzf/CHANGELOG.md	/^0.27.2$/;"	s	chapter:CHANGELOG
0.27.3	plugged/fzf/CHANGELOG.md	/^0.27.3$/;"	s	chapter:CHANGELOG
0.28.0	plugged/fzf/CHANGELOG.md	/^0.28.0$/;"	s	chapter:CHANGELOG
0.29.0	plugged/fzf/CHANGELOG.md	/^0.29.0$/;"	s	chapter:CHANGELOG
0.9.10	plugged/fzf/CHANGELOG.md	/^0.9.10$/;"	s	chapter:CHANGELOG
0.9.11	plugged/fzf/CHANGELOG.md	/^0.9.11$/;"	s	chapter:CHANGELOG
0.9.12	plugged/fzf/CHANGELOG.md	/^0.9.12$/;"	s	chapter:CHANGELOG
0.9.13	plugged/fzf/CHANGELOG.md	/^0.9.13$/;"	s	chapter:CHANGELOG
0.9.3	plugged/fzf/CHANGELOG.md	/^0.9.3$/;"	s	chapter:CHANGELOG
0.9.4	plugged/fzf/CHANGELOG.md	/^0.9.4$/;"	s	chapter:CHANGELOG
0.9.5	plugged/fzf/CHANGELOG.md	/^0.9.5$/;"	s	chapter:CHANGELOG
0.9.6	plugged/fzf/CHANGELOG.md	/^0.9.6$/;"	s	chapter:CHANGELOG
0.9.7	plugged/fzf/CHANGELOG.md	/^0.9.7$/;"	s	chapter:CHANGELOG
0.9.8	plugged/fzf/CHANGELOG.md	/^0.9.8$/;"	s	chapter:CHANGELOG
0.9.9	plugged/fzf/CHANGELOG.md	/^0.9.9$/;"	s	chapter:CHANGELOG
1. Bug reports / GitHub issues	plugged/syntastic/CONTRIBUTING.md	/^## 1. Bug reports \/ GitHub issues$/;"	s	chapter:CONTRIBUTING
1. Simple	plugged/incsearch.vim/README.md	/^### 1. Simple$/;"	S	section:Concepts
1. Update the list of processes by pressing CTRL-R	plugged/fzf/README.md	/^#### 1. Update the list of processes by pressing CTRL-R$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
1. stay star motions (z prefixed mappings)	plugged/vim-asterisk/README.md	/^### 1. stay star motions (z prefixed mappings)$/;"	S	section:vim-asterisk: * -Improved""Introduction
16color (`background=dark`)	plugged/lightline.vim/colorscheme.md	/^### 16color (`background=dark`)$/;"	S	chapter:Available Colorschemes
16color (`background=light`)	plugged/lightline.vim/colorscheme.md	/^### 16color (`background=light`)$/;"	S	chapter:Available Colorschemes
1\\. Introduction	plugged/syntastic/README.markdown	/^## 1\\. Introduction$/;"	s
2-character search motion	plugged/vim-easymotion/README.md	/^### 2-character search motion$/;"	S	chapter:New features in version 2.0
2. Comfortable	plugged/incsearch.vim/README.md	/^### 2. Comfortable$/;"	S	section:Concepts
2. Submitting a patch	plugged/syntastic/CONTRIBUTING.md	/^## 2. Submitting a patch$/;"	s	chapter:CONTRIBUTING
2. Switch between sources by pressing CTRL-D or CTRL-F	plugged/fzf/README.md	/^#### 2. Switch between sources by pressing CTRL-D or CTRL-F$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
2. visual star motions	plugged/vim-asterisk/README.md	/^### 2. visual star motions$/;"	S	section:vim-asterisk: * -Improved""Introduction
2.1\\. Requirements	plugged/syntastic/README.markdown	/^### 2.1\\. Requirements$/;"	S	section:2\\. Installation
2.2.1\\. Step 1: Install pathogen.vim	plugged/syntastic/README.markdown	/^#### 2.2.1\\. Step 1: Install pathogen.vim$/;"	t	subsection:2\\. Installation""2.2\\. Installing syntastic with Pathogen
2.2.2\\. Step 2: Install syntastic as a Pathogen bundle	plugged/syntastic/README.markdown	/^#### 2.2.2\\. Step 2: Install syntastic as a Pathogen bundle$/;"	t	subsection:2\\. Installation""2.2\\. Installing syntastic with Pathogen
2.2\\. Installing syntastic with Pathogen	plugged/syntastic/README.markdown	/^### 2.2\\. Installing syntastic with Pathogen$/;"	S	section:2\\. Installation
2\\. Installation	plugged/syntastic/README.markdown	/^## 2\\. Installation$/;"	s
3. General style notes	plugged/syntastic/CONTRIBUTING.md	/^## 3. General style notes$/;"	s	chapter:CONTRIBUTING
3. Interactive ripgrep integration	plugged/fzf/README.md	/^#### 3. Interactive ripgrep integration$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
3. Use smartcase unlike default one	plugged/vim-asterisk/README.md	/^### 3. Use smartcase unlike default one$/;"	S	section:vim-asterisk: * -Improved""Introduction
3. Useful	plugged/incsearch.vim/README.md	/^### 3. Useful$/;"	S	section:Concepts
3\\. Recommended settings	plugged/syntastic/README.markdown	/^## 3\\. Recommended settings$/;"	s
4. Keep cursor position across matches	plugged/vim-asterisk/README.md	/^### 4. Keep cursor position across matches$/;"	S	section:vim-asterisk: * -Improved""Introduction
4. Syntax checker notes	plugged/syntastic/CONTRIBUTING.md	/^## 4. Syntax checker notes$/;"	s	chapter:CONTRIBUTING
4\\. FAQ	plugged/syntastic/README.markdown	/^## 4\\. FAQ$/;"	s
5\\. Resources	plugged/syntastic/README.markdown	/^## 5\\. Resources$/;"	s
:	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    nmap              <nowait> <buffer> :          <Plug>(VM-:)$/;"	m
:tada: Version 2.0 :tada:	plugged/incsearch.vim/README.md	/^:tada: Version 2.0 :tada:$/;"	s
;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
;	vimrc	/^nmap ; <Plug>(incsearch-nohl)<Plug>(easymotion-next)$/;"	m
<	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> < <Plug>(calendar_view_left)$/;"	m
<	plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<	vimrc	/^xnoremap < <gv$/;"	m
<2-LeftMouse>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <2-LeftMouse> :call startify#open_buffers()<cr>$/;"	m
<2-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <2-LeftMouse>$/;"	m
<<	plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<BS>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <BS> h$/;"	m
<BS>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <BS> <c-g>"_c$/;"	m
<Bar>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Bar> <Plug>(calendar_bar)$/;"	m
<C-2-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <C-2-LeftMouse> <LeftMouse>:VimwikiVSplitLink<CR>$/;"	m
<C-A>	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-A> :<C-U><C-R>=v:count1<CR>Cycle<CR>$/;"	m
<C-D>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-D>	vimrc	/^map <C-D> <C-E><C-E><C-E><C-E><C-E><C-E><C-E><C-E>$/;"	m
<C-End>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-End> <Plug>(calendar_last_line_last)$/;"	m
<C-G>S	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-Home>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-Home> gg$/;"	m
<C-L>	plugged/vimwiki/test/vimrc	/^    nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>$/;"	m
<C-Left>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-Left> b$/;"	m
<C-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nmap <buffer> <C-LeftMouse> <NOP>$/;"	m
<C-N>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-P>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-R>	plugged/vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-Right>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-Right> w$/;"	m
<C-S-Down>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-S-Down> <Plug>(calendar_move_down)$/;"	m
<C-S-Up>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-S-Up> <Plug>(calendar_move_up)$/;"	m
<C-S>	plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-T>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-T>	plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_t/;"	m
<C-U>	plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-U>	vimrc	/^map <C-U> <C-Y><C-Y><C-Y><C-Y><C-Y><C-Y><C-Y><C-Y>$/;"	m
<C-W>	plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-W> <C-G>u<C-W>$/;"	m
<C-W><C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-W><C-F>	vimrc	/^nmap <C-W><C-F> :vsplit <cfile><CR>$/;"	m
<C-W>d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-X>	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-X> :<C-U><C-R>=v:count1<CR>Cycle!<CR>$/;"	m
<C-X><C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr/;"	m
<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-a>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-a> <Plug>(calendar_add)$/;"	m
<C-b>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-b> <Plug>(calendar_up_large)$/;"	m
<C-b>	vimrc	/^map <C-b> <C-U><C-U>$/;"	m
<C-d>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-d> <Plug>(calendar_down_big)$/;"	m
<C-e>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-e> <Plug>(calendar_scroll_down)$/;"	m
<C-e>	vimrc	/^noremap <expr> <C-e> repeat("\\<C-e>", 3)$/;"	m
<C-f>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-f> <Plug>(calendar_down_large)$/;"	m
<C-f>	vimrc	/^map <C-f> <C-D><C-D>$/;"	m
<C-g>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-g> <Plug>(calendar_status)$/;"	m
<C-h>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-h> h$/;"	m
<C-j>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-j> <Plug>(calendar_move_down)$/;"	m
<C-k>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-k> <Plug>(calendar_move_up)$/;"	m
<C-l>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-l> <Plug>(calendar_redraw)$/;"	m
<C-n>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-n> <Plug>(calendar_down)$/;"	m
<C-n>	plugged/vimwiki/test/vimrc	/^cnoremap <C-n> <Down>$/;"	m
<C-p>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-p> <Plug>(calendar_up)$/;"	m
<C-p>	plugged/vimwiki/test/vimrc	/^cnoremap <C-p> <Up>$/;"	m
<C-r>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-r> <Plug>(calendar_redraw)$/;"	m
<C-u>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-u> <Plug>(calendar_up_big)$/;"	m
<C-v>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-v> <Plug>(calendar_visual_block)$/;"	m
<C-x>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-x> <Plug>(calendar_subtract)$/;"	m
<C-x>	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^    cnoremap <buffer><nowait><silent><expr> <C-x> <sid>filter_regions(getcmdline())$/;"	m
<C-y>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <C-y> <Plug>(calendar_scroll_up)$/;"	m
<C-y>	vimrc	/^noremap <expr> <C-y> repeat("\\<C-y>", 3)$/;"	m
<CR>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  cmap <buffer> <CR> <Plug>(calendar_command_enter)$/;"	m
<CR>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <CR> <Plug>(calendar_enter)$/;"	m
<CR>	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  imap <buffer> <CR> <Plug>L2UAutoSub$/;"	m
<CR>	plugged/vimwiki/ftplugin/vimwiki.vim	/^      inoremap <silent><buffer> <CR> <C-]><Esc>:VimwikiReturn 1 5<CR>$/;"	m
<CR>	plugged/vimwiki/ftplugin/vimwiki.vim	/^      inoremap <silent><buffer> <CR> <Esc>:VimwikiReturn 1 5<CR>$/;"	m
<DEL>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <DEL> <c-g>"_c$/;"	m
<Down>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Down> <Plug>(calendar_down)$/;"	m
<ESC>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^          nmap <buffer>         <ESC> <Plug>(calendar_escape)$/;"	m
<ESC>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^          nmap <buffer><nowait> <ESC> <Plug>(calendar_escape)$/;"	m
<End>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <End> \$$/;"	m
<Esc>	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^        nnoremap <buffer> <silent> <Esc> :<C-U>call gitgutter#hunk#close_hunk_preview_window()<C/;"	m
<Esc>	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^    nnoremap <buffer> <silent> <Esc> :<C-U>wincmd p<Bar>pclose<CR>$/;"	m
<F10>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F10> :emenu <C-Z>$/;"	m
<F12>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F12> :g!\/%.*\/normal 0i%<Return>$/;"	m
<F4>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F4> :w<Return>:setl makeprg=lilypond\\ \\"%<\\"<Return>:make<Return>:!timidity/;"	m
<F5>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F5> :w<Return>:setl makeprg=lilypond\\ \\"%<\\"<Return>:make<Return>$/;"	m
<F6>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F6> :!gv --watch "%<.pdf" &<Return>$/;"	m
<F7>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F7> :cp<Return>$/;"	m
<F8>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F8> :cn<Return>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <F9> :w<Return>:setl makeprg=make\\ -k<Return>:make<Return>$/;"	m
<Home>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Home> 0$/;"	m
<Leader><Leader>	plugged/vim-easymotion/plugin/EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Leader>B	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>B <Plug>(easymotion-B)$/;"	m
<Leader>E	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>E <Plug>(easymotion-E)$/;"	m
<Leader>W	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>W <Plug>(easymotion-W)$/;"	m
<Leader>b	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>b	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>e	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>e <Plug>(easymotion-iskeyword-e)$/;"	m
<Leader>fr	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h/;"	m
<Leader>fs	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h/;"	m
<Leader>ft	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h/;"	m
<Leader>gE	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>gE <Plug>(easymotion-gE)$/;"	m
<Leader>ge	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>ge <Plug>(easymotion-iskeyword-ge)$/;"	m
<Leader>gm	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^    nmap <Leader>gm <Plug>(git-messenger)$/;"	m
<Leader>hp	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hp <Plug>(GitGutterPreviewHunk)$/;"	m
<Leader>hs	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hs <Plug>(GitGutterStageHunk)$/;"	m
<Leader>hs	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> <Leader>hs <Plug>(GitGutterStageHunk)$/;"	m
<Leader>hu	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hu <Plug>(GitGutterUndoHunk)$/;"	m
<Leader>rf	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rf :TextileRenderFile<CR>$/;"	m
<Leader>rp	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rp :TextilePreview<CR>$/;"	m
<Leader>rt	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rt :TextileRenderTab<CR>$/;"	m
<Leader>w	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Leader>w	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Left>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Left> <Plug>(calendar_left)$/;"	m
<LeftMouse>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <LeftMouse>   :call <sid>leftmouse()<cr>$/;"	m
<LocalLeader><LocalLeader>	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>S <Plug>OCamlSwitchNewWin$/;"	m
<LocalLeader>a	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>a 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>b	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>b	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>e	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>e	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>f	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>f	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>g	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>g :call IdrisGenerateDef()<ENTER>$/;"	m
<LocalLeader>h	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
<LocalLeader>h	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
<LocalLeader>i	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>i	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>l	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>l	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>m	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>m	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>mc	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>mc	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>md	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENT/;"	m
<LocalLeader>md	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENT/;"	m
<LocalLeader>o	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>o	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>p	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>p	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>q	plugged/vim-polyglot/ftplugin/mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	plugged/vim-polyglot/ftplugin/mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>r	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>r	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>s	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>s :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>s	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>s <Plug>OCamlSwitchEdit$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>w	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<LocalLeader>w	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<MiddleMouse>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <MiddleMouse> :enew <bar> execute 'normal! "'.(v:register=='/;"	m
<PageDown>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <PageDown> <C-f>$/;"	m
<PageUp>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <PageUp> <C-b>$/;"	m
<Plug>(-fzf-complete-finish)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-finish) <c-o>l$/;"	m
<Plug>(-fzf-complete-finish)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <silent> <Plug>(-fzf-complete-finish) a$/;"	m
<Plug>(-fzf-complete-trigger)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(GitGutterNextHunk)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterNextHunk) &diff ? ']c' : ":\\<C-U>execute v:count1 . 'G/;"	m
<Plug>(GitGutterPrevHunk)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterPrevHunk) &diff ? '[c' : ":\\<C-U>execute v:count1 . 'G/;"	m
<Plug>(GitGutterPreviewHunk)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterPreviewHunk) :GitGutterPreviewHunk<CR>$/;"	m
<Plug>(GitGutterStageHunk)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterStageHunk)   :GitGutterStageHunk<CR>$/;"	m
<Plug>(GitGutterStageHunk)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>(GitGutterStageHunk)   :GitGutterStageHunk<CR>$/;"	m
<Plug>(GitGutterTextObjectInnerPending)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectInnerPending) :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterTextObjectInnerVisual)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>(GitGutterTextObjectInnerVisual)  :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterTextObjectOuterPending)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectOuterPending) :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterTextObjectOuterVisual)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>(GitGutterTextObjectOuterVisual)  :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterUndoHunk)	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterUndoHunk)    :GitGutterUndoHunk<CR>$/;"	m
<Plug>(JuliaDocPrompt)	plugged/vim-polyglot/ftplugin/julia.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
<Plug>(JuliaDocPrompt)	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
<Plug>(RepeatDot)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>if !repeat#run(v:count)<Bar>echoerr repeat#errmsg/;"	m
<Plug>(RepeatRedo)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(VM-&)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-&)                       :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-/)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap         <expr> <Plug>(VM-\/)                  vm#commands#regex_reset('\/')$/;"	m
<Plug>(VM-:)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap         <expr> <Plug>(VM-:)                  vm#commands#regex_reset(':')$/;"	m
<Plug>(VM-?)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap         <expr> <Plug>(VM-?)                  vm#commands#regex_reset('?')$/;"	m
<Plug>(VM-A)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-A)                       :<C-u>call b:VM_Selection.Insert.k/;"	m
<Plug>(VM-Add-Cursor-At-Pos)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Add-Cursor-At-Pos)       :call vm#commands#add_cursor_at_pos/;"	m
<Plug>(VM-Add-Cursor-At-Word)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Add-Cursor-At-Word)      :call vm#commands#add_cursor_at_wor/;"	m
<Plug>(VM-Add-Cursor-Down)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Add-Cursor-Down)         :<C-u>call vm#commands#add_cursor_d/;"	m
<Plug>(VM-Add-Cursor-Up)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Add-Cursor-Up)           :<C-u>call vm#commands#add_cursor_u/;"	m
<Plug>(VM-Add-Search)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Add-Search)              :call b:VM_Selection.Search.get_fro/;"	m
<Plug>(VM-Align)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Align)                   :<C-u>call vm#commands#align()<cr>$/;"	m
<Plug>(VM-Align-Char)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Align-Char)              :<C-u>call vm#commands#align_char(/;"	m
<Plug>(VM-Align-Regex)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Align-Regex)             :<C-u>call vm#commands#align_regex/;"	m
<Plug>(VM-Alpha-Decrease)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Alpha-Decrease)          :<C-u>call vm#commands#increase_or/;"	m
<Plug>(VM-Alpha-Increase)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Alpha-Increase)          :<C-u>call vm#commands#increase_or/;"	m
<Plug>(VM-C)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-C)                       :<C-u>call vm#cursors#operation('c/;"	m
<Plug>(VM-Case-Conversion-Menu)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Case-Conversion-Menu)    :call b:VM_Selection.Case.menu()<cr/;"	m
<Plug>(VM-Case-Setting)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Case-Setting)            :call b:VM_Selection.Search.case()</;"	m
<Plug>(VM-D)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-D)                       :<C-u>call vm#cursors#operation('d/;"	m
<Plug>(VM-Decrease)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Decrease)                :<C-u>call vm#commands#increase_or/;"	m
<Plug>(VM-Del)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Del)                     :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-Delete)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Delete)                  :<C-u>call b:VM_Selection.Edit.del/;"	m
<Plug>(VM-Delete-Exit)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Delete-Exit)             :<C-u>call b:VM_Selection.Edit.del/;"	m
<Plug>(VM-Dot)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Dot)                     :<C-u>call b:VM_Selection.Edit.dot/;"	m
<Plug>(VM-Duplicate)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Duplicate)               :call b:VM_Selection.Edit.duplicat/;"	m
<Plug>(VM-Enlarge)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Enlarge)                 :call vm#commands#shrink_or_enlarg/;"	m
<Plug>(VM-Exit)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Exit)                    :<c-u><C-r>=b:VM_Selection.Vars.noh/;"	m
<Plug>(VM-Filter-Lines)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Filter-Lines)            :call vm#special#commands#filter_li/;"	m
<Plug>(VM-Filter-Lines-Strip)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Filter-Lines-Strip)      :call vm#special#commands#filter_li/;"	m
<Plug>(VM-Filter-Regions)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Filter-Regions)          :call vm#special#commands#filter_re/;"	m
<Plug>(VM-Find-Next)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Find-Next)               :call vm#commands#find_next(0, 0)<c/;"	m
<Plug>(VM-Find-Operator)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nmap <expr><silent>     <Plug>(VM-Find-Operator)           vm#operators#find(1, 0)$/;"	m
<Plug>(VM-Find-Prev)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Find-Prev)               :call vm#commands#find_prev(0, 0)<c/;"	m
<Plug>(VM-Find-Subword-Under)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xnoremap <silent><expr> <Plug>(VM-Find-Subword-Under)      <sid>Visual('under')$/;"	m
<Plug>(VM-Find-Under)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Find-Under)              :<c-u>call vm#commands#ctrln(v:coun/;"	m
<Plug>(VM-Goto-Next)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Goto-Next)               :call vm#commands#find_next(0, 1)<c/;"	m
<Plug>(VM-Goto-Prev)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Goto-Prev)               :call vm#commands#find_prev(0, 1)<c/;"	m
<Plug>(VM-Goto-Regex!)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Goto-Regex!)             :<c-u>call vm#commands#regex_motion/;"	m
<Plug>(VM-Goto-Regex)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Goto-Regex)              :<c-u>call vm#commands#regex_motion/;"	m
<Plug>(VM-Hls)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Hls)                     :set hls<cr>$/;"	m
<Plug>(VM-I)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-I)                       :<C-u>call b:VM_Selection.Insert.k/;"	m
<Plug>(VM-I-Arrow-B)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-B)          <sid>Insert('B')$/;"	m
<Plug>(VM-I-Arrow-E)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-E)          <sid>Insert('E')$/;"	m
<Plug>(VM-I-Arrow-W)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-W)          <sid>Insert('W')$/;"	m
<Plug>(VM-I-Arrow-b)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-b)          <sid>Insert('b')$/;"	m
<Plug>(VM-I-Arrow-e)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-e)          <sid>Insert('e')$/;"	m
<Plug>(VM-I-Arrow-gE)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-gE)         <sid>Insert('gE')$/;"	m
<Plug>(VM-I-Arrow-ge)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-ge)         <sid>Insert('ge')$/;"	m
<Plug>(VM-I-Arrow-w)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Arrow-w)          <sid>Insert('w')$/;"	m
<Plug>(VM-I-BS)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-BS)               <sid>Insert('X')$/;"	m
<Plug>(VM-I-CtrlA)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-CtrlA)            <sid>Insert('I')$/;"	m
<Plug>(VM-I-CtrlB)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-CtrlB)            <sid>Insert('h')$/;"	m
<Plug>(VM-I-CtrlD)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-CtrlD)            <sid>Insert('x')$/;"	m
<Plug>(VM-I-CtrlE)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-CtrlE)            <sid>Insert('A')$/;"	m
<Plug>(VM-I-CtrlF)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-CtrlF)            <sid>Insert('l')$/;"	m
<Plug>(VM-I-CtrlU)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-CtrlU)            <sid>Insert('c-u')$/;"	m
<Plug>(VM-I-CtrlW)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-CtrlW)            <sid>Insert('c-w')$/;"	m
<Plug>(VM-I-Ctrl^)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Ctrl^)            <sid>Insert('I')$/;"	m
<Plug>(VM-I-Del)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Del)              <sid>Insert('x')$/;"	m
<Plug>(VM-I-Down-Arrow)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Down-Arrow)       <sid>Insert('j')$/;"	m
<Plug>(VM-I-End)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-End)              <sid>Insert('A')$/;"	m
<Plug>(VM-I-Home)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Home)             <sid>Insert('0')$/;"	m
<Plug>(VM-I-Left-Arrow)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Left-Arrow)       <sid>Insert('h')$/;"	m
<Plug>(VM-I-Next)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Next)             vm#icmds#goto(1)$/;"	m
<Plug>(VM-I-Paste)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Paste)            <sid>Insert('c-v')$/;"	m
<Plug>(VM-I-Prev)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Prev)             vm#icmds#goto(0)$/;"	m
<Plug>(VM-I-Replace)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Replace)          <sid>Insert('ins')$/;"	m
<Plug>(VM-I-Return)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Return)           <sid>Insert('cr')$/;"	m
<Plug>(VM-I-Right-Arrow)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Right-Arrow)      <sid>Insert('l')$/;"	m
<Plug>(VM-I-Up-Arrow)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  inoremap <silent><expr> <Plug>(VM-I-Up-Arrow)         <sid>Insert('k')$/;"	m
<Plug>(VM-Increase)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Increase)                :<C-u>call vm#commands#increase_or/;"	m
<Plug>(VM-J)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-J)                       :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-Left-Mouse)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Left-Mouse)              <LeftMouse>$/;"	m
<Plug>(VM-Merge-Regions)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Merge-Regions)           :call b:VM_Selection.Global.merge_r/;"	m
<Plug>(VM-Merge-To-Bol)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Merge-To-Bol)            :call vm#commands#merge_to_beol(0,/;"	m
<Plug>(VM-Merge-To-Eol)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Merge-To-Eol)            :call vm#commands#merge_to_beol(1,/;"	m
<Plug>(VM-Mouse-Column)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Mouse-Column)            :call vm#commands#mouse_column()<cr/;"	m
<Plug>(VM-Mouse-Cursor)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nmap     <silent>       <Plug>(VM-Mouse-Cursor)            <Plug>(VM-Left-Mouse)<Plug>(VM-Add-/;"	m
<Plug>(VM-Mouse-Word)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nmap     <silent>       <Plug>(VM-Mouse-Word)              <Plug>(VM-Left-Mouse)<Plug>(VM-Find/;"	m
<Plug>(VM-Move-Left)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Move-Left)               :call b:VM_Selection.Edit.shift(0)/;"	m
<Plug>(VM-Move-Right)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Move-Right)              :call b:VM_Selection.Edit.shift(1)/;"	m
<Plug>(VM-Numbers)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Numbers)                 :<C-u>call b:VM_Selection.Edit.num/;"	m
<Plug>(VM-Numbers-Append)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Numbers-Append)          :<C-u>call b:VM_Selection.Edit.num/;"	m
<Plug>(VM-O)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-O)                       :<C-u>call <sid>O(1)<cr>$/;"	m
<Plug>(VM-One-Per-Line)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-One-Per-Line)            :call b:VM_Selection.Global.one_reg/;"	m
<Plug>(VM-P-Paste)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-P-Paste)                 :call b:VM_Selection.Edit.paste(  /;"	m
<Plug>(VM-P-Paste-Vimreg)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-P-Paste-Vimreg)          :call b:VM_Selection.Edit.paste(  /;"	m
<Plug>(VM-Read-From-Search)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Read-From-Search)        :call b:VM_Selection.Search.get_sla/;"	m
<Plug>(VM-Redo)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Redo)                    :call vm#commands#redo()<cr>$/;"	m
<Plug>(VM-Regions-To-Buffer)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Regions-To-Buffer)       :call vm#special#commands#regions_t/;"	m
<Plug>(VM-Remove-Empty-Lines)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Remove-Empty-Lines)      :<c-u>call vm#commands#remove_empty/;"	m
<Plug>(VM-Remove-Every-n-Regions)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Remove-Every-n-Regions)  :<c-u>call vm#commands#remove_every/;"	m
<Plug>(VM-Remove-Last-Region)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Remove-Last-Region)      :call b:VM_Selection.Global.remove_/;"	m
<Plug>(VM-Remove-Region)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Remove-Region)           :call vm#commands#skip(1)<cr>$/;"	m
<Plug>(VM-Remove-Search)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Remove-Search)           :call b:VM_Selection.Search.remove(/;"	m
<Plug>(VM-Remove-Search-Regions)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Remove-Search-Regions)   :call b:VM_Selection.Search.remove(/;"	m
<Plug>(VM-Replace)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Replace)                 :<C-u>call b:VM_Selection.Edit.rep/;"	m
<Plug>(VM-Replace-Characters)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Replace-Characters)      :<C-u>call b:VM_Selection.Edit.rep/;"	m
<Plug>(VM-Reselect-Last)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Reselect-Last)           :call vm#commands#reselect_last()<c/;"	m
<Plug>(VM-Rewrite-All-Search)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Rewrite-All-Search)      :call b:VM_Selection.Search.rewrite/;"	m
<Plug>(VM-Rewrite-Last-Search)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Rewrite-Last-Search)     :call b:VM_Selection.Search.rewrite/;"	m
<Plug>(VM-Rotate)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Rotate)                  :call b:VM_Selection.Edit.rotate()/;"	m
<Plug>(VM-Run-Dot)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Dot)                 :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-Run-Ex)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Ex)                  @=b:VM_Selection.Edit.ex()<CR>$/;"	m
<Plug>(VM-Run-Last-Ex)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Last-Ex)             :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-Run-Last-Normal)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Last-Normal)         :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-Run-Last-Visual)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Last-Visual)         :call b:VM_Selection.Edit.run_visu/;"	m
<Plug>(VM-Run-Macro)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Macro)               :<c-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-Run-Normal)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Normal)              :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(VM-Run-Visual)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Run-Visual)              :call b:VM_Selection.Edit.run_visu/;"	m
<Plug>(VM-Search-Menu)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Search-Menu)             :call b:VM_Selection.Search.menu()</;"	m
<Plug>(VM-Seek-Down)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Seek-Down)               :call vm#commands#seek_down()<cr>$/;"	m
<Plug>(VM-Seek-Up)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Seek-Up)                 :call vm#commands#seek_up()<cr>$/;"	m
<Plug>(VM-Select-All)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Select-All)              :call vm#commands#find_all(0, 1)<cr/;"	m
<Plug>(VM-Select-Cursor-Down)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Select-Cursor-Down)      :<C-u>call vm#commands#add_cursor_d/;"	m
<Plug>(VM-Select-Cursor-Up)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Select-Cursor-Up)        :<C-u>call vm#commands#add_cursor_u/;"	m
<Plug>(VM-Select-Operator)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Select-Operator)         :<c-u>call vm#operators#select(v:co/;"	m
<Plug>(VM-Show-Infoline)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Show-Infoline)           :call b:VM_Selection.Funcs.infoline/;"	m
<Plug>(VM-Show-Regions-Info)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Show-Regions-Info)       :call b:VM_Selection.Funcs.regions_/;"	m
<Plug>(VM-Show-Registers)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Show-Registers)          :VMRegisters<cr>$/;"	m
<Plug>(VM-Shrink)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Shrink)                  :call vm#commands#shrink_or_enlarg/;"	m
<Plug>(VM-Skip-Region)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Skip-Region)             :call vm#commands#skip(0)<cr>$/;"	m
<Plug>(VM-Slash-Search)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Slash-Search)            @=vm#commands#find_by_regex(3)<cr>$/;"	m
<Plug>(VM-Split-Regions)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap                <Plug>(VM-Split-Regions)           :<c-u>call vm#visual#split()<cr>$/;"	m
<Plug>(VM-Start-Regex-Search)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Start-Regex-Search)      @=vm#commands#find_by_regex(1)<cr>$/;"	m
<Plug>(VM-Surround)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Surround)                :<c-u>call b:VM_Selection.Edit.sur/;"	m
<Plug>(VM-Switch-Mode)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Switch-Mode)             :call b:VM_Selection.Global.change_/;"	m
<Plug>(VM-Toggle-Mappings)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Toggle-Mappings)         :call b:VM_Selection.Maps.mappings_/;"	m
<Plug>(VM-Toggle-Multiline)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Toggle-Multiline)        :call b:VM_Selection.Funcs.toggle_o/;"	m
<Plug>(VM-Toggle-Single-Region)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Toggle-Single-Region)    :call b:VM_Selection.Funcs.toggle_o/;"	m
<Plug>(VM-Toggle-Whole-Word)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Toggle-Whole-Word)       :call b:VM_Selection.Funcs.toggle_o/;"	m
<Plug>(VM-Tools-Menu)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Tools-Menu)              :call vm#special#commands#menu()<cr/;"	m
<Plug>(VM-Transform-Regions)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Transform-Regions)       :<C-u>call b:VM_Selection.Edit.rep/;"	m
<Plug>(VM-Transpose)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Transpose)               :call b:VM_Selection.Edit.transpos/;"	m
<Plug>(VM-Undo)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>       <Plug>(VM-Undo)                    :call vm#commands#undo()<cr>$/;"	m
<Plug>(VM-Visual-Add)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xnoremap <silent>       <Plug>(VM-Visual-Add)              <Esc>:call vm#commands#visual_add()/;"	m
<Plug>(VM-Visual-All)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xnoremap <silent><expr> <Plug>(VM-Visual-All)              <sid>Visual('all')$/;"	m
<Plug>(VM-Visual-Cursors)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xnoremap <silent>       <Plug>(VM-Visual-Cursors)          <Esc>:call vm#commands#visual_curso/;"	m
<Plug>(VM-Visual-Find)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xmap <expr><silent>     <Plug>(VM-Visual-Find)             vm#operators#find(1, 1)$/;"	m
<Plug>(VM-Visual-Reduce)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xnoremap <silent>       <Plug>(VM-Visual-Reduce)           :<c-u>call vm#visual#reduce()<cr>$/;"	m
<Plug>(VM-Visual-Regex)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xnoremap <silent>       <Plug>(VM-Visual-Regex)            :call vm#commands#find_by_regex(2)</;"	m
<Plug>(VM-Visual-Subtract)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  xnoremap <silent>       <Plug>(VM-Visual-Subtract)         :<c-u>call vm#visual#subtract(visua/;"	m
<Plug>(VM-X)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-X)                       :<C-u>call b:VM_Selection.Edit.xde/;"	m
<Plug>(VM-Y)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Y)                       :<C-u>call vm#cursors#operation('y/;"	m
<Plug>(VM-Yank)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent> <expr> <Plug>(VM-Yank)                    <SID>Yank()$/;"	m
<Plug>(VM-Zero-Numbers)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Zero-Numbers)            :<C-u>call b:VM_Selection.Edit.num/;"	m
<Plug>(VM-Zero-Numbers-Append)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-Zero-Numbers-Append)     :<C-u>call b:VM_Selection.Edit.num/;"	m
<Plug>(VM-a)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-a)                       :<C-u>call b:VM_Selection.Insert.k/;"	m
<Plug>(VM-c)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-c)                       :<C-u>call b:VM_Selection.Edit.cha/;"	m
<Plug>(VM-gU)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-gU)                      :<C-u>call <sid>Operator('gU', v:c/;"	m
<Plug>(VM-gc)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-gc)                      :<C-u>call b:VM_Selection.Edit.cha/;"	m
<Plug>(VM-gu)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-gu)                      :<C-u>call <sid>Operator('gu', v:c/;"	m
<Plug>(VM-i)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-i)                       :<C-u>call b:VM_Selection.Insert.k/;"	m
<Plug>(VM-o)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-o)                       :<C-u>call <sid>O(0)<cr>$/;"	m
<Plug>(VM-p-Paste)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-p-Paste)                 :call b:VM_Selection.Edit.paste(g:/;"	m
<Plug>(VM-p-Paste-Vimreg)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-p-Paste-Vimreg)          :call b:VM_Selection.Edit.paste(g:/;"	m
<Plug>(VM-x)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-x)                       :<C-u>call b:VM_Selection.Edit.xde/;"	m
<Plug>(VM-~)	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  nnoremap <silent>        <Plug>(VM-~)                       :<C-u>call b:VM_Selection.Edit.run/;"	m
<Plug>(_incsearch-#)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-#)  #$/;"	m
<Plug>(_incsearch-*)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-*)  *$/;"	m
<Plug>(_incsearch-N)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(_incsearch-N)  g:incsearch#consistent_n_direction && !v:searchforward ? 'n/;"	m
<Plug>(_incsearch-esc)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-esc) <Nop>$/;"	m
<Plug>(_incsearch-esc)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-esc) <Nop>$/;"	m
<Plug>(_incsearch-esc)	plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent> <Plug>(_incsearch-esc) <Esc>$/;"	m
<Plug>(_incsearch-g#)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-g#) g#$/;"	m
<Plug>(_incsearch-g*)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-g*) g*$/;"	m
<Plug>(_incsearch-gv)	plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent> <Plug>(_incsearch-gv) gv$/;"	m
<Plug>(_incsearch-gv)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-gv) <Nop>$/;"	m
<Plug>(_incsearch-gv)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-gv) <Nop>$/;"	m
<Plug>(_incsearch-hlsearch)	plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent> <Plug>(_incsearch-hlsearch) :<C-u>let &hlsearch=&hlsearch<CR>$/;"	m
<Plug>(_incsearch-hlsearch)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-hlsearch) <Nop>$/;"	m
<Plug>(_incsearch-hlsearch)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-hlsearch) <Nop>$/;"	m
<Plug>(_incsearch-hlsearch)	plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent> <Plug>(_incsearch-hlsearch) :<C-u>let &hlsearch=&hlsearch<CR>gv$/;"	m
<Plug>(_incsearch-n)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(_incsearch-n)  g:incsearch#consistent_n_direction && !v:searchforward ? 'N/;"	m
<Plug>(_incsearch-nohlsearch)	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^nnoremap <silent>       <Plug>(_incsearch-nohlsearch) :<C-u>nohlsearch<CR>$/;"	m
<Plug>(_incsearch-nohlsearch)	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^noremap  <silent><expr> <Plug>(_incsearch-nohlsearch) incsearch#autocmd#auto_nohlsearch(0)$/;"	m
<Plug>(_incsearch-nohlsearch)	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^noremap! <silent><expr> <Plug>(_incsearch-nohlsearch) incsearch#autocmd#auto_nohlsearch(0)$/;"	m
<Plug>(_incsearch-nohlsearch)	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^xnoremap <silent>       <Plug>(_incsearch-nohlsearch) :<C-u>nohlsearch<CR>gv$/;"	m
<Plug>(_incsearch-searchforward)	plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent><expr> <Plug>(_incsearch-searchforward) <SID>_searchforward_cmd()$/;"	m
<Plug>(_incsearch-searchforward)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent>       <Plug>(_incsearch-searchforward) <Nop>$/;"	m
<Plug>(_incsearch-searchforward)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent>       <Plug>(_incsearch-searchforward) <Nop>$/;"	m
<Plug>(_incsearch-searchforward)	plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent><expr> <Plug>(_incsearch-searchforward) <SID>_searchforward_cmd()$/;"	m
<Plug>(_incsearch-winrestview)	plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent> <Plug>(_incsearch-winrestview) :<C-u>call winrestview(g:incsearch#_view)<CR>$/;"	m
<Plug>(_incsearch-winrestview)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-winrestview) <Nop>$/;"	m
<Plug>(_incsearch-winrestview)	plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-winrestview) <Nop>$/;"	m
<Plug>(_incsearch-winrestview)	plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent> <Plug>(_incsearch-winrestview) :<C-u>call winrestview(g:incsearch#_view)<CR>gv$/;"	m
<Plug>(asterisk-#)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-#)   asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 1/;"	m
<Plug>(asterisk-*)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-*)   asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 1/;"	m
<Plug>(asterisk-g#)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-g#)  asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 1/;"	m
<Plug>(asterisk-g*)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-g*)  asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 1/;"	m
<Plug>(asterisk-gz#)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-gz#) asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 0/;"	m
<Plug>(asterisk-gz*)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-gz*) asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 0/;"	m
<Plug>(asterisk-z#)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-z#)  asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 0/;"	m
<Plug>(asterisk-z*)	plugged/vim-asterisk/plugin/asterisk.vim	/^noremap <expr><silent> <Plug>(asterisk-z*)  asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 0/;"	m
<Plug>(calendar)	plugged/calendar.vim/plugin/calendar.vim	/^nnoremap <silent> <Plug>(calendar) :<C-u>Calendar<CR>$/;"	m
<Plug>(calendar)	plugged/calendar.vim/plugin/calendar.vim	/^vnoremap <silent> <Plug>(calendar) :<C-u>Calendar<CR>$/;"	m
<Plug>(calendar_command_enter)	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  cnoremap <buffer><silent><expr> <Plug>(calendar_command_enter) b:calendar.action('command_ente/;"	m
<Plug>(calendar_escape)	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer><silent><expr> <Plug>(calendar_escape)$/;"	m
<Plug>(crystal-format)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-format)             :<C-u>CrystalFormat<CR>$/;"	m
<Plug>(crystal-jump-to-definition)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-jump-to-definition) :<C-u>CrystalDef<CR>$/;"	m
<Plug>(crystal-show-context)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-show-context)       :<C-u>CrystalContext<CR>$/;"	m
<Plug>(crystal-spec-run-all)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-all)       :<C-u>CrystalSpecRunAll<CR>$/;"	m
<Plug>(crystal-spec-run-current)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-current)   :<C-u>CrystalSpecRunCurrent<CR>$/;"	m
<Plug>(crystal-spec-switch)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-switch)        :<C-u>CrystalSpecSwitch<CR>$/;"	m
<Plug>(easymotion-activate)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-activate)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(1)<CR>$/;"	m
<Plug>(easymotion-dotrepeat)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-next)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-next)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-overwin-f)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f) :<C-u>call EasyMotion#OverwinF(1)<CR>$/;"	m
<Plug>(easymotion-overwin-f2)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f2) :<C-u>call EasyMotion#OverwinF(2)<CR>$/;"	m
<Plug>(easymotion-overwin-line)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-line) :<C-u>call EasyMotion#overwin#line()<CR>$/;"	m
<Plug>(easymotion-overwin-w)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-w) :<C-u>call EasyMotion#overwin#w()<CR>$/;"	m
<Plug>(easymotion-prev)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-prev)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(easymotion-repeat)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(fzf-insert)	plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-insert) i$/;"	m
<Plug>(fzf-normal)	plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-normal) <Nop>$/;"	m
<Plug>(git-messenger)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger) :<C-u>GitMessenger<CR>$/;"	m
<Plug>(git-messenger-close)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-close) :<C-u>call gitmessenger#close_popup(bufnr('%'))<CR>$/;"	m
<Plug>(git-messenger-into-popup)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-into-popup) :<C-u>call gitmessenger#into_popup(bufnr('%'))/;"	m
<Plug>(git-messenger-scroll-down-1)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-down-1) :<C-u>call gitmessenger#scroll(bufnr('%'), /;"	m
<Plug>(git-messenger-scroll-down-half)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-down-half) :<C-u>call gitmessenger#scroll(bufnr('%'/;"	m
<Plug>(git-messenger-scroll-down-page)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-down-page) :<C-u>call gitmessenger#scroll(bufnr('%'/;"	m
<Plug>(git-messenger-scroll-up-1)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-up-1) :<C-u>call gitmessenger#scroll(bufnr('%'), 'C/;"	m
<Plug>(git-messenger-scroll-up-half)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-up-half) :<C-u>call gitmessenger#scroll(bufnr('%'),/;"	m
<Plug>(git-messenger-scroll-up-page)	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-up-page) :<C-u>call gitmessenger#scroll(bufnr('%'),/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    nmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(high/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    nnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedyan/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    onoremap          <Plug>(highlightedyank) g@$/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    onoremap          <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    onoremap <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    xmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(high/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    xnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedyan/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^  noremap <silent> <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^  onoremap <Plug>(highlightedyank) g@$/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      nmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(hi/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      nnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedy/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      onoremap          <Plug>(highlightedyank) g@$/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      onoremap          <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      xmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(hi/;"	m
<Plug>(highlightedyank)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      xnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedy/;"	m
<Plug>(highlightedyank-g@)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      noremap  <silent> <Plug>(highlightedyank-g@) g@$/;"	m
<Plug>(highlightedyank-setoperatorfunc)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    noremap  <expr>   <Plug>(highlightedyank-setoperatorfunc) highlightedyank#obsolete#highlight/;"	m
<Plug>(highlightedyank-setoperatorfunc)	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      noremap  <expr>   <Plug>(highlightedyank-setoperatorfunc) highlightedyank#obsolete#highlig/;"	m
<Plug>(incsearch-backward)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <silent><expr> <Plug>(incsearch-backward) incsearch#go({'command': '?'})$/;"	m
<Plug>(incsearch-easymotion-/)	plugged/incsearch-easymotion.vim/plugin/incsearch/easymotion.vim	/^noremap <silent><expr> <Plug>(incsearch-easymotion-\/)    incsearch#go(<SID>config())$/;"	m
<Plug>(incsearch-easymotion-?)	plugged/incsearch-easymotion.vim/plugin/incsearch/easymotion.vim	/^noremap <silent><expr> <Plug>(incsearch-easymotion-?)    incsearch#go(<SID>config({'command': '?/;"	m
<Plug>(incsearch-easymotion-stay)	plugged/incsearch-easymotion.vim/plugin/incsearch/easymotion.vim	/^noremap <silent><expr> <Plug>(incsearch-easymotion-stay) incsearch#go(<SID>config({'is_stay': 1}/;"	m
<Plug>(incsearch-forward)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <silent><expr> <Plug>(incsearch-forward)  incsearch#go({'command': '\/'})$/;"	m
<Plug>(incsearch-fuzzy-/)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzy-\/) incsearch#go(<SID>config_fuzzy())$/;"	m
<Plug>(incsearch-fuzzy-?)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzy-?) incsearch#go(<SID>config_fuzzy({'command': '?'}/;"	m
<Plug>(incsearch-fuzzy-stay)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzy-stay) incsearch#go(<SID>config_fuzzy({'is_stay': 1/;"	m
<Plug>(incsearch-fuzzyspell-/)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzyspell-\/) incsearch#go(<SID>config_fuzzyspell())$/;"	m
<Plug>(incsearch-fuzzyspell-?)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzyspell-?) incsearch#go(<SID>config_fuzzyspell({'comm/;"	m
<Plug>(incsearch-fuzzyspell-stay)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzyspell-stay) incsearch#go(<SID>config_fuzzyspell({'i/;"	m
<Plug>(incsearch-fuzzyword-/)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzyword-\/) incsearch#go(<SID>config_fuzzyword())$/;"	m
<Plug>(incsearch-fuzzyword-?)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzyword-?) incsearch#go(<SID>config_fuzzyword({'comman/;"	m
<Plug>(incsearch-fuzzyword-stay)	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^noremap <silent><expr> <Plug>(incsearch-fuzzyword-stay) incsearch#go(<SID>config_fuzzyword({'is_/;"	m
<Plug>(incsearch-nohl)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(incsearch-nohl)  incsearch#autocmd#auto_nohlsearch(1)$/;"	m
<Plug>(incsearch-nohl-#)	plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-#)  <Plug>(incsearch-nohl)<Plug>(_incsearch-#)$/;"	m
<Plug>(incsearch-nohl-*)	plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-*)  <Plug>(incsearch-nohl)<Plug>(_incsearch-*)$/;"	m
<Plug>(incsearch-nohl-N)	plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-N)  <Plug>(incsearch-nohl)<Plug>(_incsearch-N)$/;"	m
<Plug>(incsearch-nohl-g#)	plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-g#) <Plug>(incsearch-nohl)<Plug>(_incsearch-g#)$/;"	m
<Plug>(incsearch-nohl-g*)	plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-g*) <Plug>(incsearch-nohl)<Plug>(_incsearch-g*)$/;"	m
<Plug>(incsearch-nohl-n)	plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-n)  <Plug>(incsearch-nohl)<Plug>(_incsearch-n)$/;"	m
<Plug>(incsearch-nohl0)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(incsearch-nohl0) incsearch#autocmd#auto_nohlsearch(0)$/;"	m
<Plug>(incsearch-nohl2)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(incsearch-nohl2) incsearch#autocmd#auto_nohlsearch(2)$/;"	m
<Plug>(incsearch-stay)	plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <silent><expr> <Plug>(incsearch-stay)     incsearch#go({'command': '\/', 'is_stay': 1})$/;"	m
<Plug>(llvm-goto-definition)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-goto-definition) :<C-u>call <SID>goto_definition()<CR>$/;"	m
<Plug>(llvm-move-block-next)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-next) :<C-u>call <SID>move_to_following_block()<CR>$/;"	m
<Plug>(llvm-move-block-prev)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-prev) :<C-u>call <SID>move_to_pred_block()<CR>$/;"	m
<Plug>(llvm-next-section-begin)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-begin) :<C-u>call <SID>next_section(1)<CR>$/;"	m
<Plug>(llvm-next-section-end)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-end) :<C-u>call <SID>next_section(0)<CR>$/;"	m
<Plug>(llvm-prev-section-begin)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-begin) :<C-u>call <SID>prev_section(1)<CR>$/;"	m
<Plug>(llvm-prev-section-end)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-end) :<C-u>call <SID>prev_section(0)<CR>$/;"	m
<Plug>(unimpaired-blank-down)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-blank-down) :<C-U>exe <SID>BlankDown()<CR>$/;"	m
<Plug>(unimpaired-blank-up)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-blank-up)   :<C-U>exe <SID>BlankUp()<CR>$/;"	m
<Plug>(unimpaired-context-next)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-context-next)     :<C-U>call <SID>Context(0)<CR>$/;"	m
<Plug>(unimpaired-context-next)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>(unimpaired-context-next)     :<C-U>call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>(unimpaired-context-next)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^vnoremap <silent> <Plug>(unimpaired-context-next)     :<C-U>exe 'normal! gv'<Bar>call <SID>Conte/;"	m
<Plug>(unimpaired-context-previous)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-context-previous) :<C-U>call <SID>Context(1)<CR>$/;"	m
<Plug>(unimpaired-context-previous)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>(unimpaired-context-previous) :<C-U>call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>(unimpaired-context-previous)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^vnoremap <silent> <Plug>(unimpaired-context-previous) :<C-U>exe 'normal! gv'<Bar>call <SID>Conte/;"	m
<Plug>(unimpaired-directory-next)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-directory-next)     :<C-U>execute <SID>NextFileEntry(v:count/;"	m
<Plug>(unimpaired-directory-previous)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-directory-previous) :<C-U>execute <SID>PreviousFileEntry(v:c/;"	m
<Plug>(unimpaired-disable)+	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)+ :<C-U>set nocursorline nocursorcolumn<CR>$/;"	m
<Plug>(unimpaired-disable)b	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)b :<C-U>set background=dark<CR>$/;"	m
<Plug>(unimpaired-disable)d	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)d :<C-U>diffoff<CR>$/;"	m
<Plug>(unimpaired-disable)p	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-disable)p :<C-U>call <SID>SetupPaste()<CR>o$/;"	m
<Plug>(unimpaired-disable)v	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)v :<C-U>set virtualedit-=all<CR>$/;"	m
<Plug>(unimpaired-disable)x	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)x :<C-U>set nocursorline nocursorcolumn<CR>$/;"	m
<Plug>(unimpaired-enable)+	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)+  :<C-U>set cursorline cursorcolumn<CR>$/;"	m
<Plug>(unimpaired-enable)b	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)b  :<C-U>set background=light<CR>$/;"	m
<Plug>(unimpaired-enable)d	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)d  :<C-U>diffthis<CR>$/;"	m
<Plug>(unimpaired-enable)p	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-enable)p  :<C-U>call <SID>SetupPaste()<CR>O$/;"	m
<Plug>(unimpaired-enable)v	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)v  :<C-U>set virtualedit+=all<CR>$/;"	m
<Plug>(unimpaired-enable)x	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)x  :<C-U>set cursorline cursorcolumn<CR>$/;"	m
<Plug>(unimpaired-move-down)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-move-down)          :<C-U>call <SID>Move('+',v:count1,'down'/;"	m
<Plug>(unimpaired-move-selection-down)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>(unimpaired-move-selection-down) :<C-U>call <SID>MoveSelectionDown(v:cou/;"	m
<Plug>(unimpaired-move-selection-up)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>(unimpaired-move-selection-up)   :<C-U>call <SID>MoveSelectionUp(v:count/;"	m
<Plug>(unimpaired-move-up)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-move-up)            :<C-U>call <SID>Move('--',v:count1,'up')/;"	m
<Plug>(unimpaired-paste)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-paste) :<C-U>call <SID>SetupPaste()<CR>$/;"	m
<Plug>(unimpaired-ptnext)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^    nnoremap <silent> <Plug>(unimpaired-ptnext) :<C-U>exe v:count1 . "ptnext"<CR>$/;"	m
<Plug>(unimpaired-ptprevious)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^    nnoremap <silent> <Plug>(unimpaired-ptprevious) :<C-U>exe v:count1 . "ptprevious"<CR>$/;"	m
<Plug>(unimpaired-put-above)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above) :call <SID>putline('[p', 'above')<CR>$/;"	m
<Plug>(unimpaired-put-above-leftward)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above-leftward)  :<C-U>call <SID>putline(v:count1 . '[p'/;"	m
<Plug>(unimpaired-put-above-reformat)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above-reformat)  :<C-U>call <SID>putline(v:count1 . '[p'/;"	m
<Plug>(unimpaired-put-above-rightward)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above-rightward) :<C-U>call <SID>putline(v:count1 . '[p'/;"	m
<Plug>(unimpaired-put-below)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below) :call <SID>putline(']p', 'below')<CR>$/;"	m
<Plug>(unimpaired-put-below-leftward)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below-leftward)  :<C-U>call <SID>putline(v:count1 . ']p'/;"	m
<Plug>(unimpaired-put-below-reformat)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below-reformat)  :<C-U>call <SID>putline(v:count1 . ']p'/;"	m
<Plug>(unimpaired-put-below-rightward)	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below-rightward) :<C-U>call <SID>putline(v:count1 . ']p'/;"	m
<Plug>(unimpaired-toggle)+	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)+  :<C-U>set <C-R>=<SID>CursorOptions()<CR><CR>$/;"	m
<Plug>(unimpaired-toggle)b	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)b  :<C-U>set background=<C-R>=&background == "dark" ? "li/;"	m
<Plug>(unimpaired-toggle)d	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)d  :<C-U><C-R>=&diff ? "diffoff" : "diffthis"<CR><CR>$/;"	m
<Plug>(unimpaired-toggle)p	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-toggle)p  :<C-U>call <SID>SetupPaste()<CR>0C$/;"	m
<Plug>(unimpaired-toggle)v	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)v  :<C-U>set <C-R>=(&virtualedit =~# "all") ? "virtualedi/;"	m
<Plug>(unimpaired-toggle)x	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)x  :<C-U>set <C-R>=<SID>CursorOptions()<CR><CR>$/;"	m
<Plug><cfile>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><ctag>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><ctag> substitute(RubyCursorTag(),'^$',"\\022\\027",'')$/;"	m
<Plug>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>BUncomOff	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOff	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOn	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>CSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Comment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==#/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^xnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>CommentaryLine	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Comme/;"	m
<Plug>Csurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>CtrlSFCCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFCCwordExec <SID>SearchCwordCmd('CtrlSF', 1, 1)$/;"	m
<Plug>CtrlSFCCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFCCwordPath <SID>SearchCwordCmd('CtrlSF', 1, 0)$/;"	m
<Plug>CtrlSFCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFCwordExec  <SID>SearchCwordCmd('CtrlSF', 0, 1)$/;"	m
<Plug>CtrlSFCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFCwordPath  <SID>SearchCwordCmd('CtrlSF', 0, 0)$/;"	m
<Plug>CtrlSFPrompt	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap                 <Plug>CtrlSFPrompt     :CtrlSF<Space>$/;"	m
<Plug>CtrlSFPwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFPwordExec  <SID>SearchPwordCmd('CtrlSF', 1)$/;"	m
<Plug>CtrlSFPwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFPwordPath  <SID>SearchPwordCmd('CtrlSF', 0)$/;"	m
<Plug>CtrlSFQuickfixCCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFQuickfixCCwordExec <SID>SearchCwordCmd('CtrlSFQuickfix', 1,/;"	m
<Plug>CtrlSFQuickfixCCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFQuickfixCCwordPath <SID>SearchCwordCmd('CtrlSFQuickfix', 1,/;"	m
<Plug>CtrlSFQuickfixCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFQuickfixCwordExec  <SID>SearchCwordCmd('CtrlSFQuickfix', 0,/;"	m
<Plug>CtrlSFQuickfixCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFQuickfixCwordPath  <SID>SearchCwordCmd('CtrlSFQuickfix', 0,/;"	m
<Plug>CtrlSFQuickfixPrompt	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap                 <Plug>CtrlSFQuickfixPrompt     :CtrlSFQuickfix<Space>$/;"	m
<Plug>CtrlSFQuickfixPwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFQuickfixPwordExec  <SID>SearchPwordCmd('CtrlSFQuickfix', 1)$/;"	m
<Plug>CtrlSFQuickfixPwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFQuickfixPwordPath  <SID>SearchPwordCmd('CtrlSFQuickfix', 0)$/;"	m
<Plug>CtrlSFQuickfixVwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap <silent> <expr> <Plug>CtrlSFQuickfixVwordExec  <SID>SearchVwordCmd('CtrlSFQuickfix', 1)$/;"	m
<Plug>CtrlSFQuickfixVwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap          <expr> <Plug>CtrlSFQuickfixVwordPath  <SID>SearchVwordCmd('CtrlSFQuickfix', 0)$/;"	m
<Plug>CtrlSFVwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap <silent> <expr> <Plug>CtrlSFVwordExec  <SID>SearchVwordCmd('CtrlSF', 1)$/;"	m
<Plug>CtrlSFVwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap          <expr> <Plug>CtrlSFVwordPath  <SID>SearchVwordCmd('CtrlSF', 0)$/;"	m
<Plug>DeComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>Dsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk   &diff ? ']c' : ":\\<C-U>call gitgutter#utilit/;"	m
<Plug>GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk   &diff ? '[c' : ":\\<C-U>call gitgutter#utilit/;"	m
<Plug>GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk   :call gitgutter#utility#warn('Please change your /;"	m
<Plug>GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk     :call gitgutter#utility#warn('Please change your /;"	m
<Plug>GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterStageHunk     :call gitgutter#utility#warn('Please change your /;"	m
<Plug>GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk      :call gitgutter#utility#warn('Please change your /;"	m
<Plug>ISurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>L2UTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  inoremap <buffer><expr> <Plug>L2UTab LaTeXtoUnicode#Tab()$/;"	m
<Plug>LUncomOff	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn gI(* <End> *)<ESC>$/;"	m
<Plug>MailQuote	plugged/vim-polyglot/ftplugin/mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	plugged/vim-polyglot/ftplugin/mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>Markdown_EditUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>$/;"	m
<Plug>Markdown_OpenUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>$/;"	m
<Plug>OCamlPrintType	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("normal")<CR>$/;"	m
<Plug>OCamlPrintType	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("visual")<CR>`<$/;"	m
<Plug>OCamlSwitchEdit	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchEdit :<C-u>call OCaml_switch(0)<CR>$/;"	m
<Plug>OCamlSwitchNewWin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchNewWin :<C-u>call OCaml_switch(1)<CR>$/;"	m
<Plug>RacketDoc	plugged/vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> <Plug>RacketDoc :silent !raco docs <cword><cr>:redraw!<cr>$/;"	m
<Plug>RacketDoc	plugged/vim-polyglot/ftplugin/racket.vim	/^vnoremap <buffer> <Plug>RacketDoc :call <SID>Racket_visual_doc()<cr>$/;"	m
<Plug>SpecChangelog	plugged/vim-polyglot/ftplugin/spec.vim	/^       noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>SurroundRepeat	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>Traditional	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>VSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 /;"	m
<Plug>VgSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 /;"	m
<Plug>Vimwiki2HTML	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <script><buffer> <Plug>Vimwiki2HTML :Vimwiki2HTML<CR>$/;"	m
<Plug>Vimwiki2HTMLBrowse	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <script><buffer> <Plug>Vimwiki2HTMLBrowse :Vimwiki2HTMLBrowse<CR>$/;"	m
<Plug>VimwikiAddHeaderLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiAddHeaderLevel$/;"	m
<Plug>VimwikiDecreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiDecreaseLvlSingleItem$/;"	m
<Plug>VimwikiDecreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiDecreaseLvlSingleItem$/;"	m
<Plug>VimwikiDecreaseLvlWholeItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiDecreaseLvlWholeItem$/;"	m
<Plug>VimwikiDecrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDecrementListItem$/;"	m
<Plug>VimwikiDecrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiDecrementListItem$/;"	m
<Plug>VimwikiDeleteFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDeleteFile$/;"	m
<Plug>VimwikiDiaryGenerateLinks	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiDiaryGenerateLinks$/;"	m
<Plug>VimwikiDiaryIndex	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiDiaryIndex$/;"	m
<Plug>VimwikiDiaryNextDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDiaryNextDay$/;"	m
<Plug>VimwikiDiaryPrevDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDiaryPrevDay$/;"	m
<Plug>VimwikiFollowLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiFollowLink$/;"	m
<Plug>VimwikiGoBackLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiGoBackLink$/;"	m
<Plug>VimwikiGoToNextHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToNextHeader$/;"	m
<Plug>VimwikiGoToNextSiblingHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToNextSiblingHeader$/;"	m
<Plug>VimwikiGoToParentHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToParentHeader$/;"	m
<Plug>VimwikiGoToPrevHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToPrevHeader$/;"	m
<Plug>VimwikiGoToPrevSiblingHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToPrevSiblingHeader$/;"	m
<Plug>VimwikiGoto	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiGoto$/;"	m
<Plug>VimwikiIncreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiIncreaseLvlSingleItem$/;"	m
<Plug>VimwikiIncreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiIncreaseLvlSingleItem$/;"	m
<Plug>VimwikiIncreaseLvlWholeItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiIncreaseLvlWholeItem$/;"	m
<Plug>VimwikiIncrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiIncrementListItem$/;"	m
<Plug>VimwikiIncrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiIncrementListItem$/;"	m
<Plug>VimwikiIndex	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiIndex$/;"	m
<Plug>VimwikiListNextSymbol	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiListNextSymbol$/;"	m
<Plug>VimwikiListO	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiListO$/;"	m
<Plug>VimwikiListPrevSymbol	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiListPrevSymbol$/;"	m
<Plug>VimwikiListToggle	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiListToggle$/;"	m
<Plug>VimwikiListo	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiListo$/;"	m
<Plug>VimwikiMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiMakeDiaryNote$/;"	m
<Plug>VimwikiMakeTomorrowDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiMakeTomorrowDiaryNote$/;"	m
<Plug>VimwikiMakeYesterdayDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiMakeYesterdayDiaryNote$/;"	m
<Plug>VimwikiNextLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiNextLink$/;"	m
<Plug>VimwikiNextTask	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiNextTask$/;"	m
<Plug>VimwikiNormalizeLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiNormalizeLink$/;"	m
<Plug>VimwikiNormalizeLinkVisual	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiNormalizeLinkVisual$/;"	m
<Plug>VimwikiNormalizeLinkVisualCR	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiNormalizeLinkVisualCR$/;"	m
<Plug>VimwikiPrevLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiPrevLink$/;"	m
<Plug>VimwikiRemoveCBInList	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiRemoveCBInList$/;"	m
<Plug>VimwikiRemoveHeaderLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiRemoveHeaderLevel$/;"	m
<Plug>VimwikiRemoveSingleCB	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiRemoveSingleCB$/;"	m
<Plug>VimwikiRenameFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiRenameFile$/;"	m
<Plug>VimwikiRenumberAllLists	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiRenumberAllLists$/;"	m
<Plug>VimwikiRenumberList	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiRenumberList$/;"	m
<Plug>VimwikiSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiSplitLink$/;"	m
<Plug>VimwikiTabIndex	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiTabIndex$/;"	m
<Plug>VimwikiTabMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiTabMakeDiaryNote$/;"	m
<Plug>VimwikiTableAlignQ	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignQ$/;"	m
<Plug>VimwikiTableAlignQ1	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignQ1$/;"	m
<Plug>VimwikiTableAlignW	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignW$/;"	m
<Plug>VimwikiTableAlignW1	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignW1$/;"	m
<Plug>VimwikiTableMoveColumnLeft	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiTableMoveColumnLeft$/;"	m
<Plug>VimwikiTableMoveColumnRight	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiTableMoveColumnRight$/;"	m
<Plug>VimwikiTabnewLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiTabnewLink$/;"	m
<Plug>VimwikiTextObjColumn	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjColumn$/;"	m
<Plug>VimwikiTextObjColumnInner	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjColumnInner$/;"	m
<Plug>VimwikiTextObjColumnInnerV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjColumnInnerV$/;"	m
<Plug>VimwikiTextObjColumnV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjColumnV$/;"	m
<Plug>VimwikiTextObjHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeader$/;"	m
<Plug>VimwikiTextObjHeaderContent	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeaderContent$/;"	m
<Plug>VimwikiTextObjHeaderContentV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderContentV$/;"	m
<Plug>VimwikiTextObjHeaderSub	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSub$/;"	m
<Plug>VimwikiTextObjHeaderSubContent	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSubContent$/;"	m
<Plug>VimwikiTextObjHeaderSubContentV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSubContentV$/;"	m
<Plug>VimwikiTextObjHeaderSubV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSubV$/;"	m
<Plug>VimwikiTextObjHeaderV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderV$/;"	m
<Plug>VimwikiTextObjListChildren	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjListChildren$/;"	m
<Plug>VimwikiTextObjListChildrenV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjListChildrenV$/;"	m
<Plug>VimwikiTextObjListSingle	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjListSingle$/;"	m
<Plug>VimwikiTextObjListSingleV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjListSingleV$/;"	m
<Plug>VimwikiTextObjTableCell	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjTableCell$/;"	m
<Plug>VimwikiTextObjTableCellInner	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjTableCellInner$/;"	m
<Plug>VimwikiTextObjTableCellInnerV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjTableCellInnerV$/;"	m
<Plug>VimwikiTextObjTableCellV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjTableCellV$/;"	m
<Plug>VimwikiToggleListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiToggleListItem$/;"	m
<Plug>VimwikiToggleListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiToggleListItem$/;"	m
<Plug>VimwikiToggleRejectedListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiToggleRejectedListItem$/;"	m
<Plug>VimwikiToggleRejectedListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiToggleRejectedListItem$/;"	m
<Plug>VimwikiUISelect	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiUISelect$/;"	m
<Plug>VimwikiVSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiVSplitLink$/;"	m
<Plug>VisualComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<Plug>YADefault	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    nnoremap <Plug>YADefault y$/;"	m
<Plug>YADefault	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    nnoremap <expr><silent> <Plug>YADefault ':<C-u>let g:MoveYankMappings=0<CR>' . v:count1 . '"/;"	m
<Plug>YADefault	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    xnoremap <Plug>YADefault y$/;"	m
<Plug>YADefault	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    xnoremap <expr><silent> <Plug>YADefault ':<C-u>let g:MoveYankMappings=0<CR>' . 'gv' . '"' . /;"	m
<Plug>YALine	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    nnoremap <Plug>YALine yy$/;"	m
<Plug>YAMotion	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    nnoremap <expr><silent> <Plug>YAMotion ':<C-u>call <SID>PreYankMotion()<CR>' . ':set operato/;"	m
<Plug>YAVisual	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    vnoremap <expr><silent> <Plug>YAVisual "my\\"" . v:register . "y`y"$/;"	m
<Plug>YSsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround '^'.v:count1.<SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<Plug>unimpairedBlankDown	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankDown :<C-U>exe <SID>BlankDown()<CR>$/;"	m
<Plug>unimpairedBlankUp	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankUp   :<C-U>exe <SID>BlankUp()<CR>$/;"	m
<Plug>unimpairedContextNext	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextNext     :<C-U>call <SID>Context(0)<CR>$/;"	m
<Plug>unimpairedContextNext	plugged/vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextNext     :<C-U>call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>unimpairedContextNext	plugged/vim-unimpaired/plugin/unimpaired.vim	/^xnoremap <silent> <Plug>unimpairedContextNext     :<C-U>exe 'normal! gv'<Bar>call <SID>Context(0/;"	m
<Plug>unimpairedContextPrevious	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextPrevious :<C-U>call <SID>Context(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	plugged/vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextPrevious :<C-U>call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	plugged/vim-unimpaired/plugin/unimpaired.vim	/^xnoremap <silent> <Plug>unimpairedContextPrevious :<C-U>exe 'normal! gv'<Bar>call <SID>Context(1/;"	m
<Plug>unimpairedDirectoryNext	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryNext     :<C-U>execute <SID>NextFileEntry(v:count1)<C/;"	m
<Plug>unimpairedDirectoryPrevious	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryPrevious :<C-U>execute <SID>PreviousFileEntry(v:count/;"	m
<Plug>unimpairedMoveDown	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveDown          :<C-U>call <SID>Move('+',v:count1,'down')<CR/;"	m
<Plug>unimpairedMoveSelectionDown	plugged/vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionDown :<C-U>call <SID>MoveSelectionDown(v:count1)</;"	m
<Plug>unimpairedMoveSelectionUp	plugged/vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionUp   :<C-U>call <SID>MoveSelectionUp(v:count1)<CR/;"	m
<Plug>unimpairedMoveUp	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveUp            :<C-U>call <SID>Move('--',v:count1,'up')<CR>$/;"	m
<Plug>unimpairedPaste	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPaste :call <SID>SetupPaste()<CR>$/;"	m
<Plug>unimpairedPutAbove	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutAbove :call <SID>putline('[p', 'above')<CR>$/;"	m
<Plug>unimpairedPutBelow	plugged/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutBelow :call <SID>putline(']p', 'below')<CR>$/;"	m
<Right>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Right> <Plug>(calendar_right)$/;"	m
<RightMouse><LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <RightMouse><LeftMouse> :VimwikiGoBackLink<CR>$/;"	m
<S-2-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <S-2-LeftMouse> <LeftMouse>:VimwikiSplitLink<CR>$/;"	m
<S-CR>	plugged/vimwiki/ftplugin/vimwiki.vim	/^    inoremap <silent><buffer> <S-CR> <Esc>:VimwikiReturn 2 2<CR>$/;"	m
<S-Down>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <S-Down> <Down>$/;"	m
<S-F12>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^noremap <buffer> <S-F12> :g\/%.*\/normal 0x<Return>$/;"	m
<S-Left>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <S-Left> b$/;"	m
<S-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nmap <buffer> <S-LeftMouse> <NOP>$/;"	m
<S-Right>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <S-Right> w$/;"	m
<S-Tab>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <S-Tab> <Plug>(calendar_shift_tab)$/;"	m
<S-Tab>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  inoremap <expr><buffer> <S-Tab> vimwiki#tbl#kbd_shift_tab()$/;"	m
<S-Up>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <S-Up> <Up>$/;"	m
<SID>(highlightedyank-doublequote)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-doublequote) "$/;"	m
<SID>(highlightedyank-g@)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-g@) g@$/;"	m
<SID>(highlightedyank-gv)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-gv) gv$/;"	m
<SID>(highlightedyank-y)	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-y) y$/;"	m
<SID>:	plugged/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID><cfile>	plugged/vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer> <SID><cfile> <Plug><cfile>$/;"	m
<SID><ctag>	plugged/vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer> <SID><ctag>  <Plug><ctag>$/;"	m
<SID>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>c:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>foldopen	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<SID>tagzv	plugged/vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<ScrollWheelDown>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  map <buffer> <ScrollWheelDown> <Plug>(calendar_next)$/;"	m
<ScrollWheelUp>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  map <buffer> <ScrollWheelUp> <Plug>(calendar_prev)$/;"	m
<Space>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Space> <Plug>(calendar_space)$/;"	m
<TAB>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <TAB> <Plug>(calendar_tab)$/;"	m
<Tab>	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  imap <buffer> <Tab> <Plug>L2UTab$/;"	m
<Tab>	plugged/vim-polyglot/ftplugin/cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Tab>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  inoremap <expr><buffer> <Tab> vimwiki#tbl#kbd_tab()$/;"	m
<Undo>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Undo> <Plug>(calendar_undo)$/;"	m
<Up>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> <Up> <Plug>(calendar_up)$/;"	m
<bs>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<c-h>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <c-h> <c-g>"_c$/;"	m
<c-h>	vimrc	/^map <c-h> <c-w>h$/;"	m
<c-j>	vimrc	/^map <c-j> <c-w>j$/;"	m
<c-k>	vimrc	/^map <c-k> <c-w>k$/;"	m
<c-l>	vimrc	/^map <c-l> <c-w>l$/;"	m
<c-r>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<c-x><c-f>	vimrc	/^inoremap <expr> <c-x><c-f> fzf#vim#complete#path('rg --files')$/;"	m
<c-x><c-k>	vimrc	/^imap <c-x><c-k> <c-x><c-k>$/;"	m
<c-x><c-k>	vimrc	/^inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'window': { 'width': 0.2, 'height': 0.9, 'xoff/;"	m
<c-x><c-l>	vimrc	/^imap <c-x><c-l> <c-x><c-l>$/;"	m
<c-x><c-l>	vimrc	/^inoremap <expr> <c-x><c-l> fzf#vim#complete(fzf#wrap({$/;"	m
<c-x><c-s>	vimrc	/^inoremap <expr> <c-x><c-s> fzf#vim#complete({$/;"	m
<c-x><c-s>	vimrc	/^nnoremap <silent> <c-x><c-s> <CMD>w!<CR>$/;"	m
<cr>	autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<cr>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <cr>          :call startify#open_buffers()<cr>$/;"	m
<cr>	plugged/vim-visual-multi/autoload/vm/commands.vim	/^    cnoremap <silent> <buffer> <cr>  <cr>:call vm#commands#regex_done()<cr>$/;"	m
<cr>	plugged/vim-visual-multi/autoload/vm/edit.vim	/^    cnoremap <silent><nowait><buffer> <cr>  <c-r>=b:VM_Selection.Edit.ex_get()<cr><c-u>call b:VM/;"	m
<esc>	plugged/vim-visual-multi/autoload/vm/commands.vim	/^    cnoremap <silent><nowait><buffer> <esc>      <C-u><C-r>=b:VM_Selection.Vars.regex_backup<cr>/;"	m
<esc>	plugged/vim-visual-multi/autoload/vm/edit.vim	/^    cnoremap <silent><nowait><buffer> <esc> <c-u>let @" = ''<cr>:call b:VM_Selection.Edit.ex_don/;"	m
<esc><esc>	plugged/vim-visual-multi/autoload/vm/commands.vim	/^    cnoremap <silent><nowait><buffer> <esc><esc> <C-u><C-r>=b:VM_Selection.Vars.regex_backup<cr>/;"	m
<esc><esc>	plugged/vim-visual-multi/autoload/vm/edit.vim	/^    cnoremap <silent><nowait><buffer> <esc><esc> <c-u>let @" = ''<cr>:call b:VM_Selection.Edit.e/;"	m
<esc><esc>	plugged/vim-visual-multi/autoload/vm/maps.vim	/^        nnoremap <nowait><buffer> <esc><esc> <esc><esc>$/;"	m
<f28>	sources/50-bracketed-paste.vim	/^cmap <f28> <nop>$/;"	m
<f28>	sources/50-bracketed-paste.vim	/^imap <expr> <f28> XTermPasteBegin("")$/;"	m
<f28>	sources/50-bracketed-paste.vim	/^map <expr> <f28> XTermPasteBegin("i")$/;"	m
<f28>	sources/50-bracketed-paste.vim	/^vmap <expr> <f28> XTermPasteBegin("c")$/;"	m
<f29>	sources/50-bracketed-paste.vim	/^cmap <f29> <nop>$/;"	m
<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)	plugged/fzf/README.md	/^<img src="https:\/\/raw.githubusercontent.com\/junegunn\/i\/master\/fzf.png" height="170" alt="f/;"	c
<insert>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <insert>      :enew <bar> startinsert<cr>$/;"	m
<leader>%	vimrc	/^nnoremap <silent> <leader>% <CMD>so$MYVIMRC<CR>$/;"	m
<leader>R	vimrc	/^nnoremap <silent> <leader>R <Cmd>e $MYVIMRC<CR>$/;"	m
<leader>S	vimrc	/^nnoremap <silent> <leader>S <Cmd>UltiSnipsEdit<CR>$/;"	m
<leader>b	vimrc	/^nnoremap <silent> <leader>b <Cmd>call myfunc#ToggleNetrw()<CR>$/;"	m
<leader>cd	vimrc	/^nmap <silent> <leader>cd <CMD>cd %:p:h<CR>$/;"	m
<leader>ec	vimrc	/^nnoremap <silent> <leader>ec <Cmd>Calendar -position=tab<CR>$/;"	m
<leader>eh	vimrc	/^nnoremap <silent> <leader>eh <CMD>call myfunc#ExecuteScript('bot')<CR>$/;"	m
<leader>en	vimrc	/^nnoremap <silent> <leader>en <CMD>call myfunc#ExecuteScript('right')<CR>$/;"	m
<leader>fb	vimrc	/^nmap <leader>fb  <CMD>Buffers<CR>$/;"	m
<leader>gB	vimrc	/^vmap <leader>gB  <CMD>'<,'>GBrowse<CR>$/;"	m
<leader>gb	vimrc	/^vmap <leader>gb  <CMD>'<,'>GBrowse!<CR>$/;"	m
<leader>gg	vimrc	/^nnoremap <silent> <leader>gg <CMD>G<CR>$/;"	m
<leader>gm	vimrc	/^nmap <leader>gm  <CMD>GitMessenger<CR>$/;"	m
<leader>gp	vimrc	/^nmap <leader>gp <CMD>Git push<CR>$/;"	m
<leader>gs	vimrc	/^nmap <silent> <leader>gs <Plug>(GitGutterStageHunk)$/;"	m
<leader>gu	vimrc	/^nmap <silent> <leader>gu <Plug>(GitGutterUndoHunk)$/;"	m
<leader>ic	vimrc	/^nnoremap <silent> <leader>ic :<C-U>%s\/\\<<c-r><c-w>\\>\/\/gn<CR>g``$/;"	m
<leader>ih	vimrc	/^nnoremap <silent> <leader>ih <CMD>call myfunc#Resize_Execution_Term(20)<CR>$/;"	m
<leader>il	vimrc	/^nnoremap <silent> <leader>il <CMD>call myfunc#Resize_Execution_Term(-20)<CR>$/;"	m
<leader>pL	vimrc	/^nmap <leader>pL  :Locate ""<left>$/;"	m
<leader>p]	vimrc	/^nmap <leader>p]  <CMD>Tags<CR>$/;"	m
<leader>pf	vimrc	/^nmap <leader>pf  <CMD>Files<CR>$/;"	m
<leader>pg	vimrc	/^nmap <leader>pg  <CMD>GFiles?<CR>$/;"	m
<leader>ph	vimrc	/^nmap <leader>ph  <CMD>BCommits<CR>$/;"	m
<leader>pl	vimrc	/^nmap <leader>pl  <CMD>Lines<CR>$/;"	m
<leader>pp	vimrc	/^nmap <leader>pp  <CMD>GFiles<CR>$/;"	m
<leader>pr	vimrc	/^nmap <leader>pr  <CMD>RG<CR>$/;"	m
<leader>qf	vimrc	/^nnoremap <silent> <leader>qf <CMD>Startify<CR>$/;"	m
<leader>qq	vimrc	/^nnoremap <silent> <leader>qq <CMD>call myfunc#Quitout()<CR>$/;"	m
<leader>qt	vimrc	/^nnoremap <silent> <leader>qt <CMD>call myfunc#CloseTerm()<CR>$/;"	m
<leader>qw	vimrc	/^nnoremap <silent> <leader>qw <CMD>call myfunc#SaveQuitout()<CR>$/;"	m
<leader>rs	vimrc	/^nnoremap <leader>rs :%s\/\\<<C-r><C-w>\\>\/\/gI<Left><Left><Left>$/;"	m
<leader>ts	vimrc	/^nnoremap <silent> <leader>ts <Cmd>setlocal spell! spelllang=en_ca<CR>$/;"	m
<localleader>F	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>F :call smt2#formatter#FormatAllParagraphs()<cr>$/;"	m
<localleader>R	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>R :call smt2#solver#RunAndShowResult()<cr>$/;"	m
<localleader>f	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>f :call smt2#formatter#FormatCurrentParagraph()<cr>$/;"	m
<localleader>r	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>r :call smt2#solver#Run()<cr>$/;"	m
<localleader>v	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>v :call smt2#solver#PrintVersion()<cr>$/;"	m
<plug>(-fzf-/)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	plugged/fzf.vim/plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
<plug>(plug-preview)	autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
<plug>(startify-open-buffers)	plugged/vim-startify/plugin/startify.vim	/^nnoremap <silent><plug>(startify-open-buffers) :<c-u>call startify#open_buffers()<cr>$/;"	m
<space>	vimrc	/^nnoremap <space> <NOP>$/;"	m
<tab>	plugged/vim-polyglot/autoload/ledger.vim	/^    nnoremap <silent> <buffer> <tab> <c-w><c-w>$/;"	m
<tab>	plugged/vim-polyglot/autoload/ledger.vim	/^  nnoremap <silent> <buffer> <tab> <c-w><c-p>$/;"	m
=	plugged/vim-polyglot/autoload/rubycomplete.vim	/^          ln = buf[x]$/;"	m
=	plugged/vim-polyglot/autoload/rubycomplete.vim	/^      ln = buf[x]$/;"	m
=	plugged/vim-polyglot/autoload/rubycomplete.vim	/^      nm = "%s(::.*)*\\", %s, \\"" % [ name, nums.last ]$/;"	m
=	plugged/vim-polyglot/ftplugin/hcl.vim	/^  inoremap <buffer> <silent> = =<Esc>:call hcl#align()<CR>a$/;"	m
=>	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    inoremap <buffer> <silent> => =><Esc>:call puppet#align#AlignHashrockets()<CR>$a$/;"	m
>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> > <Plug>(calendar_view_right)$/;"	m
>	plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>	vimrc	/^xnoremap > >gv$/;"	m
>>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
?	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ? <Plug>(calendar_help)$/;"	m
?	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^        nnoremap <buffer><silent><nowait>? :<C-u>call b:__gitmessenger_popup.echo_help()<CR>$/;"	m
?	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/cancel.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/count.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/default_behaviors.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/default_behaviors.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/error_warning_emulation.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/fold.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/fold.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/highlight.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/history.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/incremental_next_prev.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/insert_register.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/jumplist.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/magic_option.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/module.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/n_and_N.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/nomagic.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/nomagic.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/register.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/repetition.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/scroll.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/incsearch.vim/test/visual_behavior.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    nmap              <nowait> <buffer> ?          <Plug>(VM-?)$/;"	m
?	vimrc	/^map ?  <Plug>(incsearch-nohl)<Plug>(incsearch-backward)$/;"	m
A	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> A <Plug>(calendar_start_insert_last)$/;"	m
A calendar application for Vim	plugged/calendar.vim/README.md	/^# A calendar application for Vim$/;"	c
API	plugged/incsearch-easymotion.vim/README.md	/^### API$/;"	S	chapter:incsearch-easymotion.vim
API	plugged/incsearch-fuzzy.vim/README.md	/^### API$/;"	S	chapter:incsearch-fuzzy.vim
ARR_D	plugged/ultisnips/test/constant.py	/^ARR_D = "\\x1bOB"$/;"	v
ARR_L	plugged/ultisnips/test/constant.py	/^ARR_L = "\\x1bOD"$/;"	v
ARR_R	plugged/ultisnips/test/constant.py	/^ARR_R = "\\x1bOC"$/;"	v
ARR_U	plugged/ultisnips/test/constant.py	/^ARR_U = "\\x1bOA"$/;"	v
AUTHOR	plugged/fzf/man/man1/fzf.1	/^.SH AUTHOR$/;"	s	title:fzf
Abaqus_ToggleComment	plugged/vim-polyglot/ftplugin/abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
About the authors	plugged/vim-easymotion/README.md	/^About the authors$/;"	c
Add	plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []Result) {$/;"	f	struct:fzf.ChunkCache
Add a Test	plugged/vim-visual-multi/test/README.md	/^# Add a Test$/;"	c
AddEntry	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function AddEntry()$/;"	f
AddFunc_Opt	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! AddIndentByInd(indent)$/;"	f
AddLine	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/smartsign_spec.vim	/^function! AddLine(str)$/;"	f
AddNewSnippetSource	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
Added `--ansi` option (#150)	plugged/fzf/CHANGELOG.md	/^#### Added `--ansi` option (#150)$/;"	t	subsection:CHANGELOG""0.9.5""New features
Added `--expect` option (#163)	plugged/fzf/CHANGELOG.md	/^#### Added `--expect` option (#163)$/;"	t	subsection:CHANGELOG""0.9.6""New features
Added `--tac` option to reverse the order of the input.	plugged/fzf/CHANGELOG.md	/^#### Added `--tac` option to reverse the order of the input.$/;"	t	subsection:CHANGELOG""0.9.4""New features
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
Additional usages	plugged/incsearch.vim/README.md	/^### Additional usages$/;"	S	section:Usage
Advanced configuration	plugged/lightline.vim/README.md	/^## Advanced configuration$/;"	s	chapter:lightline.vim
Advanced customization	plugged/fzf.vim/README.md	/^### Advanced customization$/;"	S	section:fzf :heart: vim""Customization
Advanced fzf examples	plugged/fzf/ADVANCED.md	/^Advanced fzf examples$/;"	c
Advanced key bindings	plugged/vimwiki/README.md	/^#### Advanced key bindings$/;"	t	subsection:Key bindings""Normal mode
Advanced topics	plugged/fzf/README.md	/^Advanced topics$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Advanced usage	plugged/incsearch-easymotion.vim/README.md	/^### Advanced usage$/;"	S	chapter:incsearch-easymotion.vim
Algo	plugged/fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []ru/;"	t	package:algo	typeref:typename:func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)
Aliases for snippets	plugged/ultisnips/doc/examples/snippets-aliasing/README.md	/^# Aliases for snippets$/;"	c
Align	plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
Alt	plugged/fzf/src/tui/tui.go	/^	Alt$/;"	c	package:tui
AltBS	plugged/fzf/src/tui/tui.go	/^	AltBS$/;"	c	package:tui
AltDown	plugged/fzf/src/tui/tui.go	/^	AltDown$/;"	c	package:tui
AltKey	plugged/fzf/src/tui/tui.go	/^func AltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
AltLeft	plugged/fzf/src/tui/tui.go	/^	AltLeft$/;"	c	package:tui
AltRight	plugged/fzf/src/tui/tui.go	/^	AltRight$/;"	c	package:tui
AltSDown	plugged/fzf/src/tui/tui.go	/^	AltSDown$/;"	c	package:tui
AltSLeft	plugged/fzf/src/tui/tui.go	/^	AltSLeft$/;"	c	package:tui
AltSRight	plugged/fzf/src/tui/tui.go	/^	AltSRight$/;"	c	package:tui
AltSUp	plugged/fzf/src/tui/tui.go	/^	AltSUp$/;"	c	package:tui
AltUp	plugged/fzf/src/tui/tui.go	/^	AltUp$/;"	c	package:tui
Anon_NoTrigger_AfterSpace	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
AnonymousFunction242032f60100	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  args = args.filter(function(arg) {$/;"	f
AnonymousFunction242032f60200	plugged/syntastic/syntax_checkers/less/less-lint.js	/^        return options.paths = match[2].split(os.type().match(\/Windows\/) ? ';' : ':').map(func/;"	f
AnonymousFunction242032f60300	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  fs.readFile(options.filename, 'utf-8', function(err, data) {$/;"	f
AnonymousFunction242032f60400	plugged/syntastic/syntax_checkers/less/less-lint.js	/^    return parser.parse(data, function(err, tree) {$/;"	f
Ansi	plugged/fzf/src/options.go	/^	Ansi        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Answer	plugged/vim-gitgutter/test/test_gitgutter.vim	/^  func Answer(char)$/;"	f
AntSyntaxScript	plugged/vim-polyglot/syntax/ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
Arguments	plugged/ctrlsf.vim/README.md	/^## Arguments$/;"	s	chapter:ctrlsf.vim
As Vim plugin	plugged/fzf/README.md	/^### As Vim plugin$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
AsEvent	plugged/fzf/src/tui/tui.go	/^func (t EventType) AsEvent() Event {$/;"	f	type:tui.EventType	typeref:typename:Event
AsString	plugged/fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f	struct:fzf.Item	typeref:typename:string
AsString	plugged/fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
AsUint16	plugged/fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f	package:util	typeref:typename:uint16
Asciicast	plugged/clrzr/README.md	/^### Asciicast$/;"	S	chapter:clrzr
Ast	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def Ast(kind: string, value: any, pos_from: number, pos_to: number, contains_comment: bool): dic/;"	f
Asynchronous Search	plugged/ctrlsf.vim/README.md	/^### Asynchronous Search$/;"	S	chapter:ctrlsf.vim
AtStartOfAtom	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def AtStartOfAtom(scanner: dict<any>): bool$/;"	f
AtStartOfExpr	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def AtStartOfExpr(scanner: dict<any>): bool$/;"	f
AtStartOfLParen	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def AtStartOfLParen(scanner: dict<any>): bool$/;"	f
AtStartOfRParen	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def AtStartOfRParen(scanner: dict<any>): bool$/;"	f
AtStartOfSExpr	plugged/vim-polyglot/autoload/smt2/parser.vim	/^const AtStartOfSExpr = funcref(AtStartOfLParen)$/;"	C
AtomAst	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def AtomAst(token: dict<any>): dict<any>$/;"	f
AtomicBool	plugged/fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	s	package:util
Attr	plugged/fzf/src/tui/dummy.go	/^type Attr int32$/;"	t	package:tui	typeref:typename:int32
Attr	plugged/fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t	package:tui	typeref:typename:tcell.Style
Attr	plugged/fzf/src/tui/tui.go	/^	Attr  Attr$/;"	m	struct:tui.ColorAttr	typeref:typename:Attr
Attr	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Attr() Attr {$/;"	f	struct:tui.ColorPair	typeref:typename:Attr
AttrClear	plugged/fzf/src/tui/dummy.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrClear	plugged/fzf/src/tui/tcell.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrRegular	plugged/fzf/src/tui/dummy.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrRegular	plugged/fzf/src/tui/tcell.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrUndefined	plugged/fzf/src/tui/dummy.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
AttrUndefined	plugged/fzf/src/tui/tcell.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
Author	plugged/calendar.vim/README.md	/^## Author$/;"	s	chapter:A calendar application for Vim
Author	plugged/incsearch.vim/README.md	/^Author$/;"	s
Author	plugged/lightline.vim/README.md	/^## Author$/;"	s	chapter:lightline.vim
Author	plugged/vim-asterisk/README.md	/^Author$/;"	s	chapter:vim-asterisk: * -Improved
Author and Feedback	plugged/vim-startify/README.md	/^## Author and Feedback$/;"	s
Auto Pairs	plugged/auto-pairs/README.md	/^Auto Pairs$/;"	c
AutoPairsBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsBackInsert()$/;"	f
AutoPairsDefaultPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefaultPairs()$/;"	f
AutoPairsDefine	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefine(pairs, ...)$/;"	f
AutoPairsDelete	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsFastWrap()$/;"	f
AutoPairsInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInit()$/;"	f
AutoPairsInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInsert(key)$/;"	f
AutoPairsJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsJump()$/;"	f
AutoPairsMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsReturn()$/;"	f
AutoPairsSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsSpace()$/;"	f
AutoPairsToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsToggle()$/;"	f
AutoPairsTryInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsTryInit()$/;"	f
Autocommands	plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
Autoindent	plugged/vim-polyglot/README.md	/^## Autoindent$/;"	s
Autojump from tabstop when it's empty	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^# Autojump from tabstop when it's empty$/;"	c
Automated Tests	plugged/vimwiki/test/README.md	/^### Automated Tests$/;"	S	section:Vimwiki Tests""Running Tests
Automatic :nohlsearch	plugged/incsearch.vim/README.md	/^#### Automatic :nohlsearch$/;"	t	subsection:Usage""Additional usages
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Available Colorschemes	plugged/lightline.vim/colorscheme.md	/^# Available Colorschemes$/;"	c
B	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> B b$/;"	m
B	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> B             :call startify#set_batchmode('B')<cr>$/;"	m
BACKWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    BACKWARD = 2$/;"	v	class:JumpDirection
BASE	plugged/fzf/test/test_go.rb	/^BASE = File.expand_path('..', __dir__)$/;"	C
BASE_DIR	plugged/vim-polyglot/scripts/build	/^BASE_DIR = Pathname.new(File.expand_path('..\/..', __FILE__))$/;"	C
BASE_URL	plugged/vim-polyglot/scripts/build	/^BASE_URL = 'https:\/\/raw.githubusercontent.com\/github\/linguist\/master'$/;"	C
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARY32)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM5)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM6)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM7)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM8)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYPPC64LE)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYRISCV64)$/;"	m
BINARY32	plugged/fzf/Makefile	/^BINARY32       := fzf-$(GOOS)_386$/;"	m
BINARY64	plugged/fzf/Makefile	/^BINARY64       := fzf-$(GOOS)_amd64$/;"	m
BINARYARM5	plugged/fzf/Makefile	/^BINARYARM5     := fzf-$(GOOS)_arm5$/;"	m
BINARYARM6	plugged/fzf/Makefile	/^BINARYARM6     := fzf-$(GOOS)_arm6$/;"	m
BINARYARM7	plugged/fzf/Makefile	/^BINARYARM7     := fzf-$(GOOS)_arm7$/;"	m
BINARYARM8	plugged/fzf/Makefile	/^BINARYARM8     := fzf-$(GOOS)_arm8$/;"	m
BINARYPPC64LE	plugged/fzf/Makefile	/^BINARYPPC64LE  := fzf-$(GOOS)_ppc64le$/;"	m
BINARYRISCV64	plugged/fzf/Makefile	/^BINARYRISCV64  := fzf-$(GOOS)_riscv64$/;"	m
BOLD	plugged/vim-visual-multi/test/test.py	/^    BOLD = '\\033[1m'$/;"	v	class:bcolors
BRACES	plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
BS	plugged/ultisnips/test/constant.py	/^BS = "\\x7f"$/;"	v
BSpace	plugged/fzf/src/tui/tui.go	/^	BSpace$/;"	c	package:tui
BTab	plugged/fzf/src/tui/tui.go	/^	BTab$/;"	c	package:tui
BUILD_FLAGS	plugged/fzf/Makefile	/^BUILD_FLAGS    := -a -ldflags "-s -w -X main.version=$(VERSION) -X main.revision=$(REVISION)" -t/;"	m
Backspace_TabStop_NotZero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
BackwardEOF	plugged/fzf/src/tui/tui.go	/^	BackwardEOF$/;"	c	package:tui
Badges	plugged/vital.vim/README.md	/^### Badges$/;"	S	section:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)""Plugins Using vital.vim
Basic Markup	plugged/vimwiki/README.md	/^## Basic Markup$/;"	s
Basic Usage	plugged/calendar.vim/README.md	/^## Basic Usage$/;"	s	chapter:A calendar application for Vim
Basic key bindings	plugged/vimwiki/README.md	/^#### Basic key bindings$/;"	t	subsection:Key bindings""Normal mode
Basic usage	plugged/incsearch.vim/README.md	/^### Basic usage$/;"	S	section:Usage
Before submitting	plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Before submitting$/;"	c
Before submitting your issue（请在提交 issue 前一定要检查以下项目！）	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^## Before submitting your issue（请在提交 issue 前一定要检查以下项目！）$/;"	s
Before you add a feature	plugged/ultisnips/CONTRIBUTING.md	/^## Before you add a feature$/;"	s	chapter:Contributing to UltiSnips
BenchmarkExtractColor	plugged/fzf/src/ansi_test.go	/^func BenchmarkExtractColor(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence	plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence_Regex	plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence_Regex(b *testing.B) {$/;"	f	package:fzf
Bg	plugged/fzf/src/tui/tui.go	/^	Bg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Bg	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Bg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
Bidirectional motions	plugged/vim-easymotion/README.md	/^### Bidirectional motions$/;"	S	chapter:New features in version 2.0
Black	plugged/fzf/src/options.go	/^	Black       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Blink	plugged/fzf/src/tui/dummy.go	/^	Blink     = Attr(1 << 4)$/;"	c	package:tui
Blink	plugged/fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c	package:tui
Blink2	plugged/fzf/src/tui/dummy.go	/^	Blink2    = Attr(1 << 5)$/;"	c	package:tui
Bold	plugged/fzf/src/options.go	/^	Bold        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Bold	plugged/fzf/src/tui/dummy.go	/^	Bold      = Attr(1)$/;"	c	package:tui
Bold	plugged/fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c	package:tui	typeref:type:Attr
Bonus fuzzy-search with EasyMotion	plugged/vim-easymotion/README.md	/^### Bonus fuzzy-search with EasyMotion$/;"	S	chapter:New features in version 3.0
Border	plugged/fzf/src/tui/tui.go	/^	Border       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
BorderBottom	plugged/fzf/src/tui/tui.go	/^	BorderBottom$/;"	c	package:tui
BorderCharacter	plugged/fzf/src/tui/tui.go	/^type BorderCharacter int$/;"	t	package:tui	typeref:typename:int
BorderHorizontal	plugged/fzf/src/tui/tui.go	/^	BorderHorizontal$/;"	c	package:tui
BorderLeft	plugged/fzf/src/tui/tui.go	/^	BorderLeft$/;"	c	package:tui
BorderNone	plugged/fzf/src/tui/tui.go	/^	BorderNone BorderShape = iota$/;"	c	package:tui	typeref:type:BorderShape
BorderRight	plugged/fzf/src/tui/tui.go	/^	BorderRight$/;"	c	package:tui
BorderRounded	plugged/fzf/src/tui/tui.go	/^	BorderRounded$/;"	c	package:tui
BorderShape	plugged/fzf/src/options.go	/^	BorderShape tui.BorderShape$/;"	m	struct:fzf.Options	typeref:typename:tui.BorderShape
BorderShape	plugged/fzf/src/tui/tui.go	/^type BorderShape int$/;"	t	package:tui	typeref:typename:int
BorderSharp	plugged/fzf/src/tui/tui.go	/^	BorderSharp$/;"	c	package:tui
BorderStyle	plugged/fzf/src/tui/tui.go	/^type BorderStyle struct {$/;"	s	package:tui
BorderTop	plugged/fzf/src/tui/tui.go	/^	BorderTop$/;"	c	package:tui
BorderVertical	plugged/fzf/src/tui/tui.go	/^	BorderVertical$/;"	c	package:tui
Branches	plugged/fzf/ADVANCED.md	/^### Branches$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Buffer Level Pairs Setting	plugged/auto-pairs/README.md	/^Buffer Level Pairs Setting$/;"	s	chapter:Auto Pairs
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.11
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.12
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.13
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.5
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.6
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.7
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.8
Bug1251994	plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
Build instructions	plugged/fzf/BUILD.md	/^Build instructions$/;"	s	chapter:Building fzf
BuildPattern	plugged/fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, normalize bool,/;"	f	package:fzf	typeref:typename:*Pattern
Building Docker Image	plugged/vimwiki/test/README.md	/^## Building Docker Image$/;"	s	chapter:Vimwiki Tests
Building fzf	plugged/fzf/BUILD.md	/^Building fzf$/;"	c
Building fzf	plugged/fzf/README.md	/^Building fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Builtin	plugged/vim-polyglot/syntax/8th.vim	/^com! -nargs=+ Builtin syn keyword eighthBuiltin <args>$/;"	c
Builtin	plugged/vim-polyglot/syntax/reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
Buzz Bozz	plugged/vimwiki/test/resources/testmarkdown/buzz_bozz.md	/^# Buzz Bozz$/;"	c
ByOrder	plugged/fzf/src/result.go	/^type ByOrder []Offset$/;"	t	package:fzf	typeref:typename:[]Offset
ByRelevance	plugged/fzf/src/result.go	/^type ByRelevance []Result$/;"	t	package:fzf	typeref:typename:[]Result
ByRelevanceTac	plugged/fzf/src/result.go	/^type ByRelevanceTac []Result$/;"	t	package:fzf	typeref:typename:[]Result
Byte	plugged/fzf/src/tui/tui.go	/^func (t EventType) Byte() byte {$/;"	f	type:tui.EventType	typeref:typename:byte
Bytes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Bytes() []byte {$/;"	f	struct:util.Chars	typeref:typename:[]byte
BzlFoldText	plugged/vim-polyglot/ftplugin/bzl.vim	/^function BzlFoldText() abort$/;"	f
C	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> C <Plug>(calendar_change_line)$/;"	m
CCode	plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar CCode call CCode()$/;"	c
CCode	plugged/vim-polyglot/ftplugin/vala.vim	/^function! CCode() abort$/;"	f
CFill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CFill(fg Color, bg Color, attr Attr, text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
CFill	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CFill(fg Color, bg Color, a Attr, str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
CFill	plugged/fzf/src/tui/tui.go	/^	CFill(fg Color, bg Color, attr Attr, text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
CHANGELOG	plugged/fzf/CHANGELOG.md	/^CHANGELOG$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\$\\d+")$/;"	v	class:MirrorToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+[:}]")$/;"	v	class:TabStopToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\\/")$/;"	v	class:TransformationToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\|")$/;"	v	class:ChoicesToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!p\\s")$/;"	v	class:PythonCodeToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!v\\s")$/;"	v	class:VimLCodeToken
CLIENT	plugged/vim-visual-multi/test/test.py	/^CLIENT = None$/;"	v
CMakeGetIndent	plugged/vim-polyglot/indent/cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
COMPLETION_OPTIONS	plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
COMPL_ACCEPT	plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
COMPREPLY=	plugged/fzf/shell/completion.bash	/^    COMPREPLY=()$/;"	f
COMPREPLY=	plugged/fzf/shell/completion.bash	/^  COMPREPLY=()$/;"	f
CONTRIBUTING	plugged/syntastic/CONTRIBUTING.md	/^# CONTRIBUTING$/;"	c
CONTRIBUTING	plugged/vim-startify/CONTRIBUTING.md	/^CONTRIBUTING$/;"	c
CPrint	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.LightWindow
CPrint	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.TcellWindow
CPrint	plugged/fzf/src/tui/tui.go	/^	CPrint(color ColorPair, text string)$/;"	n	interface:tui.Window
CSS Modes	plugged/clrzr/README.md	/^#### CSS Modes$/;"	t	subsection:clrzr""Screenshots
CSVCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCol(...) "{{{3$/;"	f
CSVCount	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCount(col, fmt, first, last, ...) "{{{3$/;"	f
CSVField	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVField(x, y, ...) "{{{3$/;"	f
CSVMax	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMax(col, fmt, first, last) "{{{3$/;"	f
CSVMin	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMin(col, fmt, first, last) "{{{3$/;"	f
CSVPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVPat(colnr, ...) "{{{3$/;"	f
CSVSum	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVSum(col, fmt, first, last) "{{{3$/;"	f
CSVWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVWidth(...) "{{{3$/;"	f
CSV_CloseBuffer	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_CloseBuffer(buffer) "{{{3$/;"	f
CSV_Menu	plugged/vim-polyglot/autoload/csv.vim	/^        augroup CSV_Menu$/;"	a
CSV_Preview	plugged/vim-polyglot/autoload/csv.vim	/^          aug CSV_Preview$/;"	a
CSV_Preview	plugged/vim-polyglot/autoload/csv.vim	/^        aug CSV_Preview$/;"	a
CSV_QuitPre	plugged/vim-polyglot/autoload/csv.vim	/^        augroup CSV_QuitPre$/;"	a
CSV_QuitPre	plugged/vim-polyglot/autoload/csv.vim	/^    aug CSV_QuitPre$/;"	a
CSV_SetSplitOptions	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_SetSplitOptions(window) "{{{3$/;"	f
CSV_WCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_WCol(...) "{{{3$/;"	f
CacheKey	plugged/fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
Calendar	plugged/calendar.vim/plugin/calendar.vim	/^       \\ Calendar call calendar#new(<q-args>)$/;"	c
CalendarAutoUpdate	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^  augroup CalendarAutoUpdate$/;"	a
CalendarBuffer	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^  augroup CalendarBuffer$/;"	a
CalendarCache	plugged/calendar.vim/autoload/calendar/cache.vim	/^augroup CalendarCache$/;"	a
CalendarCountCache	plugged/calendar.vim/autoload/calendar/countcache.vim	/^augroup CalendarCountCache$/;"	a
Can I display the plugin information at the filename component?	plugged/lightline.vim/README.md	/^### Can I display the plugin information at the filename component?$/;"	S	section:lightline.vim""Advanced configuration
Can I display the plugin name at the mode component?	plugged/lightline.vim/README.md	/^### Can I display the plugin name at the mode component?$/;"	S	section:lightline.vim""Advanced configuration
Can I hide the readonly component in other plugins buffer?	plugged/lightline.vim/README.md	/^### Can I hide the readonly component in other plugins buffer?$/;"	S	section:lightline.vim""Advanced configuration
Can I hide the readonly component in the help buffer?	plugged/lightline.vim/README.md	/^### Can I hide the readonly component in the help buffer?$/;"	S	section:lightline.vim""Advanced configuration
Can I trim the bar between the filename and modified sign?	plugged/lightline.vim/README.md	/^### Can I trim the bar between the filename and modified sign?$/;"	S	section:lightline.vim""Advanced configuration
Can I trim the file format and encoding information on narrow windows?	plugged/lightline.vim/README.md	/^### Can I trim the file format and encoding information on narrow windows?$/;"	S	section:lightline.vim""Advanced configuration
Case	plugged/fzf/src/options.go	/^	Case        Case$/;"	m	struct:fzf.Options	typeref:typename:Case
Case	plugged/fzf/src/options.go	/^type Case int$/;"	t	package:fzf	typeref:typename:int
CaseIgnore	plugged/fzf/src/options.go	/^	CaseIgnore$/;"	c	package:fzf
CaseRespect	plugged/fzf/src/options.go	/^	CaseRespect$/;"	c	package:fzf
CaseSmart	plugged/fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c	package:fzf	typeref:type:Case
CdlAsignment	plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
Change	plugged/fzf/src/tui/tui.go	/^	Change$/;"	c	package:tui
Changed behavior on `--no-sort`	plugged/fzf/CHANGELOG.md	/^#### Changed behavior on `--no-sort`$/;"	t	subsection:CHANGELOG""0.9.4""*Backward incompatible changes*
Changing Wiki Syntax	plugged/vimwiki/README.md	/^## Changing Wiki Syntax$/;"	s
Char	plugged/fzf/src/tui/tui.go	/^	Char       rune$/;"	m	struct:tui.Event	typeref:typename:rune
Chars	plugged/fzf/src/util/chars.go	/^type Chars struct {$/;"	s	package:util
CheckItems	plugged/vim-polyglot/tests/native.vim	/^func CheckItems(checks)$/;"	f
CheckSaneSearchPattern	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>CheckSaneSearchPattern() "{{{3$/;"	f
Check_back_space	vimrc	/^function! Check_back_space() abort$/;"	f
Choices	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^class Choices(TabStop):$/;"	c
ChoicesToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ChoicesToken(Token):$/;"	c
Choices_AsNestedElement_CanBeTabbedInto	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedInto(_VimTest):$/;"	c
Choices_AsNestedElement_CanBeTabbedThrough	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedThrough(_VimTest):$/;"	c
Choices_AsNestedElement_ShallNotTakeActionIfParentInput	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShallNotTakeActionIfParentInput(_VimTest):$/;"	c
Choices_AsNestedElement_ShouldOverwriteDefaultText	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShouldOverwriteDefaultText(_VimTest):$/;"	c
Choices_CanEscapeCommaInsideChoiceItem	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanEscapeCommaInsideChoiceItem(_VimTest):$/;"	c
Choices_CanTakeNonAsciiCharacters	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanTakeNonAsciiCharacters(_VimTest):$/;"	c
Choices_EmptyChoiceWillBeDiscarded	plugged/ultisnips/test/test_Choices.py	/^class Choices_EmptyChoiceWillBeDiscarded(_VimTest):$/;"	c
Choices_ExpectCorrectResult	plugged/ultisnips/test/test_Choices.py	/^class Choices_ExpectCorrectResult(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldTerminateWithSpace	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldTerminateWithSpace(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldWaitForInputs	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldWaitForInputs(_VimTest):$/;"	c
Choices_ShouldThrowErrorWithZeroTabstop	plugged/ultisnips/test/test_Choices.py	/^class Choices_ShouldThrowErrorWithZeroTabstop(_VimTest):$/;"	c
Choices_WilNotMessWithTabstopsAfterIt	plugged/ultisnips/test/test_Choices.py	/^class Choices_WilNotMessWithTabstopsAfterIt(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_CharTyped	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_CharTyped(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex(_VimTest):$/;"	c
Choices_WillBeExpandedToInlineSelection	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillBeExpandedToInlineSelection(_VimTest):$/;"	c
Choices_WillNotExpand_If_ChoiceListIsEmpty	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillNotExpand_If_ChoiceListIsEmpty(_VimTest):$/;"	c
Choices_With_Mirror	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror(_VimTest):$/;"	c
Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone(_VimTest):$/;"	c
Chunk	plugged/fzf/src/chunklist.go	/^type Chunk struct {$/;"	s	package:fzf
ChunkCache	plugged/fzf/src/cache.go	/^type ChunkCache struct {$/;"	s	package:fzf
ChunkList	plugged/fzf/src/chunklist.go	/^type ChunkList struct {$/;"	s	package:fzf
Clear	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Clear() {$/;"	f	struct:fzf.ChunkList
Clear	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Clear()            {}$/;"	f	unknown:tui.FullscreenRenderer
Clear	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Clear() {$/;"	f	struct:tui.LightRenderer
Clear	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Clear() {$/;"	f	unknown:tui.FullscreenRenderer
Clear	plugged/fzf/src/tui/tui.go	/^	Clear()$/;"	n	interface:tui.Renderer
Clear	plugged/fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f	type:util.Events
ClearOnExit	plugged/fzf/src/options.go	/^	ClearOnExit bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Close	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Close()            {}$/;"	f	unknown:tui.FullscreenRenderer
Close	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Close() {$/;"	f	struct:tui.LightRenderer
Close	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Close() {$/;"	f	struct:tui.LightWindow
Close	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Close() {$/;"	f	unknown:tui.FullscreenRenderer
Close	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Close() {$/;"	f	struct:tui.TcellWindow
Close	plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Renderer
Close	plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Window
CloseBug	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function CloseBug()$/;"	f
Clrzr	plugged/clrzr/autoload/clrzr.vim	/^  augroup Clrzr$/;"	a
ClrzrAposTog	plugged/clrzr/plugin/clrzr.vim	/^command! ClrzrAposTog call clrzr#AlphaPosToggle()$/;"	c
ClrzrOff	plugged/clrzr/plugin/clrzr.vim	/^command! ClrzrOff     call clrzr#Disable()$/;"	c
ClrzrOn	plugged/clrzr/plugin/clrzr.vim	/^command! ClrzrOn      call clrzr#Enable()$/;"	c
ClrzrRefresh	plugged/clrzr/plugin/clrzr.vim	/^command! ClrzrRefresh call clrzr#Refresh()$/;"	c
CobolIndentBlock	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
CoffeeAuWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^  augroup CoffeeAuWatch$/;"	a
CoffeeBufNew	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeMake	plugged/vim-polyglot/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeUpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
ColBorder	plugged/fzf/src/tui/tui.go	/^	ColBorder               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrent	plugged/fzf/src/tui/tui.go	/^	ColCurrent              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursor	plugged/fzf/src/tui/tui.go	/^	ColCurrentCursor        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursorEmpty	plugged/fzf/src/tui/tui.go	/^	ColCurrentCursorEmpty   ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentMatch	plugged/fzf/src/tui/tui.go	/^	ColCurrentMatch         ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelected	plugged/fzf/src/tui/tui.go	/^	ColCurrentSelected      ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelectedEmpty	plugged/fzf/src/tui/tui.go	/^	ColCurrentSelectedEmpty ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursor	plugged/fzf/src/tui/tui.go	/^	ColCursor               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursorEmpty	plugged/fzf/src/tui/tui.go	/^	ColCursorEmpty          ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColDisabled	plugged/fzf/src/tui/tui.go	/^	ColDisabled             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColHeader	plugged/fzf/src/tui/tui.go	/^	ColHeader               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInfo	plugged/fzf/src/tui/tui.go	/^	ColInfo                 ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInput	plugged/fzf/src/tui/tui.go	/^	ColInput                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColMatch	plugged/fzf/src/tui/tui.go	/^	ColMatch                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColNormal	plugged/fzf/src/tui/tui.go	/^	ColNormal               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreview	plugged/fzf/src/tui/tui.go	/^	ColPreview              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreviewBorder	plugged/fzf/src/tui/tui.go	/^	ColPreviewBorder        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPrompt	plugged/fzf/src/tui/tui.go	/^	ColPrompt               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSelected	plugged/fzf/src/tui/tui.go	/^	ColSelected             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSpinner	plugged/fzf/src/tui/tui.go	/^	ColSpinner              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
Color	plugged/fzf/src/tui/tui.go	/^	Color Color$/;"	m	struct:tui.ColorAttr	typeref:typename:Color
Color	plugged/fzf/src/tui/tui.go	/^type Color int32$/;"	t	package:tui	typeref:typename:int32
Color themes	plugged/fzf/ADVANCED.md	/^Color themes$/;"	s	chapter:Advanced fzf examples
ColorAttr	plugged/fzf/src/tui/tui.go	/^type ColorAttr struct {$/;"	s	package:tui
ColorPair	plugged/fzf/src/tui/tui.go	/^type ColorPair struct {$/;"	s	package:tui
ColorTheme	plugged/fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	s	package:tui
Colored	plugged/fzf/src/tui/tui.go	/^	Colored      bool$/;"	m	struct:tui.ColorTheme	typeref:typename:bool
Colors	plugged/fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f	struct:fzf.Item	typeref:typename:[]ansiOffset
Colors As You Type	plugged/clrzr/README.md	/^### Colors As You Type$/;"	S	chapter:clrzr
Colorscheme configuration	plugged/lightline.vim/README.md	/^## Colorscheme configuration$/;"	s	chapter:lightline.vim
Comfortable	plugged/calendar.vim/README.md	/^### Comfortable$/;"	S	section:A calendar application for Vim""Concept
Command-local options	plugged/fzf.vim/README.md	/^### Command-local options$/;"	S	section:fzf :heart: vim""Customization
Commands	plugged/fzf.vim/README.md	/^Commands$/;"	s	chapter:fzf :heart: vim
Commands	plugged/git-messenger.vim/README.md	/^### Commands$/;"	S	section:git-messenger.vim""Usage
Commands	plugged/vimwiki/README.md	/^## Commands$/;"	s
Commentary	plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar -bang Commentary call s:go(<line1>,<line2>,<bang>0)$/;"	c
Commit hashes	plugged/fzf/ADVANCED.md	/^### Commit hashes$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Compact View	plugged/ctrlsf.vim/README.md	/^### Compact View$/;"	S	chapter:ctrlsf.vim
Comparable	plugged/fzf/src/tui/tui.go	/^func (e Event) Comparable() Event {$/;"	f	unknown:tui.Event	typeref:typename:Event
CompareMovements	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CompareMovements(movement1, movement2, backward)$/;"	f
CompilerSet	plugged/vim-polyglot/after/compiler/tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/cargo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/credo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/gleam.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/gradle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/gradlew.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/ledger.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/mix.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/nim.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/nix-build.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/powershell.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/puppet-lint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/python.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rustc.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/sbt.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/sml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/swift.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/zig.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/zig_build.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/zig_build_exe.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/zig_test.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete_wikifiles	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! Complete_wikifiles(findstart, base) abort$/;"	f
Completion functions	plugged/fzf.vim/README.md	/^Completion functions$/;"	s	chapter:fzf :heart: vim
CompletionTest	plugged/fzf/test/test_go.rb	/^module CompletionTest$/;"	m
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
Concept	plugged/calendar.vim/README.md	/^## Concept$/;"	s	chapter:A calendar application for Vim
Concepts	plugged/incsearch.vim/README.md	/^Concepts$/;"	s
Configuration	plugged/ctrlsf.vim/README.md	/^## Configuration$/;"	s	chapter:ctrlsf.vim
Configuration	plugged/fzf/README-VIM.md	/^### Configuration$/;"	S	section:FZF Vim integration""`:FZF[!]`
Configuration for Popup Window	plugged/git-messenger.vim/README.md	/^### Configuration for Popup Window$/;"	S	section:git-messenger.vim""Usage
Constrain	plugged/fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f	package:util	typeref:typename:int
Constrain32	plugged/fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f	package:util	typeref:typename:int32
ContextSnippets_ContextHasAccessToReMatch	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToReMatch(_VimTest):$/;"	c
ContextSnippets_ContextHasAccessToVisual	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
Contributing	plugged/vim-polyglot/README.md	/^## Contributing$/;"	s
Contributing	plugged/vim-repeat/README.markdown	/^## Contributing$/;"	s	chapter:repeat.vim
Contributing	plugged/vim-surround/README.markdown	/^## Contributing$/;"	s	chapter:surround.vim
Contributing	plugged/vim-unimpaired/README.markdown	/^## Contributing$/;"	s	chapter:unimpaired.vim
Contributing to UltiSnips	plugged/ultisnips/CONTRIBUTING.md	/^# Contributing to UltiSnips$/;"	c
Contributing to Vimwiki	plugged/vimwiki/CONTRIBUTING.md	/^# Contributing to Vimwiki$/;"	c
Contributors	plugged/auto-pairs/README.md	/^Contributors$/;"	s	chapter:Auto Pairs
Converter feature	plugged/incsearch.vim/README.md	/^### Converter feature$/;"	S	section::tada: Version 2.0 :tada:
CopyRunes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) CopyRunes(dest []rune) {$/;"	f	struct:util.Chars
CountItems	plugged/fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f	package:fzf	typeref:typename:int
CountWrapper	plugged/vim-polyglot/ftplugin/vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
Creating a pull request	plugged/vimwiki/CONTRIBUTING.md	/^# Creating a pull request$/;"	c
Criteria	plugged/fzf/src/options.go	/^	Criteria    []criterion$/;"	m	struct:fzf.Options	typeref:typename:[]criterion
CrystalContext	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalContext        echo crystal_lang#context(expand('%'), getpos('./;"	c
CrystalDef	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=0 CrystalDef            call crystal_lang#jump_to_definition(expand('%')/;"	c
CrystalExpand	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalExpand         echo crystal_lang#expand(expand('%'), getpos('.'/;"	c
CrystalFormat	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* -bar CrystalFormat    call crystal_lang#format(<q-args>, 0)$/;"	c
CrystalHierarchy	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalHierarchy      echo crystal_lang#type_hierarchy(expand('%'), <q/;"	c
CrystalImpl	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalImpl           echo crystal_lang#impl(expand('%'), getpos('.'),/;"	c
CrystalSpecRunAll	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunAll     call crystal_lang#run_all_spec(<f-args>)$/;"	c
CrystalSpecRunCurrent	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunCurrent call crystal_lang#run_current_spec(<f-args>)$/;"	c
CrystalSpecSwitch	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecSwitch     call crystal_lang#switch_spec_file(<f-args>)$/;"	c
CtrlA	plugged/fzf/src/tui/tui.go	/^	CtrlA$/;"	c	package:tui
CtrlAlt	plugged/fzf/src/tui/tui.go	/^	CtrlAlt$/;"	c	package:tui
CtrlAltKey	plugged/fzf/src/tui/tui.go	/^func CtrlAltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
CtrlB	plugged/fzf/src/tui/tui.go	/^	CtrlB$/;"	c	package:tui
CtrlBackSlash	plugged/fzf/src/tui/tui.go	/^	CtrlBackSlash$/;"	c	package:tui
CtrlC	plugged/fzf/src/tui/tui.go	/^	CtrlC$/;"	c	package:tui
CtrlCaret	plugged/fzf/src/tui/tui.go	/^	CtrlCaret$/;"	c	package:tui
CtrlD	plugged/fzf/src/tui/tui.go	/^	CtrlD$/;"	c	package:tui
CtrlE	plugged/fzf/src/tui/tui.go	/^	CtrlE$/;"	c	package:tui
CtrlF	plugged/fzf/src/tui/tui.go	/^	CtrlF$/;"	c	package:tui
CtrlG	plugged/fzf/src/tui/tui.go	/^	CtrlG$/;"	c	package:tui
CtrlH	plugged/fzf/src/tui/tui.go	/^	CtrlH$/;"	c	package:tui
CtrlJ	plugged/fzf/src/tui/tui.go	/^	CtrlJ$/;"	c	package:tui
CtrlK	plugged/fzf/src/tui/tui.go	/^	CtrlK$/;"	c	package:tui
CtrlL	plugged/fzf/src/tui/tui.go	/^	CtrlL$/;"	c	package:tui
CtrlM	plugged/fzf/src/tui/tui.go	/^	CtrlM$/;"	c	package:tui
CtrlN	plugged/fzf/src/tui/tui.go	/^	CtrlN$/;"	c	package:tui
CtrlO	plugged/fzf/src/tui/tui.go	/^	CtrlO$/;"	c	package:tui
CtrlP	plugged/fzf/src/tui/tui.go	/^	CtrlP$/;"	c	package:tui
CtrlQ	plugged/fzf/src/tui/tui.go	/^	CtrlQ$/;"	c	package:tui
CtrlR	plugged/fzf/src/tui/tui.go	/^	CtrlR$/;"	c	package:tui
CtrlRightBracket	plugged/fzf/src/tui/tui.go	/^	CtrlRightBracket$/;"	c	package:tui
CtrlS	plugged/fzf/src/tui/tui.go	/^	CtrlS$/;"	c	package:tui
CtrlSF	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=* -comp=customlist,ctrlsf#comp#Completion CtrlSF         call ctrlsf#Search(<q-args>)$/;"	c
CtrlSFClearHL	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFClearHL  call ctrlsf#ClearSelectedLine()$/;"	c
CtrlSFClose	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFClose    call ctrlsf#Quit()$/;"	c
CtrlSFFocus	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFFocus    call ctrlsf#Focus()$/;"	c
CtrlSFGetVisualSelection	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! g:CtrlSFGetVisualSelection()$/;"	f
CtrlSFOpen	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFOpen     call ctrlsf#Open()$/;"	c
CtrlSFQuickfix	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=* -comp=customlist,ctrlsf#comp#Completion CtrlSFQuickfix call ctrlsf#Quickfix(<q-args>)$/;"	c
CtrlSFStatusLine	plugged/ctrlsf.vim/after/plugin/ctrlsf.vim	/^func! CtrlSFStatusLine(...)$/;"	f
CtrlSFStop	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFStop     call ctrlsf#StopSearch()$/;"	c
CtrlSFSwitchViewMode	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^    command! -buffer CtrlSFSwitchViewMode call ctrlsf#SwitchViewMode()$/;"	c
CtrlSFToggle	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFToggle   call ctrlsf#Toggle()$/;"	c
CtrlSFToggleMap	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^    command! -buffer CtrlSFToggleMap      call ctrlsf#ToggleMap()$/;"	c
CtrlSFUpdate	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFUpdate   call ctrlsf#Update()$/;"	c
CtrlSlash	plugged/fzf/src/tui/tui.go	/^	CtrlSlash$/;"	c	package:tui
CtrlSpace	plugged/fzf/src/tui/tui.go	/^	CtrlSpace$/;"	c	package:tui
CtrlT	plugged/fzf/src/tui/tui.go	/^	CtrlT$/;"	c	package:tui
CtrlU	plugged/fzf/src/tui/tui.go	/^	CtrlU$/;"	c	package:tui
CtrlV	plugged/fzf/src/tui/tui.go	/^	CtrlV$/;"	c	package:tui
CtrlW	plugged/fzf/src/tui/tui.go	/^	CtrlW$/;"	c	package:tui
CtrlX	plugged/fzf/src/tui/tui.go	/^	CtrlX$/;"	c	package:tui
CtrlY	plugged/fzf/src/tui/tui.go	/^	CtrlY$/;"	c	package:tui
CtrlZ	plugged/fzf/src/tui/tui.go	/^	CtrlZ$/;"	c	package:tui
CucumberComplete	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
Current	plugged/fzf/src/tui/tui.go	/^	Current      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
CurrentMatch	plugged/fzf/src/tui/tui.go	/^	CurrentMatch ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Cursor	plugged/fzf/src/tui/tui.go	/^	Cursor       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
CursorMovement_BS_InEditMode	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
CursorPos	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/easymotion_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/smartsign_spec.vim	/^function! CursorPos()$/;"	f
Custom	plugged/lightline.vim/test/expand.vim	/^  function! Custom()$/;"	f
Custom	plugged/lightline.vim/test/onetab.vim	/^  function! Custom(n)$/;"	f
Custom completion	plugged/fzf.vim/README.md	/^Custom completion$/;"	s	chapter:fzf :heart: vim
Custom fuzzy completion	plugged/fzf/README.md	/^#### Custom fuzzy completion$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Custom statusline	plugged/fzf.vim/README.md	/^### Custom statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Custom1	plugged/lightline.vim/test/subseparator.vim	/^  function! Custom1()$/;"	f
Custom2	plugged/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom3	plugged/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
CustomHTTPRedirectHandler	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^            class CustomHTTPRedirectHandler(urllib2.HTTPRedirectHandler):$/;"	c	member:DummyClassForLocalScope.main	file:
CustomHTTPRedirectHandler	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^            class CustomHTTPRedirectHandler(urllib.request.HTTPRedirectHandler):$/;"	c	member:DummyClassForLocalScope.main	file:
Customization	plugged/fzf.vim/README.md	/^Customization$/;"	s	chapter:fzf :heart: vim
Cycle	plugged/fzf/src/options.go	/^	Cycle       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -count=1 -bar -bang Cycle call s:cycle(<bang>0 ? -<count> : <count>)$/;"	c
D	autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> D <Plug>(calendar_delete_line)$/;"	m
DEBUG	plugged/fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v	package:algo	typeref:typename:bool
DEFAULT_TIMEOUT	plugged/fzf/test/test_go.rb	/^DEFAULT_TIMEOUT = 10$/;"	C
DESCRIPTION	plugged/fzf/man/man1/fzf-tmux.1	/^.SH DESCRIPTION$/;"	s	title:fzf-tmux
DESCRIPTION	plugged/fzf/man/man1/fzf.1	/^.SH DESCRIPTION$/;"	s	title:fzf
DUMP_FILENAME	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^DUMP_FILENAME = ($/;"	v
Dark256	plugged/fzf/src/tui/tui.go	/^	Dark256   *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
DarkBg	plugged/fzf/src/tui/tui.go	/^	DarkBg       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
DartIndent	plugged/vim-polyglot/indent/dart.vim	/^function! DartIndent()$/;"	f
Date	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Date()$/;"	f
DebChangelogFoldText	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebCompleteBugs	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
DebControlFold	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFold(l)$/;"	f
DebControlFoldText	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebGetChangelogFold	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
DebGetPkgSrcName	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
Debugging	plugged/ultisnips/CONTRIBUTING.md	/^## Debugging$/;"	s	chapter:Contributing to UltiSnips
Default bindings	plugged/vim-easymotion/README.md	/^### Default bindings$/;"	S	chapter:Important notes
Default settings	plugged/vim-polyglot/README.md	/^## Default settings$/;"	s
Default16	plugged/fzf/src/tui/tui.go	/^	Default16 *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
Del	plugged/fzf/src/tui/tui.go	/^	Del$/;"	c	package:tui
DeleteCurrentTabStop1_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
Delimiter	plugged/fzf/src/options.go	/^	Delimiter   Delimiter$/;"	m	struct:fzf.Options	typeref:typename:Delimiter
Delimiter	plugged/fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	s	package:fzf
Demo	plugged/YankAssassin.vim/README.md	/^## Demo$/;"	s	chapter:What is YankAssassin.vim?
Demo	plugged/fzf/README.md	/^#### Demo$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Demo	plugged/vim-highlightedyank/README.md	/^## Demo$/;"	s	chapter:vim-highlightedyank
Dependencies	plugged/fzf.vim/README.md	/^### Dependencies$/;"	S	section:fzf :heart: vim""Installation
Dependencies	plugged/incsearch-easymotion.vim/README.md	/^### Dependencies$/;"	S	chapter:incsearch-easymotion.vim
Dependencies	plugged/incsearch-fuzzy.vim/README.md	/^### Dependencies$/;"	S	chapter:incsearch-fuzzy.vim
Design Notes	plugged/vimwiki/DesignNotes.md	/^# Design Notes$/;"	c
DhallFormat	plugged/vim-polyglot/ftplugin/dhall.vim	/^function! DhallFormat()$/;"	f
DiaryDay	vimrc	/^function! DiaryDay(day, month, year, week, dir, wnum) abort$/;"	f
DiffGitCached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:git/;"	c
DiffGitCached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdi/;"	c
Difference between v1.0 and pre-v1.0	plugged/ctrlsf.vim/README.md	/^### Difference between v1.0 and pre-v1.0$/;"	S	section:ctrlsf.vim""For user comes from pre v1.0
Dim	plugged/fzf/src/tui/dummy.go	/^	Dim       = Attr(1 << 1)$/;"	c	package:tui
Dim	plugged/fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c	package:tui
Disabled	plugged/fzf/src/tui/tui.go	/^	Disabled     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Distribution	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Distribution(dist)$/;"	f
DoHighlight	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoHighlight() "{{{3$/;"	f
DoNotCrashOnUndoAndJumpInNestedSnippet	plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
DoSyntaxDefinitions	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoSyntaxDefinitions() "{{{3$/;"	f
Document	plugged/incsearch.vim/README.md	/^Document$/;"	s
Documentation	plugged/vim-visual-multi/README.md	/^### Documentation$/;"	S	section:vim-visual-multi
Documenting	plugged/ultisnips/CONTRIBUTING.md	/^## Documenting$/;"	s	chapter:Contributing to UltiSnips
Double	plugged/fzf/src/tui/tui.go	/^	Double bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
DoubleClick	plugged/fzf/src/tui/tui.go	/^	DoubleClick$/;"	c	package:tui
Down	plugged/fzf/src/tui/tui.go	/^	Down   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Down	plugged/fzf/src/tui/tui.go	/^	Down$/;"	c	package:tui
Drop	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Drop   :<line1>,<line2>call s:choose('drop')$/;"	c
DummyClassForLocalScope	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^    class DummyClassForLocalScope:$/;"	c
DummyClassForLocalScope	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^    class DummyClassForLocalScope:$/;"	c
DurWithin	plugged/fzf/src/util/util.go	/^func DurWithin($/;"	f	package:util	typeref:typename:time.Duration
DylanGetIndent	plugged/vim-polyglot/indent/dylan.vim	/^function DylanGetIndent()$/;"	f
Dynamic reloading of the list	plugged/fzf/ADVANCED.md	/^Dynamic reloading of the list$/;"	s	chapter:Advanced fzf examples
Dynamic tabstop generation	plugged/ultisnips/doc/examples/tabstop-generation/README.md	/^# Dynamic tabstop generation$/;"	c
E	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> E <Plug>(calendar_event)$/;"	m
E2v	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range E2v :<line1>,<line2>call <SID>ExtendedRegex2VimRegexLineWise(<q-args>)$/;"	c
E2v	plugged/vim-polyglot/scripts/eregex.vim	/^function! E2v(extendedregex, ...)$/;"	f
EA	plugged/ultisnips/test/constant.py	/^EA = "#"  # Expand anonymous$/;"	v
EMCommandLineMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineMap$/;"	c
EMCommandLineNoreMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineNoreMap$/;"	c
EMCommandLineUnMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineUnMap$/;"	c
ENDC	plugged/vim-visual-multi/test/test.py	/^    ENDC = '\\033[0m'$/;"	v	class:bcolors
ENVIRONMENT	plugged/fzf/man/man1/fzf.1	/^.SH ENVIRONMENT VARIABLES$/;"	s	title:fzf
EOF	plugged/fzf/install	/^  cat << EOF$/;"	h
EOF	plugged/fzf/install	/^  cat > "$src" << EOF$/;"	h
EOF	plugged/fzf/install	/^  fish << EOF$/;"	h
EOF	plugged/fzf/uninstall	/^  cat << EOF$/;"	h
ERROR	plugged/vim-highlightedyank/test/test-highlightedyank.bat	/^:ERROR$/;"	l
ESC	plugged/fzf/src/tui/tui.go	/^	ESC$/;"	c	package:tui
ESC	plugged/ultisnips/test/constant.py	/^ESC = "\\x1b"$/;"	v
EX	plugged/ultisnips/test/constant.py	/^EX = "\\t"  # EXPAND$/;"	v
EXIT	plugged/fzf/man/man1/fzf.1	/^.SH EXIT STATUS$/;"	s	title:fzf
EXTENDED	plugged/fzf/man/man1/fzf.1	/^.SH EXTENDED SEARCH MODE$/;"	s	title:fzf
EasyMotion#DotRepeat	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#DotRepeat() " {{{$/;"	f
EasyMotion#E	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EK(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#OverwinF	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#OverwinF(num_strokes) " {{{$/;"	f
EasyMotion#Repeat	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction, respect_direction) " {{{$/;"	f
EasyMotion#Sol	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive, ...) " {{{$/;"	f
EasyMotion#WB	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBK(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#cmap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cmap(args)$/;"	f
EasyMotion#command_line#cnoremap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cnoremap(args)$/;"	f
EasyMotion#command_line#cunmap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cunmap(lhs)$/;"	f
EasyMotion#go	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#go(...) abort$/;"	f
EasyMotion#helper#VarReset	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#VarReset(var, ...) "{{{$/;"	f
EasyMotion#helper#get_char_by_coord	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#get_char_by_coord(coord) "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_case_sensitive	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#should_case_sensitive(input, is_search) "{{{$/;"	f
EasyMotion#helper#silent_feedkeys	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#silent_feedkeys(expr, name, ...) "{{{$/;"	f
EasyMotion#helper#strchars	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#helper#vcol	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#vcol(expr) abort$/;"	f
EasyMotion#highlight#InitHL	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#InitHL(group, colors) " {{{$/;"	f
EasyMotion#highlight#add_color_group	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#add_pos_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_pos_highlight(line_num, col_num, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#capture	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#capture(hlname) "{{{$/;"	f
EasyMotion#highlight#delete_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#highlight#init	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#init() "{{{$/;"	f
EasyMotion#highlight#load	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#load()$/;"	f
EasyMotion#highlight#turn_off	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_off(hl) "{{{$/;"	f
EasyMotion#highlight#turn_on	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_on(hl) "{{{$/;"	f
EasyMotion#init	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#is_active	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#overwin#line	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#line() abort$/;"	f
EasyMotion#overwin#move	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#move(pattern) abort$/;"	f
EasyMotion#overwin#w	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#w() abort$/;"	f
EasyMotion#reset	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotion#undo#save	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! EasyMotion#undo#save() abort$/;"	f
EasyMotionInitHL	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^augroup EasyMotionInitHL$/;"	a
Edit	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Edit   :<line1>,<line2>call s:choose('edit')$/;"	c
Edit Mode	plugged/ctrlsf.vim/README.md	/^## Edit Mode$/;"	s	chapter:ctrlsf.vim
Edit Mode	plugged/ctrlsf.vim/README.md	/^### Edit Mode$/;"	S	chapter:ctrlsf.vim
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class EditableTextObject(TextObject):$/;"	c
Elegant	plugged/calendar.vim/README.md	/^### Elegant$/;"	S	section:A calendar application for Vim""Concept
Emacs-like incsearch: move the cursor while incremental searching	plugged/incsearch.vim/README.md	/^### Emacs-like incsearch: move the cursor while incremental searching$/;"	S	section:Usage
Email	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Email()$/;"	f
EmptyMerger	plugged/fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]Result{}, false, false)$/;"	v	package:fzf
EmptyTheme	plugged/fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
Enable the remote debug server	plugged/ultisnips/CONTRIBUTING.md	/^### Enable the remote debug server$/;"	S	section:Contributing to UltiSnips""Testing
Enclose	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
Enclose	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.TcellWindow	typeref:typename:bool
Enclose	plugged/fzf/src/tui/tui.go	/^	Enclose(y int, x int) bool$/;"	n	interface:tui.Window	typeref:typename:bool
End	plugged/fzf/src/algo/algo.go	/^	End   int$/;"	m	struct:algo.Result	typeref:typename:int
End	plugged/fzf/src/tui/tui.go	/^	End$/;"	c	package:tui
EndOfTextToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EndOfTextToken(Token):$/;"	c
Environment variables	plugged/fzf/README.md	/^#### Environment variables$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Environment variables / Aliases	plugged/fzf/README.md	/^#### Environment variables \/ Aliases$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
EqualMatch	plugged/fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []ru/;"	f	package:algo	typeref:typename:(Result, *[]int)
Erase	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Erase() {$/;"	f	struct:tui.LightWindow
Erase	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Erase() {$/;"	f	struct:tui.TcellWindow
Erase	plugged/fzf/src/tui/tui.go	/^	Erase()$/;"	n	interface:tui.Window
ErlangFoldText	plugged/vim-polyglot/ftplugin/erlang.vim	/^  function ErlangFoldText()$/;"	f
ErlangIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangIndent()$/;"	f
ErlangShowTokensInCurrentLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInCurrentLine()$/;"	f
ErlangShowTokensInLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInLine(line)$/;"	f
Errors	plugged/syntastic/plugin/syntastic.vim	/^command! -bar Errors              call SyntasticErrors()$/;"	c
ErubyAtCursor	plugged/vim-polyglot/ftplugin/eruby.vim	/^function! ErubyAtCursor() abort$/;"	f
Esc	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Esc(val, char) "{{{3$/;"	f
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
Etiam dapibus iaculis	plugged/vimwiki/test/resources/testmarkdown/index.md	/^# Etiam dapibus iaculis$/;"	c
Event	plugged/fzf/src/tui/tui.go	/^type Event struct {$/;"	s	package:tui
EventBox	plugged/fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	s	package:util
EventType	plugged/fzf/src/tui/tui.go	/^type EventType int$/;"	t	package:tui	typeref:typename:int
EventType	plugged/fzf/src/util/eventbox.go	/^type EventType int$/;"	t	package:util	typeref:typename:int
Events	plugged/fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t	package:util	typeref:typename:map[EventType]interface{}
EvtClose	plugged/fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c	package:util
EvtHeader	plugged/fzf/src/constants.go	/^	EvtHeader$/;"	c	package:fzf
EvtQuit	plugged/fzf/src/constants.go	/^	EvtQuit$/;"	c	package:fzf
EvtReadFin	plugged/fzf/src/constants.go	/^	EvtReadFin$/;"	c	package:fzf
EvtReadFin	plugged/fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c	package:util
EvtReadNew	plugged/fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
EvtReadNew	plugged/fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c	package:util	typeref:typename:EventType
EvtReady	plugged/fzf/src/constants.go	/^	EvtReady$/;"	c	package:fzf
EvtSearchFin	plugged/fzf/src/constants.go	/^	EvtSearchFin$/;"	c	package:fzf
EvtSearchFin	plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c	package:util
EvtSearchNew	plugged/fzf/src/constants.go	/^	EvtSearchNew$/;"	c	package:fzf
EvtSearchNew	plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c	package:util
EvtSearchProgress	plugged/fzf/src/constants.go	/^	EvtSearchProgress$/;"	c	package:fzf
EvtSearchProgress	plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c	package:util
ExactMatchNaive	plugged/fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern/;"	f	package:algo	typeref:typename:(Result, *[]int)
Example	plugged/ctrlsf.vim/README.md	/^### Example$/;"	S	section:ctrlsf.vim""Arguments
Example	plugged/incsearch.vim/README.md	/^#### Example$/;"	t	subsection::tada: Version 2.0 :tada:""Converter feature
Example configuration	plugged/vim-easymotion/README.md	/^#### Example configuration$/;"	t	subsection:New features in version 3.0""Overwin motions
Example: Advanced ripgrep integration	plugged/fzf.vim/README.md	/^#### Example: Advanced ripgrep integration$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: Customizing `Files` command	plugged/fzf.vim/README.md	/^#### Example: Customizing `Files` command$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: Use both fuzzy & fuzzyspell feature	plugged/incsearch-fuzzy.vim/README.md	/^#### Example: Use both fuzzy & fuzzyspell feature$/;"	t	subsection:incsearch-fuzzy.vim""API
Example: `Rg` command with preview window	plugged/fzf.vim/README.md	/^#### Example: `Rg` command with preview window$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `git grep` wrapper	plugged/fzf.vim/README.md	/^#### Example: `git grep` wrapper$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Examples	plugged/fzf/README-VIM.md	/^#### Examples$/;"	t	subsection:FZF Vim integration""`:FZF[!]`""Configuration
Examples	plugged/fzf/README.md	/^Examples$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Examples	plugged/vim-startify/CONTRIBUTING.md	/^Examples$/;"	s	chapter:CONTRIBUTING
Exception	plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExclusiveSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExecCommand	plugged/fzf/src/util/util_unix.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommand	plugged/fzf/src/util/util_windows.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	plugged/fzf/src/util/util_unix.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	plugged/fzf/src/util/util_windows.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
Executing external programs	plugged/fzf/README.md	/^### Executing external programs$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Exit0	plugged/fzf/src/options.go	/^	Exit0       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
ExitSnippetModeAfterTabstopZero	plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
Expect	plugged/fzf/src/options.go	/^	Expect      map[tui.Event]string$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event]string
Experimental API	plugged/incsearch.vim/README.md	/^### Experimental API$/;"	S	section::tada: Version 2.0 :tada:
Explanation of `g:fzf_colors`	plugged/fzf/README-VIM.md	/^##### Explanation of `g:fzf_colors`$/;"	T	subsubsection:FZF Vim integration""`:FZF[!]`""Configuration""Examples
Exploring diff of the commit (you may be also interested in `g:git_messenger_include_diff`)	plugged/git-messenger.vim/README.md	/^#### Exploring diff of the commit (you may be also interested in `g:git_messenger_include_diff`)$/;"	t	section:git-messenger.vim""Screenshot
Exploring older commits	plugged/git-messenger.vim/README.md	/^#### Exploring older commits$/;"	t	section:git-messenger.vim""Screenshot
Extended	plugged/fzf/src/options.go	/^	Extended    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
ExtendedRegex2VimRegex	plugged/vim-polyglot/scripts/eregex.vim	/^function! ExtendedRegex2VimRegex(data)$/;"	f
F	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
F1	plugged/fzf/src/tui/tui.go	/^	F1$/;"	c	package:tui
F10	plugged/fzf/src/tui/tui.go	/^	F10$/;"	c	package:tui
F11	plugged/fzf/src/tui/tui.go	/^	F11$/;"	c	package:tui
F12	plugged/fzf/src/tui/tui.go	/^	F12$/;"	c	package:tui
F2	plugged/fzf/src/tui/tui.go	/^	F2$/;"	c	package:tui
F3	plugged/fzf/src/tui/tui.go	/^	F3$/;"	c	package:tui
F4	plugged/fzf/src/tui/tui.go	/^	F4$/;"	c	package:tui
F5	plugged/fzf/src/tui/tui.go	/^	F5$/;"	c	package:tui
F6	plugged/fzf/src/tui/tui.go	/^	F6$/;"	c	package:tui
F7	plugged/fzf/src/tui/tui.go	/^	F7$/;"	c	package:tui
F8	plugged/fzf/src/tui/tui.go	/^	F8$/;"	c	package:tui
F9	plugged/fzf/src/tui/tui.go	/^	F9$/;"	c	package:tui
FAIL	plugged/vim-visual-multi/test/test.py	/^    FAIL = '\\033[91m'$/;"	v	class:bcolors
FAIL_STR	plugged/vim-visual-multi/test/test.py	/^FAIL_STR = "{}FAIL{}".format(bcolors.FAIL, bcolors.ENDC)$/;"	v
FAQ	plugged/vim-commentary/README.markdown	/^## FAQ$/;"	s	chapter:commentary.vim
FAQ	plugged/vim-fugitive/README.markdown	/^## FAQ$/;"	s	chapter:fugitive.vim
FAQ	plugged/vim-rhubarb/README.markdown	/^## FAQ$/;"	s	chapter:rhubarb.vim
FAQ	plugged/vim-unimpaired/README.markdown	/^## FAQ$/;"	s	chapter:unimpaired.vim
FIELD	plugged/fzf/man/man1/fzf.1	/^.SH FIELD INDEX EXPRESSION$/;"	s	title:fzf
FILE	plugged/fzf/test/test_go.rb	/^FILE = File.expand_path(__FILE__)$/;"	C
FORWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    FORWARD = 1$/;"	v	class:JumpDirection
FOSimple_Break_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FSharp_AutoRefreshCodeLens	plugged/vim-polyglot/autoload/fsharp.vim	/^        augroup FSharp_AutoRefreshCodeLens$/;"	a
FSharp_OnCursorMove	plugged/vim-polyglot/autoload/fsharp.vim	/^        augroup FSharp_OnCursorMove$/;"	a
FZF	plugged/fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
FZF	plugged/fzf/test/test_go.rb	/^FZF = "FZF_DEFAULT_OPTS= FZF_DEFAULT_COMMAND= #{BASE}\/bin\/fzf"$/;"	C
FZF Vim integration	plugged/fzf/README-VIM.md	/^FZF Vim integration$/;"	c
FalconGetIndent	plugged/vim-polyglot/indent/falcon.vim	/^function FalconGetIndent(...)$/;"	f
Features	plugged/YankAssassin.vim/README.md	/^## Features$/;"	s	chapter:What is YankAssassin.vim?
Features	plugged/auto-pairs/README.md	/^Features$/;"	s	chapter:Auto Pairs
Features	plugged/ctrlsf.vim/README.md	/^## Features$/;"	s	chapter:ctrlsf.vim
FeedBack	plugged/vim-indent-object/README.md	/^### FeedBack$/;"	S	section:vim-indent-object
FermHiLink	plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight default link <args>$/;"	c
FermHiLink	plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight link <args>$/;"	c
Fg	plugged/fzf/src/tui/tui.go	/^	Fg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Fg	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Fg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
FileWord	plugged/fzf/src/options.go	/^	FileWord    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Files	vimrc	/^    command! -bang -nargs=? -complete=dir Files$/;"	c
Files	vimrc	/^command! -bang -nargs=? -complete=dir Files$/;"	c
Files and directories	plugged/fzf/README.md	/^#### Files and directories$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Files listed in `git status`	plugged/fzf/ADVANCED.md	/^### Files listed in `git status`$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Filing a bug	plugged/vimwiki/CONTRIBUTING.md	/^# Filing a bug$/;"	c
Fill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Fill(text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
Fill	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Fill(str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
Fill	plugged/fzf/src/tui/tui.go	/^	Fill(text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
FillContinue	plugged/fzf/src/tui/tui.go	/^	FillContinue FillReturn = iota$/;"	c	package:tui	typeref:type:FillReturn
FillNextLine	plugged/fzf/src/tui/tui.go	/^	FillNextLine$/;"	c	package:tui
FillReturn	plugged/fzf/src/tui/tui.go	/^type FillReturn int$/;"	t	package:tui	typeref:typename:int
FillSuspend	plugged/fzf/src/tui/tui.go	/^	FillSuspend$/;"	c	package:tui
Filter	plugged/fzf/src/options.go	/^	Filter      *string$/;"	m	struct:fzf.Options	typeref:typename:*string
Finalise	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Finalise()$/;"	f
FinaliseMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalised	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Finalised()$/;"	f
FindOpenBrace	plugged/vim-polyglot/indent/llvm.vim	/^function! FindOpenBrace(lnum)$/;"	f
FindOpenBrace	plugged/vim-polyglot/indent/mlir.vim	/^function! FindOpenBrace(lnum)$/;"	f
FindReferences_nim	plugged/vim-polyglot/autoload/nim.vim	/^fun! FindReferences_nim() abort$/;"	f
FinishFill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) FinishFill() {$/;"	f	struct:tui.LightWindow
FinishFill	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) FinishFill() {$/;"	f	struct:tui.TcellWindow
FinishFill	plugged/fzf/src/tui/tui.go	/^	FinishFill()$/;"	n	interface:tui.Window
Fish shell	plugged/fzf/README.md	/^#### Fish shell$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
FitsOneLine	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^def FitsOneLine(ast: dict<any>): bool$/;"	f
FixBeginfigs	plugged/vim-polyglot/ftplugin/mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
Fixedgq	plugged/vim-polyglot/ftplugin/typescript.vim	/^function! Fixedgq(lnum, count)$/;"	f
Fixes and improvements	plugged/fzf/CHANGELOG.md	/^### Fixes and improvements$/;"	S	section:CHANGELOG""0.10.2
Fixup	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Fixup  :<line1>,<line2>call s:choose('fixup')$/;"	c
Flashy	plugged/vimwiki/test/resources/testmarkdown/index.md	/^## Flashy$/;"	s	chapter:Typefaces
Fly Mode	plugged/auto-pairs/README.md	/^Fly Mode$/;"	s	chapter:Auto Pairs
FoldOverwrite_Simple_ECR	plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
FoldingEnabled_SnippetWithFold_ExpectNoFolding	plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
For user comes from pre v1.0	plugged/ctrlsf.vim/README.md	/^## For user comes from pre v1.0$/;"	s	chapter:ctrlsf.vim
For users of the forked version	plugged/vim-easymotion/README.md	/^### For users of the forked version$/;"	S	chapter:Important notes
Format	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^def Format(ast: dict<any>, indent = 0): string$/;"	f
FormatOneLine	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^def FormatOneLine(ast: dict<any>): string$/;"	f
FormatRmd	plugged/vim-polyglot/ftplugin/rmd.vim	/^function! FormatRmd()$/;"	f
FormatRrst	plugged/vim-polyglot/ftplugin/rrst.vim	/^function! FormatRrst()$/;"	f
Formatting tables	plugged/vimwiki/DesignNotes.md	/^## Formatting tables$/;"	s	chapter:Design Notes
FortranGetFixedIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFixedIndent()$/;"	f
FortranGetFreeIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
FriendlyName	plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
FugitiveCommonDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveConfigGet	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGet(name, ...) abort$/;"	f
FugitiveConfigGetAll	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetAll(name, ...) abort$/;"	f
FugitiveConfigGetRegexp	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetRegexp(pattern, ...) abort$/;"	f
FugitiveDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(...) abort$/;"	f
FugitiveDidChange	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDidChange(...) abort$/;"	f
FugitiveExecute	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExecute(args, ...) abort$/;"	f
FugitiveExtractGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveGitVersion	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitVersion(...) abort$/;"	f
FugitiveHead	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(...) abort$/;"	f
FugitiveParse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemote	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemote(...) abort$/;"	f
FugitiveRemoteUrl	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveResult	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveResult(...) abort$/;"	f
FugitiveShellCommand	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveShellCommand(...) abort$/;"	f
FugitiveStatusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
FullName	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FullName()$/;"	f
FullscreenRenderer	plugged/fzf/src/tui/tui.go	/^type FullscreenRenderer struct {$/;"	s	package:tui
Fuzzy	plugged/fzf/src/options.go	/^	Fuzzy       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Fuzzy completion for bash and zsh	plugged/fzf/README.md	/^Fuzzy completion for bash and zsh$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
FuzzyAlgo	plugged/fzf/src/options.go	/^	FuzzyAlgo   algo.Algo$/;"	m	struct:fzf.Options	typeref:typename:algo.Algo
FuzzyMatchV1	plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []/;"	f	package:algo	typeref:typename:(Result, *[]int)
FuzzyMatchV2	plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern [/;"	f	package:algo	typeref:typename:(Result, *[]int)
G	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> G <Plug>(calendar_last_line)$/;"	m
G	plugged/vim-fugitive/plugin/fugitive.vim	/^  command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Comm/;"	c
G	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% -bang G :<line1>,<line2>call <SID>Eglobal(<q-bang>, <q-args>)$/;"	c
GCUpper	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpper(what)$/;"	f
GCUpperCommon	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperCommon(what)$/;"	f
GCUpperDot	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperDot(what)$/;"	f
GCUpperSpace	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperSpace(what)$/;"	f
GO	plugged/fzf/Makefile	/^GO             ?= go$/;"	m
GOOS	plugged/fzf/Makefile	/^GOOS           ?= $(word 1, $(subst \/, " ", $(word 4, $(shell go version))))$/;"	m
Generating fzf color theme from Vim color schemes	plugged/fzf/ADVANCED.md	/^### Generating fzf color theme from Vim color schemes$/;"	S	section:Advanced fzf examples""Color themes
GeneratorDiary.f	plugged/vimwiki/autoload/vimwiki/diary.vim	/^  function! GeneratorDiary.f() abort$/;"	f
GeneratorLinks.f	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! GeneratorLinks.f() abort$/;"	f
GeneratorTOC.f	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! GeneratorTOC.f() abort$/;"	f
GeneratorTags.f	plugged/vimwiki/autoload/vimwiki/tags.vim	/^  function! GeneratorTags.f() abort$/;"	f
Generic	plugged/vimwiki/test/resources/testmarkdown/index.md	/^## Generic$/;"	s	chapter:Typefaces
Get	plugged/fzf/src/merger.go	/^func (mg *Merger) Get(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
Get	plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Get	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f	struct:util.Chars	typeref:typename:rune
GetAdaIndent	plugged/vim-polyglot/indent/ada.vim	/^function GetAdaIndent()$/;"	f
GetAnsibleIndent	plugged/vim-polyglot/indent/ansible.vim	/^function GetAnsibleIndent(lnum)$/;"	f
GetAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! GetAppleScriptIndent()$/;"	f
GetAutoHotkeyIndent	plugged/vim-polyglot/indent/autohotkey.vim	/^function! GetAutoHotkeyIndent()$/;"	f
GetAwkIndent	plugged/vim-polyglot/indent/awk.vim	/^function! GetAwkIndent()$/;"	f
GetBladeIndent	plugged/vim-polyglot/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetBstIndent	plugged/vim-polyglot/indent/bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
GetBzlIndent	plugged/vim-polyglot/indent/bzl.vim	/^function GetBzlIndent(lnum) abort$/;"	f
GetCSIndent	plugged/vim-polyglot/indent/cs.vim	/^function! GetCSIndent(lnum) abort$/;"	f
GetCSSIndent	plugged/vim-polyglot/indent/css.vim	/^function GetCSSIndent()$/;"	f
GetCabalIndent	plugged/vim-polyglot/indent/cabal.vim	/^function! GetCabalIndent()$/;"	f
GetCaddyfileIndent	plugged/vim-polyglot/indent/caddyfile.vim	/^function! GetCaddyfileIndent(lnum)$/;"	f
GetChaiScriptIndent	plugged/vim-polyglot/indent/chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
GetChar	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) GetChar() Event { return Event{} }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) GetChar() Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
GetChar	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) GetChar() Event {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	plugged/fzf/src/tui/tui.go	/^	GetChar() Event$/;"	n	interface:tui.Renderer	typeref:typename:Event
GetClojureIndent	plugged/vim-polyglot/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f
GetCobolIndent	plugged/vim-polyglot/indent/cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
GetCoffeeIndent	plugged/vim-polyglot/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetConfigIndent	plugged/vim-polyglot/indent/config.vim	/^function GetConfigIndent()$/;"	f
GetCrystalIndent	plugged/vim-polyglot/indent/crystal.vim	/^function! GetCrystalIndent(...) abort$/;"	f
GetCucumberIndent	plugged/vim-polyglot/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDIndent	plugged/vim-polyglot/indent/d.vim	/^function GetDIndent()$/;"	f
GetDTDIndent	plugged/vim-polyglot/indent/dtd.vim	/^function GetDTDIndent()$/;"	f
GetDosBatchIndent	plugged/vim-polyglot/indent/dosbatch.vim	/^function! GetDosBatchIndent(lnum)$/;"	f
GetEcrystalFold	plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalFold() abort$/;"	f
GetEcrystalIndent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalIndent() abort$/;"	f
GetEelixirIndent	plugged/vim-polyglot/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
GetElmIndent	plugged/vim-polyglot/indent/elm.vim	/^function! GetElmIndent()$/;"	f
GetErlangFold	plugged/vim-polyglot/ftplugin/erlang.vim	/^  function GetErlangFold(lnum)$/;"	f
GetErubyIndent	plugged/vim-polyglot/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetEtermIndent	plugged/vim-polyglot/indent/eterm.vim	/^function GetEtermIndent()$/;"	f
GetFennelIndent	plugged/vim-polyglot/indent/fennel.vim	/^	function! GetFennelIndent()$/;"	f
GetFrameScriptIndent	plugged/vim-polyglot/indent/framescript.vim	/^function GetFrameScriptIndent()$/;"	f
GetFsharpIndent	plugged/vim-polyglot/indent/fsharp.vim	/^function! GetFsharpIndent()$/;"	f
GetGitconfigIndent	plugged/vim-polyglot/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGitoliteIndent	plugged/vim-polyglot/indent/gitolite.vim	/^function! GetGitoliteIndent()$/;"	f
GetGoHTMLTmplIndent	plugged/vim-polyglot/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetGraphQLIndent	plugged/vim-polyglot/indent/graphql.vim	/^function GetGraphQLIndent()$/;"	f
GetHamlIndent	plugged/vim-polyglot/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHandlebarsIndent	plugged/vim-polyglot/indent/handlebars.vim	/^function! GetHandlebarsIndent(...)$/;"	f
GetHaskellIndent	plugged/vim-polyglot/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp echo system(s:pwsh_cmd . ' -NoLogo -NoProfile -NonInteract/;"	c
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe '!' . s:pwsh_cmd . ' -NoLogo -NoProfile -NonInt/;"	c
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe 'term ' . s:pwsh_cmd . ' -NoLogo -NoProfile -No/;"	c
GetHogIndent	plugged/vim-polyglot/indent/hog.vim	/^function GetHogIndent()$/;"	f
GetIdrisIndent	plugged/vim-polyglot/indent/idris.vim	/^function! GetIdrisIndent()$/;"	f
GetIdrisIndent	plugged/vim-polyglot/indent/idris2.vim	/^function! GetIdrisIndent()$/;"	f
GetJIndent	plugged/vim-polyglot/indent/j.vim	/^function GetJIndent() abort$/;"	f
GetJSONIndent	plugged/vim-polyglot/indent/json.vim	/^function GetJSONIndent()$/;"	f
GetJavascriptGraphQLIndent	plugged/vim-polyglot/after/indent/javascript-2.vim	/^function GetJavascriptGraphQLIndent()$/;"	f
GetJavascriptIndent	plugged/vim-polyglot/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetJsIndent	plugged/vim-polyglot/indent/qml.vim	/^function! GetJsIndent()$/;"	f
GetJstIndent	plugged/vim-polyglot/indent/jst.vim	/^function! GetJstIndent(...)$/;"	f
GetJsxIndent	plugged/vim-polyglot/after/indent/jsx.vim	/^function! GetJsxIndent()$/;"	f
GetJsxIndent	plugged/vim-polyglot/after/indent/tsx.vim	/^function! GetJsxIndent()$/;"	f
GetJuliaIndent	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaIndent()$/;"	f
GetJuliaNestingBrackets	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingBrackets(lnum, c)$/;"	f
GetJuliaNestingStruct	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingStruct(lnum, ...)$/;"	f
GetKotlinIndent	plugged/vim-polyglot/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
GetLDIndent	plugged/vim-polyglot/indent/ld.vim	/^function GetLDIndent()$/;"	f
GetLLVMIndent	plugged/vim-polyglot/indent/llvm.vim	/^function! GetLLVMIndent()$/;"	f
GetLedgerIndent	plugged/vim-polyglot/indent/ledger.vim	/^function GetLedgerIndent(...)$/;"	f
GetLilyPondIndent	plugged/vim-polyglot/indent/lilypond.vim	/^function GetLilyPondIndent()$/;"	f
GetLiquidIndent	plugged/vim-polyglot/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLitCoffeeIndent	plugged/vim-polyglot/indent/litcoffee.vim	/^function GetLitCoffeeIndent()$/;"	f
GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! GetLiveScriptIndent(curlinenum)$/;"	f
GetLogtalkIndent	plugged/vim-polyglot/indent/logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
GetLuaIndent	plugged/vim-polyglot/indent/lua.vim	/^function GetLuaIndent()$/;"	f
GetMLIRIndent	plugged/vim-polyglot/indent/mlir.vim	/^function! GetMLIRIndent()$/;"	f
GetMakeIndent	plugged/vim-polyglot/indent/make.vim	/^function GetMakeIndent()$/;"	f
GetMakeIndent	plugged/vim-polyglot/indent/omake.vim	/^function GetMakeIndent()$/;"	f
GetMakoIndent	plugged/vim-polyglot/indent/mako.vim	/^function GetMakoIndent()$/;"	f
GetMarkdownIndent	plugged/vim-polyglot/indent/markdown.vim	/^function GetMarkdownIndent()$/;"	f
GetMesonIndent	plugged/vim-polyglot/indent/meson.vim	/^function GetMesonIndent(lnum)$/;"	f
GetMetaPostIndent	plugged/vim-polyglot/indent/mp.vim	/^function GetMetaPostIndent()$/;"	f
GetMetaPostIndentIntern	plugged/vim-polyglot/indent/mp.vim	/^function! GetMetaPostIndentIntern()$/;"	f
GetMoonIndent	plugged/vim-polyglot/indent/moon.vim	/^function! GetMoonIndent(curlinenum)$/;"	f
GetNimIndent	plugged/vim-polyglot/indent/nim.vim	/^function! GetNimIndent(lnum)$/;"	f
GetNixIndent	plugged/vim-polyglot/indent/nix.vim	/^function! GetNixIndent()$/;"	f
GetNsisIndent	plugged/vim-polyglot/indent/nsis.vim	/^function! GetNsisIndent(lnum)$/;"	f
GetOCamlIndent	plugged/vim-polyglot/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f
GetObjCIndentImproved	plugged/vim-polyglot/after/indent/objc.vim	/^function! GetObjCIndentImproved()$/;"	f
GetOccamIndent	plugged/vim-polyglot/indent/occam.vim	/^function GetOccamIndent()$/;"	f
GetOctaveIndent	plugged/vim-polyglot/indent/octave.vim	/^function! GetOctaveIndent()$/;"	f
GetOdinIndent	plugged/vim-polyglot/indent/odin.vim	/^function! GetOdinIndent(lnum)$/;"	f
GetPHPGraphQLIndent	plugged/vim-polyglot/after/indent/php.vim	/^function GetPHPGraphQLIndent()$/;"	f
GetPascalIndent	plugged/vim-polyglot/indent/pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
GetPerlIndent	plugged/vim-polyglot/indent/perl.vim	/^function! GetPerlIndent()$/;"	f
GetPlantUMLIndent	plugged/vim-polyglot/indent/plantuml.vim	/^function! GetPlantUMLIndent(...) abort$/;"	f
GetPoVRayIndent	plugged/vim-polyglot/indent/pov.vim	/^function GetPoVRayIndent()$/;"	f
GetPotionFold	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! GetPotionFold(lnum)$/;"	f
GetPrologIndent	plugged/vim-polyglot/indent/prolog.vim	/^function! GetPrologIndent()$/;"	f
GetPugIndent	plugged/vim-polyglot/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetPuppetIndent	plugged/vim-polyglot/indent/puppet.vim	/^function! GetPuppetIndent(...)$/;"	f
GetPurescriptIndent	plugged/vim-polyglot/indent/purescript.vim	/^function! GetPurescriptIndent()$/;"	f
GetPythonIndent	plugged/vim-polyglot/indent/gdscript3.vim	/^function GetPythonIndent(lnum)$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/cython.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetRSTIndent	plugged/vim-polyglot/indent/rst.vim	/^function GetRSTIndent()$/;"	f
GetRakuIndent	plugged/vim-polyglot/indent/raku.vim	/^function! GetRakuIndent()$/;"	f
GetReadlineIndent	plugged/vim-polyglot/indent/readline.vim	/^function GetReadlineIndent()$/;"	f
GetReasonIndent	plugged/vim-polyglot/indent/reason.vim	/^function GetReasonIndent(lnum)$/;"	f
GetRmdIndent	plugged/vim-polyglot/indent/rmd.vim	/^function GetRmdIndent()$/;"	f
GetRnowebIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^function GetRnowebIndent()$/;"	f
GetRrstIndent	plugged/vim-polyglot/indent/rrst.vim	/^function GetRrstIndent()$/;"	f
GetRstIndent	plugged/vim-polyglot/indent/rrst.vim	/^function GetRstIndent()$/;"	f
GetRubyIndent	plugged/vim-polyglot/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
GetRustIndent	plugged/vim-polyglot/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
GetSASIndent	plugged/vim-polyglot/indent/sas.vim	/^function! GetSASIndent()$/;"	f
GetSCSSIndent	plugged/vim-polyglot/indent/scss.vim	/^function GetSCSSIndent()$/;"	f
GetSDLIndent	plugged/vim-polyglot/indent/sdl.vim	/^function! GetSDLIndent()$/;"	f
GetSMLIndent	plugged/vim-polyglot/indent/sml.vim	/^function! GetSMLIndent()$/;"	f
GetSQLIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! GetSQLIndent()$/;"	f
GetSassIndent	plugged/vim-polyglot/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScalaIndent	plugged/vim-polyglot/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetSlimIndent	plugged/vim-polyglot/indent/slim.vim	/^function! GetSlimIndent()$/;"	f
GetSlimeIndent	plugged/vim-polyglot/indent/slime.vim	/^function! GetSlimeIndent()$/;"	f
GetSolidityIndent	plugged/vim-polyglot/indent/solidity.vim	/^function GetSolidityIndent()$/;"	f
GetSshconfigIndent	plugged/vim-polyglot/indent/sshconfig.vim	/^function GetSshconfigIndent(lnum)$/;"	f
GetStylusIndent	plugged/vim-polyglot/indent/stylus.vim	/^function! GetStylusIndent()$/;"	f
GetSvelteFold	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^function! GetSvelteFold(lnum)$/;"	f
GetSvelteIndent	plugged/vim-polyglot/indent/svelte.vim	/^function! GetSvelteIndent()$/;"	f
GetSvelteSubtype	plugged/vim-polyglot/autoload/svelte.vim	/^function! GetSvelteSubtype()$/;"	f
GetSvelteTag	plugged/vim-polyglot/autoload/svelte.vim	/^function! GetSvelteTag(...)$/;"	f
GetTFIndent	plugged/vim-polyglot/indent/tf.vim	/^function GetTFIndent()$/;"	f
GetTclIndent	plugged/vim-polyglot/indent/tcl.vim	/^function GetTclIndent()$/;"	f
GetTeXIndent	plugged/vim-polyglot/after/indent/tex.vim	/^function! GetTeXIndent() " {{{$/;"	f
GetTeraTermIndent	plugged/vim-polyglot/indent/teraterm.vim	/^function! GetTeraTermIndent(lnum)$/;"	f
GetTildeIndent	plugged/vim-polyglot/indent/tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
GetTreetopIndent	plugged/vim-polyglot/indent/treetop.vim	/^function GetTreetopIndent()$/;"	f
GetTsxIndent	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! GetTsxIndent()$/;"	f
GetTwigIndent	plugged/vim-polyglot/indent/twig.vim	/^fun! GetTwigIndent(currentLineNumber)$/;"	f
GetTypescriptGraphQLIndent	plugged/vim-polyglot/after/indent/typescript.vim	/^function GetTypescriptGraphQLIndent()$/;"	f
GetTypescriptIndent	plugged/vim-polyglot/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetVHDLindent	plugged/vim-polyglot/indent/vhdl.vim	/^function GetVHDLindent()$/;"	f
GetValaIndent	plugged/vim-polyglot/indent/vala.vim	/^function GetValaIndent(lnum)$/;"	f
GetVerilogIndent	plugged/vim-polyglot/indent/verilog.vim	/^function GetVerilogIndent()$/;"	f
GetVueIndent	plugged/vim-polyglot/indent/vue.vim	/^function! GetVueIndent()$/;"	f
GetXF86ConfIndent	plugged/vim-polyglot/indent/xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
GetXinetdIndent	plugged/vim-polyglot/indent/xinetd.vim	/^function GetXinetdIndent()$/;"	f
GetYAMLIndent	plugged/vim-polyglot/indent/yaml.vim	/^function GetYAMLIndent(lnum)$/;"	f
GetYaccIndent	plugged/vim-polyglot/indent/yacc.vim	/^function GetYaccIndent()$/;"	f
GetZigIndent	plugged/vim-polyglot/indent/zig.vim	/^function! GetZigIndent(lnum)$/;"	f
GetZimbuIndent	plugged/vim-polyglot/indent/zimbu.vim	/^func GetZimbuIndent(lnum)$/;"	f
Getting help	plugged/vimwiki/README.md	/^## Getting help$/;"	s
Git	plugged/vim-fugitive/plugin/fugitive.vim	/^command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Comman/;"	c
Git branching model	plugged/vimwiki/CONTRIBUTING.md	/^## Git branching model$/;"	s	chapter:More info and advice for (aspiring) core developers
GitGutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterBufferDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferDisable call gitgutter#buffer_disable()$/;"	c
GitGutterBufferEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferEnable  call gitgutter#buffer_enable()$/;"	c
GitGutterBufferToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferToggle  call gitgutter#buffer_toggle()$/;"	c
GitGutterCursorHold	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterCursorHold(timer)$/;"	f
GitGutterDebug	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterFold	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterFold call gitgutter#fold#toggle()$/;"	c
GitGutterGetHunkSummary	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterLineNrHighlightsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsDisable call gitgutter#highlight#linenr_disable()$/;"	c
GitGutterLineNrHighlightsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsEnable  call gitgutter#highlight#linenr_enable()$/;"	c
GitGutterLineNrHighlightsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsToggle  call gitgutter#highlight#linenr_toggle()$/;"	c
GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterQuickFix	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFix call gitgutter#quickfix(0)$/;"	c
GitGutterQuickFixCurrentFile	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFixCurrentFile call gitgutter#quickfix(1)$/;"	c
GitGutterSignsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -range=% GitGutterStageHunk call gitgutter#hunk#stage(<line1>,<line2>)$/;"	c
GitGutterToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GitMessenger	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^command! -nargs=0 -bar GitMessenger call gitmessenger#new(expand('%:p'), line('.'), bufnr('%'))$/;"	c
GitMessengerClose	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^command! -nargs=0 -bar GitMessengerClose call gitmessenger#close_popup(bufnr('%'))$/;"	c
Global options	plugged/fzf.vim/README.md	/^### Global options$/;"	S	section:fzf :heart: vim""Customization
Global options supported by `fzf#wrap`	plugged/fzf/README-VIM.md	/^### Global options supported by `fzf#wrap`$/;"	S	section:FZF Vim integration""`fzf#wrap`
GoIndent	plugged/vim-polyglot/indent/go.vim	/^function! GoIndent(lnum) abort$/;"	f
Google Calendar and Google Task	plugged/calendar.vim/README.md	/^## Google Calendar and Google Task$/;"	s	chapter:A calendar application for Vim
GotoDefinition_nim	plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim() abort$/;"	f
GotoDefinition_nim_ready	plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim_ready(def_output) abort$/;"	f
Gutter	plugged/fzf/src/tui/tui.go	/^	Gutter       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
H	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> H <Nop>$/;"	m
HEADER	plugged/vim-visual-multi/test/test.py	/^    HEADER = '\\033[95m'$/;"	v	class:bcolors
HamGetFreeIndent	plugged/vim-polyglot/indent/hamster.vim	/^function HamGetFreeIndent()$/;"	f
HamGetIndent	plugged/vim-polyglot/indent/hamster.vim	/^function HamGetIndent(lnum)$/;"	f
HandleTextObjectMapping	plugged/vim-indent-object/plugin/indent-object.vim	/^function! <Sid>HandleTextObjectMapping(inner, incbelow, vis, range)$/;"	f
Handling libraries in Vim WAS hard	plugged/vital.vim/README.md	/^## Handling libraries in Vim WAS hard$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
HasBg	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) HasBg() bool {$/;"	f	struct:tui.ColorPair	typeref:typename:bool
HasFullscreenRenderer	plugged/fzf/src/tui/dummy.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
HasFullscreenRenderer	plugged/fzf/src/tui/tcell.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi def link <args>$/;"	c
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi link <args>$/;"	c
HclIndent	plugged/vim-polyglot/indent/hcl.vim	/^function! HclIndent(lnum)$/;"	f
Header	plugged/fzf/src/options.go	/^	Header      []string$/;"	m	struct:fzf.Options	typeref:typename:[]string
Header	plugged/fzf/src/tui/tui.go	/^	Header       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
HeaderDecrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)$/;"	c
HeaderFirst	plugged/fzf/src/options.go	/^	HeaderFirst bool$/;"	m	struct:fzf.Options	typeref:typename:bool
HeaderIncrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)$/;"	c
HeaderLines	plugged/fzf/src/options.go	/^	HeaderLines int$/;"	m	struct:fzf.Options	typeref:typename:int
Health Check	plugged/git-messenger.vim/README.md	/^### Health Check$/;"	S	section:git-messenger.vim""Usage
Height	plugged/fzf/src/options.go	/^	Height      sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:sizeSpec
Height	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Height() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Height	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Height() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Height	plugged/fzf/src/tui/tui.go	/^	Height() int$/;"	n	interface:tui.Window	typeref:typename:int
Helping VimWiki	plugged/vimwiki/README.md	/^## Helping VimWiki$/;"	s
Hex Modes	plugged/clrzr/README.md	/^#### Hex Modes$/;"	t	subsection:clrzr""Screenshots
HexToColor	plugged/fzf/src/tui/tui.go	/^func HexToColor(rrggbb string) Color {$/;"	f	package:tui	typeref:typename:Color
Hi	plugged/vim-polyglot/syntax/sdl.vim	/^command -nargs=+ Hi     hi def <args>$/;"	c
Hi	plugged/vim-polyglot/syntax/xpm2.vim	/^command -nargs=+ Hi hi def <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/common.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>HiLink(name, target) "{{{3$/;"	f
HiLink	plugged/vim-polyglot/syntax/dot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/dot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/jinja2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lilypond.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lilypond.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mlir.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mlir.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/puppet.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Hide statusline	plugged/fzf.vim/README.md	/^### Hide statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Hide statusline	plugged/fzf/README-VIM.md	/^### Hide statusline$/;"	S	section:FZF Vim integration""Tips
Highlight coloring	plugged/vim-highlightedyank/README.md	/^## Highlight coloring$/;"	s	chapter:vim-highlightedyank
HighlightedyankOff	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOff    call highlightedyank#obsolete#highlightedyank#off/;"	c
HighlightedyankOff	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOff    call highlightedyank#off()$/;"	c
HighlightedyankOn	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOn     call highlightedyank#obsolete#highlightedyank#on(/;"	c
HighlightedyankOn	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOn     call highlightedyank#on()$/;"	c
HighlightedyankToggle	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankToggle call highlightedyank#obsolete#highlightedyank#tog/;"	c
HighlightedyankToggle	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankToggle call highlightedyank#toggle()$/;"	c
History	plugged/fzf/src/history.go	/^type History struct {$/;"	s	package:fzf
History	plugged/fzf/src/options.go	/^	History     *History$/;"	m	struct:fzf.Options	typeref:typename:*History
Home	plugged/fzf/src/tui/tui.go	/^	Home$/;"	c	package:tui
Host names	plugged/fzf/README.md	/^#### Host names$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
How can I truncate the components from the right in narrow windows?	plugged/lightline.vim/README.md	/^#### How can I truncate the components from the right in narrow windows?$/;"	t	subsection:lightline.vim""Advanced configuration""more tips
How to Run tests	plugged/git-messenger.vim/test/README.md	/^### How to Run tests$/;"	S
How to Run:	plugged/vim-visual-multi/test/README.md	/^# How to Run:$/;"	c
How to run guard	plugged/git-messenger.vim/test/README.md	/^### How to run guard$/;"	S
How to take coverage	plugged/git-messenger.vim/test/README.md	/^### How to take coverage$/;"	S
How to test vital.vim	plugged/vital.vim/test/README.md	/^How to test vital.vim$/;"	c
Hscroll	plugged/fzf/src/options.go	/^	Hscroll     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
HscrollOff	plugged/fzf/src/options.go	/^	HscrollOff  int$/;"	m	struct:fzf.Options	typeref:typename:int
HtmlHiLink	plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndent	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent()$/;"	f
HtmlIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
HtmlIndentCloseAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentOpenAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlIndent_CheckUserSettings	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
HtmlIndent_CountBraces	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
HtmlIndent_FindStartTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindTagEnd	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
HtmlIndent_FindTagStart	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_IsOpenTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
I	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> I <Plug>(calendar_start_insert_head)$/;"	m
I16	plugged/fzf/src/util/slab.go	/^	I16 []int16$/;"	m	struct:util.Slab	typeref:typename:[]int16
I32	plugged/fzf/src/util/slab.go	/^	I32 []int32$/;"	m	struct:util.Slab	typeref:typename:[]int32
IMMoving_AcceptInputWhenMoved_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
IWrite	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IWrite(str)$/;"	f
IWrite	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IWrite(str)$/;"	f
IcalHiLink	plugged/vim-polyglot/syntax/icalendar.vim	/^command! -nargs=+ IcalHiLink hi def link <args>$/;"	c
IdrisAddClause	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisAddClause	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisAddMissing	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddMissing()$/;"	f
IdrisAddMissing	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddMissing()$/;"	f
IdrisCaseSplit	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisCaseSplit	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisDocFold	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisDocFold	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisEval	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisEval()$/;"	f
IdrisEval	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisEval()$/;"	f
IdrisFold	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisFold	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisGenerateDef	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisGenerateDef()$/;"	f
IdrisHideResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisHideResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisMakeCase	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeCase()$/;"	f
IdrisMakeCase	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeCase()$/;"	f
IdrisMakeLemma	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisMakeLemma	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisMakeWith	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeWith()$/;"	f
IdrisMakeWith	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeWith()$/;"	f
IdrisProofSearch	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisProofSearch	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisRefine	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisRefine()$/;"	f
IdrisRefine	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisRefine()$/;"	f
IdrisReload	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReload(q)$/;"	f
IdrisReload	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReload(q)$/;"	f
IdrisReloadToLine	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisReloadToLine	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisResponseWin()$/;"	f
IdrisResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisResponseWin()$/;"	f
IdrisShowDoc	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowDoc()$/;"	f
IdrisShowDoc	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowDoc()$/;"	f
IdrisShowResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowResponseWin()$/;"	f
IdrisShowResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowResponseWin()$/;"	f
IdrisShowType	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowType()$/;"	f
IdrisShowType	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowType()$/;"	f
If you are using Neovim,	plugged/vim-highlightedyank/README.md	/^### If you are using Neovim,$/;"	S	section:vim-highlightedyank""Usage
If you are using Vim 8.0.1394 (or later version),	plugged/vim-highlightedyank/README.md	/^### If you are using Vim 8.0.1394 (or later version),$/;"	S	section:vim-highlightedyank""Usage
If you are using older Vim,	plugged/vim-highlightedyank/README.md	/^### If you are using older Vim,$/;"	S	section:vim-highlightedyank""Usage
If you want to become a vital developer	plugged/vital.vim/README.md	/^## If you want to become a vital developer$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
Implementation	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^## Implementation$/;"	s	chapter:Autojump from tabstop when it's empty
Important notes	plugged/vim-easymotion/README.md	/^Important notes$/;"	c
Important notice	plugged/calendar.vim/README.md	/^### Important notice$/;"	S	section:A calendar application for Vim""Google Calendar and Google Task
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.10
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.3
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.4
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.5
IncSearchMap	plugged/incsearch.vim/plugin/incsearch.vim	/^command! -nargs=* IncSearchMap$/;"	c
IncSearchNoreMap	plugged/incsearch.vim/plugin/incsearch.vim	/^command! -nargs=* IncSearchNoreMap$/;"	c
Incremental regular expression editing	plugged/incsearch.vim/README.md	/^#### Incremental regular expression editing$/;"	t	subsection:Concepts""3. Useful
IndentLevel	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! IndentLevel(lnum)$/;"	f
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil:$/;"	c
Index	plugged/fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f	struct:fzf.Item	typeref:typename:int32
Index	plugged/fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f	struct:fzf.Result	typeref:typename:int32
Index	plugged/fzf/src/util/chars.go	/^	Index int32$/;"	m	struct:util.Chars	typeref:typename:int32
Info	plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Info$/;"	s
Info	plugged/fzf/src/tui/tui.go	/^	Info         ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
InfoStyle	plugged/fzf/src/options.go	/^	InfoStyle   infoStyle$/;"	m	struct:fzf.Options	typeref:typename:infoStyle
Init	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Init()             {}$/;"	f	unknown:tui.FullscreenRenderer
Init	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Init() {$/;"	f	struct:tui.LightRenderer
Init	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Init() {$/;"	f	unknown:tui.FullscreenRenderer
Init	plugged/fzf/src/tui/tui.go	/^	Init()$/;"	n	interface:tui.Renderer
InitIsAlphaNumericCharNr	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def InitIsAlphaNumericCharNr(): list<bool>$/;"	f
InitIsSimpleSymbolCharNr	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def InitIsSimpleSymbolCharNr(): list<bool>$/;"	f
InitPureScript	plugged/vim-polyglot/ftplugin/purescript.vim	/^fun! InitPureScript()$/;"	f
Input	plugged/fzf/src/terminal.go	/^func (t *Terminal) Input() (bool, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []rune)
Input	plugged/fzf/src/tui/tui.go	/^	Input        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Insert	plugged/fzf/src/tui/tui.go	/^	Insert$/;"	c	package:tui
InsertNToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)$/;"	c
InsertTestText1	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! InsertTestText1()$/;"	f
InsertToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)$/;"	c
Inside the container	plugged/vimwiki/test/README.md	/^## Inside the container$/;"	s	chapter:Vimwiki Tests
Inspired by	plugged/vim-highlightedyank/README.md	/^## Inspired by$/;"	s	chapter:vim-highlightedyank
Install	plugged/doom-one.vim/README.md	/^## Install$/;"	s	chapter:doom-one.vim
Install	plugged/vim-indent-object/README.md	/^### Install$/;"	S	section:vim-indent-object
Install modules for your own plugin	plugged/vital.vim/README.md	/^### Install modules for your own plugin$/;"	S	section:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)""Let's get started
Installation	plugged/YankAssassin.vim/README.md	/^## Installation$/;"	s	chapter:What is YankAssassin.vim?
Installation	plugged/auto-pairs/README.md	/^Installation$/;"	s	chapter:Auto Pairs
Installation	plugged/calendar.vim/README.md	/^## Installation$/;"	s	chapter:A calendar application for Vim
Installation	plugged/clrzr/README.md	/^### Installation$/;"	S	chapter:clrzr
Installation	plugged/ctrlsf.vim/README.md	/^## Installation$/;"	s	chapter:ctrlsf.vim
Installation	plugged/fzf.vim/README.md	/^Installation$/;"	s	chapter:fzf :heart: vim
Installation	plugged/fzf/README-VIM.md	/^Installation$/;"	s	chapter:FZF Vim integration
Installation	plugged/fzf/README.md	/^Installation$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Installation	plugged/git-messenger.vim/README.md	/^## Installation$/;"	s	chapter:git-messenger.vim
Installation	plugged/incsearch.vim/README.md	/^### Installation$/;"	S	section:Usage
Installation	plugged/lightline.vim/README.md	/^## Installation$/;"	s	chapter:lightline.vim
Installation	plugged/vim-asterisk/README.md	/^Installation$/;"	s	chapter:vim-asterisk: * -Improved
Installation	plugged/vim-commentary/README.markdown	/^## Installation$/;"	s	chapter:commentary.vim
Installation	plugged/vim-easymotion/README.md	/^Installation$/;"	s	chapter:New features in version 2.0
Installation	plugged/vim-fugitive/README.markdown	/^## Installation$/;"	s	chapter:fugitive.vim
Installation	plugged/vim-polyglot/README.md	/^## Installation$/;"	s
Installation	plugged/vim-repeat/README.markdown	/^## Installation$/;"	s	chapter:repeat.vim
Installation	plugged/vim-rhubarb/README.markdown	/^## Installation$/;"	s	chapter:rhubarb.vim
Installation	plugged/vim-sleuth/README.markdown	/^## Installation$/;"	s	chapter:sleuth.vim
Installation	plugged/vim-surround/README.markdown	/^## Installation$/;"	s	chapter:surround.vim
Installation	plugged/vim-unimpaired/README.markdown	/^## Installation$/;"	s	chapter:unimpaired.vim
Installation	plugged/vim-visual-multi/README.md	/^### Installation$/;"	S	section:vim-visual-multi
Installation	plugged/vimwiki/README.md	/^## Installation$/;"	s
Installation and Documentation	plugged/vim-startify/README.md	/^## Installation and Documentation$/;"	s
Installation using [Pathogen](https://github.com/tpope/vim-pathogen)	plugged/vimwiki/README.md	/^#### Installation using [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	t	subsection:Installation""Prerequisites
Installation using [Vim packages](http://vimhelp.appspot.com/repeat.txt.html#packages) (since Vim 7.4.1528)	plugged/vimwiki/README.md	/^#### Installation using [Vim packages](http:\/\/vimhelp.appspot.com\/repeat.txt.html#packages) (/;"	t	subsection:Installation""Prerequisites
Installation using [Vim-Plug](https://github.com/junegunn/vim-plug)	plugged/vimwiki/README.md	/^#### Installation using [Vim-Plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	t	subsection:Installation""Prerequisites
Installation using [Vundle](https://github.com/VundleVim/Vundle.vim)	plugged/vimwiki/README.md	/^#### Installation using [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim)$/;"	t	subsection:Installation""Prerequisites
Installtaion	plugged/incsearch-easymotion.vim/README.md	/^### Installtaion$/;"	S	chapter:incsearch-easymotion.vim
Installtaion	plugged/incsearch-fuzzy.vim/README.md	/^### Installtaion$/;"	S	chapter:incsearch-fuzzy.vim
Int	plugged/fzf/src/tui/tui.go	/^func (t EventType) Int() int {$/;"	f	type:tui.EventType	typeref:typename:int
Integration with incsearch.vim	plugged/vim-easymotion/README.md	/^#### Integration with incsearch.vim$/;"	t	subsection:New features in version 3.0""Overwin motions
Interesting	plugged/calendar.vim/README.md	/^### Interesting$/;"	S	section:A calendar application for Vim""Concept
Intro	plugged/vim-indent-object/README.md	/^### Intro$/;"	S	section:vim-indent-object
Introduction	plugged/fzf/ADVANCED.md	/^Introduction$/;"	s	chapter:Advanced fzf examples
Introduction	plugged/incsearch.vim/README.md	/^Introduction$/;"	s
Introduction	plugged/lightline.vim/README.md	/^## Introduction$/;"	s	chapter:lightline.vim
Introduction	plugged/vim-asterisk/README.md	/^Introduction$/;"	s	chapter:vim-asterisk: * -Improved
Introduction	plugged/vim-easymotion/README.md	/^Introduction$/;"	c
Introduction	plugged/vimwiki/README.md	/^## Introduction$/;"	s
Invalid	plugged/fzf/src/tui/tui.go	/^	Invalid$/;"	c	package:tui
IsBeginBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsBeginBlockByStr(str)$/;"	f
IsBytes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) IsBytes() bool {$/;"	f	struct:util.Chars	typeref:typename:bool
IsDefault	plugged/fzf/src/tui/tui.go	/^func (c Color) IsDefault() bool {$/;"	f	type:tui.Color	typeref:typename:bool
IsDigit	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def IsDigit(char_nr: number): bool$/;"	f
IsDoubleCoronByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsDoubleCoronByStr(str)$/;"	f
IsEmpty	plugged/fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f	struct:fzf.Pattern	typeref:typename:bool
IsEndBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsEndBlockByStr(str)$/;"	f
IsFull	plugged/fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
IsFunctionArgPar	plugged/vim-polyglot/indent/julia.vim	/^function IsFunctionArgPar(lnum, c)$/;"	f
IsIfStatementByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsIfStatementByStr(str)$/;"	f
IsInBrackets	plugged/vim-polyglot/indent/julia.vim	/^function IsInBrackets(lnum, c)$/;"	f
IsInContinuationImportLine	plugged/vim-polyglot/indent/julia.vim	/^function IsInContinuationImportLine(lnum)$/;"	f
IsInDocString	plugged/vim-polyglot/indent/julia.vim	/^function IsInDocString(lnum)$/;"	f
IsInsideOfBlockByNum	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsInsideOfBlockByNum(line_num)$/;"	f
IsInsidePythonBlock	plugged/vim-polyglot/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
IsLightRendererSupported	plugged/fzf/src/tui/light_unix.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsLightRendererSupported	plugged/fzf/src/tui/light_windows.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsReturnByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsReturnByStr(str)$/;"	f
IsStartOfSimpleSymbol	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def IsStartOfSimpleSymbol(char_nr: number): bool$/;"	f
IsTty	plugged/fzf/src/util/util.go	/^func IsTty() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	plugged/fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	plugged/fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
Issue description	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^#### Issue description$/;"	t	section:Issue template
Issue template	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^## Issue template$/;"	s
Italic	plugged/fzf/src/tui/dummy.go	/^	Italic    = Attr(1 << 2)$/;"	c	package:tui
Italic	plugged/fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrItalic)$/;"	c	package:tui
Item	plugged/fzf/src/item.go	/^type Item struct {$/;"	s	package:fzf
ItemBuilder	plugged/fzf/src/chunklist.go	/^type ItemBuilder func(*Item, []byte) bool$/;"	t	package:fzf	typeref:typename:func(*Item, []byte) bool
J	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> J <Nop>$/;"	m
JB	plugged/ultisnips/test/constant.py	/^JB = "+"  # Jump backwards$/;"	v
JF	plugged/ultisnips/test/constant.py	/^JF = "?"  # Jump forwards$/;"	v
JsonnetFmt	plugged/vim-polyglot/ftplugin/jsonnet.vim	/^command! -nargs=0 JsonnetFmt call jsonnet#Format()$/;"	c
JuliaBlocks	plugged/vim-polyglot/autoload/julia_blocks.vim	/^  augroup JuliaBlocks$/;"	a
JuliaDoc	plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(</;"	c
JuliaDoc	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(</;"	c
JuliaDocKeywordprg	plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
JuliaDocKeywordprg	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
JuliaGetMatchWords	plugged/vim-polyglot/ftplugin/julia.vim	/^  function! JuliaGetMatchWords()$/;"	f
JuliaMatch	plugged/vim-polyglot/indent/julia.vim	/^function JuliaMatch(lnum, str, regex, st, ...)$/;"	f
Jump to next/previous match (even on next/previous page)	plugged/vim-easymotion/README.md	/^#### Jump to next\/previous match (even on next\/previous page)$/;"	t	subsection:New features in version 2.0""Repeat motions
JumpDirection	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class JumpDirection(Enum):$/;"	c
JumpForward_DefSnippet	plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
JumpLabels	plugged/fzf/src/options.go	/^	JumpLabels  string$/;"	m	struct:fzf.Options	typeref:typename:string
JumpToMatch	plugged/vim-polyglot/indent/julia.vim	/^function JumpToMatch(lnum, last_closed_bracket)$/;"	f
K	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>K <Plug>(llvm-goto-definition)$/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^  nmap <buffer> K <Plug>RacketDoc$/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^  vmap <buffer> K <Plug>RacketDoc$/;"	m
KEY/EVENT	plugged/fzf/man/man1/fzf.1	/^.SH KEY\/EVENT BINDINGS$/;"	s	title:fzf
KeepRight	plugged/fzf/src/options.go	/^	KeepRight   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Key	plugged/fzf/src/tui/tui.go	/^func Key(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
Key Maps	plugged/ctrlsf.vim/README.md	/^## Key Maps$/;"	s	chapter:ctrlsf.vim
Key bindings	plugged/vimwiki/README.md	/^## Key bindings$/;"	s
Key bindings for command-line	plugged/fzf/README.md	/^Key bindings for command-line$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Key bindings for git objects	plugged/fzf/ADVANCED.md	/^Key bindings for git objects$/;"	s	chapter:Advanced fzf examples
Keymap	plugged/fzf/src/options.go	/^	Keymap      map[tui.Event][]*action$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event][]*action
KillCommand	plugged/fzf/src/util/util_unix.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
KillCommand	plugged/fzf/src/util/util_windows.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
Known Issues	plugged/auto-pairs/README.md	/^Known Issues$/;"	s	chapter:Auto Pairs
Known Issues	plugged/git-messenger.vim/README.md	/^### Known Issues$/;"	S	section:git-messenger.vim""Usage
Known Issues	plugged/vimwiki/test/README.md	/^## Known Issues$/;"	s	chapter:Vimwiki Tests
L	autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> L <Plug>(calendar_clear)$/;"	m
L	plugged/vim-visual-multi/test/tests/change/commands.py	/^L = '\\\\\\\\\\\\\\\\'$/;"	v
L	plugged/vim-visual-multi/test/tests/curs2/commands.py	/^L = '\\\\\\\\\\\\\\\\'$/;"	v
L	plugged/vim-visual-multi/test/tests/curs_del/commands.py	/^L = '\\\\\\\\\\\\\\\\'$/;"	v
L	plugged/vim-visual-multi/test/tests/getcc/commands.py	/^L = '\\\\\\\\\\\\\\\\'$/;"	v
L	plugged/vim-visual-multi/test/tests/pasteatcur/commands.py	/^L = '\\\\\\\\\\\\\\\\'$/;"	v
L	plugged/vim-visual-multi/test/tests/trans/commands.py	/^L = '\\\\\\\\\\\\\\\\'$/;"	v
L2UAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UAutoSub$/;"	a
L2UCompleteDone	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UCompleteDone$/;"	a
L2UInit	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    augroup L2UInit$/;"	a
L2UInsertLeave	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    augroup L2UInsertLeave$/;"	a
L2UInsertLeave	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UInsertLeave$/;"	a
LAYOUT	plugged/fzf/man/man1/fzf-tmux.1	/^.SH LAYOUT OPTIONS$/;"	s	title:fzf-tmux
LICENSE	plugged/fzf/man/man1/fzf.1	/^.SH LICENSE$/;"	s	title:fzf
LLI	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    command! -buffer -nargs=? -bar -complete=file LLI call <SID>run_lli(<f-args>)$/;"	c
LS	plugged/ultisnips/test/constant.py	/^LS = "@"  # List snippets$/;"	v
LYRICS	plugged/vim-polyglot/scripts/build	/^LYRICS = "Never gonna give you up.  Never gonna let you down.  " +$/;"	C	method:copy_file
LaTeXtoUnicode#AutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#AutoSub(...)$/;"	f
LaTeXtoUnicode#CmdTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#CmdTab(trigger)$/;"	f
LaTeXtoUnicode#Disable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Disable(...)$/;"	f
LaTeXtoUnicode#Enable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Enable(...)$/;"	f
LaTeXtoUnicode#FallbackCallback	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#FallbackCallback()$/;"	f
LaTeXtoUnicode#Init	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Init(...)$/;"	f
LaTeXtoUnicode#PutLiteral	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#PutLiteral(k)$/;"	f
LaTeXtoUnicode#PutLiteralCR	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#PutLiteralCR()$/;"	f
LaTeXtoUnicode#Refresh	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Refresh()$/;"	f
LaTeXtoUnicode#Tab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Tab()$/;"	f
LaTeXtoUnicode#Toggle	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Toggle()$/;"	f
LaTeXtoUnicode#completefunc	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#completefunc(findstart, base)$/;"	f
Language packs	plugged/vim-polyglot/README.md	/^## Language packs$/;"	s
LastBlockIndent	plugged/vim-polyglot/indent/julia.vim	/^function LastBlockIndent(lnum)$/;"	f
Layout	plugged/fzf/README.md	/^#### Layout$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Layout	plugged/fzf/src/options.go	/^	Layout      layoutType$/;"	m	struct:fzf.Options	typeref:typename:layoutType
LeadingWhitespaces	plugged/fzf/src/util/chars.go	/^func (chars *Chars) LeadingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
LeaveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
Left	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Left() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Left	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Left() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Left	plugged/fzf/src/tui/tui.go	/^	Left   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Left	plugged/fzf/src/tui/tui.go	/^	Left$/;"	c	package:tui
Left	plugged/fzf/src/tui/tui.go	/^	Left() int$/;"	n	interface:tui.Window	typeref:typename:int
LeftClick	plugged/fzf/src/tui/tui.go	/^	LeftClick$/;"	c	package:tui
Len	plugged/fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f	type:fzf.ByOrder	typeref:typename:int
Len	plugged/fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f	type:fzf.ByRelevance	typeref:typename:int
Len	plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:int
Len	plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f	type:fzf.byTimeOrder	typeref:typename:int
Length	plugged/fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f	struct:fzf.Merger	typeref:typename:int
Length	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f	struct:util.Chars	typeref:typename:int
Less	plugged/fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f	type:fzf.ByOrder	typeref:typename:bool
Less	plugged/fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevance	typeref:typename:bool
Less	plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:bool
Less	plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f	type:fzf.byTimeOrder	typeref:typename:bool
Let's get started	plugged/vital.vim/README.md	/^## Let's get started$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
License	plugged/auto-pairs/README.md	/^License$/;"	s	chapter:Auto Pairs
License	plugged/calendar.vim/README.md	/^## License$/;"	s	chapter:A calendar application for Vim
License	plugged/fzf.vim/README.md	/^License$/;"	s	chapter:fzf :heart: vim
License	plugged/fzf/BUILD.md	/^License$/;"	s	chapter:Building fzf
License	plugged/git-messenger.vim/README.md	/^## License$/;"	s	chapter:git-messenger.vim
License	plugged/lightline.vim/README.md	/^## License$/;"	s	chapter:lightline.vim
License	plugged/vim-commentary/README.markdown	/^## License$/;"	s	chapter:commentary.vim
License	plugged/vim-fugitive/README.markdown	/^## License$/;"	s	chapter:fugitive.vim
License	plugged/vim-polyglot/README.md	/^## License$/;"	s
License	plugged/vim-repeat/README.markdown	/^## License$/;"	s	chapter:repeat.vim
License	plugged/vim-sleuth/README.markdown	/^## License$/;"	s	chapter:sleuth.vim
License	plugged/vim-surround/README.markdown	/^## License$/;"	s	chapter:surround.vim
License	plugged/vim-unimpaired/README.markdown	/^## License$/;"	s	chapter:unimpaired.vim
License	plugged/vimwiki/README.md	/^## License$/;"	s
License	plugged/vital.vim/README.md	/^## License$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
Light256	plugged/fzf/src/tui/tui.go	/^	Light256  *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
LightRenderer	plugged/fzf/src/tui/light.go	/^type LightRenderer struct {$/;"	s	package:tui
LightWindow	plugged/fzf/src/tui/light.go	/^type LightWindow struct {$/;"	s	package:tui
Limitation	plugged/ctrlsf.vim/README.md	/^### Limitation$/;"	S	section:ctrlsf.vim""Edit Mode
LineIterator	plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator:$/;"	c
Links	plugged/incsearch.vim/README.md	/^Links$/;"	s
Links	plugged/vimwiki/test/resources/testmarkdown/index.md	/^# Links$/;"	c
ListAllAvailable_BraceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_Disabled_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_Disabled_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
Lists	plugged/vimwiki/README.md	/^### Lists$/;"	S	section:Basic Markup
LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^\\        LiveScriptCompile call s:LiveScriptCompile(<line1>, <line2>, <q-args>)$/;"	c
LiveScriptCompileAuWatch	plugged/vim-polyglot/ftplugin/ls.vim	/^    augroup LiveScriptCompileAuWatch$/;"	a
LiveScriptMake	plugged/vim-polyglot/compiler/ls.vim	/^command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>$/;"	c
LiveScriptRun	plugged/vim-polyglot/ftplugin/ls.vim	/^command! -range=% -bar LiveScriptRun <line1>,<line2>:w !lsc -sp$/;"	c
LiveScriptUpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^augroup LiveScriptUpdateMakePrg$/;"	a
LoadBufferMenu	plugged/vim-polyglot/extras/menu.vim	/^  augroup LoadBufferMenu$/;"	a
Log	plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
Log tailing	plugged/fzf/ADVANCED.md	/^Log tailing$/;"	s	chapter:Advanced fzf examples
Lookup	plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Lookup(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Loop	plugged/fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f	struct:fzf.Matcher
Loop	plugged/fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f	struct:fzf.Terminal
Lorem ipsum dolor ==	plugged/vimwiki/test/resources/testmarkdown/index.md	/^## Lorem ipsum dolor ==$/;"	s	chapter:More
M	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> M <Plug>(calendar_move_event)$/;"	m
M	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -count=1 M :let s:eregex_tmp_hlsearch = &hlsearch | let v:searchforward = <SID/;"	c
MAKEFILE	plugged/fzf/Makefile	/^MAKEFILE       := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
MAKEFILE_DIR	plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MakeBorderStyle	plugged/fzf/src/tui/tui.go	/^func MakeBorderStyle(shape BorderShape, unicode bool) BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
MakeMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
MakeSlab	plugged/fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f	package:util	typeref:typename:*Slab
MakeTags	vimrc	/^command! MakeTags !ctags -R .$/;"	c
MakeTransparentBorder	plugged/fzf/src/tui/tui.go	/^func MakeTransparentBorder() BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
MakoIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
MakoIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
Manual Install	plugged/vimwiki/README.md	/^#### Manual Install$/;"	t	subsection:Installation""Prerequisites
Manual Steps	plugged/vimwiki/test/README.md	/^### Manual Steps$/;"	S	section:Vimwiki Tests""Running Tests
Mappings	plugged/fzf.vim/README.md	/^Mappings$/;"	s	chapter:fzf :heart: vim
Mappings	plugged/git-messenger.vim/README.md	/^### Mappings$/;"	S	section:git-messenger.vim""Usage
Margin	plugged/fzf/src/options.go	/^	Margin      [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
Markdown	plugged/vimwiki/test/resources/testmarkdown/index.md	/^## Markdown$/;"	s	chapter:Typefaces
Marker	plugged/fzf/src/options.go	/^	Marker      string$/;"	m	struct:fzf.Options	typeref:typename:string
Match	plugged/fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
Match	plugged/fzf/src/tui/tui.go	/^	Match        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
MatchCount	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
MatchIsTooCheap	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
MatchItem	plugged/fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:(*Result, []Offset, *[]int)
MatchRequest	plugged/fzf/src/matcher.go	/^type MatchRequest struct {$/;"	s	package:fzf
Matcher	plugged/fzf/src/matcher.go	/^type Matcher struct {$/;"	s	package:fzf
Max	plugged/fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Max16	plugged/fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f	package:util	typeref:typename:int16
Max32	plugged/fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MaxX	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxX() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxX() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxX	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxX() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	plugged/fzf/src/tui/tui.go	/^	MaxX() int$/;"	n	interface:tui.Renderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxY() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxY() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxY() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/tui.go	/^	MaxY() int$/;"	n	interface:tui.Renderer	typeref:typename:int
MenuExplOpen	plugged/vim-polyglot/extras/menu.vim	/^  fun MenuExplOpen()$/;"	f
Merge	plugged/fzf/src/tui/dummy.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	plugged/fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Merge(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeAttr	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeAttr(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeNonDefault	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeNonDefault(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
Merger	plugged/fzf/src/merger.go	/^type Merger struct {$/;"	s	package:fzf
MermaidIndent	plugged/vim-polyglot/indent/mermaid.vim	/^function! MermaidIndent()$/;"	f
Migemo feature (for Japanese user)	plugged/vim-easymotion/README.md	/^### Migemo feature (for Japanese user)$/;"	S	chapter:New features in version 2.0
Min	plugged/fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Min32	plugged/fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MinHeight	plugged/fzf/src/options.go	/^	MinHeight   int$/;"	m	struct:fzf.Options	typeref:typename:int
Minimal Configuration Tutorial	plugged/vim-easymotion/README.md	/^Minimal Configuration Tutorial$/;"	s	chapter:New features in version 2.0
Minor improvements/fixes	plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.0
Minor improvements/fixes	plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.1
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Mkd	plugged/vim-polyglot/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
Mod	plugged/fzf/src/tui/tui.go	/^	Mod    bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Mode names are too long. Can I use shorter mode names?	plugged/lightline.vim/README.md	/^#### Mode names are too long. Can I use shorter mode names?$/;"	t	subsection:lightline.vim""Advanced configuration""more tips
Modified	plugged/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
Module extension	plugged/incsearch.vim/README.md	/^### Module extension$/;"	S	section::tada: Version 2.0 :tada:
Morbi id sodales sem	plugged/vimwiki/test/resources/testmarkdown/index.md	/^### Morbi id sodales sem$/;"	S	chapter:Etiam dapibus iaculis
More	plugged/vimwiki/test/resources/testmarkdown/index.md	/^# More$/;"	c
More info and advice for (aspiring) core developers	plugged/vimwiki/CONTRIBUTING.md	/^# More info and advice for (aspiring) core developers$/;"	c
Mouse	plugged/fzf/src/options.go	/^	Mouse       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Mouse	plugged/fzf/src/tui/tui.go	/^	Mouse$/;"	c	package:tui
MouseEvent	plugged/fzf/src/tui/tui.go	/^	MouseEvent *MouseEvent$/;"	m	struct:tui.Event	typeref:typename:*MouseEvent
MouseEvent	plugged/fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	s	package:tui
Move	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Move(y int, x int) {$/;"	f	struct:tui.LightWindow
Move	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Move(y int, x int) {$/;"	f	struct:tui.TcellWindow
Move	plugged/fzf/src/tui/tui.go	/^	Move(y int, x int)$/;"	n	interface:tui.Window
MoveAndClear	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.LightWindow
MoveAndClear	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.TcellWindow
MoveAndClear	plugged/fzf/src/tui/tui.go	/^	MoveAndClear(y int, x int)$/;"	n	interface:tui.Window
MovePosition_DelSameLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
Multi	plugged/fzf/src/options.go	/^	Multi       int$/;"	m	struct:fzf.Options	typeref:typename:int
MultiLine	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
Multibyte Pairs	plugged/auto-pairs/README.md	/^Multibyte Pairs$/;"	s	chapter:Auto Pairs
MultilineExpandTestTyping_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
MyHashFunc	plugged/vital.vim/test/Data/Set.vim	/^function! MyHashFunc(x) abort$/;"	f
N	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> N <Plug>(calendar_prev_match)$/;"	m
N	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map N  <Plug>(incsearch-nohl-N)$/;"	m
N	plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap N  N$/;"	m
N	plugged/incsearch.vim/test/n_and_N.vim	/^  noremap N  N$/;"	m
N	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><expr> N 'j '[v:searchforward].'N'$/;"	m
N	vimrc	/^map N  <Plug>(incsearch-nohl-N)$/;"	m
NAME	plugged/fzf/man/man1/fzf-tmux.1	/^.SH NAME$/;"	s	title:fzf-tmux
NAME	plugged/fzf/man/man1/fzf.1	/^.SH NAME$/;"	s	title:fzf
NeoBundle (https://github.com/Shougo/neobundle.vim)	plugged/vim-easymotion/README.md	/^### NeoBundle (https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	S	section:New features in version 2.0""Installation
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.0
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.1
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.10
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.11
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.12
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.13
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.3
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.4
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.5
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.6
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.7
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.9
New features in version 2.0	plugged/vim-easymotion/README.md	/^New features in version 2.0$/;"	c
New features in version 3.0	plugged/vim-easymotion/README.md	/^New features in version 3.0$/;"	c
NewAtomicBool	plugged/fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f	package:util	typeref:typename:*AtomicBool
NewChunkCache	plugged/fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f	package:fzf	typeref:typename:ChunkCache
NewChunkList	plugged/fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f	package:fzf	typeref:typename:*ChunkList
NewColorAttr	plugged/fzf/src/tui/tui.go	/^func NewColorAttr() ColorAttr {$/;"	f	package:tui	typeref:typename:ColorAttr
NewColorPair	plugged/fzf/src/tui/tui.go	/^func NewColorPair(fg Color, bg Color, attr Attr) ColorPair {$/;"	f	package:tui	typeref:typename:ColorPair
NewEventBox	plugged/fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f	package:util	typeref:typename:*EventBox
NewFullscreenRenderer	plugged/fzf/src/tui/tui.go	/^func NewFullscreenRenderer(theme *ColorTheme, forceBlack bool, mouse bool) Renderer {$/;"	f	package:tui	typeref:typename:Renderer
NewHistory	plugged/fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f	package:fzf	typeref:typename:(*History, error)
NewLightRenderer	plugged/fzf/src/tui/light.go	/^func NewLightRenderer(theme *ColorTheme, forceBlack bool, mouse bool, tabstop int, clearOnExit b/;"	f	package:tui	typeref:typename:Renderer
NewMatcher	plugged/fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f	package:fzf	typeref:typename:*Matcher
NewMerger	plugged/fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]Result, sorted bool, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
NewReader	plugged/fzf/src/reader.go	/^func NewReader(pusher func([]byte) bool, eventBox *util.EventBox, delimNil bool, wait bool) *Rea/;"	f	package:fzf	typeref:typename:*Reader
NewTerminal	plugged/fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f	package:fzf	typeref:typename:*Terminal
NewTest_filetype_detection	plugged/vim-polyglot/tests/native.vim	/^func NewTest_filetype_detection()$/;"	f
NewVersion	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function NewVersion()$/;"	f
NewWindow	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) NewWindow(top int, left int, width int, height int, preview bool, border/;"	f	struct:tui.LightRenderer	typeref:typename:Window
NewWindow	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	plugged/fzf/src/tui/tui.go	/^	NewWindow(top int, left int, width int, height int, preview bool, borderStyle BorderStyle) Wind/;"	n	interface:tui.Renderer	typeref:typename:Window
NextNonBlankLine	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! NextNonBlankLine(lnum)$/;"	f
NextPos	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def NextPos(scanner: dict<any>)$/;"	f
NimAsyncCmdComplete	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimAsyncCmdComplete(cmd, output) abort$/;"	f
NimComplete	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimComplete(findstart, base) abort$/;"	f
NimExec	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExec(op) abort$/;"	f
NimExecAsync	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExecAsync(op, Handler) abort$/;"	f
NimLog	plugged/vim-polyglot/autoload/nim.vim	/^command! NimLog :e log:\/\/nim$/;"	c
NimRestartService	plugged/vim-polyglot/autoload/nim.vim	/^command! NimRestartService$/;"	c
NimTerminateService	plugged/vim-polyglot/autoload/nim.vim	/^command! NimTerminateService$/;"	c
NimVim	plugged/vim-polyglot/autoload/nim.vim	/^augroup NimVim$/;"	a
No ftdetect	plugged/vim-polyglot/README.md	/^## No ftdetect$/;"	s
NoColorTheme	plugged/fzf/src/tui/tui.go	/^func NoColorTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
NoUmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NonUnicodeDataInUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class NoneditableTextObject(TextObject):$/;"	c
Normal mode	plugged/vimwiki/README.md	/^### Normal mode$/;"	S	section:Key bindings
Normalize	plugged/fzf/src/options.go	/^	Normalize   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
NormalizeRunes	plugged/fzf/src/algo/normalize.go	/^func NormalizeRunes(runes []rune) []rune {$/;"	f	package:algo	typeref:typename:[]rune
Notable Vim patches	plugged/vimwiki/test/README.md	/^## Notable Vim patches$/;"	s	chapter:Vimwiki Tests
Note for developers of other plugins	plugged/lightline.vim/README.md	/^## Note for developers of other plugins$/;"	s	chapter:lightline.vim
Notes	plugged/vim-sleuth/README.markdown	/^## Notes$/;"	s	chapter:sleuth.vim
Nth	plugged/fzf/src/options.go	/^	Nth         []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
O	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> O <Plug>(calendar_start_insert_prev_line)$/;"	m
OCaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OKBLUE	plugged/vim-visual-multi/test/test.py	/^    OKBLUE = '\\033[94m'$/;"	v	class:bcolors
OKGREEN	plugged/vim-visual-multi/test/test.py	/^    OKGREEN = '\\033[92m'$/;"	v	class:bcolors
OMLetFoldLevel	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
OPTIONS	plugged/fzf/man/man1/fzf.1	/^.SH OPTIONS$/;"	s	title:fzf
Ocaml_get_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
Ocpgrep	plugged/vim-polyglot/ftplugin/ocaml.vim	/^command! -bar -bang -complete=file -nargs=+ Ocpgrep exe s:OcpGrep(<q-bang>, <q-args>)$/;"	c
Offset	plugged/fzf/src/result.go	/^type Offset [2]int32$/;"	t	package:fzf	typeref:typename:[2]int32
OldHope	plugged/lightline.vim/colorscheme.md	/^### OldHope$/;"	S	chapter:Available Colorschemes
OldSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
Once	plugged/fzf/src/util/util.go	/^func Once(nextResponse bool) func() bool {$/;"	f	package:util	typeref:typename:func() bool
Optimizing highlight duration	plugged/vim-highlightedyank/README.md	/^## Optimizing highlight duration$/;"	s	chapter:vim-highlightedyank
Options	plugged/YankAssassin.vim/README.md	/^## Options$/;"	s	chapter:What is YankAssassin.vim?
Options	plugged/auto-pairs/README.md	/^Options$/;"	s	chapter:Auto Pairs
Options	plugged/doom-one.vim/README.md	/^## Options$/;"	s	chapter:doom-one.vim
Options	plugged/fzf/README.md	/^#### Options$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Options	plugged/fzf/src/options.go	/^type Options struct {$/;"	s	package:fzf
Origin	plugged/clrzr/README.md	/^### Origin$/;"	S	chapter:clrzr
Others	plugged/YankAssassin.vim/README.md	/^## Others$/;"	s	chapter:What is YankAssassin.vim?
Overwin motions	plugged/vim-easymotion/README.md	/^### Overwin motions$/;"	S	chapter:New features in version 3.0
P	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> P <Nop>$/;"	m
PS1	plugged/fzf/test/test_go.rb	/^PS1= PROMPT_COMMAND= HISTFILE= HISTSIZE=100$/;"	C
Padding	plugged/fzf/src/options.go	/^	Padding     [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
PaperColor (`background=dark`)	plugged/lightline.vim/README.md	/^### PaperColor (`background=dark`)$/;"	S	chapter:lightline.vim
PaperColor (`background=dark`)	plugged/lightline.vim/colorscheme.md	/^### PaperColor (`background=dark`)$/;"	S	chapter:Available Colorschemes
PaperColor (`background=light`)	plugged/lightline.vim/README.md	/^### PaperColor (`background=light`)$/;"	S	chapter:lightline.vim
PaperColor (`background=light`)	plugged/lightline.vim/colorscheme.md	/^### PaperColor (`background=light`)$/;"	S	chapter:Available Colorschemes
ParagraphAst	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def ParagraphAst(exprs: list<dict<any>>, pos_from: number, pos_to: number): dict<any>$/;"	f
ParseAtom	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def ParseAtom(scanner: dict<any>): dict<any>$/;"	f
ParseExpr	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def ParseExpr(scanner: dict<any>): dict<any>$/;"	f
ParseLParen	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def ParseLParen(scanner: dict<any>) # consumes token; no return$/;"	f
ParseOptions	plugged/fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
ParseParagraph	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def ParseParagraph(scanner: dict<any>): dict<any>$/;"	f
ParseRParen	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def ParseRParen(scanner: dict<any>) # consumes token; no return$/;"	f
ParseRange	plugged/fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f	package:fzf	typeref:typename:(Range, bool)
ParseSExpr	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def ParseSExpr(scanner: dict<any>): dict<any>$/;"	f
ParseSnippets_ClearAll	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
PassMerger	plugged/fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
Pathogen (https://github.com/tpope/vim-pathogen)	plugged/vim-easymotion/README.md	/^### Pathogen (https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S	section:New features in version 2.0""Installation
Pattern	plugged/fzf/src/pattern.go	/^type Pattern struct {$/;"	s	package:fzf
Pause	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Pause(bool)        {}$/;"	f	unknown:tui.FullscreenRenderer
Pause	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Pause(clear bool) {$/;"	f	struct:tui.LightRenderer
Pause	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Pause(clear bool) {$/;"	f	unknown:tui.FullscreenRenderer
Pause	plugged/fzf/src/tui/tui.go	/^	Pause(clear bool)$/;"	n	interface:tui.Renderer
Pdb	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^        class Pdb(pdb.Pdb):$/;"	c	member:RemotePDB.start_server	file:
PebkacError	plugged/ultisnips/pythonx/UltiSnips/error.py	/^class PebkacError(RuntimeError):$/;"	c
Peek	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f	struct:util.EventBox	typeref:typename:bool
Performance	plugged/fzf/README.md	/^### Performance$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
PerlSyntaxFold	plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
PgDn	plugged/fzf/src/tui/tui.go	/^	PgDn$/;"	c	package:tui
PgUp	plugged/fzf/src/tui/tui.go	/^	PgUp$/;"	c	package:tui
Phony	plugged/fzf/src/options.go	/^	Phony       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Pick	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Pick   :<line1>,<line2>call s:choose('pick')$/;"	c
Plug	autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Plugin_SuperTab_SimpleTest	plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Plugins Using vital.vim	plugged/vital.vim/README.md	/^## Plugins Using vital.vim$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
Pointer	plugged/fzf/src/options.go	/^	Pointer     string$/;"	m	struct:fzf.Options	typeref:typename:string
PolyglotVerify	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! PolyglotVerify()$/;"	f
Popup Window Highlight	plugged/git-messenger.vim/README.md	/^### Popup Window Highlight$/;"	S	section:git-messenger.vim""Usage
Popup window support	plugged/fzf/ADVANCED.md	/^#### Popup window support$/;"	t	subsection:Advanced fzf examples""Screen Layout""`fzf-tmux`
Pos2Coord	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def Pos2Coord(scanner: dict<any>, pos: number): dict<number>$/;"	f
Position	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position:$/;"	c
PostscrIndentGet	plugged/vim-polyglot/indent/postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
Powerful	plugged/calendar.vim/README.md	/^### Powerful$/;"	S	section:A calendar application for Vim""Concept
Praesent tempor turpis est	plugged/vimwiki/test/resources/testmarkdown/index.md	/^## Praesent tempor turpis est$/;"	s	chapter:Etiam dapibus iaculis
PrefixMatch	plugged/fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Preparing a release	plugged/vimwiki/CONTRIBUTING.md	/^## Preparing a release$/;"	s	chapter:More info and advice for (aspiring) core developers
Prepend	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Prepend(prefix string) {$/;"	f	struct:util.Chars
Prerequisites	plugged/fzf/BUILD.md	/^### Prerequisites$/;"	S	section:Building fzf""Build instructions
Prerequisites	plugged/vimwiki/README.md	/^### Prerequisites$/;"	S	section:Installation
PrettyPrint	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def PrettyPrint(scanner: dict<any>, token: dict<any>)$/;"	f
Preview	plugged/fzf/src/options.go	/^	Preview     previewOpts$/;"	m	struct:fzf.Options	typeref:typename:previewOpts
Preview window	plugged/fzf.vim/README.md	/^#### Preview window$/;"	t	subsection:fzf :heart: vim""Customization""Global options
Preview window	plugged/fzf/README.md	/^### Preview window$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
PreviewBg	plugged/fzf/src/tui/tui.go	/^	PreviewBg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
PreviewFg	plugged/fzf/src/tui/tui.go	/^	PreviewFg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Print	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Print(text string) {$/;"	f	struct:tui.LightWindow
Print	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Print(text string) {$/;"	f	struct:tui.TcellWindow
Print	plugged/fzf/src/tui/tui.go	/^	Print(text string)$/;"	n	interface:tui.Window
PrintAst	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def PrintAst(ast: dict<any>, indent = 0)$/;"	f
PrintQuery	plugged/fzf/src/options.go	/^	PrintQuery  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
PrintSep	plugged/fzf/src/options.go	/^	PrintSep    string$/;"	m	struct:fzf.Options	typeref:typename:string
Printer	plugged/fzf/src/options.go	/^	Printer     func(string)$/;"	m	struct:fzf.Options	typeref:typename:func(string)
Problem / Steps to reproduce	plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Problem \/ Steps to reproduce$/;"	s
Process IDs	plugged/fzf/README.md	/^#### Process IDs$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Prompt	plugged/fzf/src/options.go	/^	Prompt      string$/;"	m	struct:fzf.Options	typeref:typename:string
Prompt	plugged/fzf/src/tui/tui.go	/^	Prompt       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
ProperIndenting_AutoIndentAndNewline_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
Pros	plugged/fzf/README.md	/^Pros$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Protect	plugged/fzf/src/protector/protector.go	/^func Protect() {$/;"	f	package:protector
Protect	plugged/fzf/src/protector/protector_openbsd.go	/^func Protect() {$/;"	f	package:protector
Push	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f	struct:fzf.ChunkList	typeref:typename:bool
PyInclude	after/ftplugin/python.vim	/^function! PyInclude(fname)$/;"	f
Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python2Syntax let b:python_version_2 = 1 | let &syntax=&syntax$/;"	c
Python3Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python3Syntax let b:python_version_2 = 0 | let &syntax=&syntax$/;"	c
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_SnipRvCanBeNonText	plugged/ultisnips/test/test_Interpolation.py	/^class Python_SnipRvCanBeNonText(_VimTest):$/;"	c
Q	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> Q <Plug>(calendar_exit)$/;"	m
Q	vimrc	/^nnoremap Q !!sh<CR>$/;"	m
Query	plugged/fzf/src/options.go	/^	Query       string$/;"	m	struct:fzf.Options	typeref:typename:string
Quick Start	plugged/ctrlsf.vim/README.md	/^## Quick Start$/;"	s	chapter:ctrlsf.vim
Quick Start	plugged/ultisnips/README.md	/^Quick Start$/;"	s	chapter:UltiSnips
R	autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
R	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> R <Nop>$/;"	m
REVISION	plugged/fzf/Makefile	/^REVISION       := $(FZF_REVISION)$/;"	m
REVISION	plugged/fzf/Makefile	/^REVISION       := $(shell git log -n 1 --pretty=format:%h -- $(SOURCES) 2> \/dev\/null)$/;"	m
RG	vimrc	/^    command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)$/;"	c
ROOT_DIR	plugged/fzf/Makefile	/^ROOT_DIR       := $(shell dirname $(MAKEFILE))$/;"	m
Random	plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
RandomID	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! RandomID()$/;"	f
Range	plugged/fzf/src/tokenizer.go	/^type Range struct {$/;"	s	package:fzf
Rationale	plugged/fzf.vim/README.md	/^Rationale$/;"	s	chapter:fzf :heart: vim
Read	plugged/fzf/src/util/util_unix.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
Read	plugged/fzf/src/util/util_windows.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
ReadBv	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def ReadBv(scanner: dict<any>): dict<any>$/;"	f
ReadComment	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def ReadComment(scanner: dict<any>): dict<any>$/;"	f
ReadKeyword	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def ReadKeyword(scanner: dict<any>): dict<any>$/;"	f
ReadNumber	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def ReadNumber(scanner: dict<any>): dict<any>$/;"	f
ReadOnPath	plugged/vim-polyglot/syntax/ragel.vim	/^fun! <SID>ReadOnPath(script)$/;"	f
ReadQuotedSymbol	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def ReadQuotedSymbol(scanner: dict<any>): dict<any>$/;"	f
ReadSimpleSymbol	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def ReadSimpleSymbol(scanner: dict<any>): dict<any>$/;"	f
ReadSource	plugged/fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f	struct:fzf.Reader
ReadString	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def ReadString(scanner: dict<any>): dict<any>$/;"	f
ReadZero	plugged/fzf/src/options.go	/^	ReadZero    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Reader	plugged/fzf/src/reader.go	/^type Reader struct {$/;"	s	package:fzf
RecTabStopsWithExpandtab_SimpleExample_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
Reduced initial memory footprint (#151)	plugged/fzf/CHANGELOG.md	/^#### Reduced initial memory footprint (#151)$/;"	t	subsection:CHANGELOG""0.9.5""Improvements
Reducer example	plugged/fzf.vim/README.md	/^### Reducer example$/;"	S	section:fzf :heart: vim""Custom completion
References	plugged/vital.vim/README.md	/^## References$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
Refresh	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Refresh()          {}$/;"	f	unknown:tui.FullscreenRenderer
Refresh	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Refresh() {$/;"	f	struct:tui.LightRenderer
Refresh	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Refresh() {$/;"	f	struct:tui.LightWindow
Refresh	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Refresh() {$/;"	f	unknown:tui.FullscreenRenderer
Refresh	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Refresh() {$/;"	f	struct:tui.TcellWindow
Refresh	plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Renderer
Refresh	plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Window
RefreshWindows	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {}$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) RefreshWindows(windows []Window) {$/;"	f	struct:tui.LightRenderer
RefreshWindows	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	plugged/fzf/src/tui/tui.go	/^	RefreshWindows(windows []Window)$/;"	n	interface:tui.Renderer
Reindent	plugged/vim-polyglot/README.md	/^## Reindent$/;"	s
Related projects	plugged/fzf/README.md	/^Related projects$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Reloading the candidate list	plugged/fzf/README.md	/^### Reloading the candidate list$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
RemotePDB	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^class RemotePDB(object):$/;"	c
RemoveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
Renderer	plugged/fzf/src/tui/tui.go	/^type Renderer interface {$/;"	i	package:tui
Repeat motions	plugged/vim-easymotion/README.md	/^### Repeat motions$/;"	S	chapter:New features in version 2.0
Repeat the last find motion	plugged/vim-easymotion/README.md	/^#### Repeat the last find motion$/;"	t	subsection:New features in version 2.0""Repeat motions
Repeat the last motion	plugged/vim-easymotion/README.md	/^#### Repeat the last motion$/;"	t	subsection:New features in version 2.0""Repeat motions
Reproducing Bugs	plugged/ultisnips/CONTRIBUTING.md	/^# Reproducing Bugs$/;"	c
Requirements	plugged/vital.vim/README.md	/^## Requirements$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
Reset	plugged/fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool/;"	f	struct:fzf.Matcher
Resize	plugged/fzf/src/tui/tui.go	/^	Resize$/;"	c	package:tui
Resources	plugged/vimwiki/test/README.md	/^## Resources$/;"	s	chapter:Vimwiki Tests
Respecting `.gitignore`	plugged/fzf/README.md	/^#### Respecting `.gitignore`$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
Result	plugged/fzf/src/algo/algo.go	/^type Result struct {$/;"	s	package:algo
Result	plugged/fzf/src/result.go	/^type Result struct {$/;"	s	package:fzf
Resume	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Resume(bool, bool) {}$/;"	f	unknown:tui.FullscreenRenderer
Resume	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Resume(clear bool, sigcont bool) {$/;"	f	struct:tui.LightRenderer
Resume	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Resume(clear bool, sigcont bool) {$/;"	f	unknown:tui.FullscreenRenderer
Resume	plugged/fzf/src/tui/tui.go	/^	Resume(clear bool, sigcont bool)$/;"	n	interface:tui.Renderer
RetainsTheUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
Reverse	plugged/fzf/src/tui/dummy.go	/^	Reverse   = Attr(1 << 6)$/;"	c	package:tui
Reverse	plugged/fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c	package:tui
Reword	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Reword :<line1>,<line2>call s:choose('reword')$/;"	c
Right	plugged/fzf/src/tui/tui.go	/^	Right$/;"	c	package:tui
RightClick	plugged/fzf/src/tui/tui.go	/^	RightClick$/;"	c	package:tui
Ripgrep integration	plugged/fzf/ADVANCED.md	/^Ripgrep integration$/;"	s	chapter:Advanced fzf examples
RipgrepFzf	vimrc	/^    function! RipgrepFzf(query, fullscreen)$/;"	f
RplGetFreeIndent	plugged/vim-polyglot/indent/rpl.vim	/^function RplGetFreeIndent()$/;"	f
RplGetIndent	plugged/vim-polyglot/indent/rpl.vim	/^function RplGetIndent(lnum)$/;"	f
RstFold	plugged/vim-polyglot/ftplugin/rst.vim	/^  augroup RstFold$/;"	a
RstFold#GetRstFold	plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFold()$/;"	f
RstFold#GetRstFoldText	plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFoldText()$/;"	f
RubyBalloonexpr	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyCursorFile	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorIdentifier	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
RubyCursorTag	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorTag() abort$/;"	f
Run	plugged/fzf/src/core.go	/^func Run(opts *Options, version string, revision string) {$/;"	f	package:fzf
RunTest	plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
Run_script_detection	plugged/vim-polyglot/tests/native.vim	/^func Run_script_detection(test_dict)$/;"	f
Rune	plugged/fzf/src/tui/tui.go	/^	Rune EventType = iota$/;"	c	package:tui	typeref:type:EventType
RunesToChars	plugged/fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f	package:util	typeref:typename:Chars
RunesWidth	plugged/fzf/src/util/util.go	/^func RunesWidth(runes []rune, prefixWidth int, tabstop int, limit int) (int, int) {$/;"	f	package:util	typeref:typename:(int, int)
Running Tests	plugged/vimwiki/test/README.md	/^## Running Tests$/;"	s	chapter:Vimwiki Tests
Running the test suite.	plugged/ultisnips/CONTRIBUTING.md	/^### Running the test suite.$/;"	S	section:Contributing to UltiSnips""Testing
Running using docker.	plugged/ultisnips/CONTRIBUTING.md	/^#### Running using docker.$/;"	t	subsection:Contributing to UltiSnips""Testing""Running the test suite.
Rust	plugged/vim-polyglot/ctags/rust.ctags	/^--langdef=Rust$/;"	l
RustCargoQuickFixHooks	plugged/vim-polyglot/compiler/cargo.vim	/^augroup RustCargoQuickFixHooks$/;"	a
RustEmitAsm	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Ex/;"	c
RustFmt	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustInfo	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfo call rust#debugging#Info()$/;"	c
RustInfoToClipboard	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfoToClipboard call rust#debugging#InfoToClipboard()$/;"	c
RustInfoToFile	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -nargs=1 RustInfoToFile call rust#debugging#InfoToFile(<f-args>)$/;"	c
RustPlay	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
RustTest	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -buffer -nargs=* -count -bang RustTest call rust#Test(<q-mods>, <count>, <bang>0, <q-ar/;"	c
S	autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
S	plugged/fzf/src/tui/tui.go	/^	S      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
S	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range S :<line1>,<line2>call <SID>Esubstitute(<q-args>) <Bar> :noh$/;"	c
S	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> S             :call startify#set_batchmode('S')<cr>$/;"	m
S	plugged/vim-surround/plugin/surround.vim	/^  xmap S   <Plug>VSurround$/;"	m
S	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^    nmap <silent> <nowait> <buffer> S <Plug>(VM-Surround)$/;"	m
SClose	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar SClose call startify#session_close()$/;"	c
SDelete	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SDelete call startify#se/;"	c
SDown	plugged/fzf/src/tui/tui.go	/^	SDown$/;"	c	package:tui
SEE	plugged/fzf/man/man1/fzf.1	/^.SH SEE ALSO$/;"	s	title:fzf
SEQUENCES	plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SExprAst	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def SExprAst(exprs: list<dict<any>>, pos_from: number, pos_to: number): dict<any>$/;"	f
SHELL	plugged/fzf/Makefile	/^SHELL          := bash$/;"	m
SLeft	plugged/fzf/src/tui/tui.go	/^	SLeft$/;"	c	package:tui
SLoad	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SLoad   call startify#se/;"	c
SNIPMATE_SNIPPET_PRIORITY	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SOURCES	plugged/fzf/Makefile	/^SOURCES        := $(wildcard *.go src\/*.go src\/*\/*.go) $(MAKEFILE)$/;"	m
SQLGetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_GetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetType()$/;"	f
SQL_SetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_SetType(name)$/;"	f
SRight	plugged/fzf/src/tui/tui.go	/^	SRight$/;"	c	package:tui
SSave	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SSave   call startify#se/;"	c
SUCCESS_STR	plugged/vim-visual-multi/test/test.py	/^SUCCESS_STR = "{}SUCCESS{}".format(bcolors.OKGREEN, bcolors.ENDC)$/;"	v
SUp	plugged/fzf/src/tui/tui.go	/^	SUp$/;"	c	package:tui
SYNOPSIS	plugged/fzf/man/man1/fzf-tmux.1	/^.SH SYNOPSIS$/;"	s	title:fzf-tmux
SYNOPSIS	plugged/fzf/man/man1/fzf.1	/^.SH SYNOPSIS$/;"	s	title:fzf
SassIncludeExpr	plugged/vim-polyglot/ftplugin/sass.vim	/^function! SassIncludeExpr(file) abort$/;"	f
Score	plugged/fzf/src/algo/algo.go	/^	Score int$/;"	m	struct:algo.Result	typeref:typename:int
Screen Layout	plugged/fzf/ADVANCED.md	/^Screen Layout$/;"	s	chapter:Advanced fzf examples
Screencasts	plugged/ultisnips/README.md	/^Screencasts$/;"	s	chapter:UltiSnips
Screencasts	plugged/vim-fugitive/README.markdown	/^## Screencasts$/;"	s	chapter:fugitive.vim
Screenshot	plugged/doom-one.vim/README.md	/^## Screenshot$/;"	s	chapter:doom-one.vim
Screenshot	plugged/git-messenger.vim/README.md	/^## Screenshot$/;"	s	chapter:git-messenger.vim
Screenshot	plugged/vim-startify/README.md	/^## Screenshot$/;"	s
Screenshots	plugged/clrzr/README.md	/^### Screenshots$/;"	S	chapter:clrzr
Screenshots	plugged/vimwiki/README.md	/^## Screenshots$/;"	s
Scroll-like feature while incremental searching	plugged/incsearch.vim/README.md	/^### Scroll-like feature while incremental searching$/;"	S	section:Usage
ScrollOff	plugged/fzf/src/options.go	/^	ScrollOff   int$/;"	m	struct:fzf.Options	typeref:typename:int
Search	plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Search(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Search syntax	plugged/fzf/README.md	/^#### Search syntax$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Select1	plugged/fzf/src/options.go	/^	Select1     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
SelectModeMappings_BufferLocalMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
Selected	plugged/fzf/src/tui/tui.go	/^	Selected     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Self-Promotion	plugged/vim-commentary/README.markdown	/^## Self-Promotion$/;"	s	chapter:commentary.vim
Self-Promotion	plugged/vim-fugitive/README.markdown	/^## Self-Promotion$/;"	s	chapter:fugitive.vim
Self-Promotion	plugged/vim-repeat/README.markdown	/^## Self-Promotion$/;"	s	chapter:repeat.vim
Self-Promotion	plugged/vim-rhubarb/README.markdown	/^## Self-Promotion$/;"	s	chapter:rhubarb.vim
Self-Promotion	plugged/vim-sleuth/README.markdown	/^## Self-Promotion$/;"	s	chapter:sleuth.vim
Self-Promotion	plugged/vim-surround/README.markdown	/^## Self-Promotion$/;"	s	chapter:surround.vim
Self-Promotion	plugged/vim-unimpaired/README.markdown	/^## Self-Promotion$/;"	s	chapter:unimpaired.vim
Set	plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Set	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f	struct:util.EventBox
SetNonblock	plugged/fzf/src/util/util_unix.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
SetNonblock	plugged/fzf/src/util/util_windows.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
SetUp	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
SetexToAtx	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)$/;"	c
Settings	plugged/fzf/README.md	/^#### Settings$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
SetupLazyloadMenus	plugged/vim-polyglot/extras/menu.vim	/^  augroup SetupLazyloadMenus$/;"	a
Shell	plugged/fzf/test/test_go.rb	/^class Shell$/;"	c
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShiftWidthZero	plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
Shortcuts	plugged/auto-pairs/README.md	/^Shortcuts$/;"	s	chapter:Auto Pairs
Show popup window with Neovim v0.4.0-dev	plugged/git-messenger.vim/README.md	/^#### Show popup window with Neovim v0.4.0-dev$/;"	t	section:git-messenger.vim""Screenshot
Shuffle	plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SimpleExpandEndingWithNewline_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_DoNotClobberDefaultRegister	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_DoNotClobberDefaultRegister(_VimTest):$/;"	c
SimpleExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_Issue1343	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_Issue1343(_VimTest):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpace_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SkipBlanksAndComments	plugged/vim-polyglot/indent/d.vim	/^function! SkipBlanksAndComments(startline)$/;"	f
SkipWhitespace	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def SkipWhitespace(scanner: dict<any>)$/;"	f
Slab	plugged/fzf/src/util/slab.go	/^type Slab struct {$/;"	s	package:util
Sleuth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  command! -bar -bang Sleuth call s:detect_indent()$/;"	c
Sleuth	plugged/vim-sleuth/plugin/sleuth.vim	/^command! -bar -bang Sleuth exe s:Sleuth(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args/;"	c
SleuthIndicator	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! SleuthIndicator() abort$/;"	f
SleuthIndicator	plugged/vim-sleuth/plugin/sleuth.vim	/^function! SleuthIndicator() abort$/;"	f
Smartcase & Smartsign	plugged/vim-easymotion/README.md	/^### Smartcase & Smartsign$/;"	S	chapter:New features in version 2.0
Snapshot	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f	struct:fzf.ChunkList	typeref:typename:([]*Chunk, int)
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
SnippetActions_CanEvenWrapSnippetInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class SnippetDefinition:$/;"	c
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^class SnippetDictionary:$/;"	c
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager:$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix2($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix3($/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand(_SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^class SnippetSource:$/;"	c
SnippetSyntaxError	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetSyntaxError(PebkacError):$/;"	c
SnippetUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtil:$/;"	c
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
Sort	plugged/fzf/src/options.go	/^	Sort        int$/;"	m	struct:fzf.Options	typeref:typename:int
Source	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
Special thanks	plugged/incsearch.vim/README.md	/^Special thanks$/;"	s
Special thanks	plugged/vim-asterisk/README.md	/^Special thanks$/;"	s	chapter:vim-asterisk: * -Improved
SpellPopupMenu	plugged/vim-polyglot/extras/menu.vim	/^  augroup SpellPopupMenu$/;"	a
Spinner	plugged/fzf/src/tui/tui.go	/^	Spinner      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Spirit of this plugin	plugged/lightline.vim/README.md	/^## Spirit of this plugin$/;"	s	chapter:lightline.vim
Split	plugged/vim-polyglot/syntax/ragel.vim	/^function! <SID>Split(path) abort " {{{1$/;"	f
Squash	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Squash :<line1>,<line2>call s:choose('squash')$/;"	c
Start	plugged/fzf/src/algo/algo.go	/^	Start int$/;"	m	struct:algo.Result	typeref:typename:int
Start Vim with a minimal configuration	plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Start Vim with a minimal configuration$/;"	c
Startify	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar Startify call startify#insane_in_the_membrane(0)$/;"	c
StartifyDebug	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar StartifyDebug call startify#debug()$/;"	c
Starting fzf in a popup window	plugged/fzf/README-VIM.md	/^### Starting fzf in a popup window$/;"	S	section:FZF Vim integration""Tips
Status line of terminal buffer	plugged/fzf.vim/README.md	/^Status line of terminal buffer$/;"	s	chapter:fzf :heart: vim
String	plugged/fzf/src/pattern.go	/^func (t term) String() string {$/;"	f	struct:fzf.term	typeref:typename:string
String	plugged/fzf/src/terminal_test.go	/^func (item *Item) String() string {$/;"	f	unknown:fzf.Item	typeref:typename:string
String	plugged/fzf/src/tokenizer.go	/^func (d Delimiter) String() string {$/;"	f	struct:fzf.Delimiter	typeref:typename:string
String	plugged/fzf/src/tokenizer.go	/^func (t Token) String() string {$/;"	f	struct:fzf.Token	typeref:typename:string
String	plugged/fzf/src/util/chars.go	/^func (chars *Chars) String() string {$/;"	f	struct:util.Chars	typeref:typename:string
StripTrailingWhitespace	plugged/vim-polyglot/ftplugin/dhall.vim	/^function! StripTrailingWhitespace()$/;"	f
Style	plugged/fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f	unknown:tui.Color	typeref:typename:tcell.Color
Stylus	plugged/vim-polyglot/ftplugin/stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
SuffixMatch	plugged/fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Summary	plugged/fzf/README-VIM.md	/^Summary$/;"	s	chapter:FZF Vim integration
Support for dot repeat	plugged/vim-easymotion/README.md	/^#### Support for dot repeat$/;"	t	subsection:New features in version 2.0""Repeat motions
Supported commands	plugged/fzf/README.md	/^#### Supported commands$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
SvgIndentGet	plugged/vim-polyglot/indent/svg.vim	/^fun! SvgIndentGet(lnum, use_syntax_check)$/;"	f
SvgIndentSum	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSum(lnum, style, add)$/;"	f
SvgIndentSynCheck	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSynCheck(lnum)$/;"	f
SvgIndentWithPattern	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentWithPattern(line, pat)$/;"	f
Swap	plugged/fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f	type:fzf.ByOrder
Swap	plugged/fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f	type:fzf.ByRelevance
Swap	plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f	type:fzf.ByRelevanceTac
Swap	plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f	type:fzf.byTimeOrder
SwiftIndent	plugged/vim-polyglot/indent/swift.vim	/^function! SwiftIndent(...)$/;"	f
Switching to fzf-only search mode	plugged/fzf/ADVANCED.md	/^### Switching to fzf-only search mode$/;"	S	section:Advanced fzf examples""Ripgrep integration
Switching unified diffs and word diffs	plugged/git-messenger.vim/README.md	/^#### Switching unified diffs and word diffs$/;"	t	section:git-messenger.vim""Screenshot
SynDisplay	plugged/vim-polyglot/syntax/inform.vim	/^command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynFold	plugged/vim-polyglot/syntax/crystal.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFold	plugged/vim-polyglot/syntax/ruby.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SynFold	plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args> fold$/;"	c
SynFold	plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args>$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
Sync	plugged/fzf/src/options.go	/^	Sync        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
SyntasticAutoloclistNotifier.AutoToggle	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	plugged/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck/;"	c
SyntasticCheck	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args, ...) abort " {{{2$/;"	f
SyntasticChecker._getOpt	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getCName	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getCName() abort " {{{2$/;"	f
SyntasticChecker.getExec	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.isDisabled	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isDisabled() abort " {{{2$/;"	f
SyntasticChecker.log	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec(...) abort " {{{2$/;"	f
SyntasticChecker.wantSort	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	plugged/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(/;"	c
SyntasticInfo	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditClasspath runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditC/;"	c
SyntasticJavacEditClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditConfig    runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditC/;"	c
SyntasticJavacEditConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditConfig    call s:EditConfig()$/;"	c
SyntasticLoclist.New	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current(...) abort " {{{2$/;"	f
SyntasticLoclist.decorate	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist(new) abort " {{{2$/;"	f
SyntasticLoclist.show	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking(buf) abort " {{{2$/;"	f
SyntasticModeMap.echoMode	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(cnames) abort " {{{2$/;"	f
SyntasticRegistry._findChecker	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._findChecker(cname) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype, force) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry._sanityCheck	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._sanityCheck(filetype) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersDisabled	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersDisabled(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticRegistry.resolveFiletypes	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.resolveFiletypes(ftalias) abort " {{{2$/;"	f
SyntasticReset	plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_GetLocList	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_GetLocList() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_IsAvailable	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_drafter_GetLocList	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^function! SyntaxCheckers_apiblueprint_drafter_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asl_iasl_GetLocList	plugged/syntastic/syntax_checkers/asl/iasl.vim	/^function! SyntaxCheckers_asl_iasl_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppclean_GetLocList	plugged/syntastic/syntax_checkers/c/cppclean.vim	/^function! SyntaxCheckers_c_cppclean_GetLocList() dict$/;"	f
SyntaxCheckers_c_flawfinder_GetHighlightRegex	plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^function! SyntaxCheckers_c_flawfinder_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_c_flawfinder_GetLocList	plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^function! SyntaxCheckers_c_flawfinder_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	plugged/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	plugged/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	plugged/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	plugged/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_cmake_cmakelint_GetLocList	plugged/syntastic/syntax_checkers/cmake/cmakelint.vim	/^function! SyntaxCheckers_cmake_cmakelint_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	plugged/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_jshint_GetLocList	plugged/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^function! SyntaxCheckers_coffee_coffee_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	plugged/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_css_stylelint_GetLocList	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^function! SyntaxCheckers_css_stylelint_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_d_dscanner_GetHighlightRegex	plugged/syntastic/syntax_checkers/d/dscanner.vim	/^function! SyntaxCheckers_d_dscanner_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_d_dscanner_GetLocList	plugged/syntastic/syntax_checkers/d/dscanner.vim	/^function! SyntaxCheckers_d_dscanner_GetLocList() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList	plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^function! SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_hadolint_GetLocList	plugged/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^function! SyntaxCheckers_dockerfile_hadolint_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golangci_lint_GetLocList	plugged/syntastic/syntax_checkers/go/golangci_lint.vim	/^function! SyntaxCheckers_go_golangci_lint_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	plugged/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gometalinter_GetLocList	plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^function! SyntaxCheckers_go_gometalinter_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	plugged/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	plugged/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_IsAvailable	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	plugged/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_htmlhint_GetLocList	plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^function! SyntaxCheckers_html_htmlhint_GetLocList() dict$/;"	f
SyntaxCheckers_html_htmlhint_IsAvailable	plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^function! SyntaxCheckers_html_htmlhint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	plugged/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_w3_GetLocList	plugged/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_lynt_GetLocList	plugged/syntastic/syntax_checkers/javascript/lynt.vim	/^function! SyntaxCheckers_javascript_lynt_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_mixedindentlint_GetLocList	plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^function! SyntaxCheckers_javascript_mixedindentlint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_tern_lint_GetLocList	plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^function! SyntaxCheckers_javascript_tern_lint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_tern_lint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^function! SyntaxCheckers_javascript_tern_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	plugged/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_remark_lint_GetLocList	plugged/syntastic/syntax_checkers/markdown/remark_lint.vim	/^function! SyntaxCheckers_markdown_remark_lint_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nim_nim_GetLocList	plugged/vim-polyglot/autoload/nim.vim	/^fun! SyntaxCheckers_nim_nim_GetLocList() abort$/;"	f
SyntaxCheckers_nim_nim_IsAvailable	plugged/vim-polyglot/autoload/nim.vim	/^function! SyntaxCheckers_nim_nim_IsAvailable() abort$/;"	f
SyntaxCheckers_nix_nix_GetLocList	plugged/syntastic/syntax_checkers/nix/nix.vim	/^function! SyntaxCheckers_nix_nix_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpstan_GetLocList	plugged/syntastic/syntax_checkers/php/phpstan.vim	/^function! SyntaxCheckers_php_phpstan_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpstan_IsAvailable	plugged/syntastic/syntax_checkers/php/phpstan.vim	/^function! SyntaxCheckers_php_phpstan_IsAvailable() dict$/;"	f
SyntaxCheckers_po_dennis_GetLocList	plugged/syntastic/syntax_checkers/po/dennis.vim	/^function! SyntaxCheckers_po_dennis_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_pug_pug_lint_GetLocList	plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^function! SyntaxCheckers_pug_pug_lint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_bandit_GetLocList	plugged/syntastic/syntax_checkers/python/bandit.vim	/^function! SyntaxCheckers_python_bandit_GetLocList() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	plugged/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	plugged/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pycodestyle_GetLocList	plugged/syntastic/syntax_checkers/python/pycodestyle.vim	/^function! SyntaxCheckers_python_pycodestyle_GetLocList() dict$/;"	f
SyntaxCheckers_python_pydocstyle_GetLocList	plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^function! SyntaxCheckers_python_pydocstyle_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_python_python_GetLocList	plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_qml_qmllint_GetLocList	plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^function! SyntaxCheckers_qml_qmllint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lintr_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lintr_GetLocList	plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetLocList() dict$/;"	f
SyntaxCheckers_r_lintr_IsAvailable	plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	plugged/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_raku_raku_GetHighlightRegex	plugged/syntastic/syntax_checkers/raku/raku.vim	/^function! SyntaxCheckers_raku_raku_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_raku_raku_GetLocList	plugged/syntastic/syntax_checkers/raku/raku.vim	/^function! SyntaxCheckers_raku_raku_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_raku_raku_IsAvailable	plugged/syntastic/syntax_checkers/raku/raku.vim	/^function! SyntaxCheckers_raku_raku_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_IsAvailable	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_IsAvailable() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_rst_sphinx_GetLocList	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^function! SyntaxCheckers_rst_sphinx_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_flog_GetLocList	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^function! SyntaxCheckers_ruby_flog_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_sorbet_GetLocList	plugged/syntastic/syntax_checkers/ruby/sorbet.vim	/^function! SyntaxCheckers_ruby_sorbet_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_sorbet_IsAvailable	plugged/syntastic/syntax_checkers/ruby/sorbet.vim	/^function! SyntaxCheckers_ruby_sorbet_IsAvailable() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	plugged/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_lint_GetLocList	plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^function! SyntaxCheckers_sass_sass_lint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_lint_IsAvailable	plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^function! SyntaxCheckers_sass_sass_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_shfmt_GetLocList	plugged/syntastic/syntax_checkers/sh/shfmt.vim	/^function! SyntaxCheckers_sh_shfmt_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slim_lint_GetLocList	plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^function! SyntaxCheckers_slim_slim_lint_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solc_GetLocList	plugged/syntastic/syntax_checkers/solidity/solc.vim	/^function! SyntaxCheckers_solidity_solc_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solhint_GetLocList	plugged/syntastic/syntax_checkers/solidity/solhint.vim	/^function! SyntaxCheckers_solidity_solhint_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solium_GetLocList	plugged/syntastic/syntax_checkers/solidity/solium.vim	/^function! SyntaxCheckers_solidity_solium_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_GetHighlightRegex	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_sql_sqlint_GetLocList	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_IsAvailable	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_IsAvailable() dict$/;"	f
SyntaxCheckers_sql_tsqllint_GetLocList	plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^function! SyntaxCheckers_sql_tsqllint_GetLocList() dict$/;"	f
SyntaxCheckers_stylus_stylint_GetLocList	plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^function! SyntaxCheckers_stylus_stylint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	plugged/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_text_proselint_GetLocList	plugged/syntastic/syntax_checkers/text/proselint.vim	/^function! SyntaxCheckers_text_proselint_GetLocList() dict$/;"	f
SyntaxCheckers_text_textlint_GetLocList	plugged/syntastic/syntax_checkers/text/textlint.vim	/^function! SyntaxCheckers_text_textlint_GetLocList() dict$/;"	f
SyntaxCheckers_turtle_rapper_GetHighlightRegex	plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^function! SyntaxCheckers_turtle_rapper_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_turtle_rapper_GetLocList	plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^function! SyntaxCheckers_turtle_rapper_GetLocList() dict$/;"	f
SyntaxCheckers_turtle_ttl_GetHighlightRegex	plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^function! SyntaxCheckers_turtle_ttl_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_turtle_ttl_GetLocList	plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^function! SyntaxCheckers_turtle_ttl_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twigcs_GetLocList	plugged/syntastic/syntax_checkers/twig/twigcs.vim	/^function! SyntaxCheckers_twig_twigcs_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_iverilog_GetLocList	plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^function! SyntaxCheckers_verilog_iverilog_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vhdl_vcom_GetLocList	plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^function! SyntaxCheckers_vhdl_vcom_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	plugged/syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_vue_pug_lint_vue_GetLocList	plugged/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^function! SyntaxCheckers_vue_pug_lint_vue_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_xquery_basex_GetLocList	plugged/syntastic/syntax_checkers/xquery/basex.vim	/^function! SyntaxCheckers_xquery_basex_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamllint_GetLocList	plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^function! SyntaxCheckers_yaml_yamllint_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_yang_pyang_GetHighlightRegex	plugged/syntastic/syntax_checkers/yang/pyang.vim	/^function! SyntaxCheckers_yang_pyang_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_yang_pyang_GetLocList	plugged/syntastic/syntax_checkers/yang/pyang.vim	/^function! SyntaxCheckers_yang_pyang_GetLocList() dict$/;"	f
SyntaxCheckers_yara_yarac_GetLocList	plugged/syntastic/syntax_checkers/yara/yara.vim	/^function! SyntaxCheckers_yara_yarac_GetLocList() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
SystemVerilogIndent	plugged/vim-polyglot/indent/systemverilog.vim	/^function SystemVerilogIndent()$/;"	f
T	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> T <Plug>(calendar_task)$/;"	m
T	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> T             :call startify#set_batchmode('T')<cr>$/;"	m
T/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
TAPTestLine_foldtext	plugged/vim-polyglot/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f
TEMPLATE	plugged/fzf/test/test_go.rb	/^TEMPLATE = DATA.read$/;"	C
TEMPNAME	plugged/fzf/test/test_go.rb	/^  TEMPNAME = '\/tmp\/output'$/;"	C	class:TestBase
Tab	plugged/fzf/src/tui/tui.go	/^	Tab$/;"	c	package:tui
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite($/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
Table of Contents	plugged/ctrlsf.vim/README.md	/^## Table of Contents$/;"	s	chapter:ctrlsf.vim
Table of Contents	plugged/fzf/README.md	/^Table of Contents$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
TableFormat	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer TableFormat call s:TableFormat()$/;"	c
Tabstop	plugged/fzf/src/options.go	/^	Tabstop     int$/;"	m	struct:fzf.Options	typeref:typename:int
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
Tac	plugged/fzf/src/options.go	/^	Tac         bool$/;"	m	struct:fzf.Options	typeref:typename:bool
TcellWindow	plugged/fzf/src/tui/tcell.go	/^type TcellWindow struct {$/;"	s	package:tui
TearDown	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TempFileManager	plugged/ultisnips/test/vim_interface.py	/^class TempFileManager:$/;"	c
Terminal	plugged/fzf/src/terminal.go	/^type Terminal struct {$/;"	s	package:fzf
Terms of Use	plugged/calendar.vim/README.md	/^## Terms of Use$/;"	s	chapter:A calendar application for Vim
Terraform	plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=+ -complete=custom,terraform#commands -buffer Terraform$/;"	c
TerraformFmt	plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=0 -buffer TerraformFmt call terraform#fmt()$/;"	c
Test	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! Test()$/;"	f
Test Wiki	plugged/vimwiki/test/resources/testmarkdown/index.md	/^# Test Wiki$/;"	c
TestAdditiveExpect	plugged/fzf/src/options_test.go	/^func TestAdditiveExpect(t *testing.T) {$/;"	f	package:fzf
TestAllMatch	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestAnsiCodeStringConversion	plugged/fzf/src/ansi_test.go	/^func TestAnsiCodeStringConversion(t *testing.T) {$/;"	f	package:fzf
TestAtomicBool	plugged/fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f	package:util
TestBase	plugged/fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	plugged/fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
TestBind	plugged/fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f	package:fzf
TestCacheKey	plugged/fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f	package:fzf
TestCacheable	plugged/fzf/src/pattern_test.go	/^func TestCacheable(t *testing.T) {$/;"	f	package:fzf
TestCaseSensitivity	plugged/fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f	package:fzf
TestCharsLength	plugged/fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f	package:util
TestCharsToString	plugged/fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f	package:util
TestCheapDelete	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestChunkCache	plugged/fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f	package:fzf
TestChunkList	plugged/fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f	package:fzf
TestColorOffset	plugged/fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f	package:fzf
TestColorSpec	plugged/fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f	package:fzf
TestCommonCharacters	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestContrain	plugged/fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f	package:util
TestCrash	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestDefaultCtrlNP	plugged/fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegex	plugged/fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexRegex	plugged/fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexString	plugged/fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f	package:fzf
TestEmptyMerger	plugged/fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f	package:fzf
TestEmptyPattern	plugged/fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f	package:algo
TestEmptyString	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestEqual	plugged/fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f	package:fzf
TestEventBox	plugged/fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f	package:util
TestExact	plugged/fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f	package:fzf
TestExactMatchNaive	plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f	package:algo
TestExactMatchNaiveBackward	plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f	package:algo
TestExtension	plugged/vim-polyglot/tests/extensions.vim	/^function! TestExtension(filetype, filename, content)$/;"	f
TestExtractColor	plugged/fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f	package:fzf
TestFiletype	plugged/vim-polyglot/tests/filetypes.vim	/^func! TestFiletype(filetype)$/;"	f
TestFiletypeFuncs	plugged/vim-polyglot/extras/filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f
TestFish	plugged/fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c	mixin:include:TestShell
TestFuzzyMatch	plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f	package:algo
TestFuzzyMatchBackward	plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f	package:algo
TestGetCharEventKey	plugged/fzf/src/tui/tcell_test.go	/^func TestGetCharEventKey(t *testing.T) {$/;"	f	package:tui
TestGoFZF	plugged/fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c
TestGuessing_BackspaceOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestHexToColor	plugged/fzf/src/tui/tui_test.go	/^func TestHexToColor(t *testing.T) {$/;"	f	package:tui
TestHistory	plugged/fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f	package:fzf
TestIrrelevantNth	plugged/fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f	package:fzf
TestLangmapWithUtf8_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLongString	plugged/fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f	package:algo
TestLotsaNewlines	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestMax	plugged/fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f	package:util
TestMergerSorted	plugged/fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f	package:fzf
TestMergerUnsorted	plugged/fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence	plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Modified	plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Modified(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Random	plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Random(t *testing.T) {$/;"	f	package:fzf
TestNoSubstring	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestNormalize	plugged/fzf/src/algo/algo_test.go	/^func TestNormalize(t *testing.T) {$/;"	f	package:algo
TestOffsetSort	plugged/fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f	package:fzf
TestOnce	plugged/fzf/src/util/util_test.go	/^func TestOnce(t *testing.T) {$/;"	f	package:util
TestOrigTextAndTransformed	plugged/fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f	package:fzf
TestParseAnsiCode	plugged/fzf/src/ansi_test.go	/^func TestParseAnsiCode(t *testing.T) {$/;"	f	package:fzf
TestParseKeys	plugged/fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f	package:fzf
TestParseKeysWithComma	plugged/fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f	package:fzf
TestParsePlaceholder	plugged/fzf/src/terminal_test.go	/^func TestParsePlaceholder(t *testing.T) {$/;"	f	package:fzf
TestParseRange	plugged/fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f	package:fzf
TestParseTermsEmpty	plugged/fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtended	plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtendedExact	plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f	package:fzf
TestPowershellCommands	plugged/fzf/src/terminal_test.go	/^func TestPowershellCommands(t *testing.T) {$/;"	f	package:fzf
TestPrefixMatch	plugged/fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f	package:algo
TestPreviewOpts	plugged/fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f	package:fzf
TestQuoteEntry	plugged/fzf/src/terminal_test.go	/^func TestQuoteEntry(t *testing.T) {$/;"	f	package:fzf
TestRankComparison	plugged/fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f	package:fzf
TestReadFromCommand	plugged/fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f	package:fzf
TestRealLife	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestReplacePlaceholder	plugged/fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f	package:fzf
TestResultRank	plugged/fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f	package:fzf
TestRunesWidth	plugged/fzf/src/util/util_test.go	/^func TestRunesWidth(t *testing.T) {$/;"	f	package:util
TestShell	plugged/fzf/test/test_go.rb	/^module TestShell$/;"	m
TestSplitNth	plugged/fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f	package:fzf
TestStringPtr	plugged/fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f	package:fzf
TestSuffixMatch	plugged/fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f	package:algo
TestToCharsAscii	plugged/fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f	package:util
TestToggle	plugged/fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f	package:fzf
TestTokenize	plugged/fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f	package:fzf
TestTransform	plugged/fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f	package:fzf
TestTransformIndexOutOfBounds	plugged/fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f	package:fzf
TestTrimLength	plugged/fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f	package:util
TestUltiSnipsProblem	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestUnixCommands	plugged/fzf/src/terminal_test.go	/^func TestUnixCommands(t *testing.T) {$/;"	f	package:fzf
TestValidateSign	plugged/fzf/src/options_test.go	/^func TestValidateSign(t *testing.T) {$/;"	f	package:fzf
TestWindowsCommands	plugged/fzf/src/terminal_test.go	/^func TestWindowsCommands(t *testing.T) {$/;"	f	package:fzf
TestWithNewline	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
TestZsh	plugged/fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
Test_add_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_common_prefix	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_prefix()$/;"	f
Test_common_suffix	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_suffix()$/;"	f
Test_conf_type	plugged/vim-polyglot/tests/native.vim	/^func Test_conf_type()$/;"	f
Test_detection	plugged/vim-polyglot/tests/native.vim	/^func Test_detection()$/;"	f
Test_diff_highlight	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_diff_highlight()$/;"	f
Test_edit_file_with_same_name_as_a_branch	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_empty_file	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_empty_file()$/;"	f
Test_emptybuf_ftdetect	plugged/vim-polyglot/tests/native.vim	/^func Test_emptybuf_ftdetect()$/;"	f
Test_encoding	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_file_added_to_git	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_leading_dash	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_umlaut	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_umlaut()$/;"	f
Test_filename_with_equals	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_filetype_indent_off	plugged/vim-polyglot/tests/native.vim	/^func Test_filetype_indent_off()$/;"	f
Test_fix_file_references	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_foldtext	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_foldtext()$/;"	f
Test_follow_symlink	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_hook_file	plugged/vim-polyglot/tests/native.vim	/^func Test_hook_file()$/;"	f
Test_hunk_outside_noop	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_stage_partial_cmd_added	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_cmd_added()$/;"	f
Test_hunk_stage_partial_preview_added	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added()$/;"	f
Test_hunk_stage_partial_preview_added_removed	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added_removed()$/;"	f
Test_hunk_stage_partial_visual_added	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_visual_added()$/;"	f
Test_hunk_stage_preview_write	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_preview_write()$/;"	f
Test_hunk_undo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_hunk_undo_dos	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo_dos()$/;"	f
Test_inner_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_keep_alt	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_lcs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_lcs()$/;"	f
Test_modify_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_other_type	plugged/vim-polyglot/tests/native.vim	/^func Test_other_type()$/;"	f
Test_overlapping_hunk_op	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunk_op()$/;"	f
Test_overlapping_hunks	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunks()$/;"	f
Test_preview	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview()$/;"	f
Test_preview_dos	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview_dos()$/;"	f
Test_priority	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_priority()$/;"	f
Test_quickfix	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_quickfix()$/;"	f
Test_remove_first_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_script_detection	plugged/vim-polyglot/tests/native.vim	/^func Test_script_detection()$/;"	f
Test_setfiletype_completion	plugged/vim-polyglot/tests/native.vim	/^func Test_setfiletype_completion()$/;"	f
Test_split	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_split()$/;"	f
Test_undo_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_user_autocmd	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_option	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
Testing	plugged/ultisnips/CONTRIBUTING.md	/^## Testing$/;"	s	chapter:Contributing to UltiSnips
TexFold	plugged/vim-polyglot/after/syntax/tex.vim	/^ com! -nargs=* TexFold <args> $/;"	c
TexFold	plugged/vim-polyglot/after/syntax/tex.vim	/^ com! -nargs=* TexFold <args> fold $/;"	c
TexNewMathZone	plugged/vim-polyglot/after/syntax/tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
TextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class TextObject:$/;"	c
TextObject	plugged/vim-indent-object/plugin/indent-object.vim	/^function! <Sid>TextObject(inner, incbelow, vis, range, count)$/;"	f
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class TextObjectTransformation:$/;"	c
TextTabStopAfterMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
TextilePreview	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextilePreview call TextileRenderBufferToPreview()$/;"	c
TextileRender	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRender(lines)$/;"	f
TextileRenderBufferToFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToFile()$/;"	f
TextileRenderBufferToPreview	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToPreview()$/;"	f
TextileRenderBufferToTab	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToTab()$/;"	f
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderFile call TextileRenderBufferToFile()$/;"	c
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderFile(lines, filename)$/;"	f
TextileRenderTab	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderTab call TextileRenderBufferToTab()$/;"	c
The EasyMotion project, revived!	plugged/vim-easymotion/README.md	/^The EasyMotion project, revived!$/;"	c
The newer table formating algorithm	plugged/vimwiki/DesignNotes.md	/^### The newer table formating algorithm$/;"	S	section:Design Notes""Formatting tables
The older table formatting algorithm and why this is not optimal	plugged/vimwiki/DesignNotes.md	/^### The older table formatting algorithm and why this is not optimal$/;"	S	section:Design Notes""Formatting tables
Theme	plugged/fzf/src/options.go	/^	Theme       *tui.ColorTheme$/;"	m	struct:fzf.Options	typeref:typename:*tui.ColorTheme
Things about your system and environment（请在此填写你的系统信息）	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^#### Things about your system and environment（请在此填写你的系统信息）$/;"	t	section:Issue template
Third-party libraries used	plugged/fzf/BUILD.md	/^Third-party libraries used$/;"	s	chapter:Building fzf
This is my vimrc	README.md	/^# This is my vimrc$/;"	c
Tips	plugged/ctrlsf.vim/README.md	/^## Tips$/;"	s	chapter:ctrlsf.vim
Tips	plugged/fzf/README-VIM.md	/^Tips$/;"	s	chapter:FZF Vim integration
Tips	plugged/fzf/README.md	/^Tips$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Tmux	plugged/fzf/test/test_go.rb	/^class Tmux$/;"	c
ToChars	plugged/fzf/src/util/chars.go	/^func ToChars(bytes []byte) Chars {$/;"	f	package:util	typeref:typename:Chars
ToRunes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
ToString	plugged/fzf/src/ansi.go	/^func (s *ansiState) ToString() string {$/;"	f	struct:fzf.ansiState	typeref:typename:string
ToString	plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f	struct:util.Chars	typeref:typename:string
ToTty	plugged/fzf/src/util/util.go	/^func ToTty() bool {$/;"	f	package:util	typeref:typename:bool
Toc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toc call s:Toc()$/;"	c
Toch	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toch call s:Toc('horizontal')$/;"	c
Toct	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toct call s:Toc('tab')$/;"	c
Tocv	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Tocv call s:Toc('vertical')$/;"	c
ToggleSort	plugged/fzf/src/options.go	/^	ToggleSort  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Toggling between data sources	plugged/fzf/ADVANCED.md	/^### Toggling between data sources$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Token	plugged/fzf/src/tokenizer.go	/^type Token struct {$/;"	s	package:fzf
Token	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class Token:$/;"	c
Token	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def Token(kind: number, pos: number, lexeme: string): dict<any>$/;"	f
Tokenize	plugged/fzf/src/tokenizer.go	/^func Tokenize(text string, delimiter Delimiter) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
Tomorrow	plugged/lightline.vim/colorscheme.md	/^### Tomorrow$/;"	S	chapter:Available Colorschemes
Tomorrow_Night	plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night$/;"	S	chapter:Available Colorschemes
Tomorrow_Night_Blue	plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night_Blue$/;"	S	chapter:Available Colorschemes
Tomorrow_Night_Bright	plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night_Bright$/;"	S	chapter:Available Colorschemes
Tomorrow_Night_Eighties	plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night_Eighties$/;"	S	chapter:Available Colorschemes
Top	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Top() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Top	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Top() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Top	plugged/fzf/src/tui/tui.go	/^	Top() int$/;"	n	interface:tui.Window	typeref:typename:int
TrailingNewline_TabStop_EndNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
TrailingWhitespaces	plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
Transform	plugged/fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Trim	plugged/vim-polyglot/indent/qml.vim	/^function! Trim(line)$/;"	f
TrimLength	plugged/fzf/src/item.go	/^func (item *Item) TrimLength() uint16 {$/;"	f	struct:fzf.Item	typeref:typename:uint16
TrimLength	plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() uint16 {$/;"	f	struct:util.Chars	typeref:typename:uint16
TrimSpacesAtEndOfLines	plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
TrimTrailingWhitespaces	plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimTrailingWhitespaces() {$/;"	f	struct:util.Chars
TroubleShooting	plugged/auto-pairs/README.md	/^TroubleShooting$/;"	s	chapter:Auto Pairs
Troubleshooting	plugged/vim-polyglot/README.md	/^## Troubleshooting$/;"	s
True-Color Support	plugged/clrzr/README.md	/^### True-Color Support$/;"	S	chapter:clrzr
TryNormal	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function TryNormal(str)$/;"	f
TsIncludeExpr	plugged/vim-polyglot/ftplugin/typescript.vim	/^function! TsIncludeExpr(file)$/;"	f
TtyIn	plugged/fzf/src/tui/ttyname_unix.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
TtyIn	plugged/fzf/src/tui/ttyname_windows.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
Tutorial	plugged/vim-visual-multi/README.md	/^### Tutorial$/;"	S	section:vim-visual-multi
Two key highlighting	plugged/vim-easymotion/README.md	/^### Two key highlighting$/;"	S	chapter:New features in version 2.0
Type	plugged/fzf/src/tui/tui.go	/^	Type       EventType$/;"	m	struct:tui.Event	typeref:typename:EventType
Typefaces	plugged/vimwiki/test/resources/testmarkdown/index.md	/^# Typefaces$/;"	c
U	autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> U <Plug>(calendar_undo_line)$/;"	m
U	plugged/vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UNAME_M	plugged/fzf/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNDERLINE	plugged/vim-visual-multi/test/test.py	/^    UNDERLINE = '\\033[4m'$/;"	v	class:bcolors
UNIDECODE_ALERT_RAISED	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UNSETS	plugged/fzf/test/test_go.rb	/^UNSETS = %w[$/;"	C
UltiSnips	plugged/ultisnips/README.md	/^UltiSnips$/;"	c
UltiSnips#AddFiletypes	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes) abort$/;"	f
UltiSnips#AddSnippetWithPriority	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, prior/;"	f
UltiSnips#Anon	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...) abort$/;"	f
UltiSnips#CanExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanExpandSnippet() abort$/;"	f
UltiSnips#CanJumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpBackwards() abort$/;"	f
UltiSnips#CanJumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpForwards() abort$/;"	f
UltiSnips#CursorMoved	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved() abort$/;"	f
UltiSnips#Edit	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...) abort$/;"	f
UltiSnips#ExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet() abort$/;"	f
UltiSnips#ExpandSnippetOrJump	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump() abort$/;"	f
UltiSnips#FileTypeComplete	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos) abort$/;"	f
UltiSnips#JumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards() abort$/;"	f
UltiSnips#JumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards() abort$/;"	f
UltiSnips#LeavingBuffer	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer() abort$/;"	f
UltiSnips#LeavingInsertMode	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode() abort$/;"	f
UltiSnips#ListSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets() abort$/;"	f
UltiSnips#RefreshSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets() abort$/;"	f
UltiSnips#SaveLastVisualSelection	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range abort$/;"	f
UltiSnips#SnippetsInCurrentScope	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...) abort$/;"	f
UltiSnips#TrackChange	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange() abort$/;"	f
UltiSnips#map_keys#MapKeys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys() abort$/;"	f
UltiSnipsAddFiletypes	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnips_AutoTrigger	plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
Ulti_ExpandOrJump_Res	vimrc	/^function! Ulti_ExpandOrJump_Res() abort$/;"	f
UmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
UnIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! UnIndentByInd(indent)$/;"	f
Underline	plugged/fzf/src/tui/dummy.go	/^	Underline = Attr(1 << 3)$/;"	c	package:tui
Underline	plugged/fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c	package:tui
Undo_ChangesInPlaceholder	plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
Unfinalise	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Unfinalise()$/;"	f
UnfinaliseMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
Unicode	plugged/fzf/src/options.go	/^	Unicode     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
UnimpairedMapTransform	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! UnimpairedMapTransform(algorithm, key) abort$/;"	f
Unwatch	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f	struct:util.EventBox
Up	plugged/fzf/src/tui/tui.go	/^	Up$/;"	c	package:tui
UpdateCount	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool, failedCommand *string) {$/;"	f	struct:fzf.Terminal
UpdateHeader	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f	struct:fzf.Terminal
UpdateList	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger, reset bool) {$/;"	f	struct:fzf.Terminal
UpdateModifiedSnippetWithoutCursorMove1	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
UpdateProgress	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f	struct:fzf.Terminal
Updating	plugged/vim-polyglot/README.md	/^## Updating$/;"	s
Updating the list of processes by pressing CTRL-R	plugged/fzf/ADVANCED.md	/^### Updating the list of processes by pressing CTRL-R$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Upgrading fzf	plugged/fzf/README.md	/^Upgrading fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Urgency	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Urgency(urg)$/;"	f
Usage	plugged/YankAssassin.vim/README.md	/^## Usage$/;"	s	chapter:What is YankAssassin.vim?
Usage	plugged/fzf/README.md	/^Usage$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Usage	plugged/git-messenger.vim/README.md	/^## Usage$/;"	s	chapter:git-messenger.vim
Usage	plugged/incsearch-easymotion.vim/README.md	/^### Usage$/;"	S	chapter:incsearch-easymotion.vim
Usage	plugged/incsearch-fuzzy.vim/README.md	/^### Usage$/;"	S	chapter:incsearch-fuzzy.vim
Usage	plugged/incsearch.vim/README.md	/^Usage$/;"	s
Usage	plugged/vim-asterisk/README.md	/^Usage$/;"	s	chapter:vim-asterisk: * -Improved
Usage	plugged/vim-highlightedyank/README.md	/^## Usage$/;"	s	chapter:vim-highlightedyank
Usage	plugged/vim-indent-object/README.md	/^### Usage$/;"	S	section:vim-indent-object
Usage example for the base features	plugged/vim-easymotion/README.md	/^Usage example for the base features$/;"	c
Use Your Own Map	plugged/ctrlsf.vim/README.md	/^## Use Your Own Map$/;"	s	chapter:ctrlsf.vim
Use vital functions	plugged/vital.vim/README.md	/^### Use vital functions$/;"	S	section:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)""Let's get started
Useful	plugged/calendar.vim/README.md	/^### Useful$/;"	S	section:A calendar application for Vim""Concept
Using Homebrew	plugged/fzf/README.md	/^### Using Homebrew$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Linux package managers	plugged/fzf/README.md	/^### Using Linux package managers$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Makefile	plugged/fzf/BUILD.md	/^### Using Makefile$/;"	S	section:Building fzf""Build instructions
Using [vim-plug](https://github.com/junegunn/vim-plug)	plugged/fzf.vim/README.md	/^### Using [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:fzf :heart: vim""Installation
Using fzf as the secondary filter	plugged/fzf/ADVANCED.md	/^### Using fzf as the secondary filter$/;"	S	section:Advanced fzf examples""Ripgrep integration
Using git	plugged/fzf/README.md	/^### Using git$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using the finder	plugged/fzf/README.md	/^#### Using the finder$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
V	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> V <Plug>(calendar_visual_line)$/;"	m
V	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% V :<line1>,<line2>call <SID>Evglobal(<q-args>)$/;"	c
V	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> V             :call startify#set_batchmode('V')<cr>$/;"	m
VERSION	plugged/fzf/Makefile	/^VERSION        := $(FZF_VERSION)$/;"	m
VERSION	plugged/fzf/Makefile	/^VERSION        := $(shell git describe --abbrev=0 2> \/dev\/null)$/;"	m
VERSION_REGEX	plugged/fzf/Makefile	/^VERSION_REGEX  := $(subst .,\\.,$(VERSION_TRIM))$/;"	m
VERSION_TRIM	plugged/fzf/Makefile	/^VERSION_TRIM   := $(shell sed "s\/-.*\/\/" <<< $(VERSION))$/;"	m
VIM	plugged/vim-highlightedyank/test/test-highlightedyank.bat	/^if defined THEMIS_VIM set VIM=%THEMIS_VIM%$/;"	v
VIM	plugged/vim-highlightedyank/test/test-highlightedyank.bat	/^set VIM=vim$/;"	v
VMClear	plugged/vim-visual-multi/plugin/visual-multi.vim	/^com! -bar VMClear  call vm#hard_reset()$/;"	c
VMDebug	plugged/vim-visual-multi/plugin/visual-multi.vim	/^com! -bar VMDebug  call vm#special#commands#debug()$/;"	c
VMFilterLines	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^  command! -buffer VMFilterLines                  call vm#special#commands#filter_lines()$/;"	c
VMFilterRegions	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^  command! -buffer -bang -nargs=? VMFilterRegions call vm#special#commands#filter_regions(<bang>/;"	c
VMFromSearch	plugged/vim-visual-multi/plugin/visual-multi.vim	/^com! -bang VMFromSearch call vm#special#commands#deprecated('VMFromSearch')$/;"	c
VMInfos	plugged/vim-visual-multi/plugin/visual-multi.vim	/^fun! VMInfos() abort$/;"	f
VMLive	plugged/vim-visual-multi/plugin/visual-multi.vim	/^com! -bar VMLive   call vm#special#commands#live()$/;"	c
VMMassTranspose	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^  command! -buffer VMMassTranspose                call vm#special#commands#mass_transpose()$/;"	c
VMQfix	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^  command! -buffer -bang VMQfix                   call vm#special#commands#qfix(!<bang>0)$/;"	c
VMRegionsToBuffer	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^  command! -buffer VMRegionsToBuffer              call vm#special#commands#regions_to_buffer()$/;"	c
VMRegisters	plugged/vim-visual-multi/plugin/visual-multi.vim	/^com! -bang  -nargs=?       VMRegisters call vm#special#commands#show_registers(<bang>0, <q-args>/;"	c
VMSearch	plugged/vim-visual-multi/plugin/visual-multi.vim	/^com! -range -bang -nargs=? VMSearch    call vm#special#commands#search(<bang>0, <line1>, <line2>/;"	c
VMSort	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^  command! -buffer -nargs=? VMSort                call vm#special#commands#sort(<args>)$/;"	c
VMTheme	plugged/vim-visual-multi/plugin/visual-multi.vim	/^com! -nargs=? -complete=customlist,vm#themes#complete VMTheme call vm#themes#load(<q-args>)$/;"	c
VM_cursormoved	plugged/vim-visual-multi/autoload/vm.vim	/^    augroup VM_cursormoved$/;"	a
VM_global	plugged/vim-visual-multi/autoload/vm.vim	/^    augroup VM_global$/;"	a
VM_insert	plugged/vim-visual-multi/autoload/vm/insert.vim	/^    augroup VM_insert$/;"	a
VM_reset_theme	plugged/vim-visual-multi/autoload/vm/themes.vim	/^augroup VM_reset_theme$/;"	a
VM_start	plugged/vim-visual-multi/plugin/visual-multi.vim	/^augroup VM_start$/;"	a
VWB	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=0 VWB call vimwiki#base#backlinks()$/;"	c
VWS	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VWS call vimwiki#base#search(<q-args>)$/;"	c
ValaCodingStyle	plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar ValaCodingStyle call ValaCodingStyle()$/;"	c
ValaCodingStyle	plugged/vim-polyglot/ftplugin/vala.vim	/^function! ValaCodingStyle() abort$/;"	f
Variables	plugged/git-messenger.vim/README.md	/^### Variables$/;"	S	section:git-messenger.vim""Usage
VbGetIndent	plugged/vim-polyglot/indent/vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
VerifyVimDict1	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
Version	plugged/fzf/src/options.go	/^	Version     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Vim functions	plugged/fzf.vim/README.md	/^#### Vim functions$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Vim meets a next generation application	plugged/calendar.vim/README.md	/^### Vim meets a next generation application$/;"	S	chapter:A calendar application for Vim
Vim motion on speed!	plugged/vim-easymotion/README.md	/^Vim motion on speed!$/;"	c
Vim plugin	plugged/fzf/README.md	/^Vim plugin$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
VimBuffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^class VimBuffer:$/;"	c
VimBufferProxy	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(vim_helper.VimBuffer):$/;"	c
VimConf2014	plugged/incsearch.vim/README.md	/^### VimConf2014$/;"	S	section:Links
VimInterface	plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimPosition	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState:$/;"	c
VimTestCase	plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
VimWiki —— Vim 个人 Wiki 插件	plugged/vimwiki/README-cn.md	/^VimWiki —— Vim 个人 Wiki 插件$/;"	c
VimrunnerPyEvaluateCommandOutput	plugged/vim-visual-multi/test/default/vimrc.vim	/^function! VimrunnerPyEvaluateCommandOutput(command)$/;"	f
VimrunnerPyEvaluateCommandOutput	plugged/vim-visual-multi/test/tests/oO/vimrc.vim	/^function! VimrunnerPyEvaluateCommandOutput(command)$/;"	f
Vimwiki Tests	plugged/vimwiki/test/README.md	/^# Vimwiki Tests$/;"	c
Vimwiki2HTML	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer Vimwiki2HTML$/;"	c
Vimwiki2HTMLBrowse	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer Vimwiki2HTMLBrowse$/;"	c
VimwikiAll2HTML	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -bang VimwikiAll2HTML$/;"	c
VimwikiBacklinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=0 VimwikiBacklinks call vimwiki#base#backlinks()$/;"	c
VimwikiCatUrl	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiCatUrl call vimwiki#html#CatUrl(expand('%:p'))$/;"	c
VimwikiChangeSymbolInListTo	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=1 VimwikiChangeSymbolInListTo$/;"	c
VimwikiChangeSymbolTo	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range -nargs=1 VimwikiChangeSymbolTo$/;"	c
VimwikiCheckLinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiCheckLinks call vimwiki#base#check_links()$/;"	c
VimwikiDecrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiDecrementListItem call vimwiki#lst#decrement_cb(<line1>, <line2>)$/;"	c
VimwikiDeleteFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDeleteFile call vimwiki#base#delete_link()$/;"	c
VimwikiDeleteLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDeleteLink$/;"	c
VimwikiDiaryGenerateLinks	plugged/vimwiki/plugin/vimwiki.vim	/^command! VimwikiDiaryGenerateLinks$/;"	c
VimwikiDiaryIndex	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiDiaryIndex$/;"	c
VimwikiDiaryNextDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDiaryNextDay call vimwiki#diary#goto_next_day()$/;"	c
VimwikiDiaryPrevDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDiaryPrevDay call vimwiki#diary#goto_prev_day()$/;"	c
VimwikiFoldLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! VimwikiFoldLevel(lnum) abort$/;"	f
VimwikiFoldListLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! VimwikiFoldListLevel(lnum) abort$/;"	f
VimwikiFoldText	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! VimwikiFoldText() abort$/;"	f
VimwikiFollowLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiFollowLink call vimwiki#base#follow_link('nosplit', 0, 1)$/;"	c
VimwikiGenerateLinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiGenerateLinks call vimwiki#base#generate_links(1, <f-args>)$/;"	c
VimwikiGenerateTagLinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiGenerateTagLinks call vimwiki#tags#generate_tags(1, <f-args>)$/;"	c
VimwikiGenerateTags	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiGenerateTags$/;"	c
VimwikiGoBackLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiGoBackLink call vimwiki#base#go_back_link()$/;"	c
VimwikiGoto	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiGoto call vimwiki#base#goto(<f-args>)$/;"	c
VimwikiIncrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiIncrementListItem call vimwiki#lst#increment_cb(<line1>, <line2>)$/;"	c
VimwikiIndex	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiIndex$/;"	c
VimwikiLinkConverter	plugged/vimwiki/plugin/vimwiki.vim	/^  function VimwikiLinkConverter(url, source, target)$/;"	f
VimwikiLinkHandler	plugged/vimwiki/plugin/vimwiki.vim	/^  function VimwikiLinkHandler(url)$/;"	f
VimwikiListChangeLvl	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range -nargs=+ VimwikiListChangeLvl$/;"	c
VimwikiListChangeSymbolI	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range -nargs=1 VimwikiListChangeSymbolI$/;"	c
VimwikiListToggle	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiListToggle call vimwiki#lst#toggle_list_item()$/;"	c
VimwikiMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiMakeDiaryNote$/;"	c
VimwikiMakeTomorrowDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiMakeTomorrowDiaryNote$/;"	c
VimwikiMakeYesterdayDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiMakeYesterdayDiaryNote$/;"	c
VimwikiNextLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiNextLink call vimwiki#base#find_next_link()$/;"	c
VimwikiNextTask	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiNextTask call vimwiki#base#find_next_task()$/;"	c
VimwikiNormalizeLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiNormalizeLink call vimwiki#base#normalize_link(<f-args>)$/;"	c
VimwikiPasteUrl	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiPasteUrl call vimwiki#html#PasteUrl(expand('%:p'))$/;"	c
VimwikiPrevLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiPrevLink call vimwiki#base#find_prev_link()$/;"	c
VimwikiRebuildTags	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -bang VimwikiRebuildTags call vimwiki#tags#update_tags(1, '<bang>')$/;"	c
VimwikiRemoveCBInList	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRemoveCBInList call vimwiki#lst#remove_cb_in_list()$/;"	c
VimwikiRemoveSingleCB	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiRemoveSingleCB call vimwiki#lst#remove_cb(<line1>, <line2>)$/;"	c
VimwikiRenameFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenameFile call vimwiki#base#rename_link()$/;"	c
VimwikiRenameLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenameLink$/;"	c
VimwikiRenumberAllLists	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenumberAllLists call vimwiki#lst#adjust_whole_buffer()$/;"	c
VimwikiRenumberList	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenumberList call vimwiki#lst#adjust_numbered_list()$/;"	c
VimwikiReturn	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=+ VimwikiReturn call <SID>CR(<f-args>)$/;"	c
VimwikiSearch	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiSearch call vimwiki#base#search(<q-args>)$/;"	c
VimwikiSearchTags	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiSearchTags VimwikiSearch \/:<args>:\/$/;"	c
VimwikiShowVersion	plugged/vimwiki/plugin/vimwiki.vim	/^command! VimwikiShowVersion call s:get_version()$/;"	c
VimwikiSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiSplitLink call vimwiki#base#follow_link('hsplit', <f-args>)$/;"	c
VimwikiTOC	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTOC call vimwiki#base#table_of_contents(1)$/;"	c
VimwikiTabIndex	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiTabIndex$/;"	c
VimwikiTabMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiTabMakeDiaryNote$/;"	c
VimwikiTable	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiTable call vimwiki#tbl#create(<f-args>)$/;"	c
VimwikiTableAlignQ	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiTableAlignQ call vimwiki#tbl#align_or_cmd('gqq', <f-args>)$/;"	c
VimwikiTableAlignW	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiTableAlignW call vimwiki#tbl#align_or_cmd('gww', <f-args>)$/;"	c
VimwikiTableMoveColumnLeft	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTableMoveColumnLeft call vimwiki#tbl#move_column_left()$/;"	c
VimwikiTableMoveColumnRight	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTableMoveColumnRight call vimwiki#tbl#move_column_right()$/;"	c
VimwikiTabnewLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTabnewLink call vimwiki#base#follow_link('tab', 0, 1)$/;"	c
VimwikiToggleListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiToggleListItem call vimwiki#lst#toggle_cb(<line1>, <line2>)$/;"	c
VimwikiToggleRejectedListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiToggleRejectedListItem$/;"	c
VimwikiUISelect	plugged/vimwiki/plugin/vimwiki.vim	/^command! VimwikiUISelect call vimwiki#base#ui_select()$/;"	c
VimwikiVSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiVSplitLink call vimwiki#base#follow_link('vsplit', <f-args>)$/;"	c
VimwikiWikiIncludeHandler	plugged/vimwiki/plugin/vimwiki.vim	/^  function! VimwikiWikiIncludeHandler(value)$/;"	f
VirtualEdit	plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver:$/;"	c
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
Vital_test_Vim_ScriptLocal_test_i	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/symlink.vim	/^function! Vital_test_Vim_ScriptLocal_test_i() abort$/;"	f
Vital_test_Vim_ScriptLocal_test_i	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/test.vim	/^function! Vital_test_Vim_ScriptLocal_test_i() abort$/;"	f
Vitalize	plugged/vital.vim/plugin/vitalizer.vim	/^command! -nargs=* -complete=customlist,vitalizer#complete Vitalize$/;"	c
VlangIndent	plugged/vim-polyglot/indent/vlang.vim	/^function! VlangIndent(lnum) abort$/;"	f
Vundle (https://github.com/gmarik/vundle)	plugged/vim-easymotion/README.md	/^### Vundle (https:\/\/github.com\/gmarik\/vundle)$/;"	S	section:New features in version 2.0""Installation
W	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> W w$/;"	m
WARNING	plugged/vim-visual-multi/test/test.py	/^    WARNING = '\\033[93m'$/;"	v	class:bcolors
WIN_ESCAPES	plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
Wait	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f	struct:util.EventBox
WaitFor	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f	struct:util.EventBox
WarnIfNotUnfinalised	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
Warning	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Warning(msg) "{{{3$/;"	f
Watch	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f	struct:util.EventBox
What is YankAssassin.vim?	plugged/YankAssassin.vim/README.md	/^# What is YankAssassin.vim?$/;"	c
What vital.vim does for the problems	plugged/vital.vim/README.md	/^## What vital.vim does for the problems$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
What vital.vim provides	plugged/vital.vim/README.md	/^## What vital.vim provides$/;"	s	chapter:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)
What's NYSL? and Why did we chose it?	plugged/vital.vim/README.md	/^### What's NYSL? and Why did we chose it?$/;"	S	section:vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)""License
Where and why backward compatibility is given up?	plugged/ctrlsf.vim/README.md	/^### Where and why backward compatibility is given up?$/;"	S	section:ctrlsf.vim""For user comes from pre v1.0
Where can I find the default components?	plugged/lightline.vim/README.md	/^#### Where can I find the default components?$/;"	t	subsection:lightline.vim""Advanced configuration""more tips
Why yet another clone of powerline?	plugged/lightline.vim/README.md	/^## Why yet another clone of powerline?$/;"	s	chapter:lightline.vim
Why you should use fzf on Vim	plugged/fzf.vim/README.md	/^Why you should use fzf on Vim$/;"	s	chapter:fzf :heart: vim
Why?	plugged/git-messenger.vim/README.md	/^## Why?$/;"	s	chapter:git-messenger.vim
Width	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Width() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Width	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Width() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Width	plugged/fzf/src/tui/tui.go	/^	Width() int$/;"	n	interface:tui.Window	typeref:typename:int
Window	plugged/fzf/src/tui/tui.go	/^type Window interface {$/;"	i	package:tui
Windows	plugged/fzf/README.md	/^### Windows$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
WithAttr	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) WithAttr(attr Attr) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
WithNth	plugged/fzf/src/options.go	/^	WithNth     []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
Within line motion	plugged/vim-easymotion/README.md	/^### Within line motion$/;"	S	chapter:New features in version 2.0
X	autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
X	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) X() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
X	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) X() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
X	plugged/fzf/src/tui/tui.go	/^	X      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
X	plugged/fzf/src/tui/tui.go	/^	X() int$/;"	n	interface:tui.Window	typeref:typename:int
XTermPasteBegin	sources/50-bracketed-paste.vim	/^function! XTermPasteBegin(ret)$/;"	f
Xf86confdeclopt	plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86/;"	c
Xf86confdeclopt	plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
Y	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> Y <Plug>(calendar_yank_line)$/;"	m
Y	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Y() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Y	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Y() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Y	plugged/fzf/src/tui/tui.go	/^	Y      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
Y	plugged/fzf/src/tui/tui.go	/^	Y() int$/;"	n	interface:tui.Window	typeref:typename:int
ZimbuGoEndBlock	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoEndBlock()$/;"	f
ZimbuGoStartBlock	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoStartBlock()$/;"	f
[#	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
[License](LICENSE)	plugged/fzf/README-VIM.md	/^[License](LICENSE)$/;"	s	chapter:FZF Vim integration
[License](LICENSE)	plugged/fzf/README.md	/^[License](LICENSE)$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
[M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR/;"	m
[M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','v')<CR/;"	m
[NeoBundle](https://github.com/Shougo/neobundle.vim)	plugged/lightline.vim/README.md	/^### [NeoBundle](https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	S	section:lightline.vim""Installation
[Pathogen](https://github.com/tpope/vim-pathogen)	plugged/lightline.vim/README.md	/^### [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S	section:lightline.vim""Installation
[Vim packages](https://vimhelp.org/repeat.txt.html#packages) (since Vim 7.4.1528)	plugged/lightline.vim/README.md	/^### [Vim packages](https:\/\/vimhelp.org\/repeat.txt.html#packages) (since Vim 7.4.1528)$/;"	S	section:lightline.vim""Installation
[Vundle](https://github.com/VundleVim/Vundle.vim)	plugged/lightline.vim/README.md	/^### [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim)$/;"	S	section:lightline.vim""Installation
[Wiki](https://github.com/mg979/vim-visual-multi/wiki)	plugged/vim-visual-multi/README.md	/^### [Wiki](https:\/\/github.com\/mg979\/vim-visual-multi\/wiki)$/;"	S	section:vim-visual-multi
[[	autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[[	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> [[ ($/;"	m
[[	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[[ <Plug>(llvm-prev-section-begin)$/;"	m
[[	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','n',v:count1)<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/handlebars.vim	/^xnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','v',v:count1)<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, '')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, visualmode())<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^xnoremap <silent> <buffer> [[ :call rust#Jump('v', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
[[	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [[ :call search('\\c^\\s*begin\\>', 'bW' )<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [[ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'bW' )/;"	m
[[	plugged/vim-polyglot/ftplugin/vb.vim	/^  nnoremap <buffer> <silent> [[ <Cmd>call <SID>VbSearch('^\\s*\\%(\\%(private\\<Bar>public\\)\\s/;"	m
[[	plugged/vim-polyglot/ftplugin/vb.vim	/^  vnoremap <buffer> <silent> [[ <Cmd>call <SID>VbSearch('^\\s*\\%(\\%(private\\<Bar>public\\)\\s/;"	m
[[	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[[	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [[ :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'bW')</;"	m
[[	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> [[ m`:call ZimbuGoStartBlock()<CR>$/;"	m
[]	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> [] [[$/;"	m
[]	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[] <Plug>(llvm-prev-section-end)$/;"	m
[]	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, '')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, visualmode())<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [] :call search('\\c^\\s*end\\W*$', 'bW' )<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'bW' )/;"	m
[]	plugged/vim-polyglot/ftplugin/vb.vim	/^  nnoremap <buffer> <silent> [] <Cmd>call <SID>VbSearch('^\\s*end\\s\\+\\%(function\\<Bar>sub\\)/;"	m
[]	plugged/vim-polyglot/ftplugin/vb.vim	/^  vnoremap <buffer> <silent> [] <Cmd>call <SID>VbSearch('^\\s*end\\s\\+\\%(function\\<Bar>sub\\)/;"	m
[]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [] :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'bW'/;"	m
[b	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[b <Plug>(llvm-move-block-prev)$/;"	m
[c	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> [c <Plug>(GitGutterPrevHunk)$/;"	m
[d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[dein.vim](https://github.com/Shougo/dein.vim)	plugged/lightline.vim/README.md	/^### [dein.vim](https:\/\/github.com\/Shougo\/dein.vim)$/;"	S	section:lightline.vim""Installation
[g	vimrc	/^nmap <silent> [g <Plug>(GitGutterPrevHunk)$/;"	m
[m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR/;"	m
[m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','v')<CR/;"	m
[vim-plug](https://github.com/junegunn/vim-plug)	plugged/lightline.vim/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:lightline.vim""Installation
[{	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
[{	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
]#	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
]M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
]M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','v')<CR>$/;"	m
][	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ][ ]]$/;"	m
][	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>][ <Plug>(llvm-next-section-end)$/;"	m
][	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, '')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, visualmode())<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ][ :call search('\\c^\\s*end\\W*$', 'W' )<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ][ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'W' )</;"	m
][	plugged/vim-polyglot/ftplugin/vb.vim	/^  nnoremap <buffer> <silent> ][ <Cmd>call <SID>VbSearch('^\\s*end\\s\\+\\%(function\\<Bar>sub\\)/;"	m
][	plugged/vim-polyglot/ftplugin/vb.vim	/^  vnoremap <buffer> <silent> ][ <Cmd>call <SID>VbSearch('^\\s*end\\s\\+\\%(function\\<Bar>sub\\)/;"	m
][	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
][	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ][ :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'W')/;"	m
]]	autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
]]	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ]] )$/;"	m
]]	plugged/fzf/shell/completion.bash	/^  if [[ "$(type -t _fzf_comprun 2>&1)" = function ]]; then$/;"	f
]]	plugged/fzf/shell/completion.zsh	/^  if [[ "$(type _fzf_comprun 2>&1)" =~ function ]]; then$/;"	f
]]	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]] <Plug>(llvm-next-section-begin)$/;"	m
]]	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'n',v:count1)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/handlebars.vim	/^xnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'v',v:count1)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, '')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, visualmode())<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^xnoremap <silent> <buffer> ]] :call rust#Jump('v', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
]]	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ]] :call search('\\c^\\s*begin\\>', 'W' )<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ]] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'W' )</;"	m
]]	plugged/vim-polyglot/ftplugin/vb.vim	/^  nnoremap <buffer> <silent> ]] <Cmd>call <SID>VbSearch('^\\s*\\%(\\%(private\\<Bar>public\\)\\s/;"	m
]]	plugged/vim-polyglot/ftplugin/vb.vim	/^  vnoremap <buffer> <silent> ]] <Cmd>call <SID>VbSearch('^\\s*\\%(\\%(private\\<Bar>public\\)\\s/;"	m
]]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
]]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ]] :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'W')<C/;"	m
]]	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> ]] m`:call ZimbuGoEndBlock()<CR>$/;"	m
]b	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]b <Plug>(llvm-move-block-next)$/;"	m
]c	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> ]c <Plug>(GitGutterNextHunk)$/;"	m
]d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]g	vimrc	/^nmap <silent> ]g <Plug>(GitGutterNextHunk)$/;"	m
]m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
]m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','v')<CR>$/;"	m
]}	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
]}	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
^	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ^ 0$/;"	m
_.cons	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.lua	/^function _.cons(x, xs)$/;"	f
_.get	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.lua	/^function _.get(table, key, default)$/;"	f
_.print_without_newline	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.lua	/^function _.print_without_newline(str)$/;"	f
_AddFuncBase	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base:$/;"	c
_BaseGuessing	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing:$/;"	c
_CONDITIONAL	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class _CleverReplace:$/;"	c
_DOLLAR	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_ES_Base	plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FormatoptionsBase	plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_INDENT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_LONG_CASEFOLDINGS	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_ListAllSnippets	plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase:$/;"	c
_MultiLineDefault	plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_ONE_CHAR_CASE_SWITCH	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OS_Base	plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_ParseSnippets_MultiWord	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple("_FrozenPlaceholder", ["current_text", "start", "end"])$/;"	v
_REPLACE_NON_WS	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_Regex_Self	plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SelectModeMappings	plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class _SnippetUtilCursor:$/;"	c
_TABS	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld:$/;"	c
_Tabs	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class _Tabs:$/;"	c
_TextIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class _TextIterator:$/;"	c
_UmlautsBase	plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimTest	plugged/ultisnips/test/test_AnonymousExpansion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Autocommands.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Autotrigger.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Chars.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Choices.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Completion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_ContextSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Editing.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Expand.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Fixes.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Folding.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Format.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Interpolation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_ListSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Mirror.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Movement.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_MultipleMatches.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_ParseSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Plugin.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Recursive.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Selection.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnipMate.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnippetActions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_TabStop.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Transformation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Visual.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VisualContent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^_VisualContent = namedtuple("_VisualContent", ["mode", "text"])$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__WHITESPACE_SPLIT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
__add__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position
__add__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil
__delitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy
__eq__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position
__fsel	plugged/fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fzf_cd__	plugged/fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_comprun	plugged/fzf/shell/completion.bash	/^__fzf_comprun() {$/;"	f
__fzf_comprun	plugged/fzf/shell/completion.zsh	/^__fzf_comprun() {$/;"	f
__fzf_defc	plugged/fzf/shell/completion.bash	/^__fzf_defc() {$/;"	f
__fzf_extract_command	plugged/fzf/shell/completion.zsh	/^__fzf_extract_command() {$/;"	f
__fzf_generic_path_completion	plugged/fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	plugged/fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	plugged/fzf/shell/key-bindings.bash	/^__fzf_history__() {$/;"	f
__fzf_orig_completion	plugged/fzf/shell/completion.bash	/^__fzf_orig_completion() {$/;"	f
__fzf_select__	plugged/fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzfcmd	plugged/fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	plugged/fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
__getitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy
__getitem__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position
__getitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor
__getitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs
__getitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer
__getslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy
__init__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def __init__(self, host, port):$/;"	m	class:RemotePDB
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__($/;"	m	class:SnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__($/;"	m	class:TextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __init__(self, parent, token: ChoicesToken):$/;"	m	class:Choices
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__($/;"	m	class:SnippetInstance
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=""):$/;"	m	class:TempFileManager
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__init__	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^                def __init__(self, max_redirect):$/;"	m	class:DummyClassForLocalScope.main.CustomHTTPRedirectHandler
__init__	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^                def __init__(self, max_redirect):$/;"	m	class:DummyClassForLocalScope.main.CustomHTTPRedirectHandler
__iter__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator
__iter__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator
__le__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position
__le__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __le__(self, other):$/;"	m	class:TextObject
__len__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary
__len__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __len__(self):$/;"	m	class:VimBuffer
__lshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil
__lt__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position
__lt__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject
__ne__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position
__next__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator
__next__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator
__repr__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ChoicesToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __repr__(self):$/;"	m	class:TextObject
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __repr__(self):$/;"	m	class:Choices
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop
__rshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil
__setitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy
__setitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor
__setitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs
__setitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer
__setslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy
__str__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor
__sub__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position
_action_context	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_add_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_apply_change	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_ask_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_before_test	plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_cache	plugged/fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v	package:fzf	typeref:typename:ChunkCache
_calc_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _calc_end(text, start):$/;"	f
_can_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_check_if_still_inside_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_version	plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _chomp(string):$/;"	f
_colorToAttribute	plugged/fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v	package:tui
_context_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_create	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def _create(cls):$/;"	m	class:RemotePDB
_create_file	plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_transformations	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_current_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_del_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_disable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:Choices
_do_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text	file:
_do_print	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=""):$/;"	f	function:echo_to_hierarchy	file:
_do_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_editable_children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_enable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_eval_code	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_execute_action	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _execute_action(self, action, context, additional_locals={}):$/;"	m	class:SnippetDefinition
_extra_vim_config	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpand_DoNotClobberDefaultRegister
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	plugged/ultisnips/test/test_ListSnippets.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ListAllAvailable_Disabled_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:snipMate_Disabled
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:TestNonEmptyLangmap_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_find_closing_brace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_recursive	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	member:SnippetInstance.update_textobjects	file:
_fzf_alias_completion	plugged/fzf/shell/completion.bash	/^_fzf_alias_completion() {$/;"	f
_fzf_compgen_dir	plugged/fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	plugged/fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	plugged/fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	plugged/fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	plugged/fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	plugged/fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill	plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill_post	plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill_post() {$/;"	f
_fzf_complete_ssh	plugged/fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	plugged/fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	plugged/fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	plugged/fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_dir_completion	plugged/fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	plugged/fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	plugged/fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	plugged/fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	plugged/fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_host_completion	plugged/fzf/shell/completion.bash	/^_fzf_host_completion() {$/;"	f
_fzf_opts_completion	plugged/fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_path_completion	plugged/fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	plugged/fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_fzf_proc_completion	plugged/fzf/shell/completion.bash	/^_fzf_proc_completion() {$/;"	f
_fzf_proc_completion_post	plugged/fzf/shell/completion.bash	/^_fzf_proc_completion_post() {$/;"	f
_fzf_setup_completion	plugged/fzf/shell/completion.bash	/^_fzf_setup_completion() {$/;"	f
_fzf_statusline	plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_fzf_var_completion	plugged/fzf/shell/completion.bash	/^_fzf_var_completion() {$/;"	f
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_choices_placeholder	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _get_choices_placeholder(self) -> str:$/;"	m	class:Choices	typeref:typename:str
_get_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_existing_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_line_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _get_pos(name):$/;"	f
_get_potential_snippet_filenames_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _get_potential_snippet_filenames_to_edit($/;"	f	typeref:typename:Set[str]
_get_prev_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _get_tmp():$/;"	f
_get_unescaped_choice_item	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _get_unescaped_choice_item(self, escaped_choice_item):$/;"	m	class:ChoicesToken
_handle_failure	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_snippet_or_global	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_is_pos_zero	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _is_pos_zero(pos):$/;"	f
_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, jump_direction: JumpDirection):$/;"	m	class:SnippetManager
_leaving_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_link_file	plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_load_snippets_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_make_debug_exception	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _make_debug_exception(self, e, code=""):$/;"	m	class:SnippetDefinition
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_multi_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _multi_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_needs_update	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_one_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _one_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ChoicesToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_number	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_patternCache	plugged/fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v	package:fzf	typeref:typename:map[string]*Pattern
_place_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	member:SnippetInstance.replace_initial_text	file:
_pm	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def _pm(self, tb):$/;"	m	class:RemotePDB
_prevMouseButton	plugged/fzf/src/tui/tcell.go	/^	_prevMouseButton tcell.ButtonMask$/;"	v	package:tui	typeref:typename:tcell.ButtonMask
_re_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_read_text_file	plugged/ultisnips/test/vim_interface.py	/^def _read_text_file(filename):$/;"	f
_refresh_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_reinit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_report_exception	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def _report_exception(self, msg, e):$/;"	f
_reset	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_run_shell_command	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_save_last_visual_selection	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_screen	plugged/fzf/src/tui/tcell.go	/^	_screen          tcell.Screen$/;"	v	package:tui	typeref:typename:tcell.Screen
_select_and_create_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _select_and_create_file_to_edit(potentials: Set[str]) -> str:$/;"	f	typeref:typename:str
_send	plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_set_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _set_pos(name, pos):$/;"	f
_setup_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_show_user_warning	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _show_user_warning(msg):$/;"	f
_shutdown	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def _shutdown(self):$/;"	m	class:RemotePDB
_snip_quote	plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_splitRegex	plugged/fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
_split_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _split_conditional(string):$/;"	f
_splitall	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_teardown_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_thread_run	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^        def _thread_run():$/;"	f	member:RemotePDB.pm	file:
_track_change	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_unmap_select_mode_mapping	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _update(self, done, buf):$/;"	m	class:Choices
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_vim_dec	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_dec(string):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_enc(bytearray):$/;"	f
_vim_line_with_eol	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^        _vim_line_with_eol = lambda ln: vim_helper.buf[ln] + "\\n"$/;"	f	member:VisualContentPreserver.conserve	file:
_words_for_line	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
`--filter` will not block when sort is disabled	plugged/fzf/CHANGELOG.md	/^#### `--filter` will not block when sort is disabled$/;"	t	subsection:CHANGELOG""0.9.4""Improvements
`--height`	plugged/fzf/ADVANCED.md	/^### `--height`$/;"	S	section:Advanced fzf examples""Screen Layout
`:FZF[!]`	plugged/fzf/README-VIM.md	/^`:FZF[!]`$/;"	s	chapter:FZF Vim integration
`fzf#run`	plugged/fzf/README-VIM.md	/^`fzf#run`$/;"	s	chapter:FZF Vim integration
`fzf#wrap`	plugged/fzf/README-VIM.md	/^`fzf#wrap`$/;"	s	chapter:FZF Vim integration
`fzf-tmux`	plugged/fzf/ADVANCED.md	/^### `fzf-tmux`$/;"	S	section:Advanced fzf examples""Screen Layout
`fzf-tmux` script	plugged/fzf/README.md	/^`fzf-tmux` script$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
`g:git_messenger_always_into_popup` (Default: `v:false`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_always_into_popup` (Default: `v:false`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_close_on_cursor_moved` (Default: `v:true`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_close_on_cursor_moved` (Default: `v:true`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_conceal_word_diff_marker` (Default: `v:true`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_conceal_word_diff_marker` (Default: `v:true`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_date_format` (Default: `"%c"`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_date_format` (Default: `"%c"`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_extra_blame_args` (Default: `""`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_extra_blame_args` (Default: `""`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_floating_win_opts` (Default `{}`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_floating_win_opts` (Default `{}`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_git_command` (Default: `"git"`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_git_command` (Default: `"git"`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_include_diff` (Default: `"none"`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_include_diff` (Default: `"none"`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_into_popup_after_show` (Default: `v:true`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_into_popup_after_show` (Default: `v:true`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_max_popup_height` (Default: `v:null`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_max_popup_height` (Default: `v:null`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_max_popup_width` (Default: `v:null`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_max_popup_width` (Default: `v:null`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_no_default_mappings` (Default: `v:false`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_no_default_mappings` (Default: `v:false`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_popup_content_margins` (Default: `v:true`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_popup_content_margins` (Default: `v:true`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
`g:git_messenger_preview_mods` (Default: `""`)	plugged/git-messenger.vim/README.md	/^#### `g:git_messenger_preview_mods` (Default: `""`)$/;"	t	subsection:git-messenger.vim""Usage""Variables
a	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> a <Plug>(calendar_start_insert_append)$/;"	m
a	plugged/fzf/src/terminal.go	/^	a string$/;"	m	struct:fzf.action	typeref:typename:string
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "First Line\\nSecond Line"$/;"	v	class:TestWithNewline
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestCheapDelete
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestRealLife1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo Blah mitte=sdfdsfsd\\nhallo kjsdhfjksdhfkjhsdfkh mittekjshdkfhkhsdfdsf"$/;"	v	class:TestCrash
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo End Beginning"$/;"	v	class:TestRealLife
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "", ""$/;"	v	class:TestEmptyString
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "Hello", "Hello\\nWorld\\nWorld\\nWorld"$/;"	v	class:TestLotsaNewlines
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abc", "def"$/;"	v	class:TestNoSubstring
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abcdef", "abcdef"$/;"	v	class:TestAllMatch
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "hasomelongertextbl", "hol"$/;"	v	class:TestCommonCharacters
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_BackspaceOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_DeleteOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a: List[str] = []$/;"	v	class:TestGuessing_Noop0	typeref:typename:List[str]
a	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap a <Nop>$/;"	m
aI	plugged/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>aI :<C-u>cal <Sid>HandleTextObjectMapping(0, 1, 0, [line("."), line("."), col("/;"	m
aI	plugged/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>aI :<C-u>cal <Sid>HandleTextObjectMapping(0, 1, 1, [line("'<"), line("'>"), col/;"	m
aM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
aS	plugged/ultisnips/ftplugin/snippets.vim	/^xnoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
abstract classes	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*abstract class[ \\t]+([a-zA-Z0-9_]+)\/\\2\/a,abstra/;"	k	langdef:typescript
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-v/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby'/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_r/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	plugged/vim-polyglot/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|tex/;"	v
ac	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ac <Plug>(GitGutterTextObjectOuterPending)$/;"	m
ac	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ac <Plug>(GitGutterTextObjectOuterVisual)$/;"	m
access	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^            def access():$/;"	f	member:DummyClassForLocalScope.main	file:
access	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^            def access():$/;"	f	member:DummyClassForLocalScope.main	file:
actAbort	plugged/fzf/src/terminal.go	/^	actAbort$/;"	c	package:fzf
actAccept	plugged/fzf/src/terminal.go	/^	actAccept$/;"	c	package:fzf
actAcceptNonEmpty	plugged/fzf/src/terminal.go	/^	actAcceptNonEmpty$/;"	c	package:fzf
actBackwardChar	plugged/fzf/src/terminal.go	/^	actBackwardChar$/;"	c	package:fzf
actBackwardDeleteChar	plugged/fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c	package:fzf
actBackwardDeleteCharEOF	plugged/fzf/src/terminal.go	/^	actBackwardDeleteCharEOF$/;"	c	package:fzf
actBackwardKillWord	plugged/fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c	package:fzf
actBackwardWord	plugged/fzf/src/terminal.go	/^	actBackwardWord$/;"	c	package:fzf
actBeginningOfLine	plugged/fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c	package:fzf
actCancel	plugged/fzf/src/terminal.go	/^	actCancel$/;"	c	package:fzf
actChangePreview	plugged/fzf/src/terminal.go	/^	actChangePreview$/;"	c	package:fzf
actChangePreviewWindow	plugged/fzf/src/terminal.go	/^	actChangePreviewWindow$/;"	c	package:fzf
actChangePrompt	plugged/fzf/src/terminal.go	/^	actChangePrompt$/;"	c	package:fzf
actClearQuery	plugged/fzf/src/terminal.go	/^	actClearQuery$/;"	c	package:fzf
actClearScreen	plugged/fzf/src/terminal.go	/^	actClearScreen$/;"	c	package:fzf
actClearSelection	plugged/fzf/src/terminal.go	/^	actClearSelection$/;"	c	package:fzf
actClose	plugged/fzf/src/terminal.go	/^	actClose$/;"	c	package:fzf
actDeleteChar	plugged/fzf/src/terminal.go	/^	actDeleteChar$/;"	c	package:fzf
actDeleteCharEOF	plugged/fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c	package:fzf
actDeselect	plugged/fzf/src/terminal.go	/^	actDeselect$/;"	c	package:fzf
actDeselectAll	plugged/fzf/src/terminal.go	/^	actDeselectAll$/;"	c	package:fzf
actDisableSearch	plugged/fzf/src/terminal.go	/^	actDisableSearch$/;"	c	package:fzf
actDown	plugged/fzf/src/terminal.go	/^	actDown$/;"	c	package:fzf
actEnableSearch	plugged/fzf/src/terminal.go	/^	actEnableSearch$/;"	c	package:fzf
actEndOfLine	plugged/fzf/src/terminal.go	/^	actEndOfLine$/;"	c	package:fzf
actExecute	plugged/fzf/src/terminal.go	/^	actExecute$/;"	c	package:fzf
actExecuteMulti	plugged/fzf/src/terminal.go	/^	actExecuteMulti \/\/ Deprecated$/;"	c	package:fzf
actExecuteSilent	plugged/fzf/src/terminal.go	/^	actExecuteSilent$/;"	c	package:fzf
actFirst	plugged/fzf/src/terminal.go	/^	actFirst$/;"	c	package:fzf
actForwardChar	plugged/fzf/src/terminal.go	/^	actForwardChar$/;"	c	package:fzf
actForwardWord	plugged/fzf/src/terminal.go	/^	actForwardWord$/;"	c	package:fzf
actHalfPageDown	plugged/fzf/src/terminal.go	/^	actHalfPageDown$/;"	c	package:fzf
actHalfPageUp	plugged/fzf/src/terminal.go	/^	actHalfPageUp$/;"	c	package:fzf
actIgnore	plugged/fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c	package:fzf	typeref:type:actionType
actInvalid	plugged/fzf/src/terminal.go	/^	actInvalid$/;"	c	package:fzf
actJump	plugged/fzf/src/terminal.go	/^	actJump$/;"	c	package:fzf
actJumpAccept	plugged/fzf/src/terminal.go	/^	actJumpAccept$/;"	c	package:fzf
actKillLine	plugged/fzf/src/terminal.go	/^	actKillLine$/;"	c	package:fzf
actKillWord	plugged/fzf/src/terminal.go	/^	actKillWord$/;"	c	package:fzf
actLast	plugged/fzf/src/terminal.go	/^	actLast$/;"	c	package:fzf
actMouse	plugged/fzf/src/terminal.go	/^	actMouse$/;"	c	package:fzf
actNextHistory	plugged/fzf/src/terminal.go	/^	actNextHistory$/;"	c	package:fzf
actPageDown	plugged/fzf/src/terminal.go	/^	actPageDown$/;"	c	package:fzf
actPageUp	plugged/fzf/src/terminal.go	/^	actPageUp$/;"	c	package:fzf
actPreview	plugged/fzf/src/terminal.go	/^	actPreview$/;"	c	package:fzf
actPreviewBottom	plugged/fzf/src/terminal.go	/^	actPreviewBottom$/;"	c	package:fzf
actPreviewDown	plugged/fzf/src/terminal.go	/^	actPreviewDown$/;"	c	package:fzf
actPreviewHalfPageDown	plugged/fzf/src/terminal.go	/^	actPreviewHalfPageDown$/;"	c	package:fzf
actPreviewHalfPageUp	plugged/fzf/src/terminal.go	/^	actPreviewHalfPageUp$/;"	c	package:fzf
actPreviewPageDown	plugged/fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c	package:fzf
actPreviewPageUp	plugged/fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c	package:fzf
actPreviewTop	plugged/fzf/src/terminal.go	/^	actPreviewTop$/;"	c	package:fzf
actPreviewUp	plugged/fzf/src/terminal.go	/^	actPreviewUp$/;"	c	package:fzf
actPreviousHistory	plugged/fzf/src/terminal.go	/^	actPreviousHistory$/;"	c	package:fzf
actPrintQuery	plugged/fzf/src/terminal.go	/^	actPrintQuery$/;"	c	package:fzf
actRefreshPreview	plugged/fzf/src/terminal.go	/^	actRefreshPreview$/;"	c	package:fzf
actReload	plugged/fzf/src/terminal.go	/^	actReload$/;"	c	package:fzf
actReplaceQuery	plugged/fzf/src/terminal.go	/^	actReplaceQuery$/;"	c	package:fzf
actRune	plugged/fzf/src/terminal.go	/^	actRune$/;"	c	package:fzf
actSelect	plugged/fzf/src/terminal.go	/^	actSelect$/;"	c	package:fzf
actSelectAll	plugged/fzf/src/terminal.go	/^	actSelectAll$/;"	c	package:fzf
actSigStop	plugged/fzf/src/terminal.go	/^	actSigStop$/;"	c	package:fzf
actToggle	plugged/fzf/src/terminal.go	/^	actToggle$/;"	c	package:fzf
actToggleAll	plugged/fzf/src/terminal.go	/^	actToggleAll$/;"	c	package:fzf
actToggleDown	plugged/fzf/src/terminal.go	/^	actToggleDown$/;"	c	package:fzf
actToggleIn	plugged/fzf/src/terminal.go	/^	actToggleIn$/;"	c	package:fzf
actToggleOut	plugged/fzf/src/terminal.go	/^	actToggleOut$/;"	c	package:fzf
actTogglePreview	plugged/fzf/src/terminal.go	/^	actTogglePreview$/;"	c	package:fzf
actTogglePreviewWrap	plugged/fzf/src/terminal.go	/^	actTogglePreviewWrap$/;"	c	package:fzf
actToggleSearch	plugged/fzf/src/terminal.go	/^	actToggleSearch$/;"	c	package:fzf
actToggleSort	plugged/fzf/src/terminal.go	/^	actToggleSort$/;"	c	package:fzf
actToggleUp	plugged/fzf/src/terminal.go	/^	actToggleUp$/;"	c	package:fzf
actUnbind	plugged/fzf/src/terminal.go	/^	actUnbind$/;"	c	package:fzf
actUnixLineDiscard	plugged/fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c	package:fzf
actUnixWordRubout	plugged/fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c	package:fzf
actUp	plugged/fzf/src/terminal.go	/^	actUp$/;"	c	package:fzf
actYank	plugged/fzf/src/terminal.go	/^	actYank$/;"	c	package:fzf
action	plugged/fzf/src/terminal.go	/^type action struct {$/;"	s	package:fzf
actionType	plugged/fzf/src/terminal.go	/^type actionType int$/;"	t	package:fzf	typeref:typename:int
activeTempFiles	plugged/fzf/src/terminal.go	/^var activeTempFiles []string$/;"	v	package:fzf	typeref:typename:[]string
ada#Completion	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Insert_Backspace	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#Jump_Tag	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#List_Tag	plugged/vim-polyglot/autoload/ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Map_Menu	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
ada#Pretty_Print_Folding	plugged/vim-polyglot/autoload/ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Session	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
ada#Switch_Syntax_Option	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#User_Complete	plugged/vim-polyglot/autoload/ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Word	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Word (...)$/;"	f
ada_session	plugged/vim-polyglot/autoload/ada.vim	/^	 augroup ada_session$/;"	a
add_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, filetypes: str):$/;"	m	class:SnippetManager
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet($/;"	m	class:SnippetManager
ae	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
ae	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  xnoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
ai	plugged/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>ai :<C-u>cal <Sid>HandleTextObjectMapping(0, 0, 0, [line("."), line("."), col("/;"	m
ai	plugged/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>ai :<C-u>cal <Sid>HandleTextObjectMapping(0, 0, 1, [line("'<"), line("'>"), col/;"	m
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
algo	plugged/fzf/src/algo/algo.go	/^package algo$/;"	p
algo	plugged/fzf/src/algo/algo_test.go	/^package algo$/;"	p
algo	plugged/fzf/src/algo/normalize.go	/^package algo$/;"	p
all	plugged/fzf/Makefile	/^all: target\/$(BINARY)$/;"	t
allItems	plugged/fzf/src/terminal_test.go	/^	allItems []*Item$/;"	m	struct:fzf.give	typeref:typename:[]*Item
alloc16	plugged/fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int) (int, []int16) {$/;"	f	package:algo	typeref:typename:(int, []int16)
alloc32	plugged/fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int) (int, []int32) {$/;"	f	package:algo	typeref:typename:(int, []int32)
am	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
am	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
ansi	plugged/fzf/src/terminal.go	/^	ansi               bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
ansiBenchmarkString	plugged/fzf/src/ansi_test.go	/^const ansiBenchmarkString = "\\x1b[38;5;81m\\x1b[01;31m\\x1b[Kkernel\/\\x1b[0m\\x1b[38;5;81mbpf\//;"	c	package:fzf
ansiOffset	plugged/fzf/src/ansi.go	/^type ansiOffset struct {$/;"	s	package:fzf
ansiRegexReference	plugged/fzf/src/ansi_test.go	/^var ansiRegexReference = regexp.MustCompile("(?:\\x1b[\\\\[()][0-9;]*[a-zA-Z@]|\\x1b][0-9];[[:pr/;"	v	package:fzf
ansiState	plugged/fzf/src/ansi.go	/^type ansiState struct {$/;"	s	package:fzf
any_include?	plugged/fzf/test/test_go.rb	/^          def any_include?(val)$/;"	f	method:Tmux.until
append	plugged/fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f	struct:fzf.History	typeref:typename:error
append	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
append_line	plugged/fzf/install	/^append_line() {$/;"	f
apprentice	plugged/lightline.vim/colorscheme.md	/^### apprentice$/;"	S	chapter:Available Colorschemes
apps_dir_from_src	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
args	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  var args, fs, less, options, parser;$/;"	v
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ""$/;"	v	class:_AnonBase
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	plugged/ultisnips/test/test_Autocommands.py	/^    args = ""$/;"	v	class:Autocommands
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ""$/;"	v	class:_AddFuncBase
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
args=	plugged/fzf/bin/fzf-tmux	/^      args=()$/;"	f
args=	plugged/fzf/bin/fzf-tmux	/^args=()$/;"	f
args=	plugged/fzf/shell/completion.bash	/^    args=()$/;"	f
args=	plugged/fzf/shell/completion.zsh	/^    args=()$/;"	f
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, widget_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = global_states_and_properties$/;"	v
aria_attributes_value	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
asciiFuzzyIndex	plugged/fzf/src/algo/algo.go	/^func asciiFuzzyIndex(input *util.Chars, pattern []rune, caseSensitive bool) int {$/;"	f	package:algo	typeref:typename:int
ask	plugged/fzf/install	/^ask() {$/;"	f
ask	plugged/fzf/uninstall	/^ask() {$/;"	f
assert	plugged/fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f	package:fzf
assert	plugged/fzf/src/tui/tcell_test.go	/^func assert(t *testing.T, context string, got interface{}, want interface{}) bool {$/;"	f	package:tui	typeref:typename:bool
assertMatch	plugged/fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sid/;"	f	package:algo
assertMatch2	plugged/fzf/src/algo/algo_test.go	/^func assertMatch2(t *testing.T, fun Algo, caseSensitive, normalize, forward bool, input, pattern/;"	f	package:algo
asterisk#do	plugged/vim-asterisk/autoload/asterisk.vim	/^function! asterisk#do(mode, config) abort$/;"	f
asterisk#r	plugged/vim-asterisk/autoload/asterisk.vim	/^function! asterisk#r() abort$/;"	f
at	plugged/fzf/src/terminal.go	/^	at   time.Time$/;"	m	struct:fzf.selectedItem	typeref:typename:time.Time
at	plugged/vim-polyglot/syntax/sed.vim	/^let __at = char2nr("@")$/;"	v
atof	plugged/fzf/src/options.go	/^func atof(str string) float64 {$/;"	f	package:fzf	typeref:typename:float64
atoi	plugged/fzf/src/options.go	/^func atoi(str string) int {$/;"	f	package:fzf	typeref:typename:int
atoi	plugged/fzf/src/tui/light.go	/^func atoi(s string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
attr	plugged/fzf/src/ansi.go	/^	attr tui.Attr$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Attr
attr	plugged/fzf/src/tui/tui.go	/^	attr Attr$/;"	m	struct:tui.ColorPair	typeref:typename:Attr
attrCodes	plugged/fzf/src/tui/light.go	/^func attrCodes(attr Attr) []string {$/;"	f	package:tui	typeref:typename:[]string
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
autofill_tokens	plugged/vim-polyglot/autoload/xml/html5.vim	/^let autofill_tokens = ['on', 'off', 'name', 'honorific-prefix', 'given-name', 'additional-name',/;"	v
awkBlack	plugged/fzf/src/tokenizer.go	/^	awkBlack$/;"	c	package:fzf
awkNil	plugged/fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c	package:fzf
awkTokenizer	plugged/fzf/src/tokenizer.go	/^func awkTokenizer(input string) ([]string, int) {$/;"	f	package:fzf	typeref:typename:([]string, int)
awkWhite	plugged/fzf/src/tokenizer.go	/^	awkWhite$/;"	c	package:fzf
ayu_dark	plugged/lightline.vim/colorscheme.md	/^### ayu_dark$/;"	S	chapter:Available Colorschemes
ayu_light	plugged/lightline.vim/colorscheme.md	/^### ayu_light$/;"	S	chapter:Available Colorschemes
ayu_mirage	plugged/lightline.vim/colorscheme.md	/^### ayu_mirage$/;"	S	chapter:Available Colorschemes
b	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> b <Plug>(calendar_prev)$/;"	m
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "", ""$/;"	v	class:TestEmptyString
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "Hello", "Hello\\nWorld\\nWorld\\nWorld"$/;"	v	class:TestLotsaNewlines
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abc", "def"$/;"	v	class:TestNoSubstring
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abcdef", "abcdef"$/;"	v	class:TestAllMatch
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "hasomelongertextbl", "hol"$/;"	v	class:TestCommonCharacters
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_BackspaceOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_DeleteOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne Hinten"$/;"	v	class:TestCheapDelete
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne hallo  Hinten"$/;"	v	class:TestRealLife1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo Blah mitte=sdfdsfsd\\nhallo b mittekjshdkfhkhsdfdsf"$/;"	v	class:TestCrash
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo End t"$/;"	v	class:TestRealLife
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "n"$/;"	v	class:TestWithNewline
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b: List[str] = []$/;"	v	class:TestGuessing_Noop0	typeref:typename:List[str]
b	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map b <Plug>(easymotion-b)$/;"	m
b	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap b <Plug>(easymotion-b)$/;"	m
b	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> b             :call startify#set_mark('B')<cr>$/;"	m
b:	plugged/vim-polyglot/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:AutoPairs = { '{%': '%}' }$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:AutoPairs = {$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:AutoPairs = {'(':')', '[':']', '{':'}','"':'"', '`':'`'}$/;"	v
b:Xsl_SyntaxFold_by	plugged/vim-polyglot/syntax/xsl.vim	/^	let b:Xsl_SyntaxFold_by=''$/;"	v
b:bdf_minlines	plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:block_begin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_begin = '\\<\\(do$\\|fn\\>\\)'$/;"	v
b:block_end	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_end = '\\<end\\>'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/aap.vim	/^  let b:browsefilter = "Aap Recipe Files (*.aap)\\t*.aap\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/abap.vim	/^  let b:browsefilter = "ABAP Source Files (*.abap)\\t*.abap\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:browsefilter = "Awk Source Files (*.awk,*.gawk)\\t*.awk;*.gawk\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/basic.vim	/^  let b:browsefilter = "BASIC Source Files (*.bas)\\t*.bas\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:browsefilter = "All Files\\t*\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/diff.vim	/^  let b:browsefilter = "Diff Files (*.diff)\\t*.diff\\nPatch Files (*.patch)\\t*.h\\nAll Files (/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:browsefilter='eCrystal Files (*.ecr)\\t*.ecr\\n' . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:browsefilter = "Falcon Source Files (*.fal *.ftd)\\t*.fal;*.ftd\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn)\\t*./;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browse/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:browsefilter = "J Script Files (*.ijs)\\t*.ijs\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:browsefilter = "Julia Source Files (*.jl)\\t*.jl\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/meson.vim	/^  let b:browsefilter = "Meson Build Files (meson.build)\\tmeson.build\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/modula2.vim	/^  let b:browsefilter = "Modula-2 Source Files (*.def *.mod)\\t*.def;*.mod\\n" ..$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/modula3.vim	/^  let b:browsefilter = "Modula-3 Source Files (*.m3)\\t*.m3\\n" ..$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/openscad.vim	/^    let b:browsefilter = "OpenSCAD Source Files (*.scad)\\t*.scad\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pascal.vim	/^  let b:browsefilter = "Pascal Source Files (*.pas *.pp *.inc)\\t*.pas;*.pp;*.inc\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1.vim	/^	let b:browsefilter =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^  let b:browsefilter = $/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/qml.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/tidy.vim	/^  let b:browsefilter = "HTML Tidy Files (tidyrc, .tidyrc, tidy.conf)\\ttidyrc;.tidyrc;tidy.conf\\/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/vala.vim	/^  let b:browsefilter = "Vala Source Files (*.vala)\\t*.vala\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/vb.vim	/^  let b:browsefilter = "Visual Basic Source Files (*.bas)\\t*.bas\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 200	" mostly for multiline strings$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 400	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:comment_end	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_end = '\\(^\\s*'.b:comment_leader.'.*\\n\\)'.$/;"	v
b:comment_jump_over	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_leader = '\\(--\\\\|\\\/\\\/\\\\|\\*\\\\|\\\/\\*\\\\|\\*\\\/\\)'$/;"	v
b:comment_skip_back	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_start  = '^\\(\\s*'.b:comment_leader.'.*\\n\\)\\@<!'.$/;"	v
b:commentary_format	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:commentary_format = "# %s"           " for tpope\/vim-commentary$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:crystal_no_expensive	plugged/vim-polyglot/syntax/crystal.vim	/^  let b:crystal_no_expensive = 1$/;"	v
b:csv_end	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_end   = get(g:, 'csv_end', line('$'))$/;"	v
b:csv_result	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_result = ''$/;"	v
b:csv_start	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_start = get(g:, 'csv_start', 1)$/;"	v
b:cucumber_root	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
b:current_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	plugged/vim-polyglot/indent/pgsql.vim	/^let b:current_indent = "pgsql"$/;"	v
b:current_loading_main_syntax	plugged/vim-polyglot/syntax/svelte.vim	/^let b:current_loading_main_syntax = 'svelte'$/;"	v
b:current_syntax	plugged/calendar.vim/syntax/calendar.vim	/^let b:current_syntax = 'calendar'$/;"	v
b:current_syntax	plugged/ctrlsf.vim/syntax/ctrlsf.vim	/^let b:current_syntax = 'ctrlsf'$/;"	v
b:current_syntax	plugged/git-messenger.vim/syntax/gitmessengerpopup.vim	/^let b:current_syntax = 'gitmessengerpopup'$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	plugged/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/haskell.vim	/^let b:current_syntax = old_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^let b:current_syntax = 'javascript.jsx'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/mdx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/rescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/rspec.vim	/^let b:current_syntax = 'rspec'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^let b:current_syntax = 'typescript.tsx'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/8th.vim	/^let b:current_syntax = "8th"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/Jenkinsfile.vim	/^let b:current_syntax = 'Jenkinsfile'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aidl.vim	/^let b:current_syntax = "aidl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = "ansible"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible_hosts.vim	/^let b:current_syntax = "ansible_hosts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apiblueprint.vim	/^let b:current_syntax = 'apiblueprint'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aptconf.vim	/^let b:current_syntax = "aptconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asl.vim	/^let b:current_syntax = "asl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/autodoc.vim	/^let b:current_syntax = "autodoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/autoit.vim	/^let b:current_syntax = "autoit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/automake.vim	/^let b:current_syntax = 'automake'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/brewfile.vim	/^let b:current_syntax = "brewfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bsdl.vim	/^let b:current_syntax = "bsdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bzl.vim	/^let b:current_syntax = 'bzl'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cabal-1.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cabal-2.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/caddyfile.vim	/^let b:current_syntax = "caddyfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/carp.vim	/^let b:current_syntax = "carp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cf.vim	/^let b:current_syntax = "cfml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmod.vim	/^let b:current_syntax = "cmod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cql.vim	/^let b:current_syntax = "cql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cryptol.vim	/^let b:current_syntax = "cryptol"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crystal.vim	/^let b:current_syntax = 'crystal'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cs.vim	/^let b:current_syntax = 'cs'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csdl.vim	/^let b:current_syntax = "csdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csv.vim	/^let b:current_syntax="csv"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuesheet.vim	/^let b:current_syntax='cuesheet'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dart.vim	/^let b:current_syntax = 'dart'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dcov.vim	/^let b:current_syntax = "dcov"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ddoc.vim	/^    let b:current_syntax = "ddoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debchangelog.vim	/^let b:current_syntax = 'debchangelog'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debcontrol.vim	/^let b:current_syntax = 'debcontrol'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debcopyright.vim	/^let b:current_syntax = 'debcopyright'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debsources.vim	/^let b:current_syntax = 'debsources'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dhall.vim	/^let b:current_syntax = 'dhall'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dnsmasq.vim	/^let b:current_syntax = "dnsmasq"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/docker-compose.vim	/^let b:current_syntax = "dockercompose"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dsdl.vim	/^let b:current_syntax = "dsdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dune.vim	/^let b:current_syntax = "dune"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ecrystal.vim	/^let b:current_syntax = 'ecrystal'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elm.vim	/^let b:current_syntax = 'elm'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ember-script.vim	/^let b:current_syntax = 'ember-script'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^let b:current_syntax = 'emblem'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/epuppet.vim	/^let b:current_syntax = 'epuppet'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^let b:current_syntax = matchstr(&syntax, '^.*\\<eruby\\>')$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esmtprc.vim	/^let b:current_syntax = "esmtprc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/falcon.vim	/^let b:current_syntax = "falcon"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fbs.vim	/^let b:current_syntax = "fbs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fennel.vim	/^let b:current_syntax = "fennel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ferm.vim	/^let b:current_syntax = "ferm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fish.vim	/^let b:current_syntax = 'fish'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fsharp.vim	/^let b:current_syntax = 'fsharp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdscript3.vim	/^let b:current_syntax = "gdscript3"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitignore.vim	/^let b:current_syntax = 'gitignore'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gleam.vim	/^let b:current_syntax = "gleam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/glsl.vim	/^  let b:current_syntax = "glsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gmpl.vim	/^let b:current_syntax = "gmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gnash.vim	/^let b:current_syntax = "gnash"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugoutput.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugstacktrace.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugvariables.vim	/^let b:current_syntax = "godebugvariables"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gomod.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gosum.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/graphql.vim	/^let b:current_syntax = 'graphql'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gsl.vim	/^let b:current_syntax = "gsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/handlebars.vim	/^let b:current_syntax = "handlebars"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haproxy.vim	/^let b:current_syntax = "haproxy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haxe.vim	/^let b:current_syntax = "haxe"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hcl.vim	/^let b:current_syntax = 'hcl'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = "helm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hgcommit.vim	/^let b:current_syntax = "hgcommit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hive.vim	/^let b:current_syntax = "hive"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hjson.vim	/^let b:current_syntax = "hjson"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hollywood.vim	/^let b:current_syntax = "hollywood"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hostsaccess.vim	/^let b:current_syntax = "hostsaccess"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hss.vim	/^let b:current_syntax = "hss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icalendar.vim	/^let b:current_syntax = "icalendar"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/idris.vim	/^let b:current_syntax = "idris"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/idris2.vim	/^let b:current_syntax = "idris2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/j.vim	/^let b:current_syntax = 'j'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = "jinja2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jovial.vim	/^let b:current_syntax = "jovial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json5.vim	/^  let b:current_syntax = 'json5'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jsonc.vim	/^  let b:current_syntax = 'jsonc'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jst.vim	/^let b:current_syntax = 'jst'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/julia.vim	/^let b:current_syntax = "julia"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/juliadoc.vim	/^let b:current_syntax = "juliadoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/just.vim	/^let b:current_syntax = 'just'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kivy.vim	/^let b:current_syntax = "kivy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kotlin.vim	/^let b:current_syntax = 'kotlin'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ledger.vim	/^let b:current_syntax = b:is_hledger ? 'hledger' : 'ledger'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lidris.vim	/^let b:current_syntax = "lidris"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lidris2.vim	/^let b:current_syntax = "lidris2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lilypond.vim	/^let b:current_syntax = "lilypond"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/litcoffee.vim	/^let b:current_syntax = "litcoffee"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/llvm.vim	/^let b:current_syntax = "llvm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/log.vim	/^let b:current_syntax = 'log'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^  let b:current_syntax = 'livescript'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^let b:current_syntax = "ls"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mako.vim	/^let b:current_syntax = b:mako_outer_lang$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mallard.vim	/^let b:current_syntax = "mallard"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/merlin.vim	/^let b:current_syntax = "merlin"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/meson.vim	/^let b:current_syntax = "meson"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mint.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mix.vim	/^let b:current_syntax = "mix"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mlir.vim	/^let b:current_syntax = "mlir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/moon.vim	/^  let b:current_syntax = 'moon'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/murphi.vim	/^let b:current_syntax = "murphi"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/n1ql.vim	/^let b:current_syntax = "n1ql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/neomuttrc.vim	/^let b:current_syntax = "neomuttrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nftables.vim	/^let b:current_syntax = 'nftables'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nim.vim	/^let b:current_syntax = 'nim'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ninja.vim	/^let b:current_syntax = "ninja"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nix.vim	/^let b:current_syntax = "nix"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/oasis.vim	/^let b:current_syntax = "oasis"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocamlbuild_tags.vim	/^let b:current_syntax = "ocamlbuild_tags"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocpbuild.vim	/^let b:current_syntax = "ocpbuild"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocpbuildroot.vim	/^let b:current_syntax = "ocpbuildroot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/octave.vim	/^let b:current_syntax = "octave"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/odin.vim	/^let b:current_syntax = "odin"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/omake.vim	/^let b:current_syntax = "omake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opam.vim	/^let b:current_syntax = "opam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opencl.vim	/^let b:current_syntax = "opencl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/openscad.vim	/^let b:current_syntax = "openscad"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/org.vim	/^let b:current_syntax = 'org'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/outline.vim	/^let b:current_syntax = 'outline'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pamenv.vim	/^let b:current_syntax = "pamenv"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pgsql.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plantuml.vim	/^let b:current_syntax = 'plantuml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pli.vim	/^let b:current_syntax = "pl1"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pony.vim	/^let b:current_syntax = 'pony'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ps1.vim	/^let b:current_syntax = "ps1"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ps1xml.vim	/^let b:current_syntax = "ps1xml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/puppet.vim	/^let b:current_syntax = 'puppet'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/purescript.vim	/^let b:current_syntax = "purescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/python.vim	/^let b:current_syntax = 'python'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/qmake.vim	/^let b:current_syntax = "qmake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/qml.vim	/^let b:current_syntax = "qml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/racket.vim	/^let b:current_syntax = "racket"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ragel.vim	/^let b:current_syntax = "ragel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/raku.vim	/^let b:current_syntax = "raku"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/razor.vim	/^let b:current_syntax = "razor"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/readline.vim	/^let b:current_syntax = 'readline'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/reason.vim	/^let b:current_syntax = "reason"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rego.vim	/^let b:current_syntax = 'rego'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/requirements.vim	/^let b:current_syntax = "requirements"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rmd.vim	/^  let b:current_syntax = "rmd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rmd.vim	/^let b:current_syntax = "rmd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rng.vim	/^let b:current_syntax = 'rng'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnoweb-1.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnoweb-2.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rrst.vim	/^let b:current_syntax = "rrst"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scheme.vim	/^let b:current_syntax = 'scheme'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sexplib.vim	/^let b:current_syntax = "sexplib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sil.vim	/^let b:current_syntax = "sil"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slim.vim	/^let b:current_syntax = "slim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slime.vim	/^let b:current_syntax = "slime"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smt2.vim	/^let b:current_syntax = "smt2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/srec.vim	/^let b:current_syntax = "srec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svelte.vim	/^let b:current_syntax = 'svelte'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/swayconfig.vim	/^let b:current_syntax = "swayconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/swiftgyb.vim	/^let b:current_syntax = "swiftgyb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sxhkdrc.vim	/^let b:current_syntax = "sxhkdrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/systemd.vim	/^let b:current_syntax = "systemd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/systemverilog.vim	/^let b:current_syntax = "systemverilog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tablegen.vim	/^let b:current_syntax = "tablegen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/teraterm.vim	/^let b:current_syntax = "teraterm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/terraform.vim	/^let b:current_syntax = 'terraform'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/thrift.vim	/^let b:current_syntax = "thrift"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tmux.vim	/^let b:current_syntax = "tmux"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/toml.vim	/^let b:current_syntax = 'toml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tpp.vim	/^let b:current_syntax = 'tpp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tptp.vim	/^let b:current_syntax = "tptp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/treetop.vim	/^let b:current_syntax = 'treetop'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/typescriptreact.vim	/^let b:current_syntax = "typescriptreact"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/unison.vim	/^let b:current_syntax = "unison"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstart.vim	/^let b:current_syntax = "upstart"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreamdat.vim	/^let b:current_syntax = "upstreamdat"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreaminstalllog.vim	/^let b:current_syntax = "upstreaminstalllog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreamlog.vim	/^let b:current_syntax = "upstreamlog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/usserverlog.vim	/^let b:current_syntax = "usserverlog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/usw2kagtlog.vim	/^let b:current_syntax = "usw2kagentlog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vala.vim	/^let b:current_syntax = "vala"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vbnet.vim	/^let b:current_syntax = "vbnet"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^let b:current_syntax = "velocity"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vlang.vim	/^let b:current_syntax = 'vlang'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vroom.vim	/^let b:current_syntax = 'vroom'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wast.vim	/^let b:current_syntax = "wast"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xdc.vim	/^let b:current_syntax = "xdc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xquery.vim	/^let b:current_syntax = "xquery"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xsl.vim	/^let b:current_syntax = "xsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zephir.vim	/^let b:current_syntax = "zephir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zig.vim	/^let b:current_syntax = "zig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zimbu.vim	/^let b:current_syntax = "zimbu"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zir.vim	/^let b:current_syntax = "zir"$/;"	v
b:current_syntax	plugged/vim-startify/syntax/startify.vim	/^let b:current_syntax = 'startify'$/;"	v
b:current_syntax	plugged/vimwiki/syntax/vimwiki.vim	/^let b:current_syntax='vimwiki'$/;"	v
b:current_syntax_embed	plugged/vim-polyglot/syntax/rust.vim	/^    let b:current_syntax_embed = 1$/;"	v
b:current_view_mode	plugged/ctrlsf.vim/syntax/ctrlsf.vim	/^let b:current_view_mode = vmode$/;"	v
b:dc_next_index	plugged/vim-polyglot/syntax/dircolors.vim	/^let b:dc_next_index = 0$/;"	v
b:dhall_ftplugin	plugged/vim-polyglot/ftplugin/dhall.vim	/^let b:dhall_ftplugin = 1$/;"	v
b:did_8thplugin	plugged/vim-polyglot/ftplugin/8th.vim	/^let b:did_8thplugin = 1$/;"	v
b:did_after_plugin_ultisnips_after	plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-fugitive/ftplugin/fugitiveblame.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/abap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/basic.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dune.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fennel.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/freebasic.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fstab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gleam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/idris.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/idris2.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ion.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/kotlin.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ld.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lilypond.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/llvm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ls.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/meson.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mlir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mma.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/modula2.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/modula3.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/moon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nftables.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nix.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nroff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/oasis.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ocamlbuild_tags.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/omake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/opencl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/racket.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/raku.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/razor.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sbt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sexplib.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tablegen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/text.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tidy.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/unison.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/wast.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/zig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vimwiki/ftplugin/vimwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/tsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/bzl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cabal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/caddyfile.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/crystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cython.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dosbatch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dune.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ecrystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/elm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ember-script.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/falcon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fennel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fsharp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/gdscript3.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/gitolite.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/graphql.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haxe.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/hcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/hog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/idris.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/idris2.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/j.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/jst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ld.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ledger.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lilypond.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/litcoffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/llvm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ls.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mako.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/markdown.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/meson.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mlir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/moon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nftables.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nix.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nsis.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/octave.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/odin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/omake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/opencl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pgsql.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/plantuml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pony.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/puppet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/purescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/qml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/raku.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/reason.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rmd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rnoweb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rrst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sas.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/scss.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/slim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/slime.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/solidity.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sshconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/stylus.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/svelte.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/svg.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/swift.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/systemverilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/teraterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/treetop.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/typescriptreact.vim	/^  let b:did_indent=s:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vroom.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vue.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/wast.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/yaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/zig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/zimbu.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/syntax/spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:did_indent_hbs	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent_hbs = 1$/;"	v
b:did_scheme_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_scheme_ftplugin = 1$/;"	v
b:did_scheme_syntax	plugged/vim-polyglot/syntax/scheme.vim	/^let b:did_scheme_syntax = 1$/;"	v
b:dnsmasq_backrgound_light	plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = 0$/;"	v
b:dnsmasq_backrgound_light	plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = dnsmasq_backrgound_light$/;"	v
b:ecrystal_align_end	plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = b:ecrystal_subtype !=# 'html' && b:ecrystal_subtype !=# 'xml'$/;"	v
b:ecrystal_align_end	plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = g:ecrystal_align_end$/;"	v
b:ecrystal_indent_multiline	plugged/vim-polyglot/indent/ecrystal.vim	/^  let b:ecrystal_indent_multiline = get(g:, 'ecrystal_indent_multiline', 1)$/;"	v
b:ecrystal_subtype_indentexpr	plugged/vim-polyglot/indent/ecrystal.vim	/^let b:ecrystal_subtype_indentexpr = &l:indentexpr$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^heex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.heex\\|\\.leex/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^heex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.heex\\|\\.leex/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype_indentexpr	plugged/vim-polyglot/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:elixir_no_expensive	plugged/vim-polyglot/syntax/slime.vim	/^let b:elixir_no_expensive = 1$/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_addition = 'end'$/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_addition = '\\=index(["dot","mindmap","uml","salt","wbs"], submatch(0))!=-1 ? "@en/;"	v
b:endwise_pattern	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_pattern = '^\\s*\\zs\\(loop\\|group\\|alt\\|note\\ze[^:]*$\\|legend\\|@start\\zs\\/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_syngroups = 'fishKeyword,fishConditional,fishRepeat'$/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_syngroups = 'plantumlKeyword,plantumlPreProc'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_words = 'begin,function,if,switch,while,for'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_words = 'loop,group,alt,note,legend,startdot,startmindmap,startuml,startsalt,start/;"	v
b:erlang_syntax_synced	plugged/vim-polyglot/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(&filetype,'\\C\\<eruby\\>','@','g'),'[/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^.\\{-\\}\\ze\\.eruby\\>')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/nginx.vim	/^let b:eruby_subtype = ''$/;"	v
b:eruby_subtype_indentexpr	plugged/vim-polyglot/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eterm_minlines	plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:filetype_in_cpp_family	plugged/vim-polyglot/syntax/cpp.vim	/^let b:filetype_in_cpp_family = 1$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = "f08"$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = g:fortran_dialect$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "f08"$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^        let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	plugged/vim-polyglot/syntax/fortran.vim	/^let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	plugged/vim-polyglot/syntax/framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/rescript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:handlebars_subtype_indentexpr	plugged/vim-polyglot/indent/handlebars.vim	/^let b:handlebars_subtype_indentexpr = &l:indentexpr$/;"	v
b:hi_indent	plugged/vim-polyglot/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_lasttick	plugged/vim-polyglot/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	plugged/vim-polyglot/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:hs_chs	plugged/vim-polyglot/syntax/chaskell.vim	/^let b:hs_chs=1$/;"	v
b:html_indent_usestate	plugged/vim-polyglot/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_indent_usestate	plugged/vim-polyglot/indent/handlebars.vim	/^let b:html_indent_usestate = 0$/;"	v
b:indent_use_syntax	plugged/vim-polyglot/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	plugged/vim-polyglot/indent/raku.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indentexpr_base	plugged/vim-polyglot/after/indent/javascript-2.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	plugged/vim-polyglot/after/indent/php.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	plugged/vim-polyglot/after/indent/typescript.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:is_hledger	plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 0$/;"	v
b:is_hledger	plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 1$/;"	v
b:javascript_indentexpr	plugged/vim-polyglot/indent/svelte.vim	/^let b:javascript_indentexpr = &indentexpr$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = 1$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'haml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'javascript'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'ruby'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'text'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'yaml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = g:jst_default_subtype$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.jst\\)\\+$','',''),'\\.\\zs/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(&filetype,'^jst\\.\\zs\\w\\+')$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(s:lines,'jst_subtype=\\zs\\w\\+')$/;"	v
b:jst_subtype_indentexpr	plugged/vim-polyglot/indent/jst.vim	/^let b:jst_subtype_indentexpr = &l:indentexpr$/;"	v
b:jsx_pretty_old_cms	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
b:jsx_pretty_old_cms	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
b:julia_begin_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywords = '\\%(\\.\\s*\\|@\\)\\@<!\\<\\%(function\\|macro\\|begin\\|mutable/;"	v
b:julia_begin_keywordsm	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywordsm = '\\%(' . s:yesmacro . b:julia_begin_keywords . '\\)\\|'$/;"	v
b:julia_end_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_end_keywords = '\\<end\\>'$/;"	v
b:julia_vim_loaded	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:julia_vim_loaded = 1$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|md\\|none\\)\\>')$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^        let b:lhs_markup = "md"$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	plugged/vim-polyglot/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:loaded_mustache_handlebars	plugged/vim-polyglot/ftplugin/handlebars.vim	/^let b:loaded_mustache_handlebars = 1$/;"	v
b:loaded_plantuml_plugin	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:loaded_plantuml_plugin = 1$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = 'twig'$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = b:current_syntax$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = "html"$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = g:mako_default_outer_lang$/;"	v
b:match_ignorecase	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/pascal.vim	/^  let b:match_ignorecase = 1 " (Pascal is case-insensitive)$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/vb.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_skip	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:match_skip	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_skip =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_skip = 'r:\\\\.\\{-}$\\|^\\s*#.\\{-}$\\|^\\s*$'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_skip = 'synIDattr(synID(line("."),col("."),0),"name") =~# '$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitut/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_skip = 's:Comment\\|String\\|Character\\|CaseGuard'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustCharacter\\|rustArrow'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_skip = 's:comment\\|string\\|character\\|special'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  let b:match_skip = 's:comment\\|string\\|zimbuchar'$/;"	v
b:match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = s:set_match_words()$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ada.vim	/^   let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/csc.vim	/^    let b:match_words=$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_words = escape($/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let b:match_words = b:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_words = '^\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|v/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_words = 'JuliaGetMatchWords()'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/kconfig.vim	/^  let b:match_words = '^\\<menu\\>:\\<endmenu\\>,^\\<if\\>:\\<endif\\>,^\\<choice\\>:\\<endchoic/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\</;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/make.vim	/^  let b:match_words = '^ *ifn\\=\\(eq\\|def\\)\\>:^ *else\\(\\s\\+ifn\\=\\(eq\\|def\\)\\)\\=\\>:/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_words = "<:>," .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/meson.vim	/^  let b:match_words = '\\<if\\>:\\<elif\\>:\\<else\\>:\\<endif\\>,' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/modula2.vim	/^  let b:match_words = '\\<REPEAT\\>:\\<UNTIL\\>,' ..$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/modula3.vim	/^  let b:match_words = '\\<REPEAT\\>:\\<UNTIL\\>,' ..$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:match_words = b:mw$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^  let b:match_words  = '\\<\\%(asm\\|begin\\|case\\|\\%(\\%(=\\|packed\\)\\s*\\)\\@<=\\%(class\\/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^  let b:match_words .= ',\\<repeat\\>:\\<until\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^  let b:match_words .= ',\\<unit\\>:\\<\\%(\\%(^\\s*\\)\\@<=interface\\|implementation\\|initial/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^  let b:match_words .= ':\\%(^\\s*\\)\\@<=\\%(except\\|finally\\|else\\|otherwise\\)\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^  let b:match_words .= ':\\<end\\>\\.\\@!'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<end/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_words = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grest/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_words = &matchpairs .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/systemverilog.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/twig.vim	/^        let b:match_words .= ',' . s:pattern$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_words = exists('b:match_words')$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_words = '^\\s*#\\s*if\\(\\|def\\|ndef\\)\\>:^\\s*#\\s*elif\\>:^\\s*#\\s*else\\>:^\\s/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vb.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  let b:match_words = '\\(^\\s*\\)\\@<=\\(MODULE\\|CLASS\\|INTERFACE\\|BITS\\|ENUM\\|SHARED\\|FU/;"	v
b:match_words	plugged/vim-polyglot/syntax/cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:match_words	plugged/vim-polyglot/syntax/cmod.vim	/^let b:match_words = "({:}\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\)\\|else\\|el\\%(se\\)\\?if\\|en/;"	v
b:match_words	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/syntax/pike.vim	/^let b:match_words = "({:}\\\\@1<=),(\\\\[:]\\\\@1<=),(<:>\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:mw =         '\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:nroff_is_groff	plugged/vim-polyglot/syntax/nroff.vim	/^	let b:nroff_is_groff = 1$/;"	v
b:pdf_tagstack	plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:php_version_id	plugged/vim-polyglot/syntax/php.vim	/^  let b:php_version_id = g:php_version_id$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'cpp'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'objc'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'ruby'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = g:ragel_default_subtype$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.rl\\|\\.ragel\\)\\+$','',/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let b:ragel_subtype = matchstr(s:lines, 'ragel_subtype=\\zs\\w\\+')$/;"	v
b:ran_once	plugged/vim-polyglot/indent/twig.vim	/^let b:ran_once = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/slim.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	plugged/vim-polyglot/ftplugin/rust.vim	/^        let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_foldmethod=1$/;"	v
b:rust_set_style	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_style = 1$/;"	v
b:smartcomment_force_linemode	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:smartcomment_force_linemode = 1      " for carlobaldassi\/vim-smartcomment$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/dart.vim	/^let b:spell_options = 'contained'$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/haxe.vim	/^let b:spell_options = "contained"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/wsml.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_type_override	plugged/vim-polyglot/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:sql_vis	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_vis = 1$/;"	v
b:surround_123	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_123 = "{{ \\r }}"$/;"	v
b:surround_35	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_35 = "<%# \\r %>"$/;"	v
b:surround_45	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_45 = "<% \\r %>"$/;"	v
b:surround_5	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_5 = "<% \\r %>\\n<% end %>"$/;"	v
b:surround_61	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_61 = "<%= \\r %>"$/;"	v
b:svg_indent_close	plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_close = '.\\{-}<\/'$/;"	v
b:svg_indent_open	plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_open = '.\\{-}<\\a'$/;"	v
b:syng_str	plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:syng_str = '^\\%(.*template\\)\\@!.*string\\|special'$/;"	v
b:syng_strcom	plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:syng_strcom = '^\\%(.*template\\)\\@!.*string\\|comment\\|regex\\|special\\|doc'$/;"	v
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_isk= '@,'.g:tex_isk$/;"	v
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_isk= g:tex_isk$/;"	v
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_isk="48-57,a-z,A-Z,192-255"$/;"	v
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_isk="@,48-57,a-z,A-Z,192-255"$/;"	v
b:tex_stylish	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:tsx_match_words	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:tsx_match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:tsx_ts_indentexpr	plugged/vim-polyglot/indent/typescriptreact.vim	/^let b:tsx_ts_indentexpr = &indentexpr$/;"	v
b:tt2_syn_inc_perl	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:twigMatchWords	plugged/vim-polyglot/ftplugin/twig.vim	/^    let b:twigMatchWords = [$/;"	v
b:ultisnips_override_snipmate	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/8th.vim	/^let b:undo_ftplugin = "setlocal ts< sts< sw< et< com< fo< mps< isk< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/aap.vim	/^  let b:undo_ftplugin .= " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/aap.vim	/^let b:undo_ftplugin = "setl fo< com< cms< et<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "let s:cpo_save = &cpoptions|"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^let b:undo_ftplugin = "setl comments< commentstring< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplu/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^    let b:undo_ftplugin .= " | setl fp<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:undo_ftplugin .= " | setl inc< path<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^let b:undo_ftplugin = "setl fo< com< cms< def< sua<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/basic.vim	/^let b:undo_ftplugin = "setl fo< com< cms< sua<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:undo_ftplugin = "setl cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispw/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu< isk<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:undo_ftplugin = 'setl et< fo< sw< sts< com< cms< inex< isf<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:undo_ftplugin = 'setlocal tw< comments< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:undo_ftplugin = 'setlocal tw< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/diff.vim	/^  let b:undo_ftplugin .= " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/diff.vim	/^let b:undo_ftplugin = "setl modeline< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions< keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dune.vim	/^let b:undo_ftplugin = "setlocal lisp< cms< com< isk<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring< shiftwidth<' .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:undo_ftplugin = 'setlocal sw< sts< et< isk< com< cms< path< inex< sua< def< fo<'.$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let b:undo_ftplugin = 'setl cms< '$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let b:undo_ftplugin = "setlocal keywordprg< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:undo_ftplugin = "setlocal tabstop< shiftwidth< expandtab< fileencoding<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fstab.vim	/^let b:undo_ftplugin = "setlocal commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:undo_ftplugin = "setlocal cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms< formatlistpat< inc< /;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = "setl com< cms< fo< ml<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|exe 'nunmap <buffer> <C-A>'|exe 'nunmap <buffer> <C-X>/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:undo_ftplugin = 'setlocal com< cms< fo< isk< sts< sw< et<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl def< cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^  let b:undo_ftplugin .= ' foldmethod<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^  let b:undo_ftplugin .= ' iskeyword<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^  let b:undo_ftplugin .= '|iunmap <buffer> ='$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:undo_ftplugin .= ' commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:undo_ftplugin = 'setlocal formatoptions<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu< keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:undo_ftplugin = 'setl modeline<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:match_ignorecase b:match_words'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin .= ' | silent! execute "unmap <buffer> ]]"'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin = 'setlocal suffixesadd< includeexpr< include< path< matchpairs< formatoptio/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:undo_ftplugin = "setl cms< com< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^    let b:undo_ftplugin .= " | call julia_blocks#remove_mappings()"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin = "setlocal include< suffixesadd< comments< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= 'setlocal conceallevel< concealcursor< wrap<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kotlin.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring< ".$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = "setlocal efm<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = b:undo_ftplugin . " | setlocal efm<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lisp< commentstring</;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:undo_ftplugin = 'setl fo<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mail.vim	/^  let b:undo_ftplugin .= " fileformat=" .. &fileformat$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo< comments<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/make.vim	/^let b:undo_ftplugin = "setl et< sts< sw< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/meson.vim	/^  let b:undo_ftplugin .= " | setl et< sts< sw<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/meson.vim	/^  let b:undo_ftplugin .= " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/meson.vim	/^  let b:undo_ftplugin .= " | unlet! b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/meson.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/modula2.vim	/^let b:undo_ftplugin = "setl com< cms< fo< " ..$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/modula3.vim	/^let b:undo_ftplugin = "setl com< cms< fo< " ..$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/moon.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nftables.vim	/^let b:undo_ftplugin = '$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nginx.vim	/^let b:undo_ftplugin = "setl fo< cms< com<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nroff.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments< sections<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:undo_ftplugin .= " | unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/oasis.vim	/^let b:undo_ftplugin = "com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:undo_ftplugin .= " | setlocal fdm< fde<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:undo_ftplugin .= " | unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:undo_ftplugin = "setlocal com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocamlbuild_tags.vim	/^let b:undo_ftplugin = "com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/occam.vim	/^let b:undo_ftplugin = "setlocal shiftwidth< softtabstop< expandtab<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/omake.vim	/^let b:undo_ftplugin = "fo< com< cms< et< inc<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:undo_ftplugin = "setl fo< cms< com< " ..$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:undo_ftplugin = 'set comments< commentstring< formatoptions< path< include< includeexpr< d/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo< iskeyword< keywordprg<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:undo_ftplugin = '$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/racket.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/raku.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< isk< kp< path<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin .= " | setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin = "setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:undo_ftplugin = "setlocal fo< comments<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= "| setl bexpr="$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= ' | setl sw< sts< et<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><ctag>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl inc= sua= path= tags= fo< com< cms< kp="$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^  let b:undo_ftplugin .= ' isk<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = 'setl lisp< comments< commentstring< define< iskeyword<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = b:undo_ftplugin . ' lispwords<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sexplib.vim	/^let b:undo_ftplugin = "setl cms< com<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:undo_ftplugin = "setl isk<" . " | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:undo_ftplugin = "unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:undo_ftplugin = "setl comments< formatoptions< define< omnifunc<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sxhkdrc.vim	/^	let b:undo_ftplugin .= "|setlocal commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sxhkdrc.vim	/^	let b:undo_ftplugin = "setlocal commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin .= '|delcommand Terraform|delcommand TerraformFmt'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/text.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tidy.vim	/^let b:undo_ftplugin = "setl fo< com< cms<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/toml.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin .= "|setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vb.vim	/^  let b:undo_ftplugin .= " | sil! exe 'nunmap <buffer> [[' | sil! exe 'vunmap <buffer> [['" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vb.vim	/^  let b:undo_ftplugin .= " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vb.vim	/^  let b:undo_ftplugin .= " | unlet! b:match_words b:match_ignorecase"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vb.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vlang.vim	/^	let b:undo_ftplugin .= "|setlocal commentstring< makeprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vlang.vim	/^	let b:undo_ftplugin = "setlocal commentstring< makeprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< shiftwidth< softtabstop<' .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/wast.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring< formatoptions< iskeyword<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^  let b:undo_ftplugin .= " sw< sts<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zig.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  let b:undo_ftplugin ..=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  let b:undo_ftplugin .= " | unlet! b:match_words b:match_skip"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:undo_ftplugin ..=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< efm< tw< et< sts< sw< | if has('vms') | setl isk< | en/;"	v
b:undo_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:undo_indent = 'setlocal '.join([$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< inden/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cobol.vim	/^let b:undo_indent = "setlocal expandtab< indentexpr< indentkeys<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/config.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cs.vim	/^let b:undo_indent = 'setlocal indentexpr<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/css.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:undo_indent = 'setl cin< cino<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/dosbatch.vim	/^let b:undo_indent = "setl ai< inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/dtd.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/dune.vim	/^let b:undo_indent = "setl et< sts< sw<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/erlang.vim	/^let b:undo_indent = "setl inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/eterm.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/fennel.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/framescript.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/haml.vim	/^let b:undo_indent = "setl ai< inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/hamster.vim	/^let b:undo_indent = "setl indentkeys<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/haxe.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/hcl.vim	/^let b:undo_indent = 'setlocal lisp< autoindent< shiftwidth< tabstop< softtabstop<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/hog.vim	/^let b:undo_indent = 'setlocal smartindent< indentexpr< indentkeys<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/j.vim	/^let b:undo_indent = 'setlocal indentkeys< indentexpr<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys< lisp<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/julia.vim	/^let b:undo_indent = "setl ai< inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/ld.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/mail.vim	/^let b:undo_indent = "setl ai< cin< inde< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/make.vim	/^let b:undo_indent = "setl ai< inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/meson.vim	/^let b:undo_indent = "setl ai< inde< indk< lisp<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/mp.vim	/^let b:undo_indent = "setl indentkeys< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/nginx.vim	/^let b:undo_indent = "setl cin< cink< inde<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/nsis.vim	/^let b:undo_indent = "setl ai< inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/ocaml.vim	/^  let b:undo_indent .= " | setl com< fo<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/ocaml.vim	/^let b:undo_indent = "setl et< inde< indk< lisp< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/pascal.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/pony.vim	/^let b:undo_indent = 'set lisp< cindent< autoindent< smartindent< indentexpr< indentkeys< cinkeys/;"	v
b:undo_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:undo_indent = "setl si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/puppet.vim	/^let b:undo_indent = '$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/readline.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/rust.vim	/^let b:undo_indent = "setlocal cindent< cinoptions< cinkeys< cinwords< lisp< autoindent< indentke/;"	v
b:undo_indent	plugged/vim-polyglot/indent/scss.vim	/^let b:undo_indent = 'setl smartindent< indentkeys< indentexpr<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/sdl.vim	/^let b:undo_indent = "setl inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/sshconfig.vim	/^let b:undo_indent = "setlocal autoindent< indentexpr< indentkeys<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/tcl.vim	/^let b:undo_indent = "setl inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/teraterm.vim	/^let b:undo_indent = "setl ai< inde< indk< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/vroom.vim	/^let b:undo_indent = 'setlocal autoindent<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/wast.vim	/^let b:undo_indent = "setl lisp< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/yaml.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys< smartindent<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/zimbu.vim	/^let b:undo_indent = "setl ai< cin< et< indentkeys< indentexpr< lisp< sw<"$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = 50$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = vala_minlines$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\/;"	v
b:xf86conf_xfree86_version	plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:yaml_schema	plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = 'core'$/;"	v
b:yaml_schema	plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = g:yaml_schema$/;"	v
bar	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^[bar]$/;"	s
bar	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^[bar]$/;"	s
base	plugged/vim-polyglot/autoload/polyglot/init.vim	/^    let base = split(pkg, '\\.')$/;"	v
basename	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
bash	plugged/fzf/test/test_go.rb	/^    def bash$/;"	S	class:Shell
basicMatch	plugged/fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
bcolors	plugged/vim-visual-multi/test/test.py	/^class bcolors:$/;"	c
begin	plugged/fzf/src/tokenizer.go	/^	begin int$/;"	m	struct:fzf.Range	typeref:typename:int
bench	plugged/fzf/Makefile	/^bench:$/;"	t
bg	plugged/fzf/src/ansi.go	/^	bg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
bg	plugged/fzf/src/tui/light.go	/^	bg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
bg	plugged/fzf/src/tui/tui.go	/^	bg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
bin/fzf	plugged/fzf/Makefile	/^bin\/fzf: target\/$(BINARY) | bin$/;"	t
bindeval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def bindeval(text):$/;"	f
blockquote	plugged/vimwiki/autoload/vimwiki/style.css	/^blockquote {$/;"	s
blockquote	plugged/vimwiki/autoload/vimwiki/style.css	/^p, pre, blockquote, table, ul, ol, dl {$/;"	s
bmenu_priority	plugged/vim-polyglot/extras/menu.vim	/^  let bmenu_priority = 60$/;"	v
body	plugged/vimwiki/autoload/vimwiki/style.css	/^body {$/;"	s
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblu/;"	v
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
bonusAt	plugged/fzf/src/algo/algo.go	/^func bonusAt(input *util.Chars, idx int) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusBoundary	plugged/fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c	package:algo
bonusCamel123	plugged/fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtension$/;"	c	package:algo
bonusConsecutive	plugged/fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtension)$/;"	c	package:algo
bonusFirstCharMultiplier	plugged/fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c	package:algo
bonusFor	plugged/fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusNonWord	plugged/fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c	package:algo
border	plugged/fzf/src/options.go	/^	border      tui.BorderShape$/;"	m	struct:fzf.previewOpts	typeref:typename:tui.BorderShape
border	plugged/fzf/src/terminal.go	/^	border             tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
border	plugged/fzf/src/tui/light.go	/^	border   BorderStyle$/;"	m	struct:tui.LightWindow	typeref:typename:BorderStyle
borderShape	plugged/fzf/src/terminal.go	/^	borderShape        tui.BorderShape$/;"	m	struct:fzf.Terminal	typeref:typename:tui.BorderShape
borderStyle	plugged/fzf/src/tui/tcell.go	/^	borderStyle BorderStyle$/;"	m	struct:tui.TcellWindow	typeref:typename:BorderStyle
bottomLeft	plugged/fzf/src/tui/tui.go	/^	bottomLeft  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
bottomRight	plugged/fzf/src/tui/tui.go	/^	bottomRight rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
brace_expansion	plugged/vim-polyglot/scripts/build	/^def brace_expansion(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
brace_expansion	plugged/vim-polyglot/scripts/import_vim	/^def brace_expansion(s)$/;"	f
breakpoint	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def breakpoint(cls, host=None, port=None):$/;"	m	class:RemotePDB
buf	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buffer	plugged/fzf/src/tui/light.go	/^	buffer        []byte$/;"	m	struct:tui.LightRenderer	typeref:typename:[]byte
buffer	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer_list	plugged/vim-polyglot/extras/menu.vim	/^  aug buffer_list$/;"	a
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
build	plugged/fzf/Makefile	/^build:$/;"	t
build	plugged/vim-polyglot/Makefile	/^build:$/;"	t
buildCacheKey	plugged/fzf/src/pattern.go	/^func (p *Pattern) buildCacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
buildLists	plugged/fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]Result, []Result) {$/;"	f	package:fzf	typeref:typename:([][]Result, []Result)
buildPlusList	plugged/fzf/src/terminal.go	/^func (t *Terminal) buildPlusList(template string, forcePlus bool) (bool, []*Item) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []*Item)
buildResult	plugged/fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int) Result {$/;"	f	package:fzf	typeref:typename:Result
byBegin	plugged/fzf/src/options.go	/^	byBegin$/;"	c	package:fzf
byEnd	plugged/fzf/src/options.go	/^	byEnd$/;"	c	package:fzf
byLength	plugged/fzf/src/options.go	/^	byLength$/;"	c	package:fzf
byScore	plugged/fzf/src/options.go	/^	byScore criterion = iota$/;"	c	package:fzf	typeref:type:criterion
byTimeOrder	plugged/fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t	package:fzf	typeref:typename:[]selectedItem
byte2col	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def byte2col(line, nbyte):$/;"	f
c	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> c <Plug>(calendar_change)$/;"	m
c	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
cS	plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cache	plugged/fzf/src/cache.go	/^	cache map[*Chunk]*queryCache$/;"	m	struct:fzf.ChunkCache	typeref:typename:map[*Chunk]*queryCache
cache._memory.on_changed	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^  function! cache._memory.on_changed() abort$/;"	f
cacheKey	plugged/fzf/src/pattern.go	/^	cacheKey      string$/;"	m	struct:fzf.Pattern	typeref:typename:string
cacheable	plugged/fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f	struct:fzf.Merger	typeref:typename:bool
cacheable	plugged/fzf/src/pattern.go	/^	cacheable     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
calculateScore	plugged/fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, normalize bool, text *util.Chars, pattern []rune, sidx i/;"	f	package:algo	typeref:typename:(int, *[]int)
calculateSize	plugged/fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, occupied int, minSize int, pad int) int {$/;"	f	package:fzf	typeref:typename:int
calendar#argument#buffername	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#buffername(name) abort$/;"	f
calendar#argument#complete	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#complete(arglead, cmdline, cursorpos) abort$/;"	f
calendar#argument#day	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#day(day, default) abort$/;"	f
calendar#argument#parse	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#parse(args) abort$/;"	f
calendar#argument#split	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#split(args) abort$/;"	f
calendar#async#call	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#call(...) abort$/;"	f
calendar#async#new	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#new(command, ...) abort$/;"	f
calendar#async#restore_updatetime	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#restore_updatetime() abort$/;"	f
calendar#async#set_updatetime	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#set_updatetime() abort$/;"	f
calendar#autocmd#new	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^function! calendar#autocmd#new() abort$/;"	f
calendar#cache#clear	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! calendar#cache#clear() abort$/;"	f
calendar#cache#new	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! calendar#cache#new(...) abort$/;"	f
calendar#cache#string	plugged/calendar.vim/autoload/calendar/cache.vim	/^  function! calendar#cache#string(v) abort$/;"	f
calendar#cache#string	plugged/calendar.vim/autoload/calendar/cache.vim	/^  function! calendar#cache#string(v, ...) abort$/;"	f
calendar#cipher#cipher	plugged/calendar.vim/autoload/calendar/cipher.vim	/^function! calendar#cipher#cipher(val, num) abort$/;"	f
calendar#cipher#decipher	plugged/calendar.vim/autoload/calendar/cipher.vim	/^function! calendar#cipher#decipher(val, num) abort$/;"	f
calendar#color#bg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#bg_color(syntax_name) abort$/;"	f
calendar#color#colors	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#colors() abort$/;"	f
calendar#color#comment_bg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#comment_bg_color() abort$/;"	f
calendar#color#comment_fg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#comment_fg_color() abort$/;"	f
calendar#color#convert	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#convert(rgb) abort$/;"	f
calendar#color#fg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#fg_color(syntax_name) abort$/;"	f
calendar#color#gen_color	plugged/calendar.vim/autoload/calendar/color.vim	/^  function! calendar#color#gen_color(fg, bg, weightfg, weightbg) abort$/;"	f
calendar#color#gui_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#gui_color() abort$/;"	f
calendar#color#is_dark	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#is_dark() abort$/;"	f
calendar#color#new_syntax	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#new_syntax(id, fg, bg) abort$/;"	f
calendar#color#normal_bg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#normal_bg_color() abort$/;"	f
calendar#color#normal_fg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#normal_fg_color() abort$/;"	f
calendar#color#nr_rgb	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#nr_rgb(nr) abort$/;"	f
calendar#color#refresh_syntax	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#refresh_syntax() abort$/;"	f
calendar#color#select_rgb	plugged/calendar.vim/autoload/calendar/color.vim	/^  function! calendar#color#select_rgb(color, rgb) abort$/;"	f
calendar#color#select_rgb	plugged/calendar.vim/autoload/calendar/color.vim	/^  function! calendar#color#select_rgb(color, rgb, weight) abort$/;"	f
calendar#color#syntax	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#syntax(name, fg, bg, attr) abort$/;"	f
calendar#color#to_256color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#to_256color(nr, fg) abort$/;"	f
calendar#color#whiten	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#whiten(rgb) abort$/;"	f
calendar#constructor#day#new	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! calendar#constructor#day#new(instance) abort$/;"	f
calendar#constructor#day_hybrid#new	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! calendar#constructor#day_hybrid#new(y, m, d) abort$/;"	f
calendar#constructor#month#new	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! calendar#constructor#month#new(day_constructor) abort$/;"	f
calendar#constructor#view#new	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! calendar#constructor#view#new(instance) abort$/;"	f
calendar#constructor#view_clock#new	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! calendar#constructor#view_clock#new(instance) abort$/;"	f
calendar#constructor#view_days#new	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! calendar#constructor#view_days#new(instance) abort$/;"	f
calendar#constructor#view_months#new	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! calendar#constructor#view_months#new(instance) abort$/;"	f
calendar#constructor#view_textbox#new	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! calendar#constructor#view_textbox#new(instance) abort$/;"	f
calendar#constructor#view_ymd#new	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! calendar#constructor#view_ymd#new(instance) abort$/;"	f
calendar#constructor#year#new	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! calendar#constructor#year#new(day_constructor) abort$/;"	f
calendar#controller#new	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! calendar#controller#new() abort$/;"	f
calendar#countcache#new	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! calendar#countcache#new(name) abort$/;"	f
calendar#countcache#save	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! calendar#countcache#save() abort$/;"	f
calendar#day#austria#new	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^function! calendar#day#austria#new(y, m, d) abort$/;"	f
calendar#day#austria#new_mjd	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^function! calendar#day#austria#new_mjd(mjd) abort$/;"	f
calendar#day#austria#today	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^function! calendar#day#austria#today() abort$/;"	f
calendar#day#austriastyria#new	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^function! calendar#day#austriastyria#new(y, m, d) abort$/;"	f
calendar#day#austriastyria#new_mjd	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^function! calendar#day#austriastyria#new_mjd(mjd) abort$/;"	f
calendar#day#austriastyria#today	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^function! calendar#day#austriastyria#today() abort$/;"	f
calendar#day#british#new	plugged/calendar.vim/autoload/calendar/day/british.vim	/^function! calendar#day#british#new(y, m, d) abort$/;"	f
calendar#day#british#new_mjd	plugged/calendar.vim/autoload/calendar/day/british.vim	/^function! calendar#day#british#new_mjd(mjd) abort$/;"	f
calendar#day#british#today	plugged/calendar.vim/autoload/calendar/day/british.vim	/^function! calendar#day#british#today() abort$/;"	f
calendar#day#bulgaria#new	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^function! calendar#day#bulgaria#new(y, m, d) abort$/;"	f
calendar#day#bulgaria#new_mjd	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^function! calendar#day#bulgaria#new_mjd(mjd) abort$/;"	f
calendar#day#bulgaria#today	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^function! calendar#day#bulgaria#today() abort$/;"	f
calendar#day#canada#new	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^function! calendar#day#canada#new(y, m, d) abort$/;"	f
calendar#day#canada#new_mjd	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^function! calendar#day#canada#new_mjd(mjd) abort$/;"	f
calendar#day#canada#today	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^function! calendar#day#canada#today() abort$/;"	f
calendar#day#default#new	plugged/calendar.vim/autoload/calendar/day/default.vim	/^function! calendar#day#default#new(y, m, d) abort$/;"	f
calendar#day#default#new_mjd	plugged/calendar.vim/autoload/calendar/day/default.vim	/^function! calendar#day#default#new_mjd(mjd) abort$/;"	f
calendar#day#default#today	plugged/calendar.vim/autoload/calendar/day/default.vim	/^function! calendar#day#default#today() abort$/;"	f
calendar#day#estonia#new	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^function! calendar#day#estonia#new(y, m, d) abort$/;"	f
calendar#day#estonia#new_mjd	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^function! calendar#day#estonia#new_mjd(mjd) abort$/;"	f
calendar#day#estonia#today	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^function! calendar#day#estonia#today() abort$/;"	f
calendar#day#france#new	plugged/calendar.vim/autoload/calendar/day/france.vim	/^function! calendar#day#france#new(y, m, d) abort$/;"	f
calendar#day#france#new_mjd	plugged/calendar.vim/autoload/calendar/day/france.vim	/^function! calendar#day#france#new_mjd(mjd) abort$/;"	f
calendar#day#france#today	plugged/calendar.vim/autoload/calendar/day/france.vim	/^function! calendar#day#france#today() abort$/;"	f
calendar#day#germany#new	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^function! calendar#day#germany#new(y, m, d) abort$/;"	f
calendar#day#germany#new_mjd	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^function! calendar#day#germany#new_mjd(mjd) abort$/;"	f
calendar#day#germany#today	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^function! calendar#day#germany#today() abort$/;"	f
calendar#day#germanyprussia#new	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^function! calendar#day#germanyprussia#new(y, m, d) abort$/;"	f
calendar#day#germanyprussia#new_mjd	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^function! calendar#day#germanyprussia#new_mjd(mjd) abort$/;"	f
calendar#day#germanyprussia#today	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^function! calendar#day#germanyprussia#today() abort$/;"	f
calendar#day#greece#new	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^function! calendar#day#greece#new(y, m, d) abort$/;"	f
calendar#day#greece#new_mjd	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^function! calendar#day#greece#new_mjd(mjd) abort$/;"	f
calendar#day#greece#today	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^function! calendar#day#greece#today() abort$/;"	f
calendar#day#gregorian#new	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! calendar#day#gregorian#new(y, m, d) abort$/;"	f
calendar#day#gregorian#new_mjd	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! calendar#day#gregorian#new_mjd(mjd) abort$/;"	f
calendar#day#gregorian#today	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! calendar#day#gregorian#today() abort$/;"	f
calendar#day#holland#new	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^function! calendar#day#holland#new(y, m, d) abort$/;"	f
calendar#day#holland#new_mjd	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^function! calendar#day#holland#new_mjd(mjd) abort$/;"	f
calendar#day#holland#today	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^function! calendar#day#holland#today() abort$/;"	f
calendar#day#hungary#new	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^function! calendar#day#hungary#new(y, m, d) abort$/;"	f
calendar#day#hungary#new_mjd	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^function! calendar#day#hungary#new_mjd(mjd) abort$/;"	f
calendar#day#hungary#today	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^function! calendar#day#hungary#today() abort$/;"	f
calendar#day#italy#new	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^function! calendar#day#italy#new(y, m, d) abort$/;"	f
calendar#day#italy#new_mjd	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^function! calendar#day#italy#new_mjd(mjd) abort$/;"	f
calendar#day#italy#today	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^function! calendar#day#italy#today() abort$/;"	f
calendar#day#japan#new	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^function! calendar#day#japan#new(y, m, d) abort$/;"	f
calendar#day#japan#new_mjd	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^function! calendar#day#japan#new_mjd(mjd) abort$/;"	f
calendar#day#japan#today	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^function! calendar#day#japan#today() abort$/;"	f
calendar#day#join_date	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#join_date(ymd) abort$/;"	f
calendar#day#julian#new	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! calendar#day#julian#new(y, m, d) abort$/;"	f
calendar#day#julian#new_mjd	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! calendar#day#julian#new_mjd(mjd) abort$/;"	f
calendar#day#julian#today	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! calendar#day#julian#today() abort$/;"	f
calendar#day#new	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#new(y, m, d) abort$/;"	f
calendar#day#new_mjd	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#new_mjd(mjd) abort$/;"	f
calendar#day#poland#new	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^function! calendar#day#poland#new(y, m, d) abort$/;"	f
calendar#day#poland#new_mjd	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^function! calendar#day#poland#new_mjd(mjd) abort$/;"	f
calendar#day#poland#today	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^function! calendar#day#poland#today() abort$/;"	f
calendar#day#portugal#new	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^function! calendar#day#portugal#new(y, m, d) abort$/;"	f
calendar#day#portugal#new_mjd	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^function! calendar#day#portugal#new_mjd(mjd) abort$/;"	f
calendar#day#portugal#today	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^function! calendar#day#portugal#today() abort$/;"	f
calendar#day#russia#new	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^function! calendar#day#russia#new(y, m, d) abort$/;"	f
calendar#day#russia#new_mjd	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^function! calendar#day#russia#new_mjd(mjd) abort$/;"	f
calendar#day#russia#today	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^function! calendar#day#russia#today() abort$/;"	f
calendar#day#spain#new	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^function! calendar#day#spain#new(y, m, d) abort$/;"	f
calendar#day#spain#new_mjd	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^function! calendar#day#spain#new_mjd(mjd) abort$/;"	f
calendar#day#spain#today	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^function! calendar#day#spain#today() abort$/;"	f
calendar#day#today	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#today() abort$/;"	f
calendar#day#today_mjd	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#today_mjd() abort$/;"	f
calendar#day#turkey#new	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^function! calendar#day#turkey#new(y, m, d) abort$/;"	f
calendar#day#turkey#new_mjd	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^function! calendar#day#turkey#new_mjd(mjd) abort$/;"	f
calendar#day#turkey#today	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^function! calendar#day#turkey#today() abort$/;"	f
calendar#day#us#new	plugged/calendar.vim/autoload/calendar/day/us.vim	/^function! calendar#day#us#new(y, m, d) abort$/;"	f
calendar#day#us#new_mjd	plugged/calendar.vim/autoload/calendar/day/us.vim	/^function! calendar#day#us#new_mjd(mjd) abort$/;"	f
calendar#day#us#today	plugged/calendar.vim/autoload/calendar/day/us.vim	/^function! calendar#day#us#today() abort$/;"	f
calendar#echo#echo	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#echo(msg) abort$/;"	f
calendar#echo#error	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#error(msg) abort$/;"	f
calendar#echo#error_message	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#error_message(name) abort$/;"	f
calendar#echo#error_raw	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#error_raw(msg) abort$/;"	f
calendar#echo#message	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#message(msg) abort$/;"	f
calendar#echo#message_raw	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#message_raw(msg) abort$/;"	f
calendar#echo#normal_message	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#normal_message(name) abort$/;"	f
calendar#event#google#new	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! calendar#event#google#new() abort$/;"	f
calendar#event#local#new	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! calendar#event#local#new() abort$/;"	f
calendar#event#new	plugged/calendar.vim/autoload/calendar/event.vim	/^function! calendar#event#new() abort$/;"	f
calendar#google#calendar#clearCache	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#clearCache() abort$/;"	f
calendar#google#calendar#delete	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#delete(calendarId, eventId, year, month) abort$/;"	f
calendar#google#calendar#delete_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#delete_response(id, response) abort$/;"	f
calendar#google#calendar#downloadEvents	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#downloadEvents(year, month, ...) abort$/;"	f
calendar#google#calendar#getCalendarList	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getCalendarList() abort$/;"	f
calendar#google#calendar#getCalendarList_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getCalendarList_response(id, response) abort$/;"	f
calendar#google#calendar#getColors	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getColors() abort$/;"	f
calendar#google#calendar#getColors_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getColors_response(id, response) abort$/;"	f
calendar#google#calendar#getEventSummary	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getEventSummary(year, month) abort$/;"	f
calendar#google#calendar#getEvents	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getEvents(year, month, ...) abort$/;"	f
calendar#google#calendar#getEventsInitial	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getEventsInitial(year, month) abort$/;"	f
calendar#google#calendar#getHolidays	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getHolidays(year, month) abort$/;"	f
calendar#google#calendar#getMyCalendarList	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getMyCalendarList() abort$/;"	f
calendar#google#calendar#get_url	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#get_url(type) abort$/;"	f
calendar#google#calendar#initialDownload	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#initialDownload(year, month, index) abort$/;"	f
calendar#google#calendar#insert	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#insert(calendarId, title, start, end, year, month, ...) abort$/;"	f
calendar#google#calendar#insert_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#insert_response(id, response) abort$/;"	f
calendar#google#calendar#move	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#move(calendarId, eventId, destination, year, month) abort$/;"	f
calendar#google#calendar#move_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#move_response(id, response) abort$/;"	f
calendar#google#calendar#response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#response(id, response) abort$/;"	f
calendar#google#calendar#sorter	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#sorter(x, y) abort$/;"	f
calendar#google#calendar#update	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#update(calendarId, eventId, title, year, month, ...) abort$/;"	f
calendar#google#calendar#update_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#update_response(id, response) abort$/;"	f
calendar#google#client#access_token	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#access_token() abort$/;"	f
calendar#google#client#access_token_response	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#access_token_response(response, content) abort$/;"	f
calendar#google#client#delete	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#delete(url, ...) abort$/;"	f
calendar#google#client#delete_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#delete_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#get	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#get(url, ...) abort$/;"	f
calendar#google#client#get_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#get_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#get_async_use_api_key	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#get_async_use_api_key(id, cb, url, ...) abort$/;"	f
calendar#google#client#initialize_access_token	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#initialize_access_token() abort$/;"	f
calendar#google#client#patch_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#patch_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#post	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#post(url, ...) abort$/;"	f
calendar#google#client#post_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#post_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#post_async_use_api_key	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#post_async_use_api_key(id, cb, url, ...) abort$/;"	f
calendar#google#client#put	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#put(url, ...) abort$/;"	f
calendar#google#client#put_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#put_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#refresh_token	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#refresh_token() abort$/;"	f
calendar#google#task#clear_completed	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#clear_completed(id) abort$/;"	f
calendar#google#task#clear_completed_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#clear_completed_response(id, response) abort$/;"	f
calendar#google#task#complete	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#complete(id, taskid) abort$/;"	f
calendar#google#task#complete_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#complete_response(id, response) abort$/;"	f
calendar#google#task#delete	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#delete(id, taskid) abort$/;"	f
calendar#google#task#delete_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#delete_response(id, response) abort$/;"	f
calendar#google#task#downloadTasks	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#downloadTasks(...) abort$/;"	f
calendar#google#task#getTaskList	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#getTaskList() abort$/;"	f
calendar#google#task#getTaskList_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#getTaskList_response(id, response) abort$/;"	f
calendar#google#task#getTasks	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#getTasks() abort$/;"	f
calendar#google#task#get_url	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#get_url(type) abort$/;"	f
calendar#google#task#insert	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#insert(id, previous, parent, title, ...) abort$/;"	f
calendar#google#task#insert_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#insert_response(id, response) abort$/;"	f
calendar#google#task#move	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#move(id, taskid, previous, parent) abort$/;"	f
calendar#google#task#move_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#move_response(id, response) abort$/;"	f
calendar#google#task#response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#response(id, response) abort$/;"	f
calendar#google#task#sorter	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#sorter(x, y) abort$/;"	f
calendar#google#task#uncomplete	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#uncomplete(id, taskid) abort$/;"	f
calendar#google#task#uncomplete_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#uncomplete_response(id, response) abort$/;"	f
calendar#google#task#update	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#update(id, taskid, title, ...) abort$/;"	f
calendar#google#task#update_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#update_response(id, response) abort$/;"	f
calendar#mapping#new	plugged/calendar.vim/autoload/calendar/mapping.vim	/^function! calendar#mapping#new() abort$/;"	f
calendar#mark#new	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! calendar#mark#new() abort$/;"	f
calendar#message#default#get	plugged/calendar.vim/autoload/calendar/message/default.vim	/^function! calendar#message#default#get() abort$/;"	f
calendar#message#en#get	plugged/calendar.vim/autoload/calendar/message/en.vim	/^function! calendar#message#en#get() abort$/;"	f
calendar#message#get	plugged/calendar.vim/autoload/calendar/message.vim	/^function! calendar#message#get(type) abort$/;"	f
calendar#message#ja#get	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^function! calendar#message#ja#get() abort$/;"	f
calendar#model#new	plugged/calendar.vim/autoload/calendar/model.vim	/^function! calendar#model#new() abort$/;"	f
calendar#new	plugged/calendar.vim/autoload/calendar.vim	/^function! calendar#new(args) abort$/;"	f
calendar#pixel#get	plugged/calendar.vim/autoload/calendar/pixel.vim	/^function! calendar#pixel#get(chr) abort$/;"	f
calendar#pixel#len	plugged/calendar.vim/autoload/calendar/pixel.vim	/^function! calendar#pixel#len(chr) abort$/;"	f
calendar#pixel#whitelen	plugged/calendar.vim/autoload/calendar/pixel.vim	/^function! calendar#pixel#whitelen(chr, ...) abort$/;"	f
calendar#revive	plugged/calendar.vim/autoload/calendar.vim	/^function! calendar#revive() abort$/;"	f
calendar#save	plugged/calendar.vim/autoload/calendar.vim	/^function! calendar#save() abort$/;"	f
calendar#setlocal#filetype	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#filetype() abort$/;"	f
calendar#setlocal#filetype_force	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#filetype_force() abort$/;"	f
calendar#setlocal#modifiable	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#modifiable() abort$/;"	f
calendar#setlocal#new	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#new() abort$/;"	f
calendar#setlocal#nomodifiable	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#nomodifiable() abort$/;"	f
calendar#setting#frame	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! calendar#setting#frame() abort$/;"	f
calendar#setting#get	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! calendar#setting#get(name) abort$/;"	f
calendar#setting#get_default	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! calendar#setting#get_default(name) abort$/;"	f
calendar#string#strdisplaywidth	plugged/calendar.vim/autoload/calendar/string.vim	/^function! calendar#string#strdisplaywidth(str) abort$/;"	f
calendar#string#strwidthpart	plugged/calendar.vim/autoload/calendar/string.vim	/^function! calendar#string#strwidthpart(str, width) abort$/;"	f
calendar#string#strwidthpart_reverse	plugged/calendar.vim/autoload/calendar/string.vim	/^function! calendar#string#strwidthpart_reverse(str, width) abort$/;"	f
calendar#string#truncate	plugged/calendar.vim/autoload/calendar/string.vim	/^function! calendar#string#truncate(str, width) abort$/;"	f
calendar#string#truncate_reverse	plugged/calendar.vim/autoload/calendar/string.vim	/^function! calendar#string#truncate_reverse(str, width) abort$/;"	f
calendar#task#google#new	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! calendar#task#google#new() abort$/;"	f
calendar#task#local#new	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! calendar#task#local#new() abort$/;"	f
calendar#task#new	plugged/calendar.vim/autoload/calendar/task.vim	/^function! calendar#task#new() abort$/;"	f
calendar#task#width	plugged/calendar.vim/autoload/calendar/task.vim	/^function! calendar#task#width() abort$/;"	f
calendar#text#new	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! calendar#text#new(s, x, y, syn) abort$/;"	f
calendar#time#datetime	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#datetime(str) abort$/;"	f
calendar#time#hour12	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#hour12(h) abort$/;"	f
calendar#time#new	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#new(h, m, s) abort$/;"	f
calendar#time#now	plugged/calendar.vim/autoload/calendar/time.vim	/^  function! calendar#time#now() abort$/;"	f
calendar#time#parse	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#parse(str) abort$/;"	f
calendar#time#time_zone	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#time_zone() abort$/;"	f
calendar#timestamp#clear	plugged/calendar.vim/autoload/calendar/timestamp.vim	/^function! calendar#timestamp#clear() abort$/;"	f
calendar#timestamp#update	plugged/calendar.vim/autoload/calendar/timestamp.vim	/^function! calendar#timestamp#update(name, sec) abort$/;"	f
calendar#util#author	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#author() abort$/;"	f
calendar#util#getcmdline	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#getcmdline() abort$/;"	f
calendar#util#id	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#id() abort$/;"	f
calendar#util#issue	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#issue() abort$/;"	f
calendar#util#license	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#license() abort$/;"	f
calendar#util#name	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#name() abort$/;"	f
calendar#util#repository	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#repository() abort$/;"	f
calendar#util#rmdir	plugged/calendar.vim/autoload/calendar/util.vim	/^  function! calendar#util#rmdir(path, ...) abort$/;"	f
calendar#util#system	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#system(cmd) abort$/;"	f
calendar#util#update_keys	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#update_keys() abort$/;"	f
calendar#util#version	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#version() abort$/;"	f
calendar#util#winheight	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#winheight() abort$/;"	f
calendar#util#winwidth	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#winwidth() abort$/;"	f
calendar#util#yank	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#yank(text) abort$/;"	f
calendar#view#agenda#new	plugged/calendar.vim/autoload/calendar/view/agenda.vim	/^function! calendar#view#agenda#new(source) abort$/;"	f
calendar#view#calendar#new	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! calendar#view#calendar#new(source) abort$/;"	f
calendar#view#clock#new	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! calendar#view#clock#new(source) abort$/;"	f
calendar#view#clock_date#new	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^function! calendar#view#clock_date#new(source) abort$/;"	f
calendar#view#clock_date_monthday#new	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^function! calendar#view#clock_date_monthday#new(source) abort$/;"	f
calendar#view#clock_date_monthday_time#new	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^function! calendar#view#clock_date_monthday_time#new(source) abort$/;"	f
calendar#view#clock_date_time#new	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^function! calendar#view#clock_date_time#new(source) abort$/;"	f
calendar#view#clock_time#new	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^function! calendar#view#clock_time#new(source) abort$/;"	f
calendar#view#clock_time_hourmin#new	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^function! calendar#view#clock_time_hourmin#new(source) abort$/;"	f
calendar#view#day#new	plugged/calendar.vim/autoload/calendar/view/day.vim	/^function! calendar#view#day#new(source) abort$/;"	f
calendar#view#day_1#new	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^function! calendar#view#day_1#new(source) abort$/;"	f
calendar#view#day_2#new	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^function! calendar#view#day_2#new(source) abort$/;"	f
calendar#view#day_3#new	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^function! calendar#view#day_3#new(source) abort$/;"	f
calendar#view#day_4#new	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^function! calendar#view#day_4#new(source) abort$/;"	f
calendar#view#day_5#new	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^function! calendar#view#day_5#new(source) abort$/;"	f
calendar#view#day_6#new	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^function! calendar#view#day_6#new(source) abort$/;"	f
calendar#view#day_7#new	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^function! calendar#view#day_7#new(source) abort$/;"	f
calendar#view#event#agenda_group_sorter	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#agenda_group_sorter(x, y) abort$/;"	f
calendar#view#event#agenda_sorter	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#agenda_sorter(x, y) abort$/;"	f
calendar#view#event#new	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#new(source) abort$/;"	f
calendar#view#event#sorter	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#sorter(x, y) abort$/;"	f
calendar#view#help#new	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! calendar#view#help#new(source) abort$/;"	f
calendar#view#month#longevt_filter	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! calendar#view#month#longevt_filter(evt, d) abort$/;"	f
calendar#view#month#new	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! calendar#view#month#new(source) abort$/;"	f
calendar#view#month#sorter	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! calendar#view#month#sorter(l, r) abort$/;"	f
calendar#view#month_1x1#new	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^function! calendar#view#month_1x1#new(source) abort$/;"	f
calendar#view#month_1x3#new	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^function! calendar#view#month_1x3#new(source) abort$/;"	f
calendar#view#month_2x6#new	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^function! calendar#view#month_2x6#new(source) abort$/;"	f
calendar#view#month_3x1#new	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^function! calendar#view#month_3x1#new(source) abort$/;"	f
calendar#view#month_3x3#new	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^function! calendar#view#month_3x3#new(source) abort$/;"	f
calendar#view#month_3x4#new	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^function! calendar#view#month_3x4#new(source) abort$/;"	f
calendar#view#month_4x1#new	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^function! calendar#view#month_4x1#new(source) abort$/;"	f
calendar#view#month_4x2#new	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^function! calendar#view#month_4x2#new(source) abort$/;"	f
calendar#view#month_4x3#new	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^function! calendar#view#month_4x3#new(source) abort$/;"	f
calendar#view#month_5x1#new	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^function! calendar#view#month_5x1#new(source) abort$/;"	f
calendar#view#month_6x2#new	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^function! calendar#view#month_6x2#new(source) abort$/;"	f
calendar#view#new	plugged/calendar.vim/autoload/calendar/view.vim	/^function! calendar#view#new() abort$/;"	f
calendar#view#task#new	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! calendar#view#task#new(source) abort$/;"	f
calendar#view#week#new	plugged/calendar.vim/autoload/calendar/view/week.vim	/^function! calendar#view#week#new(source) abort$/;"	f
calendar#view#weekday#new	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^function! calendar#view#weekday#new(source) abort$/;"	f
calendar#view#year#new	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! calendar#view#year#new(source) abort$/;"	f
calendar#view#ymd#new	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! calendar#view#ymd#new(source) abort$/;"	f
calendar#view#ymd_daymonthyear#new	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^function! calendar#view#ymd_daymonthyear#new(source) abort$/;"	f
calendar#view#ymd_monthdayyear#new	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^function! calendar#view#ymd_monthdayyear#new(source) abort$/;"	f
calendar#view#ymd_monthyear#new	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^function! calendar#view#ymd_monthyear#new(source) abort$/;"	f
calendar#view#ymd_year#new	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^function! calendar#view#ymd_year#new(source) abort$/;"	f
calendar#view#ymd_yearmonth#new	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^function! calendar#view#ymd_yearmonth#new(source) abort$/;"	f
calendar#view#ymd_yearmonthday#new	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^function! calendar#view#ymd_yearmonthday#new(source) abort$/;"	f
calendar#webapi#callback	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#callback(id, cb) abort$/;"	f
calendar#webapi#decode	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#decode(json) abort$/;"	f
calendar#webapi#delete	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#delete(url, ...) abort$/;"	f
calendar#webapi#delete_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#delete_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#echo_error	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#echo_error(response) abort$/;"	f
calendar#webapi#encode	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#encode(val) abort$/;"	f
calendar#webapi#encodeURI	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#encodeURI(items) abort$/;"	f
calendar#webapi#false	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#false() abort$/;"	f
calendar#webapi#get	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#get(url, ...) abort$/;"	f
calendar#webapi#get_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#get_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#null	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#null() abort$/;"	f
calendar#webapi#open_url	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#open_url(url) abort$/;"	f
calendar#webapi#parse	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#parse(data) abort$/;"	f
calendar#webapi#patch	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#patch(url, ...) abort$/;"	f
calendar#webapi#patch_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#patch_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#post	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post(url, ...) abort$/;"	f
calendar#webapi#post_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#post_nojson	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post_nojson(url, ...) abort$/;"	f
calendar#webapi#post_nojson_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post_nojson_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#put	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#put(url, ...) abort$/;"	f
calendar#webapi#put_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#put_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#true	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#true() abort$/;"	f
calendar#week#first_day_index	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#first_day_index() abort$/;"	f
calendar#week#is_first_day	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#is_first_day(day) abort$/;"	f
calendar#week#is_last_day	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#is_last_day(day) abort$/;"	f
calendar#week#last_day_index	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#last_day_index() abort$/;"	f
calendar#week#week_count	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#week_count(month) abort$/;"	f
calendar#week#week_index	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#week_index(day) abort$/;"	f
calendar#week#week_number	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#week_number(day) abort$/;"	f
camelize	plugged/vim-polyglot/scripts/build	/^def camelize(str)$/;"	f
can_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
can_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump(self, direction):$/;"	m	class:SnippetManager
can_jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_backwards(self):$/;"	m	class:SnippetManager
can_jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_forwards(self):$/;"	m	class:SnippetManager
cancelPreview	plugged/fzf/src/terminal.go	/^func (t *Terminal) cancelPreview() {$/;"	f	struct:fzf.Terminal
capture	plugged/fzf/test/test_go.rb	/^  def capture$/;"	f	class:Tmux
cargo#Load	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#Load()$/;"	f
cargo#bench	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#bench(args)$/;"	f
cargo#build	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#build(args)$/;"	f
cargo#check	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#check(args)$/;"	f
cargo#clean	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#clean(args)$/;"	f
cargo#cmd	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#cmd(args) abort$/;"	f
cargo#doc	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#doc(args)$/;"	f
cargo#init	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#init(args)$/;"	f
cargo#install	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#install(args)$/;"	f
cargo#nearestCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestCargo(is_getcwd) abort$/;"	f
cargo#nearestRootCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestRootCargo(is_getcwd) abort$/;"	f
cargo#nearestWorkspaceCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestWorkspaceCargo(is_getcwd) abort$/;"	f
cargo#new	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#new(args)$/;"	f
cargo#publish	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#publish(args)$/;"	f
cargo#quickfix#CmdPost	plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPost() abort$/;"	f
cargo#quickfix#CmdPre	plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPre() abort$/;"	f
cargo#run	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#run(args)$/;"	f
cargo#runtarget	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#runtarget(args)$/;"	f
cargo#search	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#search(args)$/;"	f
cargo#test	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#test(args)$/;"	f
cargo#update	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#update(args)$/;"	f
carp_syntax_init	plugged/vim-polyglot/syntax/carp.vim	/^    let carp_syntax_init = 1$/;"	v
case classes	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
case objects	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
caseSensitive	plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
caseSensitive	plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.term	typeref:typename:bool
cgc	plugged/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
changelogMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^augroup changelogMenu$/;"	a
charClass	plugged/fzf/src/algo/algo.go	/^type charClass int$/;"	t	package:algo	typeref:typename:int
charClassOf	plugged/fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfAscii	plugged/fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfNonAscii	plugged/fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charLetter	plugged/fzf/src/algo/algo.go	/^	charLetter$/;"	c	package:algo
charLower	plugged/fzf/src/algo/algo.go	/^	charLower$/;"	c	package:algo
charNonWord	plugged/fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c	package:algo	typeref:type:charClass
charNumber	plugged/fzf/src/algo/algo.go	/^	charNumber$/;"	c	package:algo
charUpper	plugged/fzf/src/algo/algo.go	/^	charUpper$/;"	c	package:algo
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^let chars  = ""$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^  let chars  = ""$/;"	v
charset	plugged/vim-polyglot/autoload/xml/html5.vim	/^let charset = [$/;"	v
checkAscii	plugged/fzf/src/util/chars.go	/^func checkAscii(bytes []byte) (bool, int) {$/;"	f	package:util	typeref:typename:(bool, int)
check_binary	plugged/fzf/install	/^check_binary() {$/;"	f
check_binary	plugged/fzf/install.ps1	/^function check_binary () {$/;"	f
children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def children(self):$/;"	m	class:EditableTextObject
chill_minlines	plugged/vim-polyglot/syntax/chill.vim	/^  let chill_minlines = 15$/;"	v
chunkSize	plugged/fzf/src/constants.go	/^	chunkSize int = 100$/;"	c	package:fzf	typeref:typename:int
chunks	plugged/fzf/src/chunklist.go	/^	chunks []*Chunk$/;"	m	struct:fzf.ChunkList	typeref:typename:[]*Chunk
chunks	plugged/fzf/src/matcher.go	/^	chunks     []*Chunk$/;"	m	struct:fzf.MatchRequest	typeref:typename:[]*Chunk
chunks	plugged/fzf/src/merger.go	/^	chunks  *[]*Chunk$/;"	m	struct:fzf.Merger	typeref:typename:*[]*Chunk
class	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*class[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/::\\1\/c,class\/$/;"	k	langdef:puppet
class	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*class[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/\\1\/c,class\/$/;"	k	langdef:puppet
classes	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
classes	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*class[ \\t]+([a-zA-Z0-9_]+)\/\\2\/c,classes\/$/;"	k	langdef:typescript
clean	plugged/fzf/Makefile	/^clean:$/;"	t
cleanExit	plugged/fzf/src/terminal.go	/^	cleanExit          bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
cleanTemporaryFiles	plugged/fzf/src/terminal.go	/^func cleanTemporaryFiles() {$/;"	f	package:fzf
cleanse	plugged/fzf/src/tui/light.go	/^func cleanse(str string) string {$/;"	f	package:tui	typeref:typename:string
cleanup	plugged/fzf/bin/fzf-tmux	/^cleanup() {$/;"	f
clearCache	plugged/fzf/src/matcher.go	/^	clearCache bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
clearChunkCache	plugged/fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f	package:fzf
clearCode	plugged/fzf/src/terminal.go	/^const clearCode string = "\\x1b[2J"$/;"	c	package:fzf	typeref:typename:string
clearOnExit	plugged/fzf/src/tui/light.go	/^	clearOnExit   bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
clearPatternCache	plugged/fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f	package:fzf
clear_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_temp	plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
clickY	plugged/fzf/src/tui/light.go	/^	clickY        []int$/;"	m	struct:tui.LightRenderer	typeref:typename:[]int
clickY	plugged/fzf/src/tui/tui.go	/^	clickY       []int$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:[]int
clojurecomplete#Complete	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
clone_plugin	plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
closePlatform	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
closePlatform	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
closure.Process	plugged/vim-polyglot/autoload/RstFold.vim	/^  function closure.Process(match) dict$/;"	f
clrzr	plugged/clrzr/README.md	/^# clrzr$/;"	c
clrzr#AlphaPosToggle	plugged/clrzr/autoload/clrzr.vim	/^function! clrzr#AlphaPosToggle()$/;"	f
clrzr#Disable	plugged/clrzr/autoload/clrzr.vim	/^function! clrzr#Disable()$/;"	f
clrzr#Enable	plugged/clrzr/autoload/clrzr.vim	/^function! clrzr#Enable()$/;"	f
clrzr#Refresh	plugged/clrzr/autoload/clrzr.vim	/^function! clrzr#Refresh()$/;"	f
clrzr#RefreshAllBuffers	plugged/clrzr/autoload/clrzr.vim	/^function! clrzr#RefreshAllBuffers()$/;"	f
cmdline.__update	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^	function! a:cmdline.__update()$/;"	f
cmdline.backward_word	plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^        function! a:cmdline.backward_word(...) abort$/;"	f
cmdline.backward_word	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^	function! a:cmdline.backward_word(...)$/;"	f
code	plugged/vimwiki/autoload/vimwiki/style.css	/^code {$/;"	s
coffee#CoffeeSetUpErrorFormat	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
col2byte	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def col2byte(line, col):$/;"	f
colBlack	plugged/fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c	package:tui	typeref:type:Color
colBlue	plugged/fzf/src/tui/tui.go	/^	colBlue$/;"	c	package:tui
colCyan	plugged/fzf/src/tui/tui.go	/^	colCyan$/;"	c	package:tui
colDefault	plugged/fzf/src/tui/tui.go	/^	colDefault   Color = -1$/;"	c	package:tui	typeref:type:Color
colGreen	plugged/fzf/src/tui/tui.go	/^	colGreen$/;"	c	package:tui
colMagenta	plugged/fzf/src/tui/tui.go	/^	colMagenta$/;"	c	package:tui
colRed	plugged/fzf/src/tui/tui.go	/^	colRed$/;"	c	package:tui
colUndefined	plugged/fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c	package:tui	typeref:type:Color
colWhite	plugged/fzf/src/tui/tui.go	/^	colWhite$/;"	c	package:tui
colYellow	plugged/fzf/src/tui/tui.go	/^	colYellow$/;"	c	package:tui
color	plugged/fzf/src/ansi.go	/^	color  ansiState$/;"	m	struct:fzf.ansiOffset	typeref:typename:ansiState
color	plugged/fzf/src/result.go	/^	color  tui.ColorPair$/;"	m	struct:fzf.colorOffset	typeref:typename:tui.ColorPair
color	plugged/fzf/src/tui/tcell.go	/^	color       bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
color	plugged/vim-polyglot/syntax/xpm.vim	/^		     let color = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', /;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^let color  = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^		let color = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^  let color  = ""$/;"	v
color#Darken	plugged/doom-one.vim/autoload/color.vim	/^fu! color#Darken(color, ...)$/;"	f
color#Decrease	plugged/doom-one.vim/autoload/color.vim	/^function! color#Decrease (...)$/;"	f
color#HSLtoHex	plugged/doom-one.vim/autoload/color.vim	/^fu! color#HSLtoHex (...)$/;"	f
color#HSLtoRGB	plugged/doom-one.vim/autoload/color.vim	/^fu! color#HSLtoRGB(...) " (h, s, l)$/;"	f
color#HexToHSL	plugged/doom-one.vim/autoload/color.vim	/^fu! color#HexToHSL (color)$/;"	f
color#HexToRGB	plugged/doom-one.vim/autoload/color.vim	/^fu! color#HexToRGB (color)$/;"	f
color#Hue2RGB	plugged/doom-one.vim/autoload/color.vim	/^fu! color#Hue2RGB(...) " (p, q, t)$/;"	f
color#Increase	plugged/doom-one.vim/autoload/color.vim	/^function! color#Increase (...)$/;"	f
color#Lighten	plugged/doom-one.vim/autoload/color.vim	/^fu! color#Lighten(color, ...)$/;"	f
color#Mix	plugged/doom-one.vim/autoload/color.vim	/^function! color#Mix (a, b, ...)$/;"	f
color#RGBtoHSL	plugged/doom-one.vim/autoload/color.vim	/^fu! color#RGBtoHSL(...)$/;"	f
color#RGBtoHex	plugged/doom-one.vim/autoload/color.vim	/^fu! color#RGBtoHex (...)$/;"	f
color#Test	plugged/doom-one.vim/autoload/color.vim	/^fu! color#Test (string)$/;"	f
colorCodes	plugged/fzf/src/tui/light.go	/^func colorCodes(fg Color, bg Color) []string {$/;"	f	package:tui	typeref:typename:[]string
colorOffset	plugged/fzf/src/result.go	/^type colorOffset struct {$/;"	s	package:fzf
colorOffsets	plugged/fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, colBase tui.Col/;"	f	struct:fzf.Result	typeref:typename:[]colorOffset
colored	plugged/fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
colored	plugged/fzf/src/tui/light.go	/^	colored  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
colors	plugged/fzf/src/item.go	/^	colors      *[]ansiOffset \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]ansiOffset
colors	plugged/vim-polyglot/syntax/xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	plugged/vim-polyglot/syntax/xpm.vim	/^let colors = 0$/;"	v
colors	plugged/vim-polyglot/syntax/xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	plugged/vim-polyglot/syntax/xpm2.vim	/^  let colors = 0$/;"	v
colors_name	plugged/doom-one.vim/colors/doom-one.vim	/^let colors_name = 'doom-one'$/;"	v
comma_expanson	plugged/vim-polyglot/scripts/build	/^def comma_expanson(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
comma_expanson	plugged/vim-polyglot/scripts/import_vim	/^def comma_expanson(s)$/;"	f
command	plugged/fzf/src/options.go	/^	command     string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
command	plugged/fzf/src/reader.go	/^	command  *string$/;"	m	struct:fzf.Reader	typeref:typename:*string
command	plugged/fzf/src/terminal.go	/^	command *string$/;"	m	struct:fzf.searchRequest	typeref:typename:*string
command	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def command(cmd):$/;"	f
commands	plugged/vim-polyglot/syntax/sh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew/;"	v
commands	plugged/vim-polyglot/syntax/zsh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew/;"	v
commentary.vim	plugged/vim-commentary/README.markdown	/^# commentary.vim$/;"	c
compareRanks	plugged/fzf/src/result_others.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
compareRanks	plugged/fzf/src/result_x86.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
concealpre	plugged/vimwiki/syntax/vimwiki.vim	/^let concealpre = vimwiki#vars#get_global('conceal_pre') ? ' concealends' : ''$/;"	v
cond	plugged/fzf/src/util/eventbox.go	/^	cond   *sync.Cond$/;"	m	struct:util.EventBox	typeref:typename:*sync.Cond
conserve	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
consoleDevice	plugged/fzf/src/tui/light.go	/^const consoleDevice string = "\/dev\/tty"$/;"	c	package:tui	typeref:typename:string
consoleFlagsInput	plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsInput  = uint32(windows.ENABLE_VIRTUAL_TERMINAL_INPUT | windows.ENABLE_PROCESSED_IN/;"	v	package:tui
consoleFlagsOutput	plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsOutput = uint32(windows.ENABLE_VIRTUAL_TERMINAL_PROCESSING | windows.ENABLE_PROCESS/;"	v	package:tui
constrain	plugged/fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f	struct:fzf.Terminal
consts,static constants	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?(static|const)[ \\t]+([a-zA-Z0-9_]+)\/\\3\/c,consts,static c/;"	k	langdef:Rust
context	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
conv	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def conv(obj):$/;"	f	function:escape	file:
convertBoolToInt32	plugged/fzf/src/util/atomicbool.go	/^func convertBoolToInt32(b bool) int32 {$/;"	f	package:util	typeref:typename:int32
convert_keys	plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
coordinatorDelayMax	plugged/fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
coordinatorDelayStep	plugged/fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
copySlice	plugged/fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
copy_file	plugged/vim-polyglot/scripts/build	/^def copy_file(name, src, dest)$/;"	f
core_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], '/;"	v
could_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
count	plugged/fzf/src/chunklist.go	/^	count int$/;"	m	struct:fzf.Chunk	typeref:typename:int
count	plugged/fzf/src/merger.go	/^	count   int$/;"	m	struct:fzf.Merger	typeref:typename:int
count	plugged/fzf/src/terminal.go	/^	count              int$/;"	m	struct:fzf.Terminal	typeref:typename:int
counts	plugged/fzf/test/test_go.rb	/^          def counts$/;"	f	method:Tmux.until
cpp	plugged/vim-polyglot/syntax/xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm.vim	/^let cpp    = 0$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm2.vim	/^  let cpp    = 0$/;"	v
cprint2	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) cprint2(fg Color, bg Color, attr Attr, text string) {$/;"	f	struct:tui.LightWindow
create a directory in tests/ then add the following files:	plugged/vim-visual-multi/test/README.md	/^## create a directory in tests\/ then add the following files:$/;"	s	chapter:Add a Test
create_directory	plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
create_file	plugged/fzf/install	/^create_file() {$/;"	f
criterion	plugged/fzf/src/options.go	/^type criterion int$/;"	t	package:fzf	typeref:typename:int
crossorigin	plugged/vim-polyglot/autoload/xml/html5.vim	/^let crossorigin = ['anonymous', 'use-credentials']$/;"	v
cry_minlines	plugged/vim-polyglot/syntax/cryptol.vim	/^  let cry_minlines = 50$/;"	v
crystal#indent#AfterBlockOpening	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterBlockOpening(pline_info) abort$/;"	f
crystal#indent#AfterEndKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndKeyword(pline_info) abort$/;"	f
crystal#indent#AfterEndMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndMacroTag(pline_info) abort$/;"	f
crystal#indent#AfterIndentKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentKeyword(pline_info) abort$/;"	f
crystal#indent#AfterIndentMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentMacroTag(pline_info) abort$/;"	f
crystal#indent#AfterLeadingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLeadingOperator(pline_info) abort$/;"	f
crystal#indent#AfterLinkAttribute	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLinkAttribute(pline_info) abort$/;"	f
crystal#indent#AfterTypeDeclaration	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterTypeDeclaration(pline_info) abort$/;"	f
crystal#indent#AfterUnbalancedBracket	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterUnbalancedBracket(pline_info) abort$/;"	f
crystal#indent#ClosingBracketOnEmptyLine	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
crystal#indent#ContinuedHangingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedHangingOperator(msl_info) abort$/;"	f
crystal#indent#ContinuedLine	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedLine(pline_info) abort$/;"	f
crystal#indent#DeindentingKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingKeyword(cline_info) abort$/;"	f
crystal#indent#DeindentingMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingMacroTag(cline_info) abort$/;"	f
crystal#indent#EmptyInsideString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#EmptyInsideString(pline_info) abort$/;"	f
crystal#indent#ExtraBrackets	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ExtraBrackets(lnum) abort$/;"	f
crystal#indent#GetMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#GetMSL(lnum) abort$/;"	f
crystal#indent#IndentingKeywordInMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IndentingKeywordInMSL(msl_info) abort$/;"	f
crystal#indent#IsAssignment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsAssignment(str, pos) abort$/;"	f
crystal#indent#IsInString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInString(lnum, col) abort$/;"	f
crystal#indent#IsInStringDelimiter	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrComment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrComment(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrCommentOrDelimiter	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrCommentOrDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsLineComment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsLineComment(lnum) abort$/;"	f
crystal#indent#LeadingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#LeadingOperator(cline_info) abort$/;"	f
crystal#indent#Match	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#Match(lnum, regex) abort$/;"	f
crystal#indent#MultilineString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#MultilineString(cline_info) abort$/;"	f
crystal#indent#PrevNonBlank	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PrevNonBlank(lnum) abort$/;"	f
crystal#indent#PreviousNotMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PreviousNotMSL(msl_info) abort$/;"	f
crystal#indent#RelativeMacroDepth	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#RelativeMacroDepth(a, b) abort$/;"	f
crystal#indent#StartOfFile	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#StartOfFile(pline_info) abort$/;"	f
crystal_lang#complete	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#complete(findstart, base) abort$/;"	f
crystal_lang#context	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#context(file, pos, option_str) abort$/;"	f
crystal_lang#entrypoint_for	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#entrypoint_for(file_path) abort$/;"	f
crystal_lang#expand	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#expand(file, pos, ...) abort$/;"	f
crystal_lang#format	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format(option_str, ...) abort$/;"	f
crystal_lang#format_string	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format_string(code, ...) abort$/;"	f
crystal_lang#get_spec_switched_path	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#get_spec_switched_path(absolute_path) abort$/;"	f
crystal_lang#impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#impl(file, pos, option_str) abort$/;"	f
crystal_lang#jump_to_definition	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#jump_to_definition(file, pos) abort$/;"	f
crystal_lang#run_all_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_all_spec(...) abort$/;"	f
crystal_lang#run_current_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_current_spec(...) abort$/;"	f
crystal_lang#switch_spec_file	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#switch_spec_file(...) abort$/;"	f
crystal_lang#tool	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#tool(name, file, pos, option_str) abort$/;"	f
crystal_lang#type_hierarchy	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#type_hierarchy(file, option_str) abort$/;"	f
cs	plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
csc_minlines	plugged/vim-polyglot/syntax/csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
csi	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) csi(code string) {$/;"	f	unknown:tui.LightRenderer
csi	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csi(code string) {$/;"	f	struct:tui.LightWindow
csiColor	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csiColor(fg Color, bg Color, attr Attr) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
csv#AddColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AddColumn(start, stop, ...) range "{{{3$/;"	f
csv#AnalyzeColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AnalyzeColumn(...) "{{{3$/;"	f
csv#ArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ArrangeCol(first, last, bang, limit, ...) range "{{{3$/;"	f
csv#AvgColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AvgColumn(list) "{{{3$/;"	f
csv#CSVArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVArrangeCol(first, last, bang, limit) range "{{{2$/;"	f
csv#CSVMappings	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVMappings() "{{{3$/;"	f
csv#CSVSortValues	plugged/vim-polyglot/autoload/csv.vim	/^  fu! csv#CSVSortValues(i1, i2) "{{{3$/;"	f
csv#CSV_SetOption	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSV_SetOption(csvfile, header, option, value) "{{{3$/;"	f
csv#CalculateColumnWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CalculateColumnWidth(row, silent) "{{{3$/;"	f
csv#CheckDuplicates	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckDuplicates(list) "{{{3$/;"	f
csv#CheckHeaderLine	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckHeaderLine() "{{{3$/;"	f
csv#ColWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColWidth(colnr, row, silent) "{{{3$/;"	f
csv#ColumnMode	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnMode() "{{{3$/;"	f
csv#ColumnWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnWidth()$/;"	f
csv#Columnize	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Columnize(field) "{{{3$/;"	f
csv#CommandDefinitions	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CommandDefinitions() "{{{3$/;"	f
csv#CompleteColumnNr	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CompleteColumnNr(A,L,P) "{{{3$/;"	f
csv#CopyCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CopyCol(reg, col, cnt) "{{{3$/;"	f
csv#CountColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CountColumn(list) "{{{3$/;"	f
csv#DelColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DelColumn(colnr) "{{{3$/;"	f
csv#DeleteColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DeleteColumn(arg) "{{{3$/;"	f
csv#DisableFolding	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DisableFolding() "{{{3$/;"	f
csv#DoAutoCommands	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoAutoCommands() "{{{3$/;"	f
csv#DoForEachColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoForEachColumn(start, stop, bang) range "{{{3$/;"	f
csv#DupColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DupColumn(start, stop, ...) range "{{{3$/;"	f
csv#DuplicateRows	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DuplicateRows(columnlist) "{{{3$/;"	f
csv#EscapeValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EscapeValue(val) "{{{3$/;"	f
csv#EvalColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EvalColumn(nr, func, first, last, ...) range "{{{3$/;"	f
csv#FoldValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#FoldValue(lnum, filter) "{{{3$/;"	f
csv#GetCells	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCells(list) "{{{3$/;"	f
csv#GetColPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColPat(colnr, zs_flag) "{{{3$/;"	f
csv#GetColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColumn(line, col, strip) "{{{3$/;"	f
csv#GetCursorChar	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCursorChar() "{{{3$/;"	f
csv#GetDelimiter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetDelimiter(first, last, ...) "{{{3$/;"	f
csv#GetPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetPat(colnr, maxcolnr, pat, allowmore) "{{{3$/;"	f
csv#HiCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#HiCol(colnr, bang) "{{{3$/;"	f
csv#IN	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#IN(list, value) "{{{3$/;"	f
csv#Init	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Init(start, end, ...) "{{{3$/;"	f
csv#InitCSVFixedWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#InitCSVFixedWidth() "{{{3$/;"	f
csv#LocalCmd	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalCmd(name, definition, args) "{{{3$/;"	f
csv#LocalSettings	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalSettings(type) "{{{3$/;"	f
csv#Map	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Map(map, name, definition, ...) "{{{3$/;"	f
csv#MaxColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumn(list) "{{{3$/;"	f
csv#MaxColumns	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumns(...) "{{{3$/;"	f
csv#Menu	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Menu(enable) "{{{3$/;"	f
csv#MoveCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveCol(forward, line, ...) "{{{3$/;"	f
csv#MoveColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveColumn(start, stop, ...) range "{{{3$/;"	f
csv#MoveOver	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveOver(outer) "{{{3$/;"	f
csv#NewDelimiter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewDelimiter(newdelimiter, firstl, lastl) "{{{3$/;"	f
csv#NewRecord	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewRecord(line1, line2, count) "{{{3$/;"	f
csv#NrColumns	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NrColumns(bang) "{{{3$/;"	f
csv#NumberFormat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NumberFormat() "{{{3$/;"	f
csv#OutputFilters	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#OutputFilters(bang) "{{{3$/;"	f
csv#PopStdDevColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopStdDevColumn(list) "{{{2$/;"	f
csv#PopVarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopVarianceColumn(list) "{{{2$/;"	f
csv#PrepUnArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepUnArrangeCol(first, last) "{{{3$/;"	f
csv#PrepareDoForEachColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareDoForEachColumn(start, stop, bang) range"{{{3$/;"	f
csv#PrepareFolding	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareFolding(add, match)  "{{{3$/;"	f
csv#ProcessFieldValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProcessFieldValue(field) "{{{3$/;"	f
csv#ProgressBar	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProgressBar(cnt, max) "{{{3$/;"	f
csv#RemoveAutoHighlight	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#RemoveAutoHighlight() "{{{3$/;"	f
csv#RemoveLastItem	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#RemoveLastItem(count) "{{{3$/;"	f
csv#SameFieldRegion	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SameFieldRegion() "{{{3$/;"	f
csv#SaveOptions	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SaveOptions(list) "{{{3$/;"	f
csv#SearchColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SearchColumn(arg) "{{{3$/;"	f
csv#SetupAutoCmd	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SetupAutoCmd(window,bufnr) "{{{3$/;"	f
csv#SmplStdDevColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplStdDevColumn(list) "{{{2$/;"	f
csv#SmplVarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplVarianceColumn(list) "{{{2$/;"	f
csv#Sort	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Sort(bang, line1, line2, colnr) range "{{{3$/;"	f
csv#SortComplete	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortComplete(A,L,P) "{{{3$/;"	f
csv#SortFilter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortFilter(a, b) "{{{3$/;"	f
csv#SplitHeaderLine	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderLine(lines, bang, hor) "{{{3$/;"	f
csv#SplitHeaderToggle	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderToggle(hor) "{{{3$/;"	f
csv#SubstituteInColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SubstituteInColumn(command, line1, line2) range "{{{3$/;"	f
csv#SumCSVRow	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumCSVRow(line, nr) "{{{3$/;"	f
csv#SumColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumColumn(list) "{{{3$/;"	f
csv#Tabularize	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Tabularize(bang, first, last) "{{{3$/;"	f
csv#Timeout	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Timeout(start) "{{{3$/;"	f
csv#Transpose	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Transpose(line1, line2) "{{{3$/;"	f
csv#UnArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#UnArrangeCol(match) "{{{3$/;"	f
csv#ValidComment	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ValidComment() "{{{3$/;"	f
csv#VarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#VarianceColumn(list, is_population) "{{{3$/;"	f
csv#Vertfold	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Vertfold(bang, col) "{{{3$/;"	f
csv#WColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#WColumn(...) "{{{3$/;"	f
csv#Warn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Warn(mess) "{{{3$/;"	f
ctrlsf	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^    augroup ctrlsf$/;"	a
ctrlsf#ClearSelectedLine	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#ClearSelectedLine() abort$/;"	f
ctrlsf#CurrentMode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#CurrentMode()$/;"	f
ctrlsf#Focus	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Focus() abort$/;"	f
ctrlsf#JumpTo	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#JumpTo(mode, ...) abort$/;"	f
ctrlsf#NextMatch	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#NextMatch(forward, ...) abort$/;"	f
ctrlsf#Open	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Open() abort$/;"	f
ctrlsf#OpenLocList	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#OpenLocList() abort$/;"	f
ctrlsf#PopulateQFList	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#PopulateQFList()$/;"	f
ctrlsf#Quickfix	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Quickfix(args) abort$/;"	f
ctrlsf#Quit	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Quit() abort$/;"	f
ctrlsf#Redraw	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Redraw() abort$/;"	f
ctrlsf#Save	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Save()$/;"	f
ctrlsf#Search	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Search(args, ...) abort$/;"	f
ctrlsf#SelfCheck	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#SelfCheck() abort$/;"	f
ctrlsf#StopSearch	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#StopSearch()$/;"	f
ctrlsf#SwitchViewMode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#SwitchViewMode() abort$/;"	f
ctrlsf#Toggle	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Toggle() abort$/;"	f
ctrlsf#ToggleMap	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#ToggleMap() abort$/;"	f
ctrlsf#Update	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Update() abort$/;"	f
ctrlsf#async#ForceStopSearch	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#ForceStopSearch() abort$/;"	f
ctrlsf#async#IsCancelled	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#IsCancelled() abort$/;"	f
ctrlsf#async#IsSearchDone	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#IsSearchDone() abort$/;"	f
ctrlsf#async#IsSearching	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#IsSearching() abort$/;"	f
ctrlsf#async#NeoVimSearchCBWrapper	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#NeoVimSearchCBWrapper(job_id, data, event) abort$/;"	f
ctrlsf#async#ParseAndDrawCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#ParseAndDrawCB(timer_id) abort$/;"	f
ctrlsf#async#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#Reset() abort$/;"	f
ctrlsf#async#SearchCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#SearchCB(channel, msg) abort$/;"	f
ctrlsf#async#SearchCloseCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#SearchCloseCB(channel) abort$/;"	f
ctrlsf#async#SearchErrorCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#SearchErrorCB(channel, msg) abort$/;"	f
ctrlsf#async#StartSearch	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#StartSearch(command) abort$/;"	f
ctrlsf#async#StopParse	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#StopParse() abort$/;"	f
ctrlsf#async#StopSearch	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#StopSearch() abort$/;"	f
ctrlsf#backend#Detect	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#Detect()$/;"	f
ctrlsf#backend#LastErrors	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#LastErrors()$/;"	f
ctrlsf#backend#Run	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#Run(args) abort$/;"	f
ctrlsf#backend#RunAsync	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#RunAsync(args) abort$/;"	f
ctrlsf#backend#Runner	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#Runner()$/;"	f
ctrlsf#buf#ClearUndoHistory	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#ClearUndoHistory() abort$/;"	f
ctrlsf#buf#SetLine	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#SetLine(buf_name, lnum, content) abort$/;"	f
ctrlsf#buf#ToggleMap	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#ToggleMap(...) abort$/;"	f
ctrlsf#buf#UndoAllChanges	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#UndoAllChanges() abort$/;"	f
ctrlsf#buf#WarnIfChanged	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#WarnIfChanged() abort$/;"	f
ctrlsf#buf#WriteFile	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#WriteFile(file) abort$/;"	f
ctrlsf#buf#WriteString	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#WriteString(content) abort$/;"	f
ctrlsf#class#file#Add	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#Add(paragraph) abort dict$/;"	f
ctrlsf#class#file#EndVlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#EndVlnum(...) abort dict$/;"	f
ctrlsf#class#file#FirstMatch	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#FirstMatch() abort dict$/;"	f
ctrlsf#class#file#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#New(fname, paragraphs) abort$/;"	f
ctrlsf#class#file#StartVlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#StartVlnum(...) abort dict$/;"	f
ctrlsf#class#line#Matched	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#Matched() abort dict$/;"	f
ctrlsf#class#line#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#New(fname, lnum, content) abort$/;"	f
ctrlsf#class#line#SetViewLnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#SetViewLnum(lnum) abort dict$/;"	f
ctrlsf#class#line#Vlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#Vlnum(...) abort dict$/;"	f
ctrlsf#class#match#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#New(fname, lnum, col, content) abort$/;"	f
ctrlsf#class#match#SetViewPosition	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#SetViewPosition(lnum, col, ...) abort dict$/;"	f
ctrlsf#class#match#Vcol	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#Vcol(...) abort dict$/;"	f
ctrlsf#class#match#Vlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#Vlnum(...) abort dict$/;"	f
ctrlsf#class#paragraph#Lnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Lnum() abort dict$/;"	f
ctrlsf#class#paragraph#Matches	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Matches() abort dict$/;"	f
ctrlsf#class#paragraph#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#New(buffer) abort$/;"	f
ctrlsf#class#paragraph#Range	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Range() abort dict$/;"	f
ctrlsf#class#paragraph#TrimTail	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#TrimTail() abort dict$/;"	f
ctrlsf#class#paragraph#Vlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Vlnum(...) abort dict$/;"	f
ctrlsf#comp#Completion	plugged/ctrlsf.vim/autoload/ctrlsf/comp.vim	/^func! ctrlsf#comp#Completion(arglead, cmdline, cursorpos)$/;"	f
ctrlsf#db#FileResultSet	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#FileResultSet() abort$/;"	f
ctrlsf#db#FileResultSetBy	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#FileResultSetBy(resultset) abort$/;"	f
ctrlsf#db#MatchList	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#MatchList() abort$/;"	f
ctrlsf#db#MatchListQF	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#MatchListQF() abort$/;"	f
ctrlsf#db#MaxLnum	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#MaxLnum()$/;"	f
ctrlsf#db#ParseBackendResult	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#ParseBackendResult(result) abort$/;"	f
ctrlsf#db#ParseBackendResultIncr	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#ParseBackendResultIncr(lines, close) abort$/;"	f
ctrlsf#db#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#Reset() abort$/;"	f
ctrlsf#db#ResultSet	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#ResultSet() abort$/;"	f
ctrlsf#db#SetResultSet	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#SetResultSet(resultset) abort$/;"	f
ctrlsf#edit#Save	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! ctrlsf#edit#Save() abort$/;"	f
ctrlsf#fs#DetectFileFormat	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^func! ctrlsf#fs#DetectFileFormat(path) abort$/;"	f
ctrlsf#fs#FindProjectRoot	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^func! ctrlsf#fs#FindProjectRoot(...) abort$/;"	f
ctrlsf#hl#ClearSelectedLine	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#ClearSelectedLine() abort$/;"	f
ctrlsf#hl#HighlightMatch	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#HighlightMatch(...) abort$/;"	f
ctrlsf#hl#HighlightSelectedLine	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#HighlightSelectedLine() abort$/;"	f
ctrlsf#hl#ReloadSyntax	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#ReloadSyntax() abort$/;"	f
ctrlsf#lex#Tokenize	plugged/ctrlsf.vim/autoload/ctrlsf/lex.vim	/^func! ctrlsf#lex#Tokenize(options_str) abort$/;"	f
ctrlsf#log#Clear	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Clear() abort$/;"	f
ctrlsf#log#Debug	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Debug(format, ...) abort$/;"	f
ctrlsf#log#Error	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Error(format, ...) abort$/;"	f
ctrlsf#log#Info	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Info(format, ...) abort$/;"	f
ctrlsf#log#Notice	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Notice(format, ...) abort$/;"	f
ctrlsf#log#Warn	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Warn(format, ...) abort$/;"	f
ctrlsf#opt#AutoClose	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#AutoClose() abort$/;"	f
ctrlsf#opt#GetCaseSensitive	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetCaseSensitive() abort$/;"	f
ctrlsf#opt#GetContext	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetContext() abort$/;"	f
ctrlsf#opt#GetIgnoreDir	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetIgnoreDir() abort$/;"	f
ctrlsf#opt#GetOpt	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetOpt(name) abort$/;"	f
ctrlsf#opt#GetPath	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetPath() abort$/;"	f
ctrlsf#opt#GetRegex	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetRegex() abort$/;"	f
ctrlsf#opt#HasOpt	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#HasOpt(name) abort$/;"	f
ctrlsf#opt#OptionNames	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#OptionNames() abort$/;"	f
ctrlsf#opt#ParseOptions	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#ParseOptions(options_str) abort$/;"	f
ctrlsf#opt#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#Reset() abort$/;"	f
ctrlsf#pat#HighlightRegex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! ctrlsf#pat#HighlightRegex(vmode) abort$/;"	f
ctrlsf#pat#MatchPerLineRegex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! ctrlsf#pat#MatchPerLineRegex(vmode) abort$/;"	f
ctrlsf#pat#Regex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! ctrlsf#pat#Regex() abort$/;"	f
ctrlsf#preview#ClosePreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#ClosePreviewWindow() abort$/;"	f
ctrlsf#preview#FindPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#FindPreviewWindow() abort$/;"	f
ctrlsf#preview#FocusPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#FocusPreviewWindow() abort$/;"	f
ctrlsf#preview#OpenPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#OpenPreviewWindow() abort$/;"	f
ctrlsf#profile#Report	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^func! ctrlsf#profile#Report() abort$/;"	f
ctrlsf#profile#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^func! ctrlsf#profile#Reset() abort$/;"	f
ctrlsf#profile#Sample	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^func! ctrlsf#profile#Sample(name) abort$/;"	f
ctrlsf#utils#FzfRun	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#FzfRun() abort$/;"	f
ctrlsf#utils#FzfSource	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#FzfSource() abort$/;"	f
ctrlsf#utils#Mirror	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Mirror(dicta, dictb) abort$/;"	f
ctrlsf#utils#Nmap	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Nmap(map, act_func_ref) abort$/;"	f
ctrlsf#utils#Nunmap	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Nunmap(map, act_func_ref) abort$/;"	f
ctrlsf#utils#PreviewSectionC	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#PreviewSectionC()$/;"	f
ctrlsf#utils#Quote	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Quote(str) abort$/;"	f
ctrlsf#utils#SectionB	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#SectionB()$/;"	f
ctrlsf#utils#SectionC	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#SectionC()$/;"	f
ctrlsf#utils#SectionX	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#SectionX()$/;"	f
ctrlsf#utils#ShellEscape	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#ShellEscape(str) abort$/;"	f
ctrlsf#view#FindNextMatch	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#FindNextMatch(forward, wrapscan, ...) abort$/;"	f
ctrlsf#view#Indent	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Indent() abort$/;"	f
ctrlsf#view#Locate	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Locate(vlnum) abort$/;"	f
ctrlsf#view#Render	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Render() abort$/;"	f
ctrlsf#view#RenderIncr	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#RenderIncr(base_vlnum) abort$/;"	f
ctrlsf#view#RenderSummary	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#RenderSummary() abort$/;"	f
ctrlsf#view#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Reset() abort$/;"	f
ctrlsf#view#Unrender	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Unrender(content) abort$/;"	f
ctrlsf#win#BackupAllWinSize	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#BackupAllWinSize()$/;"	f
ctrlsf#win#CloseMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#CloseMainWindow() abort$/;"	f
ctrlsf#win#Draw	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#Draw() abort$/;"	f
ctrlsf#win#DrawIncr	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#DrawIncr() abort$/;"	f
ctrlsf#win#FindCallerWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindCallerWindow() abort$/;"	f
ctrlsf#win#FindMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindMainWindow() abort$/;"	f
ctrlsf#win#FindTargetWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindTargetWindow(file) abort$/;"	f
ctrlsf#win#FindWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindWindow(buf_name) abort$/;"	f
ctrlsf#win#FocusCallerWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusCallerWindow() abort$/;"	f
ctrlsf#win#FocusFirstMatch	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusFirstMatch() abort$/;"	f
ctrlsf#win#FocusMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusMainWindow() abort$/;"	f
ctrlsf#win#FocusWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusWindow(exp) abort$/;"	f
ctrlsf#win#InMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#InMainWindow() abort$/;"	f
ctrlsf#win#InWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#InWindow(buf_name) abort$/;"	f
ctrlsf#win#MoveCursor	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#MoveCursor(wlnum, lnum, col) abort$/;"	f
ctrlsf#win#MoveCursorCentral	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#MoveCursorCentral(lnum, col) abort$/;"	f
ctrlsf#win#MoveCursorCurrentLineMatch	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#MoveCursorCurrentLineMatch() abort$/;"	f
ctrlsf#win#OpenMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#OpenMainWindow() abort$/;"	f
ctrlsf#win#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#Reset() abort$/;"	f
ctrlsf#win#RestoreAllWinSize	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#RestoreAllWinSize()$/;"	f
ctrlsf#win#SetModifiableByViewMode	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#SetModifiableByViewMode(modifiable) abort$/;"	f
ctrlsf.vim	plugged/ctrlsf.vim/README.md	/^# ctrlsf.vim$/;"	c
ctrlsfp	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^    augroup ctrlsfp$/;"	a
current	plugged/fzf/src/history.go	/^func (h *History) current() string {$/;"	f	struct:fzf.History	typeref:typename:string
current	plugged/fzf/src/terminal.go	/^	current  bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
currentItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f	struct:fzf.Terminal	typeref:typename:*Item
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/credo.vim	/^let current_compiler = 'credo'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cryptol.vim	/^let current_compiler = "cryptol"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/fish.vim	/^let current_compiler = 'fish'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/gleam.vim	/^let current_compiler = "gleam"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/gradle.vim	/^let current_compiler = "gradle"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/gradlew.vim	/^let current_compiler = "gradlew"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ledger.vim	/^let current_compiler = g:ledger_bin$/;"	v
current_compiler	plugged/vim-polyglot/compiler/lilypond.vim	/^let current_compiler = "lilypond"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ls.vim	/^let current_compiler = 'ls'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/mix.vim	/^let current_compiler = 'mix'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/nim.vim	/^let current_compiler = 'nim'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/nix-build.vim	/^let current_compiler = 'nix-build'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ocaml.vim	/^let current_compiler = "ocaml"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/powershell.vim	/^let current_compiler = "powershell"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/puppet-lint.vim	/^let current_compiler = 'puppet-lint'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/python.vim	/^let current_compiler = "python"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/sbt.vim	/^let current_compiler = 'sbt'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/sml.vim	/^let current_compiler = "sml"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/swift.vim	/^let current_compiler = "swiftc"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/typescript.vim	/^let current_compiler='typescript'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/zig.vim	/^let current_compiler = "zig"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/zig_build.vim	/^let current_compiler = 'zig_build'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/zig_build_exe.vim	/^let current_compiler = 'zig_build_exe'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/zig_test.vim	/^let current_compiler = 'zig_test'$/;"	v
current_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	plugged/fzf/src/history.go	/^	cursor   int$/;"	m	struct:fzf.History	typeref:typename:int
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursors	plugged/fzf/src/merger.go	/^	cursors []int$/;"	m	struct:fzf.Merger	typeref:typename:[]int
cx	plugged/fzf/src/terminal.go	/^	cx                 int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cx	vimrc	/^nmap cx  <Plug>Csurround$/;"	m
cy	plugged/fzf/src/terminal.go	/^	cy                 int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cycle	plugged/fzf/src/options.go	/^	cycle       bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
cycle	plugged/fzf/src/terminal.go	/^	cycle              bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
d	autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> d <Plug>(calendar_delete)$/;"	m
darcula	plugged/lightline.vim/colorscheme.md	/^### darcula$/;"	S	chapter:Available Colorschemes
dart#ToggleFormatOnSave	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#ToggleFormatOnSave() abort$/;"	f
dart#analyzer	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#analyzer(q_args) abort$/;"	f
dart#fmt	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#fmt(...) abort$/;"	f
dart#resolveUri	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#resolveUri(uri) abort$/;"	f
dart#setModifiable	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#setModifiable() abort$/;"	f
dart#tojs	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#tojs(q_args) abort$/;"	f
db#adapter#ecto#canonicalize	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#canonicalize(url) abort$/;"	f
db#adapter#ecto#complete_opaque	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#complete_opaque(url) abort$/;"	f
dd	autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
debug	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
debug	plugged/vim-polyglot/autoload/smt2/parser.vim	/^const debug = false$/;"	C
debug	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const debug = false$/;"	C
debugV2	plugged/fzf/src/algo/algo.go	/^func debugV2(T []rune, pattern []rune, F []int32, lastIdx int, H []int16, C []int16) {$/;"	f	package:algo
default	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let default = exists('&previewpopup') ? !empty(&previewpopup) : 0$/;"	v
default	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/([A-Z][a-zA-Z0-9_:]+)[[:space:]]*\\{\/\\1\/f,default\/$/;"	k	langdef:puppet
defaultCommand	plugged/fzf/src/constants.go	/^var defaultCommand string$/;"	v	package:fzf	typeref:typename:string
defaultEscDelay	plugged/fzf/src/tui/light.go	/^	defaultEscDelay = 100$/;"	c	package:tui
defaultHeight	plugged/fzf/src/tui/light.go	/^	defaultHeight = 24$/;"	c	package:tui
defaultHistoryMax	plugged/fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c	package:fzf	typeref:typename:int
defaultJumpLabels	plugged/fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,/;"	c	package:fzf	typeref:typename:string
defaultKeymap	plugged/fzf/src/terminal.go	/^func defaultKeymap() map[tui.Event][]*action {$/;"	f	package:fzf	typeref:typename:map[tui.Event][]*action
defaultMargin	plugged/fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
defaultOptions	plugged/fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
defaultPreviewOpts	plugged/fzf/src/options.go	/^func defaultPreviewOpts(command string) previewOpts {$/;"	f	package:fzf	typeref:typename:previewOpts
defaultTheme	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:*ColorTheme
defaultWidth	plugged/fzf/src/tui/light.go	/^	defaultWidth  = 80$/;"	c	package:tui
default_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
definition	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*define[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/\\1\/d,definition\/$/;"	k	langdef:puppet
del	plugged/vimwiki/autoload/vimwiki/style.css	/^del {$/;"	s
delChar	plugged/fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
delete_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def delete_mark(name):$/;"	f
delimNil	plugged/fzf/src/reader.go	/^	delimNil bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
delimiter	plugged/fzf/src/pattern.go	/^	delimiter     Delimiter$/;"	m	struct:fzf.Pattern	typeref:typename:Delimiter
delimiter	plugged/fzf/src/terminal.go	/^	delimiter          Delimiter$/;"	m	struct:fzf.Terminal	typeref:typename:Delimiter
delimiterRegexp	plugged/fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f	package:fzf	typeref:typename:Delimiter
delta	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
description	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
deselectItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItem(item *Item) {$/;"	f	struct:fzf.Terminal
deselectItemChanged	plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
detect_filetypes	plugged/vim-polyglot/scripts/build	/^def detect_filetypes(glob)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
detect_filetypes_str	plugged/vim-polyglot/scripts/build	/^def detect_filetypes_str(contents)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
deus	plugged/lightline.vim/colorscheme.md	/^### deus$/;"	S	chapter:Available Colorschemes
dev	plugged/vim-polyglot/Makefile	/^dev:$/;"	t
devPrefixes	plugged/fzf/src/tui/ttyname_unix.go	/^var devPrefixes = [...]string{"\/dev\/pts\/", "\/dev\/"}$/;"	v	package:tui
did_c_syn_inits	plugged/vim-polyglot/syntax/llvm.vim	/^    let did_c_syn_inits = 1$/;"	v
did_c_syn_inits	plugged/vim-polyglot/syntax/mlir.vim	/^    let did_c_syn_inits = 1$/;"	v
did_c_syn_inits	plugged/vim-polyglot/syntax/tablegen.vim	/^    let did_c_syn_inits = 1$/;"	v
did_cql_syn_inits	plugged/vim-polyglot/syntax/cql.vim	/^    let did_cql_syn_inits = 1$/;"	v
did_cry_syntax_inits	plugged/vim-polyglot/syntax/cryptol.vim	/^    let did_cry_syntax_inits = 1$/;"	v
did_css_syn_inits	plugged/vim-polyglot/syntax/stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
did_dot_syntax_inits	plugged/vim-polyglot/syntax/dot.vim	/^    let did_dot_syntax_inits = 1$/;"	v
did_eighth_syntax_inits	plugged/vim-polyglot/syntax/8th.vim	/^    let did_eighth_syntax_inits=1$/;"	v
did_fs_syntax_inits	plugged/vim-polyglot/syntax/fsharp.vim	/^        let did_fs_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	plugged/vim-polyglot/syntax/gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_install_default_menus	plugged/vim-polyglot/extras/menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	plugged/vim-polyglot/extras/menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_lily_syn_inits	plugged/vim-polyglot/syntax/lilypond.vim	/^    let did_lily_syn_inits = 1$/;"	v
did_load_filetypes	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let did_load_filetypes = 1$/;"	v
did_load_filetypes	plugged/vim-polyglot/extras/filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_polyglot	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let did_load_polyglot = 1$/;"	v
did_lua_syn_inits	plugged/vim-polyglot/syntax/lua.vim	/^    let did_lua_syn_inits = 1$/;"	v
did_mako_syn_inits	plugged/vim-polyglot/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
did_mmp_syntax_inits	plugged/vim-polyglot/syntax/mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_nim_syn_inits	plugged/vim-polyglot/syntax/nim.vim	/^    let did_nim_syn_inits = 1$/;"	v
did_octave_syntax_inits	plugged/vim-polyglot/syntax/octave.vim	/^    let did_octave_syntax_inits = 1$/;"	v
did_plugin_ultisnips	plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
did_proto_syn_inits	plugged/vim-polyglot/syntax/fbs.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_proto_syn_inits	plugged/vim-polyglot/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_ps1_syn_inits	plugged/vim-polyglot/syntax/ps1.vim	/^		let did_ps1_syn_inits = 1$/;"	v
did_python_syn_inits	plugged/vim-polyglot/syntax/python.vim	/^        let did_python_syn_inits = 1$/;"	v
did_qml_syn_inits	plugged/vim-polyglot/syntax/qml.vim	/^    let did_qml_syn_inits = 1$/;"	v
did_racket_syntax_inits	plugged/vim-polyglot/syntax/racket.vim	/^    let did_racket_syntax_inits = 1$/;"	v
did_raku_syntax_inits	plugged/vim-polyglot/syntax/raku.vim	/^        let did_raku_syntax_inits = 1$/;"	v
did_reva_syntax_inits	plugged/vim-polyglot/syntax/reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_rhelp_syntax_inits	plugged/vim-polyglot/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_sexplib_syntax_inits	plugged/vim-polyglot/syntax/sexplib.vim	/^    let did_sexplib_syntax_inits = 1$/;"	v
did_tapverboseoutput_syntax_inits	plugged/vim-polyglot/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
did_thrift_syn_inits	plugged/vim-polyglot/syntax/thrift.vim	/^    let did_thrift_syn_inits = 1$/;"	v
did_toolbar_tmenu	plugged/vim-polyglot/extras/menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_tptp_syntax_inits	plugged/vim-polyglot/syntax/tptp.vim	/^    let did_tptp_syntax_inits = 1$/;"	v
did_twig_syn_inits	plugged/vim-polyglot/syntax/twig.vim	/^    let did_twig_syn_inits = 1$/;"	v
did_txt_syn_inits	plugged/vim-polyglot/syntax/textile.vim	/^        let did_txt_syn_inits = 1$/;"	v
did_typescript_hilink	plugged/vim-polyglot/syntax/common.vim	/^let did_typescript_hilink = 1$/;"	v
did_u_syntax_inits	plugged/vim-polyglot/syntax/unison.vim	/^    let did_u_syntax_inits = 1$/;"	v
did_vbnet_syntax_inits	plugged/vim-polyglot/syntax/vbnet.vim	/^        let did_vbnet_syntax_inits = 1$/;"	v
did_velocity_syn_inits	plugged/vim-polyglot/syntax/velocity.vim	/^    let did_velocity_syn_inits = 1$/;"	v
diff	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def diff(a, b, sline=0):$/;"	f
diff_in_buffer_length	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
displayWidth	plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidth(runes []rune) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
displayWidth	plugged/fzf/src/tui/light.go	/^	displayWidth int$/;"	m	struct:tui.wrappedLine	typeref:typename:int
displayWidthWithLimit	plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
dl	plugged/vimwiki/autoload/vimwiki/style.css	/^p, pre, blockquote, table, ul, ol, dl {$/;"	s
do_post_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
docker	plugged/fzf/Makefile	/^docker:$/;"	t
docker-test	plugged/fzf/Makefile	/^docker-test:$/;"	t
document_structure	plugged/vim-polyglot/autoload/xml/aria.vim	/^let document_structure = [$/;"	v
document_structure	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let document_structure = ['article', 'cell', 'columnheader', 'definition', 'directory', 'doc/;"	v
doom-one.vim	plugged/doom-one.vim/README.md	/^# doom-one.vim$/;"	c
dosbatch_cmdextversion	plugged/vim-polyglot/syntax/dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
doubleClickDuration	plugged/fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c	package:tui
download	plugged/fzf/install	/^download() {$/;"	f
download	plugged/fzf/install.ps1	/^function download {$/;"	f
download	plugged/vim-polyglot/scripts/build	/^def download(packages)$/;"	f	method:copy_file
dpub_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let dpub_role = [$/;"	v
dpub_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let dpub_role = ['dpub-abstract', 'dpub-afterword', 'dpub-appendix', 'dpub-biblioentry', 'dp/;"	v
drag_and_drop_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {$/;"	v
drawBorder	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorder() {$/;"	f	struct:tui.LightWindow
drawBorder	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) drawBorder() {$/;"	f	struct:tui.TcellWindow
drawBorderAround	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderAround() {$/;"	f	struct:tui.LightWindow
drawBorderHorizontal	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderHorizontal(top, bottom bool) {$/;"	f	struct:tui.LightWindow
drawBorderVertical	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderVertical(left, right bool) {$/;"	f	struct:tui.LightWindow
ds	plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dt	plugged/vimwiki/autoload/vimwiki/style.css	/^dt { font-weight: bold; }$/;"	s
dupeTheme	plugged/fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
dx	vimrc	/^nmap dx  <Plug>Dsurround$/;"	m
e	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> e w$/;"	m
eachLine	plugged/fzf/src/terminal.go	/^type eachLine struct {$/;"	s	package:fzf
each_hash	plugged/vim-polyglot/scripts/build	/^def each_hash(data, &block)$/;"	f
echo_to_hierarchy	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
ecrystal#SetSubtype	plugged/vim-polyglot/autoload/ecrystal.vim	/^function! ecrystal#SetSubtype() abort$/;"	f
elixir#indent	plugged/vim-polyglot/indent/elixir.vim	/^function! elixir#indent(lnum)$/;"	f
elixir#indent#handle_follow_prev_nb	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_follow_prev_nb(context)$/;"	f
elixir#indent#handle_following_trailing_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_binary_operator(context)$/;"	f
elixir#indent#handle_inside_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_block(context)$/;"	f
elixir#indent#handle_inside_embedded_view	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_embedded_view(context)$/;"	f
elixir#indent#handle_inside_generic_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_generic_block(context)$/;"	f
elixir#indent#handle_starts_with_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_binary_operator(context)$/;"	f
elixir#indent#handle_starts_with_end	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_end(context)$/;"	f
elixir#indent#handle_starts_with_pipe	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_pipe(context)$/;"	f
elixir#indent#handle_starts_with_string_continuation	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_string_continuation(context)$/;"	f
elixir#indent#handle_top_of_file	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_top_of_file(context)$/;"	f
elixir#indent#indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#indent(lnum)$/;"	f
elixir#indent#searchpair_back_skip	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back_skip()$/;"	f
elixir#util#get_filename	plugged/vim-polyglot/autoload/elixir/util.vim	/^function! elixir#util#get_filename(word) abort$/;"	f
ellipsis	plugged/fzf/src/terminal.go	/^const ellipsis string = ".."$/;"	c	package:fzf	typeref:typename:string
emptyLine	plugged/fzf/src/terminal.go	/^var emptyLine = itemLine{}$/;"	v	package:fzf
enabled	plugged/fzf/src/terminal.go	/^	enabled    bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
encodePlaceholder	plugged/fzf/src/terminal_test.go	/^func (flags placeholderFlags) encodePlaceholder() string {$/;"	f	unknown:fzf.placeholderFlags	typeref:typename:string
end	plugged/fzf/src/tokenizer.go	/^	end   int$/;"	m	struct:fzf.Range	typeref:typename:int
end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def end(self):$/;"	m	class:TextObject
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
enum,enumeration names	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?enum[ \\t]+([a-zA-Z0-9_]+)\/\\2\/g,enum,enumeration names\/$/;"	k	langdef:Rust
enums	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*enum[ \\t]+([a-zA-Z0-9_]+)\/\\2\/e,enums\/$/;"	k	langdef:typescript
equals	plugged/fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
eregex#toggle	plugged/vim-polyglot/scripts/eregex.vim	/^function! eregex#toggle(...)$/;"	f
erlangmk_file	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_file(Dir) -> filename:join(Dir, "erlang.mk").$/;"	f
erlangmk_format_erl_libs	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erl_libs(ErlLibsLine) ->$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(ErlcOptsLines, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["+" ++ Option | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-D" ++ Opt | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-D", [C | _] = Val0 | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-I" ++ Opt | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-I", [C | _] = Dir | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-W" ++ Warn | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-W", Warn | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([PathFlag, [_ | _] = Dir | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([], Opts, _) ->$/;"	f
erlangmk_format_erlc_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([_ | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_opts(Stdout, BaseDir) ->$/;"	f
erlangmk_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_opts(BaseDir, Profile) ->$/;"	f
erlangmk_port_receive_loop	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_port_receive_loop(Port, Stdout, BaseDir) ->$/;"	f
err	plugged/fzf/src/terminal.go	/^	err  error$/;"	m	struct:fzf.eachLine	typeref:typename:error
errorExit	plugged/fzf/src/options.go	/^func errorExit(msg string) {$/;"	f	package:fzf
errorExit	plugged/fzf/src/tui/tui.go	/^func errorExit(message string) {$/;"	f	package:tui
escDelay	plugged/fzf/src/tui/light.go	/^	escDelay      int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
escPollInterval	plugged/fzf/src/tui/light.go	/^	escPollInterval = 5$/;"	c	package:tui
escSequence	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) escSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
escape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def escape(inp):$/;"	f
escapedColon	plugged/fzf/src/options.go	/^	escapedColon = 0$/;"	c	package:fzf
escapedComma	plugged/fzf/src/options.go	/^	escapedComma = 1$/;"	c	package:fzf
escapedPlus	plugged/fzf/src/options.go	/^	escapedPlus  = 2$/;"	c	package:fzf
ev	plugged/vim-visual-multi/python/vm.py	/^def ev(exp):$/;"	f
eval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def eval(text):$/;"	f
evaluateScrollOffset	plugged/fzf/src/terminal.go	/^func (t *Terminal) evaluateScrollOffset() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
event	plugged/fzf/src/reader.go	/^	event    int32$/;"	m	struct:fzf.Reader	typeref:typename:int32
eventBox	plugged/fzf/src/matcher.go	/^	eventBox       *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
eventBox	plugged/fzf/src/reader.go	/^	eventBox *util.EventBox$/;"	m	struct:fzf.Reader	typeref:typename:*util.EventBox
eventBox	plugged/fzf/src/terminal.go	/^	eventBox           *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
event_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythro/;"	v
events	plugged/fzf/src/util/eventbox.go	/^	events Events$/;"	m	struct:util.EventBox	typeref:typename:Events
evint	plugged/vim-visual-multi/python/vm.py	/^def evint(exp):$/;"	f
except	plugged/vim-polyglot/scripts/build	/^def except(hash, *keys)$/;"	f
exec	plugged/fzf/src/reader.go	/^	exec     *exec.Cmd$/;"	m	struct:fzf.Reader	typeref:typename:*exec.Cmd
executeCommand	plugged/fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, forcePlus bool, background bool) {$/;"	f	struct:fzf.Terminal
executeRegexp	plugged/fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
executing	plugged/fzf/src/terminal.go	/^	executing          *util.AtomicBool$/;"	m	struct:fzf.Terminal	typeref:typename:*util.AtomicBool
exitCancel	plugged/fzf/src/constants.go	/^	exitCancel    = -1$/;"	c	package:fzf
exitError	plugged/fzf/src/constants.go	/^	exitError     = 2$/;"	c	package:fzf
exitInterrupt	plugged/fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c	package:fzf
exitNoMatch	plugged/fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c	package:fzf
exitOk	plugged/fzf/src/constants.go	/^	exitOk        = 0$/;"	c	package:fzf
expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_all	plugged/vim-polyglot/scripts/build	/^def expand_all(pattern, all = false)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
expand_anon	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_or_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expect	plugged/fzf/src/terminal.go	/^	expect             map[tui.Event]string$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event]string
expected_error	plugged/ultisnips/test/test_Choices.py	/^    expected_error = "Choices selection is not supported on \\$0"$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "changes are untrackable"$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "line under the cursor was modified"$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ""$/;"	v	class:VimTestCase
expected_python_version	plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = ($/;"	v	class:VimTestCase
extended	plugged/fzf/src/pattern.go	/^	extended      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
extendedMatch	plugged/fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:([]Offset, int, *[]int)
extract	plugged/vim-polyglot/scripts/build	/^def extract(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code
extractColor	plugged/fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]/;"	f	package:fzf	typeref:typename:(string, *[]ansiOffset, *ansiState)
f	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap f <Plug>(easymotion-f)$/;"	m
f	vimrc	/^map f <Plug>(incsearch-nohl)<Plug>(easymotion-sl)$/;"	m
f/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
fail	plugged/fzf/bin/fzf-tmux	/^fail() {$/;"	f
failed	plugged/fzf/src/terminal.go	/^	failed             *string$/;"	m	struct:fzf.Terminal	typeref:typename:*string
fallback_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
fd	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) fd() int {$/;"	f	unknown:tui.LightRenderer	typeref:typename:int
feed	plugged/fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f	struct:fzf.Reader
feedkeys	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def feedkeys(keys, mode="n"):$/;"	f
fg	plugged/fzf/src/ansi.go	/^	fg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
fg	plugged/fzf/src/tui/light.go	/^	fg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
fg	plugged/fzf/src/tui/tui.go	/^	fg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
file	plugged/fzf/src/terminal.go	/^	file          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
filename	plugged/vim-polyglot/indent/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	plugged/vim-polyglot/indent/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	plugged/vim-polyglot/indent/sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^let filename = 'sqloracle'$/;"	v
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchContext
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_CursorIsZeroBased
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_PriorityKeyword
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportError
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SnippetPriority
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_UseContext
files	plugged/ultisnips/test/test_Format.py	/^    files = {$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearAll
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearOne
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearTwo
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Local_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine1
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MissingEndSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_NoContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_Quotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktrace
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_UnknownDirective
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord_RE
files	plugged/ultisnips/test/test_Recursive.py	/^    files = {$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Disabled
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_EmptyLinesContinueSnippets
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Extends
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Interpolation
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_InterpolationWithSystem
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue1325
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue1344
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue658
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_MultiMatches
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_NoNestedTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OtherFiletype
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippet
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetSubDirectory
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Visual_Simple
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanModifyParentBody
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_EnsureIndent
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveVisual
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PreActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_UseCorrectJumpActions
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
files	plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
filetypedetect	autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/extras/filetype.vim	/^augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/tests/native.vim	/^  augroup filetypedetect$/;"	a
filetypedetect	plugged/vimwiki/plugin/vimwiki.vim	/^  augroup filetypedetect$/;"	a
filetypes	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) fill(str string, onMove func()) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
fill	plugged/fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, n ColorPair, r rune) {$/;"	f	package:tui
fillString	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) fillString(text string, pair ColorPair) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
filled	plugged/fzf/src/terminal.go	/^	filled   bool$/;"	m	struct:fzf.previewed	typeref:typename:bool
fin	plugged/fzf/src/reader.go	/^func (r *Reader) fin(success bool) {$/;"	f	struct:fzf.Reader
finChan	plugged/fzf/src/reader.go	/^	finChan  chan bool$/;"	m	struct:fzf.Reader	typeref:typename:chan bool
final	plugged/fzf/src/matcher.go	/^	final      bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
final	plugged/fzf/src/merger.go	/^	final   bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
final	plugged/fzf/src/terminal.go	/^	final      bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
findFirstMatch	plugged/fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findLastMatch	plugged/fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findOffset	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
findOffset	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
find_all_snippet_directories	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_directories() -> List[str]:$/;"	f	typeref:typename:List[str]
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft) -> Set[str]:$/;"	f	typeref:typename:Set[str]
find_one	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.lua	/^local find_one = function(str, patterns, idx)$/;"	f
find_parent_for_new_to	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory: str) -> Set[str]:$/;"	f	typeref:typename:Set[str]
firstKey	plugged/fzf/src/options.go	/^func firstKey(keymap map[tui.Event]string) tui.Event {$/;"	f	package:fzf	typeref:typename:tui.Event
fish	plugged/fzf/test/test_go.rb	/^    def fish$/;"	S	class:Shell
fish#Complete	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Complete(findstart, base)$/;"	f
fish#Fold	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Fold()$/;"	f
fish#Format	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Format()$/;"	f
fish#Indent	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Indent()$/;"	f
fish#errorformat	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#errorformat()$/;"	f
fix_quotes	plugged/vim-polyglot/scripts/import_vim	/^def fix_quotes(a)$/;"	f
flatten_test_suite	plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f
float.both	plugged/vital.vim/test/Text/TOML.vim	/^    function! float.both()$/;"	f
float.exponent	plugged/vital.vim/test/Text/TOML.vim	/^    function! float.exponent()$/;"	f
float.fractional	plugged/vital.vim/test/Text/TOML.vim	/^    function! float.fractional()$/;"	f
float.special_float	plugged/vital.vim/test/Text/TOML.vim	/^    function! float.special_float()$/;"	f
float.underscores	plugged/vital.vim/test/Text/TOML.vim	/^    function! float.underscores()$/;"	f
flow_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', /;"	v
flush	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) flush() {$/;"	f	unknown:tui.LightRenderer
fmix32	plugged/vital.vim/test/Random/xor128.c	/^uint32_t fmix32(uint32_t z) {$/;"	f	typeref:typename:uint32_t
fn	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
focus	plugged/fzf/test/test_go.rb	/^  def focus$/;"	f	class:Tmux
focus	plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
follow	plugged/fzf/src/options.go	/^	follow      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
following	plugged/fzf/src/terminal.go	/^	following  bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
foo	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^[foo]$/;"	s
foo	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^foo = bar in bar$/;"	k	section:bar
foo	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^foo = bar in foo$/;"	k	section:foo
foo	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^foo = bar$/;"	k
foo	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^[foo]$/;"	s
foo	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^foo = bar in bar$/;"	k	section:bar
foo	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^foo = bar in foo$/;"	k	section:foo
foo	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^foo = bar$/;"	k
foobar	plugged/vim-polyglot/tests/indent/2.1/test.js	/^function foobar() {$/;"	f
foobar	plugged/vim-polyglot/tests/indent/4.1/test.js	/^function foobar() {$/;"	f
forceBlack	plugged/fzf/src/tui/light.go	/^	forceBlack    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
forceBlack	plugged/fzf/src/tui/tui.go	/^	forceBlack   bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
format	plugged/ultisnips/Makefile	/^format:$/;"	t
fortran_free_source	plugged/vim-polyglot/syntax/sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	plugged/vim-polyglot/syntax/tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	plugged/vim-polyglot/syntax/trasys.vim	/^let fortran_free_source=1$/;"	v
forward	plugged/fzf/src/pattern.go	/^	forward       bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
friendly_name	plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
fs	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  var args, fs, less, options, parser;$/;"	v
fsharp#OnCursorMove	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnCursorMove()$/;"	f
fsharp#OnFSProjSave	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnFSProjSave()$/;"	f
fsharp#documentation	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#documentation(filePath, line, character, cont)$/;"	f
fsharp#getServerConfig	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#getServerConfig()$/;"	f
fsharp#get_handlers	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#get_handlers()$/;"	f
fsharp#handle_notifyWorkspace	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#handle_notifyWorkspace(payload) abort$/;"	f
fsharp#initialize	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#initialize()$/;"	f
fsharp#loadConfig	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadConfig()$/;"	f
fsharp#loadProject	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadProject(...)$/;"	f
fsharp#openFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#openFsi(returnFocus)$/;"	f
fsharp#quitFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#quitFsi()$/;"	f
fsharp#register_callback	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#register_callback(fn)$/;"	f
fsharp#reloadProjects	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#reloadProjects()$/;"	f
fsharp#resetFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#resetFsi()$/;"	f
fsharp#resolve_callback	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#resolve_callback(key, arg)$/;"	f
fsharp#sendAllToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendAllToFsi()$/;"	f
fsharp#sendFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendFsi(text)$/;"	f
fsharp#sendLineToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendLineToFsi()$/;"	f
fsharp#sendSelectionToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendSelectionToFsi() range$/;"	f
fsharp#showF1Help	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showF1Help()$/;"	f
fsharp#showLoadedProjects	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showLoadedProjects()$/;"	f
fsharp#showSignature	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showSignature()$/;"	f
fsharp#showTooltip	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showTooltip()$/;"	f
fsharp#toggleFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#toggleFsi()$/;"	f
fsharp#updateFSAC	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#updateFSAC(...)$/;"	f
fsharp#updateServerConfig	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#updateServerConfig()$/;"	f
ft	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#Autowrite	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Autowrite() abort$/;"	f
fugitive#BisectComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function fugitive#BisectComplete(A, L, P, ...) abort$/;"	f
fugitive#BlameComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameFileType	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameFileType() abort$/;"	f
fugitive#BlameSyntax	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, ...) abort$/;"	f
fugitive#BufReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus(...) abort$/;"	f
fugitive#BufWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#CanPty	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanPty() abort$/;"	f
fugitive#Cd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P, ...) abort$/;"	f
fugitive#Complete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteForWorkingDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteForWorkingDir(A, L, P, ...) abort$/;"	f
fugitive#CompleteObject	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#ConfigGetAll	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetAll(name, ...) abort$/;"	f
fugitive#ConfigGetRegexp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetRegexp(pattern, ...) abort$/;"	f
fugitive#Cwindow	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#DidChange	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DidChange(...) abort$/;"	f
fugitive#DiffClose	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DiffClose() abort$/;"	f
fugitive#Diffsplit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, ...) abort$/;"	f
fugitive#EditComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EditComplete(A, L, P) abort$/;"	f
fugitive#EfmDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EfmDir(...) abort$/;"	f
fugitive#Execute	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Execute(...) abort$/;"	f
fugitive#Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#ExpireConfig	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ExpireConfig(...) abort$/;"	f
fugitive#FetchComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P, ...) abort$/;"	f
fugitive#FileReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GX	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GX() abort$/;"	f
fugitive#GitVersion	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepCommand(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#GrepComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P, ...) abort$/;"	f
fugitive#MessageCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#Object	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, ...) abort$/;"	f
fugitive#PagerFor	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PagerFor(argv, ...) abort$/;"	f
fugitive#Path	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#PorcelainCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PorcelainCfile() abort$/;"	f
fugitive#Prepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvGitFlagsArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvGitFlagsArgs(...) abort$/;"	f
fugitive#PrepareJob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareJob(...) abort$/;"	f
fugitive#PullComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P, ...) abort$/;"	f
fugitive#PushComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P, ...) abort$/;"	f
fugitive#ReadCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, ...) abort$/;"	f
fugitive#ReadComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P, ...) abort$/;"	f
fugitive#ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#Remote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Remote(...) abort$/;"	f
fugitive#RemoteHttpHeaders	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteHttpHeaders(remote) abort$/;"	f
fugitive#RemoteUrl	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#RenameCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#RenameComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#Result	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Result(...) abort$/;"	f
fugitive#Resume	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Resume() abort$/;"	f
fugitive#RevParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P, ...) abort$/;"	f
fugitive#ShellCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ShellCommand(...) abort$/;"	f
fugitive#SourceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#SshConfig	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshConfig(host, ...) abort$/;"	f
fugitive#SshHostAlias	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshHostAlias(authority) abort$/;"	f
fugitive#Statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#Wait	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Wait(job_or_jobs, ...) abort$/;"	f
fugitive#WqCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#buffer	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive.vim	plugged/vim-fugitive/README.markdown	/^# fugitive.vim$/;"	c
fugitive_blame	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_diff	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_dummy_events	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_dummy_events$/;"	a
fugitive_job	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_job$/;"	a
fugitive_status	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
fullscreen	plugged/fzf/src/terminal.go	/^	fullscreen         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
fullscreen	plugged/fzf/src/tui/light.go	/^	fullscreen    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
function	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*function[[:space:]]*([a-zA-Z0-9_:]*)[[:space:]]*\/\\1\/u,function\/$/;"	k	langdef:puppet
functions	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*function[ \\t]+([a-zA-Z0-9_]+)\/\\2\/f,functions\/$/;"	k	langdef:typescript
functions,function definitions	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(#\\[[^\\]]\\][ \\t]*)*(pub[ \\t]+)?(extern[ \\t]+)?("[^"]+"[ \\t]+)?(uns/;"	k	langdef:Rust
fuzzy	plugged/fzf/src/pattern.go	/^	fuzzy         bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
fuzzy	plugged/incsearch-fuzzy.vim/README.md	/^#### fuzzy$/;"	t	subsection:incsearch-fuzzy.vim""API
fuzzy search	plugged/incsearch-fuzzy.vim/README.md	/^#### fuzzy search$/;"	t	subsection:incsearch-fuzzy.vim""Usage
fuzzyAlgo	plugged/fzf/src/pattern.go	/^	fuzzyAlgo     algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:algo.Algo
fuzzyspell	plugged/incsearch-fuzzy.vim/README.md	/^#### fuzzyspell$/;"	t	subsection:incsearch-fuzzy.vim""API
fuzzyspell search	plugged/incsearch-fuzzy.vim/README.md	/^#### fuzzyspell search$/;"	t	subsection:incsearch-fuzzy.vim""Usage
fzf	plugged/fzf/main.go	/^	fzf "github.com\/junegunn\/fzf\/src"$/;"	P	package:github.com/junegunn/fzf/src
fzf	plugged/fzf/man/man1/fzf.1	/^.TH fzf 1 "Dec 2021" "fzf 0.29.0" "fzf - a command-line fuzzy finder"$/;"	t
fzf	plugged/fzf/src/ansi.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/cache.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/constants.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/core.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/history.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/history_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/item.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/item_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/matcher.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/merger.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/options.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/options_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/pattern.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/reader.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result_others.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result_x86.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf :heart: vim	plugged/fzf.vim/README.md	/^fzf :heart: vim$/;"	c
fzf inside terminal buffer	plugged/fzf/README-VIM.md	/^### fzf inside terminal buffer$/;"	S	section:FZF Vim integration""Tips
fzf!	plugged/fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#complete	plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#exec	plugged/fzf/plugin/fzf.vim	/^function! fzf#exec(...)$/;"	f
fzf#install	plugged/fzf/plugin/fzf.vim	/^function! fzf#install()$/;"	f
fzf#run	plugged/fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#shellescape	plugged/fzf/plugin/fzf.vim	/^function! fzf#shellescape(arg, ...)$/;"	f
fzf#vim#_buflisted_sorted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...) range$/;"	f
fzf#vim#buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...) range$/;"	f
fzf#vim#complete	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
fzf#vim#helptags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf#wrap	plugged/fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf-cd-widget	plugged/fzf/shell/key-bindings.zsh	/^fzf-cd-widget() {$/;"	f
fzf-completion	plugged/fzf/shell/completion.zsh	/^fzf-completion() {$/;"	f
fzf-file-widget	plugged/fzf/shell/key-bindings.bash	/^fzf-file-widget() {$/;"	f
fzf-file-widget	plugged/fzf/shell/key-bindings.zsh	/^fzf-file-widget() {$/;"	f
fzf-history-widget	plugged/fzf/shell/key-bindings.zsh	/^fzf-history-widget() {$/;"	f
fzf-tmux	plugged/fzf/man/man1/fzf-tmux.1	/^.TH fzf-tmux 1 "Dec 2021" "fzf 0.29.0" "fzf-tmux - open fzf in tmux split pane"$/;"	t
fzf.on_exit	plugged/fzf/plugin/fzf.vim	/^      function! fzf.on_exit(job_id, exit_status, event) dict$/;"	f
fzf.on_exit	plugged/fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code, ...)$/;"	f
fzf.switch_back	plugged/fzf/plugin/fzf.vim	/^  function! fzf.switch_back(inplace)$/;"	f
fzf_base	plugged/fzf/install.ps1	/^$fzf_base=Split-Path -Parent $MyInvocation.MyCommand.Definition$/;"	v
fzf_buffers	plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_gitignore#run	plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! fzf_gitignore#run() abort$/;"	f
fzf_popd	plugged/fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_swap	plugged/fzf/plugin/fzf.vim	/^    augroup fzf_swap$/;"	a
g#	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map g# <Plug>(incsearch-nohl-g#)$/;"	m
g#	plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap g# g#$/;"	m
g#	vimrc	/^map g#  <Plug>(incsearch-nohl)<Plug>(asterisk-g#)$/;"	m
g$	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g$ \$$/;"	m
g*	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map g* <Plug>(incsearch-nohl-g*)$/;"	m
g*	plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap g* g*$/;"	m
g*	vimrc	/^map g*  <Plug>(incsearch-nohl)<Plug>(asterisk-g*)$/;"	m
g/	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/cancel.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/count.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/default_behaviors.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/default_behaviors.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/error_warning_emulation.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/fold.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/fold.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/highlight.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/history.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/incremental_next_prev.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/insert_register.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/jumplist.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/magic_option.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/module.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/n_and_N.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/nomagic.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/nomagic.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/register.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/repetition.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/scroll.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	plugged/incsearch.vim/test/visual_behavior.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	vimrc	/^map g\/ <Plug>(incsearch-nohl)<Plug>(incsearch-stay)$/;"	m
g0	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g0 0$/;"	m
g:AutoPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":/;"	v
g:AutoPairsCenterLine	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsFlyMode	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	plugged/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsShortcutBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:AutoPairsWildClosedPair	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsWildClosedPair = ''$/;"	v
g:EasyMotion_add_search_history	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 1)$/;"	v
g:EasyMotion_disable_two_key_combo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_disable_two_key_combo     =$/;"	v
g:EasyMotion_do_mapping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_mapping	vimrc	/^let g:EasyMotion_do_mapping = 0$/;"	v
g:EasyMotion_do_shade	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_force_csapprox	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_force_csapprox     = get(g: , 'EasyMotion_force_csapprox'     , 0)$/;"	v
g:EasyMotion_grouping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_ignore_exception	plugged/vim-easymotion/autoload/EasyMotion.vim	/^    let g:EasyMotion_ignore_exception = 0$/;"	v
g:EasyMotion_inc_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	vimrc	/^let g:EasyMotion_keys = 'neiomluytsragpfwjb'$/;"	v
g:EasyMotion_landing_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_maximal_jumpmarks	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_maximal_jumpmarks  = 2 " Error for value 1 unanalyzed. $/;"	v
g:EasyMotion_move_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_move_highlight	vimrc	/^let g:EasyMotion_move_highlight = 1 " LAGGY!! turn off if ; and , lag$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_re_anywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^    let g:EasyMotion_re_anywhere = get(g:, 'EasyMotion_re_anywhere', re)$/;"	v
g:EasyMotion_re_line_anywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^    let g:EasyMotion_re_line_anywhere = get(g:, 'EasyMotion_re_line_anywhere', re)$/;"	v
g:EasyMotion_show_prompt	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_smartcase	vimrc	/^let g:EasyMotion_smartcase = 1 " smartcase on target keys$/;"	v
g:EasyMotion_space_jump_first	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_space_jump_first   = get(g: , 'EasyMotion_space_jump_first'   , 0)$/;"	v
g:EasyMotion_startofline	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_startofline	vimrc	/^let g:EasyMotion_startofline = 0 " keep cursor colum JK motion$/;"	v
g:EasyMotion_use_migemo	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^        let g:EasyMotion_use_migemo = 0$/;"	v
g:EasyMotion_use_migemo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_jp	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_jp = 1$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_verbose            = get(g: , 'EasyMotion_verbose'            , 1)$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 0$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 1$/;"	v
g:EasyMotion_verbose	vimrc	/^let g:EasyMotion_verbose = 0$/;"	v
g:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let   g:Ferm_SpecialDelimiters = g:fermSpecialDelimiters$/;"	v
g:LanguageClient_rootMarkers	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:LanguageClient_rootMarkers = {}$/;"	v
g:LanguageClient_rootMarkers	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:LanguageClient_rootMarkers.fsharp = ['*.sln', '*.fsproj', '.git']$/;"	v
g:LanguageClient_serverCommands	plugged/vim-polyglot/autoload/fsharp.vim	/^                let g:LanguageClient_serverCommands.fsharp.initializationOptions = {$/;"	v
g:LanguageClient_serverCommands	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:LanguageClient_serverCommands = {}$/;"	v
g:LanguageClient_serverCommands	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:LanguageClient_serverCommands.fsharp = {$/;"	v
g:MoveYankMappings	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^        let g:MoveYankMappings=1$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^	let g:NERDCustomDelimiters = {'caddyfile': s:delimiters}$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^		let g:NERDDelimiterMap.caddyfile = s:delimiters$/;"	v
g:NetrwIsOpen	autoload/myfunc.vim	/^        let g:NetrwIsOpen=0$/;"	v
g:NetrwIsOpen	autoload/myfunc.vim	/^        let g:NetrwIsOpen=1$/;"	v
g:NetrwIsOpen	autoload/myfunc.vim	/^let g:NetrwIsOpen=0$/;"	v
g:SyntasticAutoloclistNotifier	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	plugged/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	plugged/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	plugged/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:TextileBrowser	plugged/vim-polyglot/ftplugin/textile.vim	/^    let g:TextileBrowser='Safari'$/;"	v
g:UltiSnipesRemoveSelectModeMappings	vimrc	/^let g:UltiSnipesRemoveSelectModeMappings = 0$/;"	v
g:UltiSnipsDebugHost	plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsDebugHost = 'localhost'$/;"	v
g:UltiSnipsDebugPort	plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsDebugPort = 8080$/;"	v
g:UltiSnipsDebugServerEnable	plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsDebugServerEnable = 0$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEditSplit	vimrc	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsExpandTrigger	vimrc	/^let g:UltiSnipsExpandTrigger="<C-y>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="1"$/;"	v
g:UltiSnipsJumpBackwardTrigger	vimrc	/^let g:UltiSnipsJumpBackwardTrigger="<C-b>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="2"$/;"	v
g:UltiSnipsJumpForwardTrigger	vimrc	/^let g:UltiSnipsJumpForwardTrigger="<C-f>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsListSnippets="9"$/;"	v
g:UltiSnipsMappingsToIgnore	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsPMDebugBlocking	plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsPMDebugBlocking = 0$/;"	v
g:UltiSnipsRemoveSelectModeMappings	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:UltiSnipsSnippetDirectories	vimrc	/^let g:UltiSnipsSnippetDirectories=[$HOME.'\/.vim\/UltiSnips']$/;"	v
g:VM_PERSIST	plugged/vim-visual-multi/plugin/visual-multi.vim	/^    let g:VM_PERSIST = deepcopy(g:Vm.registers)$/;"	v
g:VM_case_setting	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_case_setting                     = get(g:, 'VM_case_setting', '')$/;"	v
g:VM_check_mappings	plugged/vim-visual-multi/autoload/vm/maps.vim	/^let g:VM_check_mappings    = get(g:, 'VM_check_mappings', 1)$/;"	v
g:VM_commands_aliases	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_commands_aliases                 = get(g:, 'VM_commands_aliases', {})$/;"	v
g:VM_custom_commands	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_custom_commands                  = get(g:, 'VM_custom_commands', {})$/;"	v
g:VM_custom_motions	plugged/vim-visual-multi/autoload/vm/maps.vim	/^let g:VM_custom_motions    = get(g:, 'VM_custom_motions', {})$/;"	v
g:VM_custom_noremaps	plugged/vim-visual-multi/autoload/vm/maps.vim	/^let g:VM_custom_noremaps   = get(g:, 'VM_custom_noremaps', {})$/;"	v
g:VM_custom_remaps	plugged/vim-visual-multi/autoload/vm/maps.vim	/^let g:VM_custom_remaps     = get(g:, 'VM_custom_remaps', {})$/;"	v
g:VM_debug	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_debug                            = get(g:, 'VM_debug', 0)$/;"	v
g:VM_default_mappings	plugged/vim-visual-multi/autoload/vm/maps.vim	/^let g:VM_default_mappings  = get(g:, 'VM_default_mappings', 1)$/;"	v
g:VM_disable_syntax_in_imode	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_disable_syntax_in_imode          = get(g:, 'VM_disable_syntax_in_imode', 0)$/;"	v
g:VM_highlight_matches	plugged/vim-visual-multi/plugin/visual-multi.vim	/^let g:VM_highlight_matches = get(g:, 'VM_highlight_matches', 'underline')$/;"	v
g:VM_live_editing	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_live_editing                     = get(g:, 'VM_live_editing', 1)$/;"	v
g:VM_live_editing	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^  let g:VM_live_editing = !get(g:, 'VM_live_editing', 1)$/;"	v
g:VM_maps	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    let g:VM_maps   = get(g:, 'VM_maps', {})$/;"	v
g:VM_mouse_mappings	plugged/vim-visual-multi/autoload/vm/maps.vim	/^let g:VM_mouse_mappings    = get(g:, 'VM_mouse_mappings', 0)$/;"	v
g:VM_persistent_registers	plugged/vim-visual-multi/plugin/visual-multi.vim	/^let g:VM_persistent_registers = get(g:, 'VM_persistent_registers', 0)$/;"	v
g:VM_reindent_filetypes	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_reindent_filetypes               = get(g:, 'VM_reindent_filetypes', [])$/;"	v
g:VM_reselect_first	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_reselect_first                   = get(g:, 'VM_reselect_first', 0)$/;"	v
g:VM_theme	plugged/vim-visual-multi/autoload/vm/themes.vim	/^    let g:VM_theme = 'default'$/;"	v
g:VM_theme	plugged/vim-visual-multi/autoload/vm/themes.vim	/^    let g:VM_theme = a:theme$/;"	v
g:VM_use_first_cursor_in_line	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_use_first_cursor_in_line         = get(g:, 'VM_use_first_cursor_in_line', 0)$/;"	v
g:VM_use_first_cursor_in_line	plugged/vim-visual-multi/autoload/vm/comp.vim	/^        let g:VM_use_first_cursor_in_line = 1$/;"	v
g:VM_use_python	plugged/vim-visual-multi/autoload/vm.vim	/^    let g:VM_use_python = 0$/;"	v
g:VM_use_python	plugged/vim-visual-multi/autoload/vm.vim	/^let g:VM_use_python = get(g:, 'VM_use_python', !has('nvim'))$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm.vim	/^        let g:Vm.buffer = bufnr('')$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm.vim	/^        let g:Vm.registers['"'] = []$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/commands.vim	/^        let g:Vm.extend_mode = b:VM_LastBackup.extend$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/commands.vim	/^        let g:Vm.finding = 1$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^        let g:Vm.registers['-'] = a:text$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^        let g:Vm.registers[reg] = text$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^        let g:Vm.registers[s:v.def_reg] = text$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/edit.vim	/^    let g:Vm.last_ex = cmd$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/edit.vim	/^    let g:Vm.last_normal = [cmd, args.recursive]$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/edit.vim	/^    let g:Vm.last_visual = [cmd, a:recursive]$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^    let g:Vm.registers['"'] = []$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^    let g:Vm.registers['-'] = []$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/global.vim	/^    let g:Vm.extend_mode = !s:X()$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/global.vim	/^    let g:Vm.extend_mode = 0$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/global.vim	/^    let g:Vm.extend_mode = backup[tick].X$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^    let g:Vm.indent = getline('.')$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/maps.vim	/^        let g:Vm.mappings_enabled = 0$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/maps.vim	/^        let g:Vm.mappings_enabled = 1$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    let g:Vm.leader = type(ldr) == v:t_string$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    let g:Vm.maps   = {'permanent': []}$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    let g:Vm.maps.exit   = has_key(g:VM_maps, 'Exit') ?$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    let g:Vm.maps.toggle = has_key(g:VM_maps, 'Toggle Mappings') ?$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/maps.vim	/^    let g:Vm.unmaps = []$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/operators.vim	/^        let g:Vm.finding = 0$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/operators.vim	/^        let g:Vm.finding = 1$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/operators.vim	/^    let g:Vm.extend_mode = 1$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^      let g:Vm.user_ops[key] = 0$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^      let g:Vm.user_ops[key] = op[key]$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^      let g:Vm.vregplus = ['+', getreg('+'), getregtype('+')]$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^    let g:Vm.vreg = ['"', getreg('"'), getregtype('"')]$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  let g:Vm.find_motions   = ['f', 'F', 't', 'T']$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  let g:Vm.motions        = ['h', 'j', 'k', 'l', 'w', 'W', 'b', 'B', 'e', 'E', ',', ';', '$', '0/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  let g:Vm.select_motions = ['h', 'j', 'k', 'l', 'w', 'W', 'b', 'B', 'e', 'E', 'ge', 'gE', 'BBW'/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  let g:Vm.tobj_motions   = { '{': '{', '}': '}', '(': '(', ')': ')', 'g{': '[{', 'g}': ']}', 'g/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^  let g:Vm.user_ops = {}$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^      let g:Vm.registers = {'"': [], '-': []}$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^    let g:Vm.extend_mode = 1$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^      let g:Vm.search_hi = "hi! Search " . hi$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^      let g:Vm.search_hi = "hi! link Search " . hi$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^  let g:Vm.Search = g:VM_highlight_matches == 'underline' ? 'hi Search term=underline cterm=unde/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^  let g:Vm.hi.cursor  = 'VM_Cursor'$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^  let g:Vm.hi.extend  = 'VM_Extend'$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^  let g:Vm.hi.insert  = 'VM_Insert'$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^  let g:Vm.hi.message = get(g:, 'VM_Message_hl', 'WarningMsg')$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/themes.vim	/^  let g:Vm.hi.mono    = 'VM_Mono'$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/variables.vim	/^  let g:Vm.buffer = 0$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/variables.vim	/^  let g:Vm.extend_mode = 0$/;"	v
g:Vm	plugged/vim-visual-multi/autoload/vm/variables.vim	/^  let g:Vm.finding = 0$/;"	v
g:Vm	plugged/vim-visual-multi/plugin/visual-multi.vim	/^    let g:Vm.registers = deepcopy(g:VM_PERSIST)$/;"	v
g:Vm	plugged/vim-visual-multi/plugin/visual-multi.vim	/^let g:Vm = { 'hi'          : {},$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_SHELL_OPTIONS	plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_SHELL_OPTIONS = [$/;"	v
g:_SYNTASTIC_START	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.10.0-32'$/;"	v
g:__fzf_command	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:__vital_color_echo_already_highlighted	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^        let g:__vital_color_echo_already_highlighted = 1$/;"	v
g:_fugitive_last_job	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:_fugitive_last_job = a:state$/;"	v
g:_plug_bang	autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:ada#Comment	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_	plugged/vim-polyglot/autoload/ada.vim	/^      let g:ada_{a:option}=1$/;"	v
g:ada_default_compiler	plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:aria_attributes_complete	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^        let g:aria_attributes_complete = 0$/;"	v
g:aria_attributes_complete	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:ascii	sources/50-Signify.vim	/^let g:ascii = [$/;"	v
g:asterisk#keeppos	plugged/vim-asterisk/autoload/asterisk.vim	/^let g:asterisk#keeppos = get(g:, 'asterisk#keeppos', s:FALSE)$/;"	v
g:asterisk#keeppos	vimrc	/^let g:asterisk#keeppos = 1$/;"	v
g:autoloaded_fugitive	plugged/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:autoloaded_rhubarb	plugged/vim-rhubarb/autoload/rhubarb.vim	/^let g:autoloaded_rhubarb = 1$/;"	v
g:autoloaded_startify	plugged/vim-startify/autoload/startify.vim	/^let g:autoloaded_startify = 1$/;"	v
g:autoloaded_unison	plugged/vim-polyglot/autoload/unison.vim	/^let g:autoloaded_unison = 1$/;"	v
g:beginword	plugged/vim-polyglot/indent/cobol.vim	/^            let g:beginword = beginword$/;"	v
g:bmenu_max_pathlen	plugged/vim-polyglot/extras/menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:bmenu_priority	plugged/vim-polyglot/extras/menu.vim	/^    let g:bmenu_priority = a:1$/;"	v
g:c_syntax_for_h	plugged/vim-polyglot/tests/extensions.vim	/^let g:c_syntax_for_h = 1$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 2$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 4$/;"	v
g:calendar_action	plugged/vimwiki/plugin/vimwiki.vim	/^  let g:calendar_action = 'vimwiki#diary#calendar_action'$/;"	v
g:calendar_cache_directory	sources/50-pluginSettings.vim	/^let g:calendar_cache_directory = expand('~\/.vim\/cache\/calendar.vim\/')$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'Monday'$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'Tuesday'$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'WEDNESDAY'$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'friday'$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'monday'$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'saturday'$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'sunday'$/;"	v
g:calendar_first_day	plugged/calendar.vim/test/week.vim	/^  let g:calendar_first_day = 'thursday'$/;"	v
g:calendar_google_api_key	cache/calendar.vim/credentials.vim	/^let g:calendar_google_api_key = 'AIzaSyDED8L4L7mZM2WVxgkaE3aDgi7DQ2tSspc'$/;"	v
g:calendar_google_calendar	sources/50-pluginSettings.vim	/^let g:calendar_google_calendar = 1$/;"	v
g:calendar_google_client_id	cache/calendar.vim/credentials.vim	/^let g:calendar_google_client_id = '749828989744-gkimpm3nia6k3rf29phh74g3na7236v6.apps.googleuser/;"	v
g:calendar_google_client_secret	cache/calendar.vim/credentials.vim	/^let g:calendar_google_client_secret = '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'$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/event/google.vim	/^      let g:calendar_google_event_download -= 1$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^          let g:calendar_google_event_download = 3$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^        let g:calendar_google_event_download = 2$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^      let g:calendar_google_event_download = 3$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let g:calendar_google_event_download = 0$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/google/client.vim	/^  let g:calendar_google_event_download = 3$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/view/month.vim	/^      let g:calendar_google_event_download -= 1$/;"	v
g:calendar_google_event_downloading	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^    let g:calendar_google_event_downloading[timemin] = 1$/;"	v
g:calendar_google_event_downloading	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let g:calendar_google_event_downloading = {}$/;"	v
g:calendar_google_event_downloading_list	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^      let g:calendar_google_event_downloading_list = 0$/;"	v
g:calendar_google_event_downloading_list	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^    let g:calendar_google_event_downloading_list = 1$/;"	v
g:calendar_google_event_downloading_list	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let g:calendar_google_event_downloading_list = 0$/;"	v
g:calendar_google_event_downloading_list	plugged/calendar.vim/autoload/calendar/google/client.vim	/^  let g:calendar_google_event_downloading_list = 0$/;"	v
g:calendar_google_task	sources/50-pluginSettings.vim	/^let g:calendar_google_task = 1$/;"	v
g:calendar_sign	plugged/vimwiki/plugin/vimwiki.vim	/^  let g:calendar_sign = 'vimwiki#diary#calendar_sign'$/;"	v
g:ch_syntax_for_h	plugged/vim-polyglot/tests/extensions.vim	/^let g:ch_syntax_for_h = 1$/;"	v
g:clever_f_use_migemo	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:clojure_align_multiline_strings	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_maxlines = 300$/;"	v
g:clojure_special_indent_words	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protoco/;"	v
g:clrzr_startup	sources/50-basic-settings.vim	/^let g:clrzr_startup = 0$/;"	v
g:cobol_inline_comment	plugged/vim-polyglot/syntax/cobol.vim	/^   let g:cobol_inline_comment=0$/;"	v
g:coffee_cake	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_cake = 'cake'$/;"	v
g:coffee_cake_options	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_cake_options = ''$/;"	v
g:coffee_compiler	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_compiler = 'coffee'$/;"	v
g:coffee_lint_options	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_lint_options = ''$/;"	v
g:coffee_linter	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_linter = 'coffeelint'$/;"	v
g:coffee_make_options	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_make_options = ''$/;"	v
g:crystal#indent#block_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_continuation_regex =$/;"	v
g:crystal#indent#block_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_regex =$/;"	v
g:crystal#indent#bracket_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_continuation_regex =$/;"	v
g:crystal#indent#bracket_switch_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_switch_continuation_regex =$/;"	v
g:crystal#indent#continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#continuation_regex =$/;"	v
g:crystal#indent#crystal_deindent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_deindent_keywords =$/;"	v
g:crystal#indent#crystal_indent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_indent_keywords =$/;"	v
g:crystal#indent#crystal_macro_deindent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_deindent_keywords =$/;"	v
g:crystal#indent#crystal_macro_indent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_indent_keywords =$/;"	v
g:crystal#indent#curr_line_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#curr_line_callbacks = [$/;"	v
g:crystal#indent#dot_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#dot_continuation_regex = '\\.'.g:crystal#indent#eol$/;"	v
g:crystal#indent#end_end_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_end_regex =$/;"	v
g:crystal#indent#end_middle_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_middle_regex =$/;"	v
g:crystal#indent#end_start_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_start_regex =$/;"	v
g:crystal#indent#eol	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#eol = '\\ze\\s*\\%(#.*\\)\\=\\%(\\_$\\|;\\)'$/;"	v
g:crystal#indent#hanging_assignment_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#hanging_assignment_regex =$/;"	v
g:crystal#indent#leading_operator_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#leading_operator_regex = g:crystal#indent#sol.'\\.'$/;"	v
g:crystal#indent#link_attribute_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#link_attribute_regex =$/;"	v
g:crystal#indent#macro_end_end_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_end_regex =$/;"	v
g:crystal#indent#macro_end_middle_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_middle_regex =$/;"	v
g:crystal#indent#macro_end_start_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_start_regex =$/;"	v
g:crystal#indent#macro_hanging_assignment_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_hanging_assignment_regex =$/;"	v
g:crystal#indent#msl_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#msl_callbacks = [$/;"	v
g:crystal#indent#non_bracket_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#non_bracket_continuation_regex =$/;"	v
g:crystal#indent#operator_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#operator_regex =$/;"	v
g:crystal#indent#prev_line_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#prev_line_callbacks = [$/;"	v
g:crystal#indent#skip_expr	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#skip_expr =$/;"	v
g:crystal#indent#sol	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#sol = '\\%(\\_^\\|;\\)\\s*\\zs'$/;"	v
g:crystal#indent#syng_delim	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_delim =$/;"	v
g:crystal#indent#syng_strcom	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcom =$/;"	v
g:crystal#indent#syng_strcomdelim	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcomdelim =$/;"	v
g:crystal#indent#syng_string	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_string =$/;"	v
g:crystal#indent#type_declaration_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#type_declaration_regex =$/;"	v
g:crystal_auto_format	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_auto_format = get(g:, 'crystal_auto_format', 0)$/;"	v
g:crystal_compiler_command	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_compiler_command = get(g:, 'crystal_compiler_command', 'crystal')$/;"	v
g:crystal_indent_assignment_style	plugged/vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_assignment_style = 'hanging'$/;"	v
g:crystal_indent_block_style	plugged/vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_block_style = 'expression'$/;"	v
g:crystal_minlines	plugged/vim-polyglot/syntax/crystal.vim	/^    let g:crystal_minlines = 500$/;"	v
g:csv_convert	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_convert=input("Converted text, use %s for column input:\\n", convert)$/;"	v
g:csv_delim	plugged/vim-polyglot/autoload/csv.vim	/^        let g:csv_delim = _delim$/;"	v
g:csv_delim	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_delim = delimiter$/;"	v
g:csv_highlight_column	plugged/vim-polyglot/autoload/csv.vim	/^      let g:csv_highlight_column = csv_highlight_column$/;"	v
g:csv_no_conceal	plugged/vim-polyglot/autoload/csv.vim	/^            let g:csv_no_conceal=1$/;"	v
g:csv_no_conceal	plugged/vim-polyglot/autoload/csv.vim	/^        let g:csv_no_conceal=1$/;"	v
g:csv_post_convert	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_post_convert=input('Post convert text: ', post)$/;"	v
g:csv_pre_convert	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_pre_convert=input('Pre convert text: ', pre)$/;"	v
g:ctags_command	plugged/vim-polyglot/extras/menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	plugged/vim-polyglot/extras/menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:ctrlsf_absolute_file_path	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_absolute_file_path = 0$/;"	v
g:ctrlsf_auto_close	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_auto_close = {$/;"	v
g:ctrlsf_auto_focus	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_auto_focus['duration_less_than'] = 1000$/;"	v
g:ctrlsf_auto_focus	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_auto_focus = {$/;"	v
g:ctrlsf_auto_preview	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_auto_preview = 0$/;"	v
g:ctrlsf_backend	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_backend = ctrlsf#backend#Detect()$/;"	v
g:ctrlsf_backend	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_backend = g:ctrlsf_ackprg$/;"	v
g:ctrlsf_case_sensitive	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_case_sensitive = 'smart'$/;"	v
g:ctrlsf_compact_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_compact_position = 'bottom_outside'$/;"	v
g:ctrlsf_compact_winsize	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_compact_winsize = '10'$/;"	v
g:ctrlsf_confirm_save	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_confirm_save = 1$/;"	v
g:ctrlsf_confirm_unsaving_quit	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_confirm_unsaving_quit = 1$/;"	v
g:ctrlsf_context	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_context = '-C 3'$/;"	v
g:ctrlsf_debug_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_debug_mode = 0$/;"	v
g:ctrlsf_default_root	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_default_root = 'cwd'$/;"	v
g:ctrlsf_default_view_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_default_view_mode = 'normal'$/;"	v
g:ctrlsf_extra_backend_args	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_extra_backend_args = {}$/;"	v
g:ctrlsf_extra_root_markers	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_extra_root_markers = []$/;"	v
g:ctrlsf_fold_result	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_fold_result = 0$/;"	v
g:ctrlsf_follow_symlinks	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_follow_symlinks = 1$/;"	v
g:ctrlsf_ignore_dir	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_ignore_dir = []$/;"	v
g:ctrlsf_indent	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_indent = 4$/;"	v
g:ctrlsf_loaded	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^let g:ctrlsf_loaded = 1$/;"	v
g:ctrlsf_mapping	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_mapping[key] = get(g:ctrlsf_mapping, key,$/;"	v
g:ctrlsf_mapping	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_mapping = s:default_mapping$/;"	v
g:ctrlsf_parse_speed	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_parse_speed = 300$/;"	v
g:ctrlsf_populate_qflist	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_populate_qflist = 0$/;"	v
g:ctrlsf_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^            let g:ctrlsf_position = 'left'$/;"	v
g:ctrlsf_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^            let g:ctrlsf_position = 'right'$/;"	v
g:ctrlsf_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_position = 'left'$/;"	v
g:ctrlsf_preview_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_preview_position = 'outside'$/;"	v
g:ctrlsf_regex_pattern	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_regex_pattern = 0$/;"	v
g:ctrlsf_search_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_search_mode = 'async'$/;"	v
g:ctrlsf_search_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_search_mode = 'sync'$/;"	v
g:ctrlsf_selected_line_hl	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_selected_line_hl = 'p'$/;"	v
g:ctrlsf_tail_loaded	plugged/ctrlsf.vim/after/plugin/ctrlsf.vim	/^let g:ctrlsf_tail_loaded = 1$/;"	v
g:ctrlsf_toggle_map_key	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_toggle_map_key = ''$/;"	v
g:ctrlsf_winsize	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_winsize = g:ctrlsf_width$/;"	v
g:ctrlsf_winsize	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_winsize = 'auto'$/;"	v
g:cucumber_languages	plugged/vim-polyglot/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:current_compiler	plugged/vim-polyglot/compiler/go.vim	/^let g:current_compiler = "go"$/;"	v
g:current_ulti_dict	plugged/ultisnips/autoload/UltiSnips.vim	/^    let g:current_ulti_dict = {}$/;"	v
g:current_ulti_dict_info	plugged/ultisnips/autoload/UltiSnips.vim	/^      let g:current_ulti_dict_info = {}$/;"	v
g:dart_format_on_save	plugged/vim-polyglot/autoload/dart.vim	/^    let g:dart_format_on_save = 0$/;"	v
g:dart_format_on_save	plugged/vim-polyglot/autoload/dart.vim	/^  let g:dart_format_on_save = 1$/;"	v
g:debchangelog_complete_mode	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^          let g:debchangelog_complete_mode = 'lp'$/;"	v
g:debchangelog_complete_mode	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^    let g:debchangelog_complete_mode = 'debbugs'$/;"	v
g:debchangelog_listbugs_severities	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishli/;"	v
g:did_changelog_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	plugged/vim-polyglot/ftplugin/cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_ocaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	plugged/vim-polyglot/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:dispatch_compilers	plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:dispatch_compilers = {}$/;"	v
g:dispatch_compilers	plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:dispatch_compilers['hub'] = 'git'$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:elixir_indent_max_lookbehind	plugged/vim-polyglot/autoload/elixir/indent.vim	/^  let g:elixir_indent_max_lookbehind = 30$/;"	v
g:elixir_use_markdown_for_docs	plugged/vim-polyglot/syntax/elixir.vim	/^  let g:elixir_use_markdown_for_docs = 0$/;"	v
g:eregex_backward_delim	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_backward_delim = '?'$/;"	v
g:eregex_evaluater_cmd	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_cmd = cmd$/;"	v
g:eregex_evaluater_cmd	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_cmd = globalcmd$/;"	v
g:eregex_evaluater_how_exe	plugged/vim-polyglot/scripts/eregex.vim	/^        let g:eregex_evaluater_how_exe=1$/;"	v
g:eregex_evaluater_how_exe	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_how_exe = s:eglobal_working$/;"	v
g:eregex_evaluater_how_exe	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_how_exe=2$/;"	v
g:eregex_force_case	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_force_case = 0$/;"	v
g:eregex_forward_delim	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_forward_delim = '\/'$/;"	v
g:erlang_indent_searchpair_timeout	plugged/vim-polyglot/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_unexpected_token_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fennel_align_multiline_strings	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_multiline_strings = 0$/;"	v
g:fennel_align_subforms	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_subforms = 0$/;"	v
g:fennel_fuzzy_indent	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent = 1$/;"	v
g:fennel_fuzzy_indent_blacklist	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_blacklist = []$/;"	v
g:fennel_fuzzy_indent_patterns	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_patterns = ['^def', '^let', '^while', '^if', '^fn$', '^var$', '^case/;"	v
g:fennel_maxlines	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_maxlines = 100$/;"	v
g:fennel_special_indent_words	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_special_indent_words = ''$/;"	v
g:filetype_asa	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asa = "fizfuz"$/;"	v
g:filetype_asp	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asp = "fizfuz"$/;"	v
g:filetype_fs	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_fs = "fizfuz"$/;"	v
g:filetype_idr	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_idr = "fizfuz"$/;"	v
g:filetype_m	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_m = "fizfuz"$/;"	v
g:filetype_pl	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pl = "fizfuz"$/;"	v
g:filetype_pm	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pm = "fizfuz"$/;"	v
g:filetype_t	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_t = "fizfuz"$/;"	v
g:foo	plugged/vim-polyglot/indent/cobol.vim	/^        let g:foo = s:stripped(lastclause)$/;"	v
g:fsharp#	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#{key.snake} = key.default$/;"	v
g:fsharp#automatic_reload_workspace	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#automatic_reload_workspace = 1$/;"	v
g:fsharp#automatic_workspace_init	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#automatic_workspace_init = 1$/;"	v
g:fsharp#backend	plugged/vim-polyglot/autoload/fsharp.vim	/^                let g:fsharp#backend = "languageclient-neovim"$/;"	v
g:fsharp#backend	plugged/vim-polyglot/autoload/fsharp.vim	/^                let g:fsharp#backend = "nvim"$/;"	v
g:fsharp#backend	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#backend = "languageclient-neovim"$/;"	v
g:fsharp#fsautocomplete_command	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsautocomplete_command =$/;"	v
g:fsharp#fsi_command	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsi_command = "dotnet fsi"$/;"	v
g:fsharp#fsi_focus_on_send	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsi_focus_on_send = 0$/;"	v
g:fsharp#fsi_keymap	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#fsi_keymap = "custom"$/;"	v
g:fsharp#fsi_keymap	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsi_keymap = "none"$/;"	v
g:fsharp#fsi_keymap	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsi_keymap = "vscode"$/;"	v
g:fsharp#fsi_keymap_send	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#fsi_keymap_send   = "<M-cr>"$/;"	v
g:fsharp#fsi_keymap_send	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#fsi_keymap_send   = "<esc><cr>"$/;"	v
g:fsharp#fsi_keymap_send	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsi_keymap_send   = "<leader>i"$/;"	v
g:fsharp#fsi_keymap_toggle	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#fsi_keymap_toggle = "<M-@>"$/;"	v
g:fsharp#fsi_keymap_toggle	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#fsi_keymap_toggle = "<esc>@"$/;"	v
g:fsharp#fsi_keymap_toggle	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsi_keymap_toggle = "<leader>e"$/;"	v
g:fsharp#fsi_window_command	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#fsi_window_command = "botright 10new"$/;"	v
g:fsharp#lsp_auto_setup	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#lsp_auto_setup = 1$/;"	v
g:fsharp#lsp_codelens	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#lsp_codelens = 1$/;"	v
g:fsharp#lsp_recommended_colorscheme	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#lsp_recommended_colorscheme = 1$/;"	v
g:fsharp#show_signature_on_cursor_move	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#show_signature_on_cursor_move = 1$/;"	v
g:fsharp#use_recommended_server_config	plugged/vim-polyglot/autoload/fsharp.vim	/^        let g:fsharp#use_recommended_server_config = 1$/;"	v
g:ft_ignore_pat	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ft_ignore_pat	plugged/vim-polyglot/extras/filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:fugitive_browse_handlers	plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_event	plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_event = a:state.git_dir$/;"	v
g:fugitive_event	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:fugitive_event = dir$/;"	v
g:fugitive_result	plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_result = a:dir$/;"	v
g:fugitive_result	plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_result = a:state$/;"	v
g:fugitive_summary_format	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	plugged/vim-polyglot/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSp/;"	v
g:fzf#vim#buffers	plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:fzf_action	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^            let g:fzf_action = fzf_action_bak$/;"	v
g:fzf_action	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^        let g:fzf_action = {$/;"	v
g:fzf_action	vimrc	/^let g:fzf_action = {$/;"	v
g:fzf_buffers_jump	vimrc	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_commands_expect	vimrc	/^let g:fzf_commands_expect = 'enter'$/;"	v
g:fzf_commits_log_options	vimrc	/^let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bo/;"	v
g:fzf_preview_window	vimrc	/^  let g:fzf_preview_window = []$/;"	v
g:fzf_preview_window	vimrc	/^let g:fzf_preview_window = ['right:50%:hidden', 'ctrl-\/']$/;"	v
g:fzf_tags_command	vimrc	/^let g:fzf_tags_command = 'ctags -R'$/;"	v
g:git_messenger_always_into_popup	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_always_into_popup = get(g:, 'git_messenger_always_into_popup', v:false)$/;"	v
g:git_messenger_always_into_popup	sources/50-git.vim	/^let g:git_messenger_always_into_popup=v:true$/;"	v
g:git_messenger_close_on_cursor_moved	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_close_on_cursor_moved = get(g:, 'git_messenger_close_on_cursor_moved', v:tru/;"	v
g:git_messenger_conceal_word_diff_marker	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_conceal_word_diff_marker = get(g:, 'git_messenger_conceal_word_diff_marker',/;"	v
g:git_messenger_date_format	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_date_format = get(g:, 'git_messenger_date_format', '%c')$/;"	v
g:git_messenger_extra_blame_args	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_extra_blame_args = get(g:, 'git_messenger_extra_blame_args', '')$/;"	v
g:git_messenger_floating_win_opts	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_floating_win_opts = get(g:, 'git_messenger_floating_win_opts', {})$/;"	v
g:git_messenger_floating_win_opts	sources/50-git.vim	/^let g:git_messenger_floating_win_opts = { 'border': 'single' }$/;"	v
g:git_messenger_git_command	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_git_command = get(g:, 'git_messenger_git_command', 'git')$/;"	v
g:git_messenger_include_diff	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_include_diff = get(g:, 'git_messenger_include_diff', 'none')$/;"	v
g:git_messenger_include_diff	sources/50-git.vim	/^let g:git_messenger_include_diff="current"$/;"	v
g:git_messenger_into_popup_after_show	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_into_popup_after_show = get(g:, 'git_messenger_into_popup_after_show', v:tru/;"	v
g:git_messenger_max_popup_height	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_max_popup_height = get(g:, 'git_messenger_max_popup_height', v:null)$/;"	v
g:git_messenger_max_popup_width	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_max_popup_width = get(g:, 'git_messenger_max_popup_width', v:null)$/;"	v
g:git_messenger_no_default_mappings	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^let g:git_messenger_no_default_mappings = get(g:, 'git_messenger_no_default_mappings', v:false)$/;"	v
g:git_messenger_popup_content_margins	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_popup_content_margins = get(g:, 'git_messenger_popup_content_margins', v:tru/;"	v
g:git_messenger_popup_content_margins	sources/50-git.vim	/^let g:git_messenger_popup_content_margins = v:true$/;"	v
g:git_messenger_preview_mods	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_preview_mods = get(g:, 'git_messenger_preview_mods', '')$/;"	v
g:gitgutter_async	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^    let g:gitgutter_async = async$/;"	v
g:gitgutter_async	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_async                        = get(g:, 'gitgutter_async', 1)$/;"	v
g:gitgutter_close_preview_on_escape	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_close_preview_on_escape      = get(g:, 'gitgutter_close_preview_on_escape', 0)$/;"	v
g:gitgutter_diff_args	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_args                    = get(g:, 'gitgutter_diff_args', '')$/;"	v
g:gitgutter_diff_base	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_base                    = get(g:, 'gitgutter_diff_base', '')$/;"	v
g:gitgutter_diff_relative_to	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_relative_to             = get(g:, 'gitgutter_diff_relative_to', 'index')$/;"	v
g:gitgutter_enabled	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 0$/;"	v
g:gitgutter_enabled	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 1$/;"	v
g:gitgutter_enabled	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_enabled = get(g:, 'gitgutter_enabled', 1)$/;"	v
g:gitgutter_floating_window_options	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^        let g:gitgutter_floating_window_options.filter = function('s:close_popup_on_escape')$/;"	v
g:gitgutter_floating_window_options	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_floating_window_options = get(g:, 'gitgutter_floating_window_options', {$/;"	v
g:gitgutter_git_args	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_args                     = get(g:, 'gitgutter_git_args', '')$/;"	v
g:gitgutter_git_executable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_executable = get(g:, 'gitgutter_git_executable', 'git')$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_grep = get(g:, 'gitgutter_grep', default_grep)$/;"	v
g:gitgutter_highlight_linenrs	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_linenrs = 0$/;"	v
g:gitgutter_highlight_linenrs	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_linenrs = 1$/;"	v
g:gitgutter_highlight_linenrs	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_linenrs = get(g:, 'gitgutter_highlight_linenrs', 0)$/;"	v
g:gitgutter_highlight_lines	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 0$/;"	v
g:gitgutter_highlight_lines	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 1$/;"	v
g:gitgutter_highlight_lines	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_lines   = get(g:, 'gitgutter_highlight_lines', 0)$/;"	v
g:gitgutter_hook_context	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^    let g:gitgutter_hook_context = {'bufnr': a:bufnr}$/;"	v
g:gitgutter_log	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_log                          = get(g:, 'gitgutter_log', 0)$/;"	v
g:gitgutter_map_keys	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_map_keys                     = get(g:, 'gitgutter_map_keys', 1)$/;"	v
g:gitgutter_max_signs	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', -1)$/;"	v
g:gitgutter_max_signs	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', 500)$/;"	v
g:gitgutter_preview_win_floating	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', 1)$/;"	v
g:gitgutter_preview_win_floating	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', default)$/;"	v
g:gitgutter_preview_win_location	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_preview_win_location = get(g:, 'gitgutter_preview_win_location', 'bo')$/;"	v
g:gitgutter_set_sign_backgrounds	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_set_sign_backgrounds = get(g:, 'gitgutter_set_sign_backgrounds', 0)$/;"	v
g:gitgutter_show_msg_on_hunk_jumping	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_show_msg_on_hunk_jumping     = get(g:, 'gitgutter_show_msg_on_hunk_jumping', 1)$/;"	v
g:gitgutter_sign_added	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_added           = get(g:, 'gitgutter_sign_added', '+')$/;"	v
g:gitgutter_sign_allow_clobber	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_allow_clobber = 1$/;"	v
g:gitgutter_sign_allow_clobber	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_allow_clobber   = get(g:, 'gitgutter_sign_allow_clobber', 0)$/;"	v
g:gitgutter_sign_modified	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified        = get(g:, 'gitgutter_sign_modified', '~')$/;"	v
g:gitgutter_sign_modified_removed	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified_removed        = get(g:, 'gitgutter_sign_modified_removed', '~_')$/;"	v
g:gitgutter_sign_priority	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_priority     = get(g:, 'gitgutter_sign_priority', 10)$/;"	v
g:gitgutter_sign_priority	plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let g:gitgutter_sign_priority = 10$/;"	v
g:gitgutter_sign_priority	plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let g:gitgutter_sign_priority = 5$/;"	v
g:gitgutter_sign_removed	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed         = get(g:, 'gitgutter_sign_removed', '_')$/;"	v
g:gitgutter_sign_removed_above_and_below	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed_above_and_below = get(g:, 'gitgutter_sign_removed_above_and_below',/;"	v
g:gitgutter_sign_removed_first_line	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '_^')$/;"	v
g:gitgutter_sign_removed_first_line	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '‾')$/;"	v
g:gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 0$/;"	v
g:gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 1$/;"	v
g:gitgutter_signs	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_signs             = get(g:, 'gitgutter_signs', 1)$/;"	v
g:gitgutter_terminal_reports_focus	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_terminal_reports_focus       = get(g:, 'gitgutter_terminal_reports_focus', 1)$/;"	v
g:gitgutter_use_location_list	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_use_location_list            = get(g:, 'gitgutter_use_location_list', 0)$/;"	v
g:github_password	plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_password = FugitiveConfigGet('github.password', '')$/;"	v
g:github_password	plugged/vim-rhubarb/autoload/rhubarb.vim	/^    let g:github_password = $GITHUB_PASSWORD$/;"	v
g:github_user	plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_user = $LOGNAME$/;"	v
g:github_user	plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_user = FugitiveConfigGet('github.user', '')$/;"	v
g:github_user	plugged/vim-rhubarb/autoload/rhubarb.vim	/^    let g:github_user = $GITHUB_USER$/;"	v
g:go_asmfmt_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_asmfmt_autosave = a:value$/;"	v
g:go_auto_sameids	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_auto_sameids = a:value$/;"	v
g:go_auto_type_info	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_auto_type_info = a:value$/;"	v
g:go_build_tags	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_build_tags = a:value$/;"	v
g:go_debug_commands	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_debug_commands = get(g:, 'go_debug_commands', [])$/;"	v
g:go_debug_diag	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_debug_diag = a:value$/;"	v
g:go_fmt_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_fmt_autosave = a:value$/;"	v
g:go_guru_scope	plugged/vim-polyglot/autoload/go/config.vim	/^    let g:go_guru_scope = a:scope$/;"	v
g:go_lsp_log	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_lsp_log = get(g:, 'go_lsp_log', [])$/;"	v
g:go_metalinter_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_metalinter_autosave = a:value$/;"	v
g:go_mod_fmt_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_mod_fmt_autosave = a:value$/;"	v
g:go_template_autocreate	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_template_autocreate = a:value$/;"	v
g:go_term_close_on_exit	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_term_close_on_exit = a:value$/;"	v
g:go_term_enabled	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_term_enabled = a:value$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 1111$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 777$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 999$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = v:char$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slim.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slime.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haskell_indent_case	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_do	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_do = 3$/;"	v
g:haskell_indent_guard	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_guard = 2$/;"	v
g:haskell_indent_if	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_if = 3$/;"	v
g:haskell_indent_in	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_in = 1$/;"	v
g:haskell_indent_let	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let = 4$/;"	v
g:haskell_indent_where	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_where = 6$/;"	v
g:hcl_align	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:hcl_align = s:hcl_align_save$/;"	v
g:hcl_align	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:hcl_align=1$/;"	v
g:hcl_fold_sections	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:hcl_fold_sections = s:hcl_fold_sections_save$/;"	v
g:hcl_fold_sections	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:hcl_fold_sections=1$/;"	v
g:highlightedyank_highlight_duration	sources/50-pluginSettings.vim	/^let g:highlightedyank_highlight_duration = 400$/;"	v
g:html5_aria_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:html_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:html_indent_tags = a:tag$/;"	v
g:html_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:html_indent_tags = g:html_indent_tags.'\\|'.a:tag$/;"	v
g:idris_indent_case	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_case	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_do	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_do = 3$/;"	v
g:idris_indent_do	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_do = 3$/;"	v
g:idris_indent_if	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_if	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_let	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_let	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_rewrite	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_rewrite	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_where	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_indent_where	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris.vim	/^    let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris.vim	/^  let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris.vim	/^  let g:idris_respwin = "hidden"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris2.vim	/^    let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris2.vim	/^  let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris2.vim	/^  let g:idris_respwin = "hidden"$/;"	v
g:incsearch#_go_config	plugged/incsearch.vim/autoload/incsearch.vim	/^    let g:incsearch#_go_config = config$/;"	v
g:incsearch#_go_config	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#_go_config = {}$/;"	v
g:incsearch#_view	plugged/incsearch.vim/autoload/incsearch.vim	/^    let g:incsearch#_view = a:cli._w$/;"	v
g:incsearch#_view	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#_view = get(g:, 'incsearch#_view', {})$/;"	v
g:incsearch#auto_nohlsearch	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#auto_nohlsearch = get(g: , 'incsearch#auto_nohlsearch' , s:FALSE)$/;"	v
g:incsearch#auto_nohlsearch	plugged/incsearch.vim/test/autonohlsearch.vim	/^  let g:incsearch#auto_nohlsearch = 0$/;"	v
g:incsearch#auto_nohlsearch	plugged/incsearch.vim/test/autonohlsearch.vim	/^  let g:incsearch#auto_nohlsearch = 1$/;"	v
g:incsearch#auto_nohlsearch	vimrc	/^let g:incsearch#auto_nohlsearch = 1$/;"	v
g:incsearch#consistent_n_direction	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#consistent_n_direction = get(g: , 'incsearch#consistent_n_direction' , s:FALSE)$/;"	v
g:incsearch#consistent_n_direction	plugged/incsearch.vim/test/n_and_N.vim	/^  let g:incsearch#consistent_n_direction = 0$/;"	v
g:incsearch#consistent_n_direction	plugged/incsearch.vim/test/n_and_N.vim	/^  let g:incsearch#consistent_n_direction = 1$/;"	v
g:incsearch#consistent_n_direction	vimrc	/^let g:incsearch#consistent_n_direction = 1$/;"	v
g:incsearch#debug	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#debug = get(g:, 'incsearch#debug', s:FALSE)$/;"	v
g:incsearch#do_not_save_error_message_history	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#do_not_save_error_message_history =$/;"	v
g:incsearch#do_not_save_error_message_history	plugged/incsearch.vim/test/error_warning_emulation.vim	/^  let g:incsearch#do_not_save_error_message_history = 0$/;"	v
g:incsearch#do_not_save_error_message_history	plugged/incsearch.vim/test/error_warning_emulation.vim	/^  let g:incsearch#do_not_save_error_message_history = 1$/;"	v
g:incsearch#do_not_save_error_message_history	vimrc	/^let g:incsearch#do_not_save_error_message_history = 1$/;"	v
g:incsearch#emacs_like_keymap	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#emacs_like_keymap      = get(g: , 'incsearch#emacs_like_keymap'      , s:FALSE)$/;"	v
g:incsearch#highlight	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#highlight              = get(g: , 'incsearch#highlight'              , {})$/;"	v
g:incsearch#highlight#_hi	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let g:incsearch#highlight#_hi = s:hi$/;"	v
g:incsearch#magic	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#magic           = get(g: , 'incsearch#magic'           , '')$/;"	v
g:incsearch#magic	plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = ''$/;"	v
g:incsearch#magic	plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\M'$/;"	v
g:incsearch#magic	plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\V'$/;"	v
g:incsearch#magic	plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\a'$/;"	v
g:incsearch#magic	plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\m'$/;"	v
g:incsearch#magic	plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\v'$/;"	v
g:incsearch#no_inc_hlsearch	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#no_inc_hlsearch        = get(g: , 'incsearch#no_inc_hlsearch'        , s:FALSE)$/;"	v
g:incsearch#no_inc_hlsearch	vimrc	/^let g:incsearch#no_inc_hlsearch = 0$/;"	v
g:incsearch#separate_highlight	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#separate_highlight     = get(g: , 'incsearch#separate_highlight'     , s:FALSE)$/;"	v
g:incsearch#separate_highlight	plugged/incsearch.vim/test/highlight.vim	/^  let g:incsearch#separate_highlight = 0$/;"	v
g:incsearch#separate_highlight	plugged/incsearch.vim/test/highlight.vim	/^  let g:incsearch#separate_highlight = 1$/;"	v
g:incsearch#separate_highlight	vimrc	/^let g:incsearch#separate_highlight = 0$/;"	v
g:incsearch#smart_backward_word	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#smart_backward_word    = get(g: , 'incsearch#smart_backward_word'    , s:TRUE)$/;"	v
g:incsearch#smart_backward_word	plugged/incsearch.vim/test/module.vim	/^  let g:incsearch#smart_backward_word = 0$/;"	v
g:incsearch#smart_backward_word	plugged/incsearch.vim/test/module.vim	/^  let g:incsearch#smart_backward_word = 1$/;"	v
g:incsearch#vim_cmdline_keymap	plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#vim_cmdline_keymap     = get(g: , 'incsearch#vim_cmdline_keymap'     , s:TRUE)$/;"	v
g:incsearch_cli_key_mappings	plugged/incsearch.vim/plugin/incsearch.vim	/^  let g:incsearch_cli_key_mappings[a:lhs] = {$/;"	v
g:incsearch_cli_key_mappings	plugged/incsearch.vim/plugin/incsearch.vim	/^let g:incsearch_cli_key_mappings = get(g:, 'incsearch_cli_key_mappings', {})$/;"	v
g:incsearch_cli_key_mappings	plugged/incsearch.vim/test/default_settings.vim	/^    let g:incsearch_cli_key_mappings['a'] = 'b'$/;"	v
g:indent_object_except_first_level	plugged/vim-indent-object/plugin/indent-object.vim	/^	let g:indent_object_except_first_level = 1$/;"	v
g:io_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:j_indent_definitions	plugged/vim-polyglot/indent/j.vim	/^  let g:j_indent_definitions = 0$/;"	v
g:jsonnet_command	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_command = "jsonnet"$/;"	v
g:jsonnet_fmt_command	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_command = "jsonnetfmt"$/;"	v
g:jsonnet_fmt_fail_silently	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_fail_silently = 1$/;"	v
g:jsonnet_fmt_options	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_options = ''$/;"	v
g:jst_default_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let g:jst_default_subtype = "html"$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = 'julia'$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = get(pathlist, -1, 'julia')$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let g:julia#doc#juliapath = get(g:, 'julia#doc#juliapath', 'julia')$/;"	v
g:l2u_did_global_setup	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  let g:l2u_did_global_setup = 1$/;"	v
g:l2u_symbols_dict	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  let g:l2u_symbols_dict = julia_latex_symbols#get_dict()$/;"	v
g:latex_to_unicode_auto	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_auto = 0$/;"	v
g:latex_to_unicode_suggestions	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    let g:latex_to_unicode_suggestions = 0$/;"	v
g:latex_to_unicode_tab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_tab = "off"$/;"	v
g:latex_to_unicode_tab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_tab = "on"$/;"	v
g:ledger_main	plugged/vim-polyglot/compiler/ledger.vim	/^  let g:ledger_main = '%'$/;"	v
g:ledger_target_amount	plugged/vim-polyglot/autoload/ledger.vim	/^    let g:ledger_target_amount = a:target_amount$/;"	v
g:lightline	plugged/lightline.vim/test/autocmd.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/concatenate.vim	/^  let g:lightline = { 'subseparator': { 'left': '>', 'right': '<' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': /;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' }, 'component_type': { 'custom'/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'g:lightline.Custom' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {$/;"	v
g:lightline	plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/link.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	plugged/lightline.vim/test/link.vim	/^  let g:lightline = {$/;"	v
g:lightline	plugged/lightline.vim/test/link.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/mode.vim	/^  let g:lightline = { 'mode_map': { 'n': 'N' } }$/;"	v
g:lightline	plugged/lightline.vim/test/mode.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component': { 'custom': 'custom' }/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': '/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom', 'filename' ], 'inactive': [ 'custom', 'cust/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom' ], 'inactive': [ 'tabnum', 'custom/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom', 'filename' ], 'inactive': [ 'tabn/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'filename' ], 'inactive': [ 'filename' ] } /;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/popup.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/quickfix.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component': { 'custom1': 'custom1', 'custom2': 'custom2', 'custom3': 'cus/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'cus/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'compo/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'com/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custo/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 0 } }$/;"	v
g:lightline	plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 1 } }$/;"	v
g:lightline	plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/toggle.vim	/^  let g:lightline = {}$/;"	v
g:lightline	sources/50-autostuff.vim	/^let g:lightline = {'colorscheme' : 'one'}$/;"	v
g:lightline#colorscheme#16color#palette	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#PaperColor#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palet/;"	v
g:lightline#colorscheme#PaperColor#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#pale/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#apprentice#palette	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let g:lightline#colorscheme#apprentice#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#ayu_dark#palette	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let g:lightline#colorscheme#ayu_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_light#palette	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let g:lightline#colorscheme#ayu_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_mirage#palette	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let g:lightline#colorscheme#ayu_mirage#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#default#palette	plugged/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#deus#palette	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#jellybeans#palette	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#materia#palette	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#powerlineish#palette	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let g:lightline#colorscheme#powerlineish#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#selenized_black#palette	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let g:lightline#colorscheme#selenized_black#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_dark#palette	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let g:lightline#colorscheme#selenized_dark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_light#palette	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let g:lightline#colorscheme#selenized_light#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_white#palette	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let g:lightline#colorscheme#selenized_white#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#simpleblack#palette	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let g:lightline#colorscheme#simpleblack#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:llvm_ext_lli_executable	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_lli_executable = get(g:, 'llvm_ext_lli_executable', 'lli')$/;"	v
g:llvm_ext_no_mapping	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_no_mapping = get(g:, 'llvm_ext_no_mapping', 0)$/;"	v
g:loaded_asterisk	plugged/vim-asterisk/plugin/asterisk.vim	/^let g:loaded_asterisk = 1$/;"	v
g:loaded_autoload_fsharp	plugged/vim-polyglot/autoload/fsharp.vim	/^let g:loaded_autoload_fsharp = 1$/;"	v
g:loaded_bracketed_paste	sources/50-bracketed-paste.vim	/^let g:loaded_bracketed_paste = 1$/;"	v
g:loaded_calendar	plugged/calendar.vim/plugin/calendar.vim	/^let g:loaded_calendar = 1$/;"	v
g:loaded_commentary	plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fzf	plugged/fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:loaded_fzf_vim	plugged/fzf.vim/plugin/fzf.vim	/^let g:loaded_fzf_vim = 1$/;"	v
g:loaded_git_messenger	plugged/git-messenger.vim/plugin/gitmessenger.vim	/^let g:loaded_git_messenger = 1$/;"	v
g:loaded_gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_highlightedyank	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^let g:loaded_highlightedyank = 1$/;"	v
g:loaded_incsearch	plugged/incsearch.vim/plugin/incsearch.vim	/^let g:loaded_incsearch = 1$/;"	v
g:loaded_incsearch_easymotion	plugged/incsearch-easymotion.vim/plugin/incsearch/easymotion.vim	/^let g:loaded_incsearch_easymotion = 1$/;"	v
g:loaded_incsearch_fuzzy	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^let g:loaded_incsearch_fuzzy = 1$/;"	v
g:loaded_lightline	plugged/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_repeat	plugged/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_rhubarb	plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:loaded_rhubarb = 1$/;"	v
g:loaded_sleuth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:loaded_sleuth = 1$/;"	v
g:loaded_sleuth	plugged/vim-sleuth/plugin/sleuth.vim	/^let g:loaded_sleuth = 1$/;"	v
g:loaded_startify	plugged/vim-startify/plugin/startify.vim	/^let g:loaded_startify = 1$/;"	v
g:loaded_surround	plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_ansible_ansible_lint_checker	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let g:loaded_syntastic_ansible_ansible_lint_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_drafter_checker	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let g:loaded_syntastic_apiblueprint_drafter_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_proselint_checker	plugged/syntastic/syntax_checkers/asciidoc/proselint.vim	/^let g:loaded_syntastic_asciidoc_proselint_checker = 1$/;"	v
g:loaded_syntastic_asl_iasl_checker	plugged/syntastic/syntax_checkers/asl/iasl.vim	/^let g:loaded_syntastic_asl_iasl_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	plugged/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	plugged/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_cppclean_checker	plugged/syntastic/syntax_checkers/c/cppclean.vim	/^let g:loaded_syntastic_c_cppclean_checker = 1$/;"	v
g:loaded_syntastic_c_flawfinder_checker	plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^let g:loaded_syntastic_c_flawfinder_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	plugged/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	plugged/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	plugged/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	plugged/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	plugged/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	plugged/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_cmake_cmakelint_checker	plugged/syntastic/syntax_checkers/cmake/cmakelint.vim	/^let g:loaded_syntastic_cmake_cmakelint_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	plugged/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_jshint_checker	plugged/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^let g:loaded_syntastic_coffee_coffee_jshint_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_avrgcc_checker	plugged/syntastic/syntax_checkers/cpp/avrgcc.vim	/^let g:loaded_syntastic_cpp_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	plugged/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	plugged/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	plugged/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppclean_checker	plugged/syntastic/syntax_checkers/cpp/cppclean.vim	/^let g:loaded_syntastic_cpp_cppclean_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_flawfinder_checker	plugged/syntastic/syntax_checkers/cpp/flawfinder.vim	/^let g:loaded_syntastic_cpp_flawfinder_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	plugged/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	plugged/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	plugged/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_mixedindentlint_checker	plugged/syntastic/syntax_checkers/css/mixedindentlint.vim	/^let g:loaded_syntastic_css_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	plugged/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	plugged/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_css_stylelint_checker	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let g:loaded_syntastic_css_stylelint_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	plugged/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_d_dscanner_checker	plugged/syntastic/syntax_checkers/d/dscanner.vim	/^let g:loaded_syntastic_d_dscanner_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	plugged/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_dockerfile_lint_checker	plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let g:loaded_syntastic_dockerfile_dockerfile_lint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_hadolint_checker	plugged/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^let g:loaded_syntastic_dockerfile_hadolint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	plugged/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golangci_lint_checker	plugged/syntastic/syntax_checkers/go/golangci_lint.vim	/^let g:loaded_syntastic_go_golangci_lint_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	plugged/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gometalinter_checker	plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^let g:loaded_syntastic_go_gometalinter_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	plugged/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	plugged/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	plugged/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_help_proselint_checker	plugged/syntastic/syntax_checkers/help/proselint.vim	/^let g:loaded_syntastic_help_proselint_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	plugged/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_eslint_checker	plugged/syntastic/syntax_checkers/html/eslint.vim	/^let g:loaded_syntastic_html_eslint_checker = 1$/;"	v
g:loaded_syntastic_html_gjslint_checker	plugged/syntastic/syntax_checkers/html/gjslint.vim	/^let g:loaded_syntastic_html_gjslint_checker = 1$/;"	v
g:loaded_syntastic_html_htmlhint_checker	plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^let g:loaded_syntastic_html_htmlhint_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	plugged/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_proselint_checker	plugged/syntastic/syntax_checkers/html/proselint.vim	/^let g:loaded_syntastic_html_proselint_checker = 1$/;"	v
g:loaded_syntastic_html_stylelint_checker	plugged/syntastic/syntax_checkers/html/stylelint.vim	/^let g:loaded_syntastic_html_stylelint_checker = 1$/;"	v
g:loaded_syntastic_html_textlint_checker	plugged/syntastic/syntax_checkers/html/textlint.vim	/^let g:loaded_syntastic_html_textlint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	plugged/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	plugged/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_jade_jade_lint_checker	plugged/syntastic/syntax_checkers/jade/jade_lint.vim	/^let g:loaded_syntastic_jade_jade_lint_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_lynt_checker	plugged/syntastic/syntax_checkers/javascript/lynt.vim	/^let g:loaded_syntastic_javascript_lynt_checker = 1$/;"	v
g:loaded_syntastic_javascript_mixedindentlint_checker	plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let g:loaded_syntastic_javascript_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_javascript_tern_lint_checker	plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^let g:loaded_syntastic_javascript_tern_lint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	plugged/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	plugged/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	plugged/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	plugged/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_markdown_proselint_checker	plugged/syntastic/syntax_checkers/markdown/proselint.vim	/^let g:loaded_syntastic_markdown_proselint_checker = 1$/;"	v
g:loaded_syntastic_markdown_remark_lint_checker	plugged/syntastic/syntax_checkers/markdown/remark_lint.vim	/^let g:loaded_syntastic_markdown_remark_lint_checker = 1$/;"	v
g:loaded_syntastic_markdown_textlint_checker	plugged/syntastic/syntax_checkers/markdown/textlint.vim	/^let g:loaded_syntastic_markdown_textlint_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_nix_nix_checker	plugged/syntastic/syntax_checkers/nix/nix.vim	/^let g:loaded_syntastic_nix_nix_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	plugged/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	plugged/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_nroff_proselint_checker	plugged/syntastic/syntax_checkers/nroff/proselint.vim	/^let g:loaded_syntastic_nroff_proselint_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	plugged/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	plugged/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl6_perl6_checker	plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^let g:loaded_syntastic_perl6_perl6_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	plugged/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	plugged/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	plugged/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	plugged/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_php_phpstan_checker	plugged/syntastic/syntax_checkers/php/phpstan.vim	/^let g:loaded_syntastic_php_phpstan_checker = 1$/;"	v
g:loaded_syntastic_plugin	plugged/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_dennis_checker	plugged/syntastic/syntax_checkers/po/dennis.vim	/^let g:loaded_syntastic_po_dennis_checker = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_pod_proselint_checker	plugged/syntastic/syntax_checkers/pod/proselint.vim	/^let g:loaded_syntastic_pod_proselint_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	plugged/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	plugged/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_pug_pug_lint_checker	plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^let g:loaded_syntastic_pug_pug_lint_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_bandit_checker	plugged/syntastic/syntax_checkers/python/bandit.vim	/^let g:loaded_syntastic_python_bandit_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	plugged/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	plugged/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	plugged/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	plugged/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	plugged/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	plugged/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pycodestyle_checker	plugged/syntastic/syntax_checkers/python/pycodestyle.vim	/^let g:loaded_syntastic_python_pycodestyle_checker = 1$/;"	v
g:loaded_syntastic_python_pydocstyle_checker	plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^let g:loaded_syntastic_python_pydocstyle_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	plugged/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	plugged/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_qml_qmllint_checker	plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^let g:loaded_syntastic_qml_qmllint_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	plugged/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_lintr_checker	plugged/syntastic/syntax_checkers/r/lintr.vim	/^let g:loaded_syntastic_r_lintr_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	plugged/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	plugged/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_raku_raku_checker	plugged/syntastic/syntax_checkers/raku/raku.vim	/^let g:loaded_syntastic_raku_raku_checker = 1$/;"	v
g:loaded_syntastic_registry	plugged/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rmd_lintr_checker	plugged/syntastic/syntax_checkers/rmd/lintr.vim	/^let g:loaded_syntastic_rmd_lintr_checker = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_proselint_checker	plugged/syntastic/syntax_checkers/rst/proselint.vim	/^let g:loaded_syntastic_rst_proselint_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_rst_sphinx_checker	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let g:loaded_syntastic_rst_sphinx_checker = 1$/;"	v
g:loaded_syntastic_ruby_flog_checker	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^let g:loaded_syntastic_ruby_flog_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_ruby_sorbet_checker	plugged/syntastic/syntax_checkers/ruby/sorbet.vim	/^let g:loaded_syntastic_ruby_sorbet_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_lint_checker	plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^let g:loaded_syntastic_sass_sass_lint_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_mixedindentlint_checker	plugged/syntastic/syntax_checkers/scss/mixedindentlint.vim	/^let g:loaded_syntastic_scss_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	plugged/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_lint_checker	plugged/syntastic/syntax_checkers/scss/sass_lint.vim	/^let g:loaded_syntastic_scss_sass_lint_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	plugged/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	plugged/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_sh_shfmt_checker	plugged/syntastic/syntax_checkers/sh/shfmt.vim	/^let g:loaded_syntastic_sh_shfmt_checker = 1$/;"	v
g:loaded_syntastic_slim_slim_lint_checker	plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^let g:loaded_syntastic_slim_slim_lint_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_solidity_solc_checker	plugged/syntastic/syntax_checkers/solidity/solc.vim	/^let g:loaded_syntastic_solidity_solc_checker = 1$/;"	v
g:loaded_syntastic_solidity_solhint_checker	plugged/syntastic/syntax_checkers/solidity/solhint.vim	/^let g:loaded_syntastic_solidity_solhint_checker = 1$/;"	v
g:loaded_syntastic_solidity_solium_checker	plugged/syntastic/syntax_checkers/solidity/solium.vim	/^let g:loaded_syntastic_solidity_solium_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_sql_sqlint_checker	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^let g:loaded_syntastic_sql_sqlint_checker = 1$/;"	v
g:loaded_syntastic_sql_tsqllint_checker	plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^let g:loaded_syntastic_sql_tsqllint_checker = 1$/;"	v
g:loaded_syntastic_stylus_stylint_checker	plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^let g:loaded_syntastic_stylus_stylint_checker = 1$/;"	v
g:loaded_syntastic_svg_validator_checker	plugged/syntastic/syntax_checkers/svg/validator.vim	/^let g:loaded_syntastic_svg_validator_checker = 1$/;"	v
g:loaded_syntastic_svg_w3_checker	plugged/syntastic/syntax_checkers/svg/w3.vim	/^let g:loaded_syntastic_svg_w3_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_tex_proselint_checker	plugged/syntastic/syntax_checkers/tex/proselint.vim	/^let g:loaded_syntastic_tex_proselint_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_texinfo_proselint_checker	plugged/syntastic/syntax_checkers/texinfo/proselint.vim	/^let g:loaded_syntastic_texinfo_proselint_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	plugged/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	plugged/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_text_proselint_checker	plugged/syntastic/syntax_checkers/text/proselint.vim	/^let g:loaded_syntastic_text_proselint_checker = 1$/;"	v
g:loaded_syntastic_text_textlint_checker	plugged/syntastic/syntax_checkers/text/textlint.vim	/^let g:loaded_syntastic_text_textlint_checker = 1$/;"	v
g:loaded_syntastic_trig_rapper_checker	plugged/syntastic/syntax_checkers/trig/rapper.vim	/^let g:loaded_syntastic_trig_rapper_checker = 1$/;"	v
g:loaded_syntastic_turtle_rapper_checker	plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^let g:loaded_syntastic_turtle_rapper_checker = 1$/;"	v
g:loaded_syntastic_turtle_ttl_checker	plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^let g:loaded_syntastic_turtle_ttl_checker = 1$/;"	v
g:loaded_syntastic_twig_twigcs_checker	plugged/syntastic/syntax_checkers/twig/twigcs.vim	/^let g:loaded_syntastic_twig_twigcs_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_eslint_checker	plugged/syntastic/syntax_checkers/typescript/eslint.vim	/^let g:loaded_syntastic_typescript_eslint_checker = 1$/;"	v
g:loaded_syntastic_typescript_lynt_checker	plugged/syntastic/syntax_checkers/typescript/lynt.vim	/^let g:loaded_syntastic_typescript_lynt_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	plugged/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_verilog_iverilog_checker	plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^let g:loaded_syntastic_verilog_iverilog_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vhdl_vcom_checker	plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^let g:loaded_syntastic_vhdl_vcom_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	plugged/syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_vue_eslint_checker	plugged/syntastic/syntax_checkers/vue/eslint.vim	/^let g:loaded_syntastic_vue_eslint_checker = 1$/;"	v
g:loaded_syntastic_vue_pug_lint_vue_checker	plugged/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^let g:loaded_syntastic_vue_pug_lint_vue_checker = 1$/;"	v
g:loaded_syntastic_vue_stylelint_checker	plugged/syntastic/syntax_checkers/vue/stylelint.vim	/^let g:loaded_syntastic_vue_stylelint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	plugged/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_proselint_checker	plugged/syntastic/syntax_checkers/xhtml/proselint.vim	/^let g:loaded_syntastic_xhtml_proselint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xhtml_validator_checker	plugged/syntastic/syntax_checkers/xhtml/validator.vim	/^let g:loaded_syntastic_xhtml_validator_checker = 1$/;"	v
g:loaded_syntastic_xhtml_w3_checker	plugged/syntastic/syntax_checkers/xhtml/w3.vim	/^let g:loaded_syntastic_xhtml_w3_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xquery_basex_checker	plugged/syntastic/syntax_checkers/xquery/basex.vim	/^let g:loaded_syntastic_xquery_basex_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	plugged/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamllint_checker	plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^let g:loaded_syntastic_yaml_yamllint_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_yang_pyang_checker	plugged/syntastic/syntax_checkers/yang/pyang.vim	/^let g:loaded_syntastic_yang_pyang_checker = 1$/;"	v
g:loaded_syntastic_yara_yarac_checker	plugged/syntastic/syntax_checkers/yara/yara.vim	/^let g:loaded_syntastic_yara_yarac_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_unimpaired	plugged/vim-unimpaired/plugin/unimpaired.vim	/^let g:loaded_unimpaired = 1$/;"	v
g:loaded_vimwiki	plugged/vimwiki/plugin/vimwiki.vim	/^let g:loaded_vimwiki = 1$/;"	v
g:loaded_vimwiki_auto	plugged/vimwiki/autoload/vimwiki/base.vim	/^let g:loaded_vimwiki_auto = 1$/;"	v
g:loaded_vimwiki_diary_auto	plugged/vimwiki/autoload/vimwiki/diary.vim	/^let g:loaded_vimwiki_diary_auto = 1$/;"	v
g:loaded_vimwiki_html_auto	plugged/vimwiki/autoload/vimwiki/html.vim	/^let g:loaded_vimwiki_html_auto = 1$/;"	v
g:loaded_vimwiki_list_auto	plugged/vimwiki/autoload/vimwiki/lst.vim	/^let g:loaded_vimwiki_list_auto = 1$/;"	v
g:loaded_vimwiki_tbl_auto	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^let g:loaded_vimwiki_tbl_auto = 1$/;"	v
g:loaded_visual_multi	plugged/vim-visual-multi/plugin/visual-multi.vim	/^let g:loaded_visual_multi = 1$/;"	v
g:loaded_vitalizer	plugged/vital.vim/plugin/vitalizer.vim	/^let g:loaded_vitalizer = 1$/;"	v
g:loaded_yankassassin	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^let g:loaded_yankassassin = 1$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/dart.vim	/^  let g:main_syntax = 'dart'$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
g:mako_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:mako_indent_tags = a:tag$/;"	v
g:mako_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:mako_indent_tags = g:mako_indent_tags.'\\|'.a:tag$/;"	v
g:markdown_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^    let g:markdown_fenced_languages = []$/;"	v
g:markdown_preview	autoload/myfunc.vim	/^    let g:markdown_preview = 0$/;"	v
g:menutrans_fileformat_choices	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Cancel"$/;"	v
g:menutrans_fileformat_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_fileformat_dialog = "Select format for writing the file"$/;"	v
g:menutrans_help_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_help_dialog = "Enter a command or word to find help on:\\n\\nPrepend i_ for /;"	v
g:menutrans_no_file	plugged/vim-polyglot/extras/menu.vim	/^      let g:menutrans_no_file = "[No Name]"$/;"	v
g:menutrans_path_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_path_dialog = "Enter search path for files.\\nSeparate directory names with /;"	v
g:menutrans_set_lang_to	plugged/vim-polyglot/extras/menu.vim	/^      let g:menutrans_set_lang_to = 'Set Language to'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_add_ARG_to_word_list = 'Add\\ "%s"\\ to\\ Word\\ List'$/;"	v
g:menutrans_spell_change_ARG_to	plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_change_ARG_to = 'Change\\ "%s"\\ to'$/;"	v
g:menutrans_spell_ignore_ARG	plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_ignore_ARG = 'Ignore\\ "%s"'$/;"	v
g:menutrans_tags_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_tags_dialog = "Enter names of tag files.\\nSeparate the names with a comma."$/;"	v
g:menutrans_textwidth_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_textwidth_dialog = "Enter new text width (0 to disable formatting): "$/;"	v
g:message	plugged/vim-polyglot/tests/extensions.vim	/^    let g:message = ""$/;"	v
g:mp_close_tag	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_close_tag = ''$/;"	v
g:mp_open_tag	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_open_tag = ''$/;"	v
g:mp_statement	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_statement = ''$/;"	v
g:mustache_operators	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let g:mustache_operators = 1$/;"	v
g:neocomplcache_omni_patterns	plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplcache_omni_patterns = {}$/;"	v
g:neocomplcache_omni_patterns	plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplcache_omni_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:neocomplete#sources#omni#input_patterns	plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplete#sources#omni#input_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:netrw_banner	sources/50-basic-settings.vim	/^let g:netrw_banner=0 "Disable Banner$/;"	v
g:netrw_browse_split	sources/50-basic-settings.vim	/^let g:netrw_browse_split=4 "open in prior window$/;"	v
g:netrw_list_hide	sources/50-basic-settings.vim	/^let g:netrw_list_hide.=',\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'$/;"	v
g:netrw_list_hide	sources/50-basic-settings.vim	/^let g:netrw_list_hide=netrw_gitignore#Hide()$/;"	v
g:netrw_liststyle	sources/50-basic-settings.vim	/^let g:netrw_liststyle=3 " tree view$/;"	v
g:nim_caas_enabled	plugged/vim-polyglot/autoload/nim.vim	/^  let g:nim_caas_enabled = 0$/;"	v
g:nim_completion_callbacks	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_completion_callbacks = {}$/;"	v
g:nim_log	plugged/vim-polyglot/autoload/nim.vim	/^  let g:nim_log = []$/;"	v
g:nim_log	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_log = []$/;"	v
g:nim_symbol_types	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_symbol_types = {$/;"	v
g:omni_syntax_group_exclude_lifelines	plugged/vim-polyglot/syntax/lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_group_exclude_mf	plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_exclude_mf = 'mfTodoComment'$/;"	v
g:omni_syntax_group_exclude_mp	plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_exclude_mp = 'mfTodoComment'$/;"	v
g:omni_syntax_group_include_mf	plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_include_mf = 'mf\\w\\+'$/;"	v
g:omni_syntax_group_include_mp	plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_include_mp = 'mf\\w\\+,mp\\w\\+'$/;"	v
g:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let g:other_mf_macros = s:other_mf_macros$/;"	v
g:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^let g:other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
g:pandoc#syntax#codeblocks#embeds#langs	plugged/vim-polyglot/syntax/rmd.vim	/^let g:pandoc#syntax#codeblocks#embeds#langs = get(g:, 'pandoc#syntax#codeblocks#embeds#langs', [/;"	v
g:php_syntax_extensions_disabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg/;"	v
g:php_version_id	plugged/vim-polyglot/syntax/php.vim	/^  let g:php_version_id = 70300$/;"	v
g:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_macros = s:plain_mf_macros$/;"	v
g:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
g:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_modes = s:plain_mf_modes$/;"	v
g:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_modes  = 0 " No METAFONT modes$/;"	v
g:plantuml_executable_script	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let g:plantuml_executable_script='plantuml'$/;"	v
g:plug_home	autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:polyglot_disabled_not_set	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:polyglot_disabled_not_set = 1$/;"	v
g:polyglot_initialized	plugged/vim-polyglot/autoload/polyglot/init.vim	/^      let g:polyglot_initialized = 1$/;"	v
g:polyglot_initialized	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let g:polyglot_initialized = 0$/;"	v
g:polyglot_is_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^      let g:polyglot_is_disabled[pkg] = 1$/;"	v
g:polyglot_is_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let g:polyglot_is_disabled = {}$/;"	v
g:ps1_efm_show_error_categories	plugged/vim-polyglot/compiler/powershell.vim	/^let g:ps1_efm_show_error_categories = get(g:, 'ps1_efm_show_error_categories', 0)$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = ''$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'powershell.exe'$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh'$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh.exe'$/;"	v
g:pug_self_closing_tags	plugged/vim-polyglot/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:puppet_align_hashes	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    let g:puppet_align_hashes = 1$/;"	v
g:purescript_indent_case	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_case = 5$/;"	v
g:purescript_indent_do	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_do = 3$/;"	v
g:purescript_indent_dot	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_dot = 1$/;"	v
g:purescript_indent_if	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_if = 3$/;"	v
g:purescript_indent_in	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_in = 1$/;"	v
g:purescript_indent_let	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_let = 4$/;"	v
g:purescript_indent_where	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_where = 6$/;"	v
g:pyindent_nested_paren	plugged/vim-polyglot/indent/bzl.vim	/^      let g:pyindent_nested_paren = l:pyindent_nested_paren$/;"	v
g:pyindent_nested_paren	plugged/vim-polyglot/indent/bzl.vim	/^    let g:pyindent_nested_paren = 'shiftwidth()'$/;"	v
g:pyindent_open_paren	plugged/vim-polyglot/indent/bzl.vim	/^      let g:pyindent_open_paren = l:pyindent_open_paren$/;"	v
g:pyindent_open_paren	plugged/vim-polyglot/indent/bzl.vim	/^    let g:pyindent_open_paren = 'shiftwidth()'$/;"	v
g:python_pep8_indent_hang_closing	plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_hang_closing	plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:qf_disable_statusline	plugged/lightline.vim/plugin/lightline.vim	/^let g:qf_disable_statusline = 1$/;"	v
g:ragel_default_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let g:ragel_default_subtype = 'c'$/;"	v
g:repeat_count	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_count = a:0 ? a:1 : v:count$/;"	v
g:repeat_reg	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_reg = [a:sequence, a:register]$/;"	v
g:repeat_reg	plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_sequence	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_sequence = a:sequence$/;"	v
g:repeat_tick	plugged/vim-easymotion/autoload/EasyMotion.vim	/^                    let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^        let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = -1$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:rmd_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^    let g:rmd_fenced_languages = deepcopy(g:markdown_fenced_languages)$/;"	v
g:rmd_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^  let g:rmd_fenced_languages = ['r']$/;"	v
g:rmd_syn_hl_chunk	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_chunk = get(g:, 'rmd_syn_hl_chunk', 0)$/;"	v
g:rmd_syn_hl_citations	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_citations = get(g:, 'rmd_syn_hl_citations', 1)$/;"	v
g:rmd_syn_hl_yaml	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_yaml = get(g:, 'rmd_syn_hl_yaml', 1)$/;"	v
g:rst_fold_enabled	plugged/vim-polyglot/ftplugin/rst.vim	/^  let g:rst_fold_enabled = 0$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^        let g:rst_syntax_code_list[s:elem] = [s:elem]$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {}$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'do'$/;"	v
g:ruby_indent_hanging_elements	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_hanging_elements = 1$/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_completions	plugged/vim-polyglot/autoload/rubycomplete.vim	/^        let g:rubycomplete_completions = []$/;"	v
g:rubycomplete_include_object	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_emit_files	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_emit_files = s:rustfmt_version >= "0.8.2"$/;"	v
g:rustfmt_fail_silently	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_file_lines	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_file_lines = s:rustfmt_help =~# "--file-lines JSON"$/;"	v
g:rustfmt_options	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_options = ""$/;"	v
g:smt2_solver_command	plugged/vim-polyglot/autoload/smt2/solver.vim	/^        let g:smt2_solver_command = "boolector"$/;"	v
g:smt2_solver_command	plugged/vim-polyglot/autoload/smt2/solver.vim	/^        let g:smt2_solver_command = "z3"$/;"	v
g:smt2_solver_version_switch	plugged/vim-polyglot/autoload/smt2/solver.vim	/^    let g:smt2_solver_version_switch = "--version"$/;"	v
g:spec_chglog_format	plugged/vim-polyglot/ftplugin/spec.vim	/^				let g:spec_chglog_format = "%a %b %d %Y " . l:email$/;"	v
g:spec_chglog_format	plugged/vim-polyglot/ftplugin/spec.vim	/^				let g:spec_chglog_format = a:format$/;"	v
g:startify_change_cmd	plugged/vim-startify/autoload/startify.vim	/^    let g:startify_change_cmd = 'lcd'$/;"	v
g:startify_change_cmd	plugged/vim-startify/autoload/startify.vim	/^  let g:startify_change_cmd = get(g:, 'startify_change_cmd', 'lcd')$/;"	v
g:startify_change_to_dir	sources/50-Signify.vim	/^let g:startify_change_to_dir = 1$/;"	v
g:startify_change_to_vcs_root	sources/50-Signify.vim	/^let g:startify_change_to_vcs_root = 1$/;"	v
g:startify_custom_header	plugged/vim-startify/test/vimrc	/^let g:startify_custom_header = []$/;"	v
g:startify_custom_header	sources/50-Signify.vim	/^let g:startify_custom_header = startify#pad(g:ascii)$/;"	v
g:startify_custom_header_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let g:startify_custom_header_quotes = exists('g:startify_custom_header_quotes')$/;"	v
g:startify_enable_special	plugged/vim-startify/autoload/startify.vim	/^let g:startify_enable_special = get(g:, 'startify_enable_special', 1)$/;"	v
g:startify_files_number	plugged/vim-startify/autoload/startify.vim	/^let g:startify_files_number = get(g:, 'startify_files_number', 10)$/;"	v
g:startify_fortune_use_unicode	plugged/vim-startify/autoload/startify/fortune.vim	/^let g:startify_fortune_use_unicode = &encoding == 'utf-8' && get(g:, 'startify_fortune_use_unico/;"	v
g:startify_fortune_use_unicode	sources/50-Signify.vim	/^let g:startify_fortune_use_unicode = 1$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^    let g:startify_header += ['']  " add blank line$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^  let g:startify_header = exists('g:startify_custom_header')$/;"	v
g:startify_lists	sources/50-Signify.vim	/^let g:startify_lists = [$/;"	v
g:startify_locked	plugged/vim-startify/plugin/startify.vim	/^let g:startify_locked = 0$/;"	v
g:startify_padding_left	plugged/vim-startify/autoload/startify.vim	/^let g:startify_padding_left = get(g:, 'startify_padding_left', 3)$/;"	v
g:startify_padding_left	sources/50-Signify.vim	/^let g:startify_padding_left = winwidth(0)\/2 - 30$/;"	v
g:startify_relative_path	plugged/vim-startify/autoload/startify.vim	/^let g:startify_relative_path = get(g:, 'startify_relative_path') ? ':~:.' : ':p:~'$/;"	v
g:startify_relative_path	plugged/vim-startify/test/vimrc	/^let g:startify_relative_path = 1$/;"	v
g:startify_session_dir	plugged/vim-startify/test/vimrc	/^let g:startify_session_dir = 'session'$/;"	v
g:startify_session_dir	sources/50-Signify.vim	/^let g:startify_session_dir = '~\/.vim\/session'$/;"	v
g:startify_session_persistence	sources/50-Signify.vim	/^let g:startify_session_persistence = 1$/;"	v
g:startify_skiplist	plugged/vim-startify/autoload/startify.vim	/^let g:startify_skiplist = extend(get(g:, 'startify_skiplist', []), [$/;"	v
g:startify_transformations	plugged/vim-startify/autoload/startify.vim	/^let g:startify_transformations = get(g:, 'startify_transformations', [])$/;"	v
g:startify_update_oldfiles	sources/50-Signify.vim	/^let g:startify_update_oldfiles = 1$/;"	v
g:surround_no_mappings	vimrc	/^let g:surround_no_mappings= 1$/;"	v
g:syntastic_	plugged/syntastic/autoload/syntastic/log.vim	/^                let g:syntastic_{a:new} = NEW_VAR$/;"	v
g:syntastic_	plugged/syntastic/autoload/syntastic/log.vim	/^            let g:syntastic_{a:new} = g:syntastic_{a:old}$/;"	v
g:syntastic_	plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_	plugged/syntastic/plugin/syntastic/checker.vim	/^            let g:syntastic_{newObj._filetype}_{newObj._name}_sort = g:syntastic_{filetype}_{nam/;"	v
g:syntastic_	plugged/syntastic/plugin/syntastic/checker.vim	/^        let g:syntastic_{self._filetype}_{self._name}_sort = a:val$/;"	v
g:syntastic_	plugged/syntastic/plugin/syntastic/registry.vim	/^        let g:syntastic_{a:filetype}_checkers = [g:syntastic_{a:filetype}_checker]$/;"	v
g:syntastic_ada_compiler	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^        let g:syntastic_ada_compiler = self.getExec()$/;"	v
g:syntastic_ada_compiler_options	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_apiblueprint_drafter_sort	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^    let g:syntastic_apiblueprint_drafter_sort = 1$/;"	v
g:syntastic_asm_compiler	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^        let g:syntastic_asm_compiler = self.getExec()$/;"	v
g:syntastic_asm_compiler_options	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_asm_generic	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_generic = 0$/;"	v
g:syntastic_c_checkpatch_exec	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^            let g:syntastic_c_checkpatch_exec = 'checkpatch'$/;"	v
g:syntastic_c_checkpatch_exec	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^            let g:syntastic_c_checkpatch_exec = fnamemodify('.\/scripts\/checkpatch', ':p')$/;"	v
g:syntastic_c_checkpatch_exec	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^            let g:syntastic_c_checkpatch_exec = fnamemodify('.\/scripts\/checkpatch.pl', ':p')$/;"	v
g:syntastic_c_clang_check_sort	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler	plugged/syntastic/syntax_checkers/c/gcc.vim	/^        let g:syntastic_c_compiler = executable(self.getExec()) ? self.getExec() : 'clang'$/;"	v
g:syntastic_c_compiler_options	plugged/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_flawfinder_sort	plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^    let g:syntastic_c_flawfinder_sort = 1$/;"	v
g:syntastic_c_flawfinder_thres	plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^    let g:syntastic_c_flawfinder_thres = 3$/;"	v
g:syntastic_c_oclint_sort	plugged/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_cobol_compiler	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^        let g:syntastic_cobol_compiler = self.getExec()$/;"	v
g:syntastic_cobol_compiler_options	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^        let g:syntastic_cpp_compiler = executable(self.getExec()) ? self.getExec() : 'clang++'$/;"	v
g:syntastic_cpp_compiler_options	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cpp_flawfinder_thres	plugged/syntastic/syntax_checkers/cpp/flawfinder.vim	/^    let g:syntastic_cpp_flawfinder_thres = 3$/;"	v
g:syntastic_css_prettycss_sort	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler	plugged/syntastic/syntax_checkers/d/dmd.vim	/^        let g:syntastic_d_compiler = self.getExec()$/;"	v
g:syntastic_d_compiler_options	plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_d_dub_exec	plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_dub_exec = 'dub'$/;"	v
g:syntastic_d_include_dirs	plugged/syntastic/syntax_checkers/d/dmd.vim	/^        let g:syntastic_d_include_dirs = s:GetIncludes(self, fnamemodify(bufname(buf), ':p:h'))$/;"	v
g:syntastic_d_use_dub	plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_use_dub = 1$/;"	v
g:syntastic_enable_balloons	plugged/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_eruby_ruby_exec	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^        let g:syntastic_eruby_ruby_exec = g:syntastic_ruby_exec$/;"	v
g:syntastic_fortran_compiler	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^        let g:syntastic_fortran_compiler = self.getExec()$/;"	v
g:syntastic_fortran_compiler_options	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_fortran_gfortran_sort	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^            let g:syntastic_fortran_gfortran_sort = 0$/;"	v
g:syntastic_fortran_gfortran_sort	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^            let g:syntastic_fortran_gfortran_sort = 1$/;"	v
g:syntastic_haskell_hdevtools_args	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^        let g:syntastic_haskell_hdevtools_args = g:hdevtools_options$/;"	v
g:syntastic_haskell_scan_sort	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_java_checkstyle_classpath	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = path$/;"	v
g:syntastic_java_javac_config_file	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_exec	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_exec = g:syntastic_java_javac_executable$/;"	v
g:syntastic_java_javac_executable	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^            let g:syntastic_java_javac_maven_pom_classpath[pom] = mvn_classpath$/;"	v
g:syntastic_java_javac_maven_pom_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	plugged/syntastic/syntax_checkers/java/javac.vim	/^            let g:syntastic_java_javac_maven_pom_ftime[pom] = getftime(pom)$/;"	v
g:syntastic_java_javac_maven_pom_ftime	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	plugged/syntastic/syntax_checkers/java/javac.vim	/^            let g:syntastic_java_javac_maven_pom_properties[pom] = mvn_properties$/;"	v
g:syntastic_java_javac_maven_pom_properties	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_eslint_generic	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_generic = 0$/;"	v
g:syntastic_javascript_eslint_sort	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_javascript_standard_generic	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^    let g:syntastic_javascript_standard_generic = 0$/;"	v
g:syntastic_less_use_less_lint	plugged/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_mode_map	plugged/syntastic/plugin/syntastic/modemap.vim	/^        let g:syntastic_mode_map = {}$/;"	v
g:syntastic_mode_map	plugged/syntastic/plugin/syntastic/modemap.vim	/^    let g:syntastic_mode_map['mode'] = self._mode$/;"	v
g:syntastic_nim_checkers	plugged/vim-polyglot/compiler/nim.vim	/^let g:syntastic_nim_checkers = ['nim']$/;"	v
g:syntastic_objc_compiler	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^        let g:syntastic_objc_compiler = executable(self.getExec()) ? self.getExec() : 'clang'$/;"	v
g:syntastic_objc_compiler_options	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^        let g:syntastic_objcpp_compiler = executable(self.getExec()) ? self.getExec() : 'clang'$/;"	v
g:syntastic_objcpp_compiler_options	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_janestreet_core_dir	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_janestreet_core_dir = '.'$/;"	v
g:syntastic_ocaml_use_janestreet_core	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_perl_lib_path	plugged/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perl_exec	plugged/syntastic/syntax_checkers/perl/perl.vim	/^        let g:syntastic_perl_perl_exec = g:syntastic_perl_interpreter$/;"	v
g:syntastic_perl_perlcritic_thres	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	plugged/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	plugged/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	plugged/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	plugged/syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_lintr_cache	plugged/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_cache = 'FALSE'$/;"	v
g:syntastic_r_lintr_linters	plugged/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_linters = 'default_linters'$/;"	v
g:syntastic_r_svtools_styles	plugged/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_raku_lib_path	plugged/syntastic/syntax_checkers/raku/raku.vim	/^    let g:syntastic_raku_lib_path = []$/;"	v
g:syntastic_raku_raku_sort	plugged/syntastic/syntax_checkers/raku/raku.vim	/^    let g:syntastic_raku_raku_sort = 1$/;"	v
g:syntastic_ruby_flog_sort	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_sort = 1$/;"	v
g:syntastic_ruby_flog_threshold_error	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_error = 90$/;"	v
g:syntastic_ruby_flog_threshold_warning	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_warning = 45$/;"	v
g:syntastic_ruby_mri_exec	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^        let g:syntastic_ruby_mri_exec = g:syntastic_ruby_exec$/;"	v
g:syntastic_sass_check_partials	plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	plugged/syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sql_tsqllint_sort	plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^    let g:syntastic_sql_tsqllint_sort = 1$/;"	v
g:syntastic_tex_chktex_showmsgs	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_text_proselint_sort	plugged/syntastic/syntax_checkers/text/proselint.vim	/^    let g:syntastic_text_proselint_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verilog_compiler	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^        let g:syntastic_verilog_compiler = self.getExec()$/;"	v
g:syntastic_verilog_compiler_options	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_version	plugged/syntastic/plugin/syntastic.vim	/^let g:syntastic_version =$/;"	v
g:syntastic_vim_vint_sort	plugged/syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:syntastic_yaml_yamlxs_exec	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^        let g:syntastic_yaml_yamlxs_exec = g:syntastic_perl_interpreter$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.kind2scope = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.scope2kind = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.sro = '__'$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet.deffile = puppet#ctags#OptionFile()$/;"	v
g:tagbar_type_rust	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust = {$/;"	v
g:tagbar_type_rust	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/rust.ctags'$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:tagbar_type_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:tagbar_type_typescript	plugged/vim-polyglot/ftplugin/typescript.vim	/^  let g:tagbar_type_typescript.deffile = expand('<sfile>:p:h:h') . '\/ctags\/typescript.ctags'$/;"	v
g:tagbar_type_typescript	plugged/vim-polyglot/ftplugin/typescript.vim	/^let g:tagbar_type_typescript = {$/;"	v
g:terminal_color_0	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_0 = s:bg$/;"	v
g:terminal_color_1	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_1 = s:red$/;"	v
g:terminal_color_10	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_10 = s:green$/;"	v
g:terminal_color_11	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_11 = s:yellow$/;"	v
g:terminal_color_12	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_12 = s:blue$/;"	v
g:terminal_color_13	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_13 = s:violet$/;"	v
g:terminal_color_14	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_14 = s:cyan$/;"	v
g:terminal_color_15	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_15 = s:white$/;"	v
g:terminal_color_2	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_2 = s:green_alt$/;"	v
g:terminal_color_3	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_3 = s:orange$/;"	v
g:terminal_color_4	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_4 = s:dark_blue$/;"	v
g:terminal_color_5	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_5 = s:magenta$/;"	v
g:terminal_color_6	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_6 = s:dark_cyan$/;"	v
g:terminal_color_7	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_7 = s:fg$/;"	v
g:terminal_color_8	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_8 = s:grey$/;"	v
g:terminal_color_9	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_9 = s:orange$/;"	v
g:terminal_color_background	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_background = s:bg$/;"	v
g:terminal_color_foreground	plugged/doom-one.vim/colors/doom-one.vim	/^  let g:terminal_color_foreground = s:fg$/;"	v
g:terraform_binary_path	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:terraform_binary_path='terraform'$/;"	v
g:testname	plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:tex_indent_brace	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_indent_brace = 1$/;"	v
g:tex_indent_items	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_indent_items = 1$/;"	v
g:tex_itemize_env	plugged/vim-polyglot/after/indent/tex.vim	/^        let g:tex_itemize_env = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
g:tex_items	plugged/vim-polyglot/after/indent/tex.vim	/^        let g:tex_items = '\\\\bibitem\\|\\\\item'$/;"	v
g:tex_items	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_items = ''$/;"	v
g:tex_items	plugged/vim-polyglot/after/indent/tex.vim	/^let g:tex_items = '^\\s*' . substitute(g:tex_items, '^\\(\\^\\\\s\\*\\)*', '', '')$/;"	v
g:tex_max_scan_line	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_max_scan_line = 60$/;"	v
g:tex_noindent_env	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_noindent_env = 'document\\|verbatim\\|lstlisting'$/;"	v
g:typescript_compiler_binary	plugged/vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_binary = 'tsc'$/;"	v
g:typescript_compiler_options	plugged/vim-polyglot/compiler/typescript.vim	/^    let g:typescript_compiler_options = ''$/;"	v
g:typescript_compiler_options	plugged/vim-polyglot/compiler/typescript.vim	/^    let g:typescript_compiler_options = g:syntastic_typescript_tsc_args$/;"	v
g:ulti_expand_or_jump_res	vimrc	/^let g:ulti_expand_or_jump_res = 0$/;"	v
g:unimpaired_html_entities	plugged/vim-unimpaired/plugin/unimpaired.vim	/^let g:unimpaired_html_entities = {$/;"	v
g:v_highlight_array_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_array_whitespace_error = 1$/;"	v
g:v_highlight_chan_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_chan_whitespace_error = 1$/;"	v
g:v_highlight_fields	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_fields = 1$/;"	v
g:v_highlight_function_calls	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_function_calls = 1$/;"	v
g:v_highlight_space_tab_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_space_tab_error = 1$/;"	v
g:v_highlight_trailing_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_trailing_whitespace_error = 1$/;"	v
g:vhdl_indent_genportmap	plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vim_json_syntax_conceal	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_conceal = 1$/;"	v
g:vim_json_syntax_concealcursor	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_concealcursor = ""$/;"	v
g:vim_json_warnings	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_warnings = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_global_vars.ext2syntax[ext] = 'media'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_global_vars.ext2syntax[new_ext] = g:vimwiki_global_vars.ext2syntax[ext]$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_global_vars[key] = global_settings[key].default$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_global_vars[key] = users_value$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.all_maps = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.global = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.global = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.headers = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.headers = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.html = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.html = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.links = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.links = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.lists = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.lists = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.mouse = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.mouse = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.table_format = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.table_format = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.table_mappings = 0 && g:vimwiki_global_vars.key_mappi/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.table_mappings = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.table_mappings = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.text_objs = 0$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.key_mappings.text_objs = 1$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.table_mappings = 0 " kept for backwards compatibility$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_global_vars.use_mouse = 0 " kept for backwards compatibility$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars = {}$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.WikiInclTemplate1 = g:vimwiki_global_vars.rxWikiInclPrefix$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.WikiInclTemplate2 = g:vimwiki_global_vars.rxWikiInclPrefix$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.WikiLinkTemplate1 = wikilink_prefix . '__LinkUrl__'. wikilink_suffix$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.WikiLinkTemplate2 = wikilink_prefix . '__LinkUrl__'. wikilink_separa/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.hcolor_ctermfg_dark = ['Red', 'Green', 'Blue', 'White', 'White'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.hcolor_ctermfg_light = ['DarkRed', 'DarkGreen', 'DarkBlue', 'Black'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.hcolor_guifg_dark = ['#e08090', '#80e090', '#6090e0', '#c0c0f0'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.hcolor_guifg_light = ['#aa5858', '#507030', '#1030a0', '#103040'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxSchemes = '\\%('.$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxTodo = '\\C\\<\\%(TODO\\|DONE\\|STARTED\\|FIXME\\|FIXED\\|XXX\\)\\/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWeblinkUrl = rxWebProtocols . '\\S\\{-1,}'. '\\%(([^ \\t()]*)\\)\\/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiIncl = g:vimwiki_global_vars.rxWikiInclPrefix.$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclArg = valid_chars.'\\{-}'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclArgs = '\\%('. g:vimwiki_global_vars.rxWikiInclSeparator.$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclMatchUrl = g:vimwiki_global_vars.rxWikiInclPrefix.$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclPrefix = '{{'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclPrefix1 = g:vimwiki_global_vars.rxWikiInclPrefix.$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclSeparator = '|'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclSuffix = '}}'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclSuffix1 = g:vimwiki_global_vars.rxWikiInclArgs.$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiInclUrl = valid_chars.'\\{-}'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiLinkDescr = valid_chars.'\\{-}'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWikiLinkUrl = valid_chars.'\\{-}'$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rxWord = '[^[:blank:]!"$%&''()*+,:;<=>?\\[\\]\\\\^`{}]*[^[:blank:]!"/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rx_wikilink_prefix = vimwiki#u#escape(wikilink_prefix)$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rx_wikilink_prefix1 = g:vimwiki_global_vars.rx_wikilink_prefix .$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rx_wikilink_separator = vimwiki#u#escape(wikilink_separator)$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rx_wikilink_suffix = vimwiki#u#escape(wikilink_suffix)$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.rx_wikilink_suffix1 = g:vimwiki_global_vars.rx_wikilink_suffix$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.schemes = join(['wiki\\d\\+', 'diary', 'local'], '\\|')$/;"	v
g:vimwiki_global_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_global_vars.web_schemes1 = join(['http', 'https', 'file', 'ftp', 'gopher',$/;"	v
g:vimwiki_list	plugged/vimwiki/test/vimrc	/^let g:vimwiki_list = [vimwiki_default, vimwiki_markdown, vimwiki_mediawiki]$/;"	v
g:vimwiki_list	sources/50-pluginSettings.vim	/^let g:vimwiki_list = [$/;"	v
g:vimwiki_max_scan_for_caption	plugged/vimwiki/autoload/vimwiki/base.vim	/^let g:vimwiki_max_scan_for_caption = 5$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_syntax_variables[a:syntax].rxListNumber .= char_to_rx[type[0]] .$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_syntax_variables[a:syntax]['rxH'.i.'_End'] =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_syntax_variables[a:syntax]['rxH'.i.'_Start'] =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_syntax_variables[a:syntax]['rxH'.i.'_Template'] =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_syntax_variables[a:syntax]['rxH'.i.'_Text'] =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^      let g:vimwiki_syntax_variables[a:syntax]['rxH'.i] =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables = {}$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].number_divisors .= vimwiki#u#escape(i[1])$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].rxHeader =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].rxListBullet = '$^'$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].rxListBullet =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].rxListItemAndChildren =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].rxListNumber .=$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].rxListNumber = '$^'$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^    let g:vimwiki_syntax_variables[a:syntax].rxListNumber = '\\C\\%('$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax] = {}$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].WikiLinkMatchUrlTemplate =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].listsyms_list =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].multiple_bullet_chars =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].number_divisors = ''$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].number_kinds = []$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxAnyLink =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxListItem =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxListItemWithoutCB =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxMathEnd =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxMathStart =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxPreEnd =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxPreStart =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxWeblink =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxWeblinkMatchDescr = ''$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxWeblinkMatchUrl =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxWikiLink = g:vimwiki_global_vars.rx_wikilink_prefix/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxWikiLinkMatchDescr =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rxWikiLinkMatchUrl =$/;"	v
g:vimwiki_syntax_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_syntax_variables[a:syntax].rx_bullet_chars =$/;"	v
g:vimwiki_use_calendar	sources/50-pluginSettings.vim	/^let g:vimwiki_use_calendar = 0$/;"	v
g:vimwiki_wikilocal_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_wikilocal_vars = []$/;"	v
g:vimwiki_wikilocal_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^  let g:vimwiki_wikilocal_vars[a:wiki_nr][a:key] = a:value$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:virtual_scriptnames = {}$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:virtual_scriptnames[temp] = amatch$/;"	v
g:vital_test_Vim_ScriptLocal_absolute_SID	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/absolute.vim	/^let g:vital_test_Vim_ScriptLocal_absolute_SID = s:SID()$/;"	v
g:vital_test_Vim_ScriptLocal_absolute_is_loaded	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/absolute.vim	/^let g:vital_test_Vim_ScriptLocal_absolute_is_loaded = 1$/;"	v
g:vital_test_Vim_ScriptLocal_escape_SID	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/escape%.vim	/^let g:vital_test_Vim_ScriptLocal_escape_SID = s:SID()$/;"	v
g:vital_test_Vim_ScriptLocal_relative_SID	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/relative.vim	/^let g:vital_test_Vim_ScriptLocal_relative_SID = s:SID()$/;"	v
g:vital_test_Vim_ScriptLocal_relative_is_loaded	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/relative.vim	/^let g:vital_test_Vim_ScriptLocal_relative_is_loaded = 1$/;"	v
g:vitalizer#vital_dir	plugged/vital.vim/autoload/vitalizer.vim	/^let g:vitalizer#vital_dir =$/;"	v
g:vue_pre_processors	plugged/vim-polyglot/syntax/vue.vim	/^  let g:vue_pre_processors = []$/;"	v
g:xmldata_aria	plugged/vim-polyglot/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	plugged/vim-polyglot/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:xmldata_xsd	plugged/vim-polyglot/autoload/xml/xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xxdprogram	plugged/vim-polyglot/extras/menu.vim	/^	let g:xxdprogram = '"' .. g:xxdprogram .. '"'$/;"	v
g:xxdprogram	plugged/vim-polyglot/extras/menu.vim	/^      let g:xxdprogram = "xxd"$/;"	v
g:xxdprogram	plugged/vim-polyglot/extras/menu.vim	/^      let g:xxdprogram = $VIMRUNTIME . (&shellslash ? '\/' : '\\') . "xxd.exe"$/;"	v
g:yankassassin_use_mappings	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^let g:yankassassin_use_mappings = exists("g:yankassassin_use_mappings") ? g:yankassassin_use_map/;"	v
g:yankassassin_use_mappings	sources/50-pluginSettings.vim	/^let g:yankassassin_use_mappings = 1$/;"	v
g:zig_std_dir	plugged/vim-polyglot/ftplugin/zig.vim	/^        let g:zig_std_dir = json_decode(s:env)['std_dir']$/;"	v
g<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
g<C-h>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g<C-h> <C-v>$/;"	m
g<Down>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g<Down> <Down>$/;"	m
g<End>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g<End> \$$/;"	m
g<Home>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g<Home> 0$/;"	m
g<Left>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g<Left> <Left>$/;"	m
g<Right>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g<Right> <Right>$/;"	m
g<Up>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g<Up> <Up>$/;"	m
gE	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gE b$/;"	m
gH	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gH V$/;"	m
gO	plugged/vim-polyglot/ftplugin/help.vim	/^  nnoremap <silent><buffer> gO :call <sid>show_toc()<cr>$/;"	m
gS	plugged/vim-surround/plugin/surround.vim	/^  xmap gS  <Plug>VgSurround$/;"	m
g^	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g^ ^$/;"	m
g_	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> g_ \$$/;"	m
gather_candidates	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-commentary/plugin/commentary.vim	/^  xmap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gc  <Plug>(crystal-show-context)$/;"	m
gcc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gd  <Plug>(crystal-jump-to-definition)$/;"	m
gdb_minlines	plugged/vim-polyglot/syntax/gdb.vim	/^  let gdb_minlines = 10$/;"	v
ge	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ge b$/;"	m
ge	vimrc	/^map ge <Plug>(easymotion-bd-el)$/;"	m
generate_fallback	plugged/vim-polyglot/scripts/build	/^def generate_fallback$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_ftdetect	plugged/vim-polyglot/scripts/build	/^def generate_ftdetect(packages, heuristics)$/;"	f	method:copy_file.rules_to_code.rule_to_code
generate_packages_entries	plugged/vim-polyglot/scripts/import_vim	/^def generate_packages_entries(filetypes, comments)$/;"	f
generate_plugins	plugged/vim-polyglot/scripts/build	/^def generate_plugins(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_tests	plugged/vim-polyglot/scripts/build	/^def generate_tests(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_tests	plugged/vim-polyglot/scripts/import_vim	/^def generate_tests(autocommands)$/;"	f
getBytes	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytes() []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getBytesInternal	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytesInternal(buffer []byte, nonblock bool) []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getEnv	plugged/fzf/src/tui/light.go	/^func getEnv(name string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
getVers	plugged/vimwiki/test/run_tests.sh	/^getVers() {$/;"	f
get_buffer_data	plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_clear_priority	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_comments	plugged/vim-polyglot/scripts/import_vim	/^def get_comments$/;"	f
get_cursor_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_cursor_pos():$/;"	f
get_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_dot_vim	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_dot_vim():$/;"	f
get_host_port	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def get_host_port(host=None, port=None):$/;"	m	class:RemotePDB
get_mark_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_mark_pos(name):$/;"	f
get_matching_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def get_matching_snippets($/;"	m	class:SnippetDictionary
get_paths	plugged/vim-visual-multi/test/test.py	/^def get_paths(test, f):$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src", _Appname, "apps" | Tail], _Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_snippets($/;"	m	class:SnippetSource
get_tabstops	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
get_test_description	plugged/vim-visual-multi/test/test.py	/^def get_test_description(test):$/;"	f
get_test_info	plugged/vim-visual-multi/test/test.py	/^def get_test_info(test, nvim, vimrc):$/;"	f
get_vimrc	plugged/vim-visual-multi/test/test.py	/^def get_vimrc(test, f):$/;"	f
getch	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
getch	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
gf	vimrc	/^nmap gf :edit <cfile><CR>$/;"	m
gg	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gg <Plug>(calendar_first_line)$/;"	m
gh	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gh h$/;"	m
gh	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gh v$/;"	m
git-messenger.vim	plugged/git-messenger.vim/README.md	/^git-messenger.vim$/;"	c
gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#buffer_disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_disable(...) abort$/;"	f
gitgutter#buffer_enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_enable(...) abort$/;"	f
gitgutter#buffer_toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_toggle(...) abort$/;"	f
gitgutter#debug#debug	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff, ...)$/;"	f
gitgutter#diff#parse_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort$/;"	f
gitgutter#diff_highlight#common_prefix	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_prefix(a, b)$/;"	f
gitgutter#diff_highlight#common_suffix	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_suffix(a, b, start)$/;"	f
gitgutter#diff_highlight#lcs	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#lcs(s1, s2)$/;"	f
gitgutter#diff_highlight#process	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! gitgutter#diff_highlight#process(hunk_body)$/;"	f
gitgutter#diff_highlight#split	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#split(str, delimiter)$/;"	f
gitgutter#disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#fold#disable	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#disable()$/;"	f
gitgutter#fold#enable	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#enable()$/;"	f
gitgutter#fold#foldtext	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#foldtext()$/;"	f
gitgutter#fold#is_changed	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#is_changed()$/;"	f
gitgutter#fold#level	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#level(lnum)$/;"	f
gitgutter#fold#toggle	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#toggle()$/;"	f
gitgutter#highlight#define_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#highlight#linenr_disable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_disable() abort$/;"	f
gitgutter#highlight#linenr_enable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_enable() abort$/;"	f
gitgutter#highlight#linenr_toggle	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_toggle() abort$/;"	f
gitgutter#hunk#close_hunk_preview_window	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#close_hunk_preview_window()$/;"	f
gitgutter#hunk#cursor_in_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#in_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#in_hunk(lnum)$/;"	f
gitgutter#hunk#increment_lines_added	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#is_preview_window_open	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function gitgutter#hunk#is_preview_window_open()$/;"	f
gitgutter#hunk#next_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage(...) abort$/;"	f
gitgutter#hunk#summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#process_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#quickfix	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#quickfix(current_file)$/;"	f
gitgutter#setup_maps	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#setup_maps()$/;"	f
gitgutter#sign#clear_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#reset	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#get_diff_base	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#get_diff_base(bufnr)$/;"	f
gitgutter#utility#getbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#has_repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_repo_path(bufnr)$/;"	f
gitgutter#utility#is_active	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr, continuation) abort$/;"	f
gitgutter#utility#setbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
gitgutter_hunk_preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  augroup gitgutter_hunk_preview$/;"	a
gitmessenger#blame#new	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! gitmessenger#blame#new(file, line, opts) abort$/;"	f
gitmessenger#close_popup	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#close_popup(bufnr) abort$/;"	f
gitmessenger#git#new	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! gitmessenger#git#new(cmd, dir) abort$/;"	f
gitmessenger#git#root_dir	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! gitmessenger#git#root_dir(from) abort$/;"	f
gitmessenger#history#new	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! gitmessenger#history#new(filepath) abort$/;"	f
gitmessenger#into_popup	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#into_popup(bufnr) abort$/;"	f
gitmessenger#new	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#new(file, line, bufnr, ...) abort$/;"	f
gitmessenger#popup#close_current_popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! gitmessenger#popup#close_current_popup() abort$/;"	f
gitmessenger#popup#new	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! gitmessenger#popup#new(contents, opts) abort$/;"	f
gitmessenger#scroll	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#scroll(bufnr, map) abort$/;"	f
give	plugged/fzf/src/terminal_test.go	/^	give$/;"	M	struct:fzf.testCase	typeref:typename:give
give	plugged/fzf/src/terminal_test.go	/^type give struct {$/;"	s	package:fzf
gj	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gj j$/;"	m
gk	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gk k$/;"	m
gl	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gl l$/;"	m
gleam	plugged/vim-polyglot/ftplugin/gleam.vim	/^augroup gleam.vim$/;"	a
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
global_states_and_properties	plugged/vim-polyglot/autoload/xml/aria.vim	/^let global_states_and_properties = {$/;"	v
gm	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> gm <Plug>(calendar_line_middle)$/;"	m
go	plugged/fzf/test/test_go.rb	/^  def go(args)$/;"	f	class:Tmux
go#config#AddtagsSkipUnexported	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsSkipUnexported() abort$/;"	f
go#config#AddtagsTransform	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsTransform() abort$/;"	f
go#config#AlternateMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AlternateMode() abort$/;"	f
go#config#AsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AsmfmtAutosave() abort$/;"	f
go#config#AutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoSameids() abort$/;"	f
go#config#AutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoTypeInfo() abort$/;"	f
go#config#BinPath	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BinPath() abort$/;"	f
go#config#BuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BuildTags() abort$/;"	f
go#config#CodeCompletionEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionEnabled() abort$/;"	f
go#config#CodeCompletionIcase	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionIcase() abort$/;"	f
go#config#Debug	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Debug() abort$/;"	f
go#config#DebugAddress	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugAddress() abort$/;"	f
go#config#DebugBreakpointSignText	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugBreakpointSignText() abort$/;"	f
go#config#DebugCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugCommands() abort$/;"	f
go#config#DebugLogOutput	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugLogOutput() abort$/;"	f
go#config#DebugMappings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugMappings() abort$/;"	f
go#config#DebugPreserveLayout	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugPreserveLayout() abort$/;"	f
go#config#DebugSubstitutePaths	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugSubstitutePaths() abort$/;"	f
go#config#DebugWindows	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugWindows() abort$/;"	f
go#config#DeclsIncludes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsIncludes() abort$/;"	f
go#config#DeclsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsMode() abort$/;"	f
go#config#DefMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefMode() abort$/;"	f
go#config#DefReuseBuffer	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefReuseBuffer() abort$/;"	f
go#config#DiagnosticsEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsEnabled() abort$/;"	f
go#config#DiagnosticsLevel	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsLevel() abort$/;"	f
go#config#DocBalloon	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocBalloon() abort$/;"	f
go#config#DocMaxHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocMaxHeight() abort$/;"	f
go#config#DocPopupWindow	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocPopupWindow() abort$/;"	f
go#config#DocUrl	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocUrl() abort$/;"	f
go#config#EchoCommandInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoCommandInfo() abort$/;"	f
go#config#EchoGoInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoGoInfo() abort$/;"	f
go#config#ErrcheckBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ErrcheckBin() abort$/;"	f
go#config#FillStructMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FillStructMode() abort$/;"	f
go#config#FmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtAutosave() abort$/;"	f
go#config#FmtCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtCommand() abort$/;"	f
go#config#FmtExperimental	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtExperimental() abort$/;"	f
go#config#FmtFailSilently	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtFailSilently() abort$/;"	f
go#config#FmtOptions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtOptions() abort$/;"	f
go#config#FoldEnable	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FoldEnable(...) abort$/;"	f
go#config#GolintBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GolintBin() abort$/;"	f
go#config#GoplsAnalyses	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsAnalyses() abort$/;"	f
go#config#GoplsCompleteUnimported	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsCompleteUnimported() abort$/;"	f
go#config#GoplsDeepCompletion	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsDeepCompletion() abort$/;"	f
go#config#GoplsEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsEnabled() abort$/;"	f
go#config#GoplsGofumpt	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsGofumpt() abort$/;"	f
go#config#GoplsLocal	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsLocal() abort$/;"	f
go#config#GoplsMatcher	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsMatcher() abort$/;"	f
go#config#GoplsOptions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsOptions() abort$/;"	f
go#config#GoplsSettings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsSettings() abort$/;"	f
go#config#GoplsStaticCheck	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsStaticCheck() abort$/;"	f
go#config#GoplsTempModfile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsTempModfile() abort$/;"	f
go#config#GoplsUsePlaceholders	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsUsePlaceholders() abort$/;"	f
go#config#GorenameBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenameBin() abort$/;"	f
go#config#GorenamePrefill	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenamePrefill() abort$/;"	f
go#config#GuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GuruScope() abort$/;"	f
go#config#HighlightArrayWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightArrayWhitespaceError() abort$/;"	f
go#config#HighlightBuildConstraints	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightBuildConstraints() abort$/;"	f
go#config#HighlightChanWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightChanWhitespaceError() abort$/;"	f
go#config#HighlightDebug	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDebug() abort$/;"	f
go#config#HighlightDiagnosticErrors	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticErrors() abort$/;"	f
go#config#HighlightDiagnosticWarnings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticWarnings() abort$/;"	f
go#config#HighlightExtraTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightExtraTypes() abort$/;"	f
go#config#HighlightFields	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFields() abort$/;"	f
go#config#HighlightFormatStrings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFormatStrings() abort$/;"	f
go#config#HighlightFunctionCalls	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionCalls() abort$/;"	f
go#config#HighlightFunctionParameters	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionParameters() abort$/;"	f
go#config#HighlightFunctions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctions() abort$/;"	f
go#config#HighlightGenerateTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightGenerateTags() abort$/;"	f
go#config#HighlightOperators	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightOperators() abort$/;"	f
go#config#HighlightSpaceTabError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightSpaceTabError() abort$/;"	f
go#config#HighlightStringSpellcheck	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightStringSpellcheck() abort$/;"	f
go#config#HighlightTrailingWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTrailingWhitespaceError() abort$/;"	f
go#config#HighlightTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTypes() abort$/;"	f
go#config#HighlightVariableAssignments	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableAssignments() abort$/;"	f
go#config#HighlightVariableDeclarations	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableDeclarations() abort$/;"	f
go#config#ImplementsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImplementsMode() abort$/;"	f
go#config#ImportsAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsAutosave() abort$/;"	f
go#config#ImportsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsMode() abort$/;"	f
go#config#InfoMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#InfoMode() abort$/;"	f
go#config#ListAutoclose	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListAutoclose() abort$/;"	f
go#config#ListHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListHeight() abort$/;"	f
go#config#ListType	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListType() abort$/;"	f
go#config#ListTypeCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListTypeCommands() abort$/;"	f
go#config#LspLog	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#LspLog() abort$/;"	f
go#config#MetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosave() abort$/;"	f
go#config#MetalinterAutosaveEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosaveEnabled() abort$/;"	f
go#config#MetalinterCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterCommand() abort$/;"	f
go#config#MetalinterDeadline	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterDeadline() abort$/;"	f
go#config#MetalinterEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterEnabled() abort$/;"	f
go#config#ModFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ModFmtAutosave() abort$/;"	f
go#config#PlayBrowserCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayBrowserCommand() abort$/;"	f
go#config#PlayOpenBrowser	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayOpenBrowser() abort$/;"	f
go#config#ReferrersMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ReferrersMode() abort$/;"	f
go#config#RenameCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#RenameCommand() abort$/;"	f
go#config#SearchBinPathFirst	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SearchBinPathFirst() abort$/;"	f
go#config#SetAsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAsmfmtAutosave(value) abort$/;"	f
go#config#SetAutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoSameids(value) abort$/;"	f
go#config#SetAutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoTypeInfo(value) abort$/;"	f
go#config#SetBuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetBuildTags(value) abort$/;"	f
go#config#SetDebugDiag	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetDebugDiag(value) abort$/;"	f
go#config#SetFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetFmtAutosave(value) abort$/;"	f
go#config#SetGuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetGuruScope(scope) abort$/;"	f
go#config#SetMetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetMetalinterAutosave(value) abort$/;"	f
go#config#SetModFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetModFmtAutosave(value) abort$/;"	f
go#config#SetTemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTemplateAutocreate(value) abort$/;"	f
go#config#SetTermCloseOnExit	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermCloseOnExit(value) abort$/;"	f
go#config#SetTermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermEnabled(value) abort$/;"	f
go#config#SnippetEngine	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SnippetEngine() abort$/;"	f
go#config#StatuslineDuration	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#StatuslineDuration() abort$/;"	f
go#config#TemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateAutocreate() abort$/;"	f
go#config#TemplateFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateFile() abort$/;"	f
go#config#TemplateTestFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateTestFile() abort$/;"	f
go#config#TemplateUsePkg	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateUsePkg() abort$/;"	f
go#config#TermCloseOnExit	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermCloseOnExit() abort$/;"	f
go#config#TermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermEnabled() abort$/;"	f
go#config#TermHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermHeight() abort$/;"	f
go#config#TermMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermMode() abort$/;"	f
go#config#TermReuse	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermReuse() abort$/;"	f
go#config#TermWidth	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermWidth() abort$/;"	f
go#config#TestShowName	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestShowName() abort$/;"	f
go#config#TestTimeout	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestTimeout() abort$/;"	f
go#config#TextobjIncludeFunctionDoc	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeFunctionDoc() abort$/;"	f
go#config#TextobjIncludeVariable	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeVariable() abort$/;"	f
go#config#Updatetime	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Updatetime() abort$/;"	f
go#config#VersionWarning	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#VersionWarning() abort$/;"	f
graphic_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let graphic_role = [$/;"	v
graphql#has_syntax_group	plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#has_syntax_group(group) abort$/;"	f
graphql#javascript_tags	plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#javascript_tags() abort$/;"	f
groovy_minlines	plugged/vim-polyglot/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
gs.	vimrc	/^map gs. <Plug>(easymotion-repeat)$/;"	m
gs<Space>	vimrc	/^nmap <silent><expr> gs<Space> incsearch#go(<SID>config_easyfuzzymotion())$/;"	m
gsE	vimrc	/^map gsE <Plug>(easymotion-bd-E)$/;"	m
gsJ	vimrc	/^map gsJ <Plug>(easymotion-sol-j)$/;"	m
gsK	vimrc	/^map gsK <Plug>(easymotion-sol-k)$/;"	m
gsW	vimrc	/^map gsW <Plug>(easymotion-bd-W)$/;"	m
gsa	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsa <Plug>(crystal-spec-run-all)$/;"	m
gsb	vimrc	/^nmap gsb <Plug>(easymotion-overwin-f2)$/;"	m
gsc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsc <Plug>(crystal-spec-run-current)$/;"	m
gse	vimrc	/^map gse <Plug>(easymotion-iskeyword-bd-e)$/;"	m
gsf	vimrc	/^map gsf <Plug>(easymotion-bd-f)$/;"	m
gsj	vimrc	/^map gsj <Plug>(easymotion-j)$/;"	m
gsk	vimrc	/^map gsk <Plug>(easymotion-k)$/;"	m
gsl	vimrc	/^nmap gsl <Plug>(easymotion-overwin-line)$/;"	m
gsn	vimrc	/^map gsn <Plug>(easymotion-bd-n)$/;"	m
gss	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gss <Plug>(crystal-spec-switch)$/;"	m
gss	vimrc	/^map gss <Plug>(easymotion-s2)$/;"	m
gst	vimrc	/^map gst <Plug>(easymotion-bd-t)$/;"	m
gsw	vimrc	/^map gsw <Plug>(easymotion-iskeyword-bd-w)$/;"	m
guess_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
gw	vimrc	/^map gw <Plug>(easymotion-bd-wl)$/;"	m
gz#	vimrc	/^map gz# <Plug>(incsearch-nohl0)<Plug>(asterisk-gz#)$/;"	m
gz*	vimrc	/^map gz* <Plug>(incsearch-nohl0)<Plug>(asterisk-gz*)$/;"	m
h	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> h <Plug>(calendar_left)$/;"	m
h1	plugged/vimwiki/autoload/vimwiki/style.css	/^h1 {font-size: 2em; color: #000000;}$/;"	s
h1	plugged/vimwiki/autoload/vimwiki/style.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h2	plugged/vimwiki/autoload/vimwiki/style.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h2	plugged/vimwiki/autoload/vimwiki/style.css	/^h2 {font-size: 1.8em; color: #404040;}$/;"	s
h3	plugged/vimwiki/autoload/vimwiki/style.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h3	plugged/vimwiki/autoload/vimwiki/style.css	/^h3 {font-size: 1.6em; color: #707070;}$/;"	s
h4	plugged/vimwiki/autoload/vimwiki/style.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h4	plugged/vimwiki/autoload/vimwiki/style.css	/^h4 {font-size: 1.4em; color: #909090;}$/;"	s
h5	plugged/vimwiki/autoload/vimwiki/style.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h5	plugged/vimwiki/autoload/vimwiki/style.css	/^h5 {font-size: 1.2em; color: #989898;}$/;"	s
h6	plugged/vimwiki/autoload/vimwiki/style.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h6	plugged/vimwiki/autoload/vimwiki/style.css	/^h6 {font-size: 1em; color: #9c9c9c;}$/;"	s
handle_action	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_context	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_context(tail, line_index):$/;"	f
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_extends(tail, line_index):$/;"	f
hasPreviewAction	plugged/fzf/src/terminal.go	/^func hasPreviewAction(opts *Options) bool {$/;"	f	package:fzf	typeref:typename:bool
hasPreviewFlags	plugged/fzf/src/terminal.go	/^func hasPreviewFlags(template string) (slot bool, plus bool, query bool) {$/;"	f	package:fzf	typeref:typename:(slot bool, plus bool, query bool)
hasPreviewWindow	plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
hasPreviewer	plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewer() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
has_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def has_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
has_option	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_version	plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
haxe_minlines	plugged/vim-polyglot/syntax/haxe_extended.vim	/^  let haxe_minlines = 10$/;"	v
hcl#align	plugged/vim-polyglot/autoload/hcl.vim	/^function! hcl#align() abort$/;"	f
head_tail	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
header	plugged/fzf/src/terminal.go	/^	header             []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
header0	plugged/fzf/src/terminal.go	/^	header0            []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
headerFirst	plugged/fzf/src/terminal.go	/^	headerFirst        bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
headerLines	plugged/fzf/src/options.go	/^	headerLines int$/;"	m	struct:fzf.previewOpts	typeref:typename:int
headerLines	plugged/fzf/src/terminal.go	/^	headerLines        int$/;"	m	struct:fzf.Terminal	typeref:typename:int
health#gitmessenger#check	plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! health#gitmessenger#check() abort$/;"	f
height	plugged/fzf/src/tui/light.go	/^	height        int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
height	plugged/fzf/src/tui/light.go	/^	height   int$/;"	m	struct:tui.LightWindow	typeref:typename:int
height	plugged/fzf/src/tui/tcell.go	/^	height      int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
help	plugged/fzf/bin/fzf-tmux	/^help() {$/;"	f
help	plugged/fzf/install	/^help() {$/;"	f
help	plugged/fzf/src/options.go	/^func help(code int) {$/;"	f	package:fzf
help	plugged/fzf/uninstall	/^help() {$/;"	f
hidden	plugged/fzf/src/options.go	/^	hidden      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
highlight_types	plugged/vim-polyglot/syntax/spup.vim	/^    let highlight_types = 1$/;"	v
highlightedyank	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^      augroup highlightedyank-pause-quenching$/;"	a
highlightedyank	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  augroup highlightedyank-highlight$/;"	a
highlightedyank	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  augroup highlightedyank-pause-quenching$/;"	a
highlightedyank	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^    augroup highlightedyank-event-OptionSet$/;"	a
highlightedyank	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  augroup highlightedyank$/;"	a
highlightedyank	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^augroup highlightedyank-event-ColorScheme$/;"	a
highlightedyank#debounce	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#debounce() abort "{{{$/;"	f
highlightedyank#highlight#add	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! highlightedyank#highlight#add(hi_group, start, end, type, duration) abort "{{{$/;"	f
highlightedyank#highlight#delete	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! highlightedyank#highlight#delete() abort "{{{$/;"	f
highlightedyank#highlight#new	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! highlightedyank#highlight#new(hi_group, start, end, type) abort  "{{{$/;"	f
highlightedyank#obsolete#clock#new	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! highlightedyank#obsolete#clock#new() abort  "{{{$/;"	f
highlightedyank#obsolete#highlight#cancel	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! highlightedyank#obsolete#highlight#cancel(...) abort "{{{$/;"	f
highlightedyank#obsolete#highlight#new	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! highlightedyank#obsolete#highlight#new(region) abort  "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#off	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#off() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#on	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#on() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#operatorfunc	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#operatorfunc(motionwise, ...) abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#setoperatorfunc	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#setoperatorfunc() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#toggle	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#toggle() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#yank	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#yank(mode) abort  "{{{$/;"	f
highlightedyank#off	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#off() abort "{{{$/;"	f
highlightedyank#on	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#on() abort "{{{$/;"	f
highlightedyank#toggle	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#toggle() abort "{{{$/;"	f
history	plugged/fzf/src/terminal.go	/^	history            *History$/;"	m	struct:fzf.Terminal	typeref:typename:*History
hjkl motions	plugged/vim-easymotion/README.md	/^### hjkl motions$/;"	S	chapter:New features in version 2.0
hog_minlines	plugged/vim-polyglot/syntax/hog.vim	/^    let hog_minlines = 100$/;"	v
hoge	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^hoge = hoge in bar$/;"	k	section:bar
hoge	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^hoge = hoge in foo$/;"	k	section:foo
hoge	plugged/vital.vim/test/_testdata/Text/INI/invalid.ini	/^hoge = hoge$/;"	k
hoge	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^hoge = hoge in bar$/;"	k	section:bar
hoge	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^hoge = hoge in foo$/;"	k	section:foo
hoge	plugged/vital.vim/test/_testdata/Text/INI/valid.ini	/^hoge = hoge$/;"	k
horizontal	plugged/fzf/src/tui/tui.go	/^	horizontal  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
hr	plugged/vimwiki/autoload/vimwiki/style.css	/^hr {$/;"	s
hscroll	plugged/fzf/src/terminal.go	/^	hscroll            bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
hscrollOff	plugged/fzf/src/terminal.go	/^	hscrollOff         int$/;"	m	struct:fzf.Terminal	typeref:typename:int
html_no_rendering	plugged/vim-polyglot/syntax/spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
htmlcomplete#CheckDoctype	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadAria	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
hw_subversion	plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_subversion = 0$/;"	v
hw_version	plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_version = 9$/;"	v
i	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> i <Plug>(calendar_start_insert)$/;"	m
i	plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
i	plugged/vim-polyglot/syntax/xpm.vim	/^   let i = i + 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm.vim	/^let i      = 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm2.vim	/^    let i = i + 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm2.vim	/^  let i      = 1$/;"	v
i	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> i             :enew <bar> startinsert<cr>$/;"	m
i	plugged/vital.vim/benchmark/database-sqlite.vim	/^  let i = s:S.query($/;"	v
i	plugged/vital.vim/benchmark/database-sqlite.vim	/^let i = 1$/;"	v
iI	plugged/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>iI :<C-u>cal <Sid>HandleTextObjectMapping(1, 1, 0, [line("."), line("."), col("/;"	m
iI	plugged/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>iI :<C-u>cal <Sid>HandleTextObjectMapping(1, 1, 1, [line("'<"), line("'>"), col/;"	m
iM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
iS	plugged/ultisnips/ftplugin/snippets.vim	/^xnoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
ic	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ic <Plug>(GitGutterTextObjectInnerPending)$/;"	m
ic	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ic <Plug>(GitGutterTextObjectInnerVisual)$/;"	m
icon_minlines	plugged/vim-polyglot/syntax/icon.vim	/^  let icon_minlines = 15$/;"	v
idris_response	plugged/vim-polyglot/ftplugin/idris.vim	/^let idris_response = 0$/;"	v
idris_response	plugged/vim-polyglot/ftplugin/idris2.vim	/^let idris_response = 0$/;"	v
ie	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
ie	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  xnoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
ignore	plugged/fzf/src/util/eventbox.go	/^	ignore map[EventType]bool$/;"	m	struct:util.EventBox	typeref:typename:map[EventType]bool
ignore_missing_imports	plugged/ultisnips/mypy.ini	/^ignore_missing_imports = True$/;"	k	section:mypy-unidecode
ignore_missing_imports	plugged/ultisnips/mypy.ini	/^ignore_missing_imports = True$/;"	k	section:mypy-vim
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
ii	plugged/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>ii :<C-u>cal <Sid>HandleTextObjectMapping(1, 0, 0, [line("."), line("."), col("/;"	m
ii	plugged/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>ii :<C-u>cal <Sid>HandleTextObjectMapping(1, 0, 1, [line("'<"), line("'>"), col/;"	m
im	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
im	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
image_repro	plugged/ultisnips/Makefile	/^image_repro: image_vim_82_py39$/;"	t
image_vim_80_py35	plugged/ultisnips/Makefile	/^image_vim_80_py35:$/;"	t
image_vim_80_py36	plugged/ultisnips/Makefile	/^image_vim_80_py36:$/;"	t
image_vim_81_py35	plugged/ultisnips/Makefile	/^image_vim_81_py35:$/;"	t
image_vim_81_py36	plugged/ultisnips/Makefile	/^image_vim_81_py36:$/;"	t
image_vim_81_py37	plugged/ultisnips/Makefile	/^image_vim_81_py37:$/;"	t
image_vim_81_py38	plugged/ultisnips/Makefile	/^image_vim_81_py38:$/;"	t
image_vim_81_py39	plugged/ultisnips/Makefile	/^image_vim_81_py39:$/;"	t
image_vim_82_py35	plugged/ultisnips/Makefile	/^image_vim_82_py35:$/;"	t
image_vim_82_py36	plugged/ultisnips/Makefile	/^image_vim_82_py36:$/;"	t
image_vim_82_py37	plugged/ultisnips/Makefile	/^image_vim_82_py37:$/;"	t
image_vim_82_py38	plugged/ultisnips/Makefile	/^image_vim_82_py38:$/;"	t
image_vim_82_py39	plugged/ultisnips/Makefile	/^image_vim_82_py39:$/;"	t
image_vim_git_py310	plugged/ultisnips/Makefile	/^image_vim_git_py310:$/;"	t
image_vim_git_py35	plugged/ultisnips/Makefile	/^image_vim_git_py35:$/;"	t
image_vim_git_py36	plugged/ultisnips/Makefile	/^image_vim_git_py36:$/;"	t
image_vim_git_py37	plugged/ultisnips/Makefile	/^image_vim_git_py37:$/;"	t
image_vim_git_py38	plugged/ultisnips/Makefile	/^image_vim_git_py38:$/;"	t
image_vim_git_py39	plugged/ultisnips/Makefile	/^image_vim_git_py39:$/;"	t
img	plugged/vimwiki/autoload/vimwiki/style.css	/^img { border: none; }$/;"	s
impls,trait implementations	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?impl([ \\t\\n]*<[^>]*>)?[ \\t]+(([a-zA-Z0-9_:]+)[ \\t]*(<[^>/;"	k	langdef:Rust
import_autocommands	plugged/vim-polyglot/scripts/import_vim	/^def import_autocommands$/;"	f
inBytes	plugged/fzf/src/util/chars.go	/^	inBytes         bool$/;"	m	struct:util.Chars	typeref:typename:bool
inHandle	plugged/fzf/src/tui/light.go	/^	inHandle        uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
include	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*(include|require)[[:space:]]*:{0,2}([a-zA-Z0-9_:]+)\/\\1 ::\\2\/i,/;"	k	langdef:puppet
incremental fuzzymotion	plugged/incsearch-easymotion.vim/README.md	/^#### incremental fuzzymotion$/;"	t	subsection:incsearch-easymotion.vim""Advanced usage
incsearch	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^  augroup incsearch-auto-nohlsearch$/;"	a
incsearch	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^  augroup incsearch-auto-nohlsearch-on-insert-leave$/;"	a
incsearch	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^augroup incsearch-update-visual-highlight$/;"	a
incsearch	plugged/incsearch.vim/test/default_settings.vim	/^  augroup incsearch-themis$/;"	a
incsearch#_go	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#_go(config) abort$/;"	f
incsearch#autocmd#auto_nohlsearch	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! incsearch#autocmd#auto_nohlsearch(nest) abort$/;"	f
incsearch#autocmd#is_set	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! incsearch#autocmd#is_set() abort$/;"	f
incsearch#call	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#call(...) abort$/;"	f
incsearch#cli	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#cli() abort$/;"	f
incsearch#cli#get	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! incsearch#cli#get() abort$/;"	f
incsearch#cli#make	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! incsearch#cli#make(config) abort$/;"	f
incsearch#cli#set	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! incsearch#cli#set(cli, config) abort$/;"	f
incsearch#config#easymotion#make	plugged/incsearch-easymotion.vim/autoload/incsearch/config/easymotion.vim	/^function! incsearch#config#easymotion#make(...) abort$/;"	f
incsearch#config#easymotion#module	plugged/incsearch-easymotion.vim/autoload/incsearch/config/easymotion.vim	/^function! incsearch#config#easymotion#module(...) abort$/;"	f
incsearch#config#fuzzy#converter	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzy.vim	/^function! incsearch#config#fuzzy#converter() abort$/;"	f
incsearch#config#fuzzy#make	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzy.vim	/^function! incsearch#config#fuzzy#make(...) abort$/;"	f
incsearch#config#fuzzyspell#converter	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyspell.vim	/^function! incsearch#config#fuzzyspell#converter() abort$/;"	f
incsearch#config#fuzzyspell#make	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyspell.vim	/^function! incsearch#config#fuzzyspell#make(...) abort$/;"	f
incsearch#config#fuzzyword#converter	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyword.vim	/^function! incsearch#config#fuzzyword#converter() abort$/;"	f
incsearch#config#fuzzyword#make	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyword.vim	/^function! incsearch#config#fuzzyword#make(...) abort$/;"	f
incsearch#config#make	plugged/incsearch.vim/autoload/incsearch/config.vim	/^function! incsearch#config#make(additional) abort$/;"	f
incsearch#detect_case	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#detect_case(pattern) abort$/;"	f
incsearch#execute_search	plugged/incsearch.vim/autoload/incsearch.vim	/^  function! incsearch#execute_search(...) abort$/;"	f
incsearch#go	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#go(...) abort$/;"	f
incsearch#highlight#backward_pattern	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#backward_pattern(pattern, from_pos) abort$/;"	f
incsearch#highlight#capture	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#capture(hlname) abort$/;"	f
incsearch#highlight#emulate_visual_highlight	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#emulate_visual_highlight(...) abort$/;"	f
incsearch#highlight#forward_pattern	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#forward_pattern(pattern, from_pos) abort$/;"	f
incsearch#highlight#get_visual_hlobj	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#get_visual_hlobj() abort$/;"	f
incsearch#highlight#get_visual_pattern	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#get_visual_pattern(mode, v_start_pos, v_end_pos) abort$/;"	f
incsearch#highlight#hgm	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#hgm() abort " highlight group management$/;"	f
incsearch#highlight#incremental_highlight	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#incremental_highlight(pattern, ...) abort$/;"	f
incsearch#highlight#off	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#off() abort$/;"	f
incsearch#highlight#on	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#on() abort$/;"	f
incsearch#highlight#turn_off	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#turn_off(hldict) abort$/;"	f
incsearch#highlight#turn_on	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#turn_on(hldict) abort$/;"	f
incsearch#highlight#update	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#update() abort$/;"	f
incsearch#magic	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#magic() abort$/;"	f
incsearch#make	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#make(...) abort$/;"	f
incsearch#over#extend#enrich	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! incsearch#over#extend#enrich(cli) abort$/;"	f
incsearch#over#modules#EasyMotion#make	plugged/incsearch-easymotion.vim/autoload/incsearch/over/modules/EasyMotion.vim	/^function! incsearch#over#modules#EasyMotion#make(...) abort$/;"	f
incsearch#over#modules#bracketed_paste#make	plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^function! incsearch#over#modules#bracketed_paste#make() abort$/;"	f
incsearch#over#modules#bulk_input_char#make	plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^function! incsearch#over#modules#bulk_input_char#make() abort$/;"	f
incsearch#over#modules#exit#make	plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^function! incsearch#over#modules#exit#make() abort$/;"	f
incsearch#over#modules#incsearch#make	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! incsearch#over#modules#incsearch#make() abort$/;"	f
incsearch#over#modules#insert_register#make	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^function! incsearch#over#modules#insert_register#make() abort$/;"	f
incsearch#over#modules#module_management#make	plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^function! incsearch#over#modules#module_management#make(modules) abort$/;"	f
incsearch#over#modules#pattern_saver#make	plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^function! incsearch#over#modules#pattern_saver#make() abort$/;"	f
incsearch#parse_pattern	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#parse_pattern(expr, search_key) abort$/;"	f
incsearch#util#deepextend	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! incsearch#util#deepextend(...) abort$/;"	f
incsearch#util#import	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! incsearch#util#import() abort$/;"	f
incsearch#with_ignore_foldopen	plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#with_ignore_foldopen(F, ...) abort$/;"	f
incsearch-easymotion.vim	plugged/incsearch-easymotion.vim/README.md	/^incsearch-easymotion.vim$/;"	c
incsearch-fuzzy.vim	plugged/incsearch-fuzzy.vim/README.md	/^incsearch-fuzzy.vim$/;"	c
indent	plugged/vim-polyglot/scripts/build	/^def indent(str, amount)$/;"	f	method:copy_file
indent_to_spaces	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
index	plugged/fzf/src/matcher.go	/^	index   int$/;"	m	struct:fzf.partialResult	typeref:typename:int
indexAt	plugged/fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f	package:algo	typeref:typename:int
infoDefault	plugged/fzf/src/options.go	/^	infoDefault infoStyle = iota$/;"	c	package:fzf	typeref:type:infoStyle
infoHidden	plugged/fzf/src/options.go	/^	infoHidden$/;"	c	package:fzf
infoInline	plugged/fzf/src/options.go	/^	infoInline$/;"	c	package:fzf
infoStyle	plugged/fzf/src/options.go	/^type infoStyle int$/;"	t	package:fzf	typeref:typename:int
infoStyle	plugged/fzf/src/terminal.go	/^	infoStyle          infoStyle$/;"	m	struct:fzf.Terminal	typeref:typename:infoStyle
init	plugged/fzf/src/constants.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/options.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/pattern.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/pattern_test.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/terminal.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/tui/tui.go	/^func init() {$/;"	f	package:tui
initDelay	plugged/fzf/src/terminal.go	/^	initDelay          time.Duration$/;"	m	struct:fzf.Terminal	typeref:typename:time.Duration
initFunc	plugged/fzf/src/terminal.go	/^	initFunc           func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
initPalette	plugged/fzf/src/tui/tui.go	/^func initPalette(theme *ColorTheme) {$/;"	f	package:tui
initPlatform	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initPlatform	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initScreen	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) initScreen() {$/;"	f	unknown:tui.FullscreenRenderer
initTheme	plugged/fzf/src/tui/tui.go	/^func initTheme(theme *ColorTheme, baseTheme *ColorTheme, forceBlack bool) {$/;"	f	package:tui
initialDelay	plugged/fzf/src/constants.go	/^	initialDelay      = 20 * time.Millisecond$/;"	c	package:fzf
initialDelayTac	plugged/fzf/src/constants.go	/^	initialDelayTac   = 100 * time.Millisecond$/;"	c	package:fzf
initialPreviewOpts	plugged/fzf/src/terminal.go	/^	initialPreviewOpts previewOpts$/;"	m	struct:fzf.Terminal	typeref:typename:previewOpts
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initialize	plugged/fzf/test/test_go.rb	/^  def initialize(shell = :bash)$/;"	f	class:Tmux
inject_code	plugged/vim-polyglot/scripts/build	/^def inject_code(path, code)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
input	plugged/fzf/src/terminal.go	/^	input              []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
install	plugged/fzf/Makefile	/^install: bin\/fzf$/;"	t
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
integer.binary	plugged/vital.vim/test/Text/TOML.vim	/^    function! integer.binary()$/;"	f
integer.decimal	plugged/vital.vim/test/Text/TOML.vim	/^    function! integer.decimal()$/;"	f
integer.hexadecimal	plugged/vital.vim/test/Text/TOML.vim	/^    function! integer.hexadecimal()$/;"	f
integer.octal	plugged/vital.vim/test/Text/TOML.vim	/^    function! integer.octal()$/;"	f
interfaces	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*interface[ \\t]+([a-zA-Z0-9_]+)\/\\2\/i,interfaces\/$/;"	k	langdef:typescript
interpretCode	plugged/fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) ansiState {$/;"	f	package:fzf	typeref:typename:ansiState
inv	plugged/fzf/src/pattern.go	/^	inv           bool$/;"	m	struct:fzf.term	typeref:typename:bool
is24	plugged/fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f	type:tui.Color	typeref:typename:bool
isAlphabet	plugged/fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isAscii	plugged/fzf/src/algo/algo.go	/^func isAscii(runes []rune) bool {$/;"	f	package:algo	typeref:typename:bool
isCtrlSeqStart	plugged/fzf/src/ansi.go	/^func isCtrlSeqStart(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isExecuteAction	plugged/fzf/src/options.go	/^func isExecuteAction(str string) actionType {$/;"	f	package:fzf	typeref:typename:actionType
isNumeric	plugged/fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isPreviewEnabled	plugged/fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
isPrint	plugged/fzf/src/ansi.go	/^func isPrint(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
is_alphanumeric_char_nr	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const is_alphanumeric_char_nr = InitIsAlphaNumericCharNr()$/;"	C
is_bash	plugged/vim-polyglot/syntax/initng.vim	/^let is_bash = 1$/;"	v
is_bash	plugged/vim-polyglot/syntax/upstart.vim	/^let is_bash = 1$/;"	v
is_blocking	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def is_blocking():$/;"	m	class:RemotePDB
is_buffer_changed_outside	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_complete_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_enable	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def is_enable():$/;"	m	class:RemotePDB
is_focused	plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_killed	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_list	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^local is_list = function(tbl)$/;"	f
is_process_running	plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
is_simple_symbol_char_nr	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const is_simple_symbol_char_nr = InitIsSimpleSymbolCharNr()$/;"	C
item	plugged/fzf/src/result.go	/^	item   *Item$/;"	m	struct:fzf.Result	typeref:typename:*Item
item	plugged/fzf/src/terminal.go	/^	item *Item$/;"	m	struct:fzf.selectedItem	typeref:typename:*Item
itemLine	plugged/fzf/src/terminal.go	/^type itemLine struct {$/;"	s	package:fzf
item_count	plugged/fzf/test/test_go.rb	/^          def item_count$/;"	f	method:Tmux.until
items	plugged/fzf/src/chunklist.go	/^	items [chunkSize]Item$/;"	m	struct:fzf.Chunk	typeref:typename:[chunkSize]Item
iter	plugged/fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, normalize bool, forwa/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
j	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> j <Plug>(calendar_down)$/;"	m
j	vimrc	/^nmap <expr> j (v:count? 'j' : 'gj')$/;"	m
jellybeans	plugged/lightline.vim/colorscheme.md	/^### jellybeans$/;"	S	chapter:Available Colorschemes
jj	plugged/vimwiki/test/vimrc	/^inoremap jj <esc>$/;"	m
joinTokens	plugged/fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) string {$/;"	f	package:fzf	typeref:typename:string
jproperties_lines	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jsonnet#CheckBinPath	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#CheckBinPath(binName)$/;"	f
jsonnet#Format	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#Format()$/;"	f
jsonnet#System	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#System(str, ...)$/;"	f
jsx_comment	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^augroup jsx_comment$/;"	a
jsx_comment	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^augroup jsx_comment$/;"	a
jsx_pretty#comment#update_commentstring	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! jsx_pretty#comment#update_commentstring(original)$/;"	f
jsx_pretty#indent#get	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function! jsx_pretty#indent#get(js_indent)$/;"	f
julia#doc#complete	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
julia#doc#keywordprg	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#keywordprg(word) abort$/;"	f
julia#doc#lookup	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#lookup(keyword, ...) abort$/;"	f
julia#doc#open	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#open(keyword) abort$/;"	f
julia#doc#prompt	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#prompt() abort$/;"	f
julia#function_assign2block	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_assign2block()$/;"	f
julia#function_block2assign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_block2assign()$/;"	f
julia#gotodefinition	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#gotodefinition()$/;"	f
julia#idundercursor	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#idundercursor()$/;"	f
julia#set_syntax_version	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#set_syntax_version(jvers)$/;"	f
julia#toggle_deprecated_syntax	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_deprecated_syntax()$/;"	f
julia#toggle_function_blockassign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_function_blockassign()$/;"	f
julia_blocks#init_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#init_mappings()$/;"	f
julia_blocks#move_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_N()$/;"	f
julia_blocks#move_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_P()$/;"	f
julia_blocks#move_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_n()$/;"	f
julia_blocks#move_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_p()$/;"	f
julia_blocks#moveblock_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_N()$/;"	f
julia_blocks#moveblock_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_P()$/;"	f
julia_blocks#moveblock_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_n()$/;"	f
julia_blocks#moveblock_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_p()$/;"	f
julia_blocks#owrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_move(oper, function, toend, backwards)$/;"	f
julia_blocks#owrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_select(oper, function) ", toend, backwards)$/;"	f
julia_blocks#remove_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#remove_mappings()$/;"	f
julia_blocks#select_a	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_a(...)$/;"	f
julia_blocks#select_i	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_i()$/;"	f
julia_blocks#select_reset	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function julia_blocks#select_reset()$/;"	f
julia_blocks#vwrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_move(function)$/;"	f
julia_blocks#vwrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_select(function)$/;"	f
julia_blocks#whereami	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#whereami()$/;"	f
julia_latex_symbols#get_dict	plugged/vim-polyglot/autoload/julia_latex_symbols.vim	/^function! julia_latex_symbols#get_dict()$/;"	f
jumpAcceptEnabled	plugged/fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c	package:fzf
jumpDisabled	plugged/fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c	package:fzf	typeref:type:jumpMode
jumpEnabled	plugged/fzf/src/terminal.go	/^	jumpEnabled$/;"	c	package:fzf
jumpLabels	plugged/fzf/src/terminal.go	/^	jumpLabels         string$/;"	m	struct:fzf.Terminal	typeref:typename:string
jumpMode	plugged/fzf/src/terminal.go	/^type jumpMode int$/;"	t	package:fzf	typeref:typename:int
jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
jumping	plugged/fzf/src/terminal.go	/^	jumping            jumpMode$/;"	m	struct:fzf.Terminal	typeref:typename:jumpMode
k	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> k <Plug>(calendar_up)$/;"	m
k	vimrc	/^nmap <expr> k (v:count? 'k' : 'gk')$/;"	m
keepRight	plugged/fzf/src/terminal.go	/^	keepRight          bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
key	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let key = matchstr(s:filetype, "[^=]*")$/;"	v
keyMatch	plugged/fzf/src/terminal.go	/^func keyMatch(key tui.Event, event tui.Event) bool {$/;"	f	package:fzf	typeref:typename:bool
keymap	plugged/fzf/src/terminal.go	/^	keymap             map[tui.Event][]*action$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event][]*action
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	plugged/ultisnips/test/test_Autocommands.py	/^    keys = ($/;"	v	class:Autocommands
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a\\na"$/;"	v	class:Autotrigger_CanMatchContext
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "if" + EX + "=" + ESC + "o="$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "oouu trig b" + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "teüst" + EX$/;"	v	class:Snippet_With_Umlauts
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "ööuu trig b" + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 "$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_With_Mirror
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + "1"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + JF + "input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_CanTakeNonAsciiCharacters
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillBeExpandedToInlineSelection
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = ($/;"	v	class:Completion_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "foo" + JF + "com" + COMPL_KW + JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_UseContext
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportError
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "i" + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_SnippetPriority
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = negative + EX + positive + EX$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "first line\\n\\n\\n\\n\\n\\nthird line" + ESC + "3k0itest" + EX + ESC + "u6j"$/;"	v	class:Undo_RemoveWholeSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + "feh" + ESC + "uuuu"$/;"	v	class:Undo_CompletelyUndoSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + ESC + "u"$/;"	v	class:Undo_ChangesInPlaceholder
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "u"$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "uu"$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot"$/;"	v	class:JumpForward_DefSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + "test" + EX + ESC + "u" + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + BS + JF + "Int" + JF + "body"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "aaaaa" + JF + BS + JF + "3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:DeleteSnippetInsertion1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:Undo_RemoveMultilineSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nhallo" + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + BS + ESC + "o" + ESC + "P"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + JF + "foo"$/;"	v	class:SimpleExpand_Issue1343
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "  test" + EX + "hello" + JF + "world" + JF + "blub"$/;"	v	class:Bug1251994
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "\\t\\t\\tpd" + EX + "2"$/;"	v	class:VirtualEdit
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "test" + EX + "foo"$/;"	v	class:ShiftWidthZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "yank" + ESC + "by4lea test" + EX + "HELLO" + JF + JF + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v	class:Fold_DeleteMiddleLine_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi"$/;"	v	class:FoldOverwrite_Simple_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + "Ball"$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v	class:PerlSyntaxFold
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "\\n" + "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "foo"$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX + "m1" + EX + "\\nHallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longersnippet that should wrap properly"$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:PythonCode_MultilineIndented
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """    test""" + EX$/;"	v	class:PythonCode_IndentEtSwOffset
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentEtSw
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentNoetSwTs
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + "ups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + "ups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_Locals
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptNoExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_WithUmlauts
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "blah" + ", bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + ESC$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_ShebangPython
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_MultiAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:Python_SnipRvCanBeNonText
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendShift
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_ResetIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_SimpleMkline
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "outer" + EX + "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "outer" + EX + "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 3 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 4 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 7 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "text" + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this" + 2 * ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	plugged/ultisnips/test/test_Plugin.py	/^    keys = ($/;"	v	class:Plugin_SuperTab_SimpleTest
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "again" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "a" + 4 * ARR_L + JF + "hallo" + JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "m" + EX + "a" + 6 * ARR_L + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v	class:OldSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "$frac" + EX + JF + JF + "blub"$/;"	v	class:snipMate_Issue1325
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "v" + EX$/;"	v	class:snipMate_Visual_Simple
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "def" + EX$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "for" + EX + "blub" + JF + "j" + JF + "hi"$/;"	v	class:snipMate_TestMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "2\\n"$/;"	v	class:snipMate_MultiMatches
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "\\nhello1" + EX + "\\nhello2" + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + ESC + ":set ft=blubi\\nohello" + EX$/;"	v	class:snipMate_OtherFiletype
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_Disabled
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippet
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + "not" + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "os." + EX + "foo\\n." + EX$/;"	v	class:snipMate_Issue1344
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v	class:snipMate_TestNoBraceTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + JF + "hi"$/;"	v	class:snipMate_NoNestedTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_Interpolation
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_InterpolationWithSystem
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ":set fo=r\\n" + "i\/*" + EX + "1\\n2"$/;"	v	class:snipMate_Issue658
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ":set ft=a\\n" + "itest1" + EX$/;"	v	class:snipMate_Extends
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "[]" + ARR_L + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\n3" + ARR_U + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x" + JF + "y" + JF + JF + "z"$/;"	v	class:SnippetActions_CanModifyParentBody
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x"$/;"	v	class:SnippetActions_EnsureIndent
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "x" + JF + "y"$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "blah" + JF + "n" + EX + JF + "pass"$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "p" + EX + JF + "z"$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_MoveVisual
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test " + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test me" + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test1" + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ($/;"	v	class:SnippetPriorities_ClearedByChild
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ESC + ":set ft=c\\n" + "itest" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "haselnut" + 2 * ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World" + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "blub" + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "\\n" + JF + "t"$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End" + JB + "yes" + JF + "Begin" + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB + JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "ab"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test\\ntest\\ntest" + ESC + "V2k" + EX + "test" + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = ($/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "te'=(UltiSnips#SnippetsInCurrentScope()[{}]".format(akey) + ")\\n"$/;"	v	class:VerifyVimDict3
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'te"=(UltiSnips#SnippetsInCurrentScope()[{}]'.format(akey) + ")\\n"$/;"	v	class:VerifyVimDict2
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:AddNewSnippetSource
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_LineSelect_DedentLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	plugged/ultisnips/test/vim_test_case.py	/^    keys = ""$/;"	v	class:VimTestCase
keys.bare_keys	plugged/vital.vim/test/Text/TOML.vim	/^    function! keys.bare_keys()$/;"	f
keys.dotted_keys	plugged/vital.vim/test/Text/TOML.vim	/^    function! keys.dotted_keys()$/;"	f
keys.empty_keys	plugged/vital.vim/test/Text/TOML.vim	/^    function! keys.empty_keys()$/;"	f
keys.quoted_keys	plugged/vital.vim/test/Text/TOML.vim	/^    function! keys.quoted_keys()$/;"	f
keys_nvim	plugged/vim-visual-multi/test/test.py	/^def keys_nvim(key_str):$/;"	f
keys_vim	plugged/vim-visual-multi/test/test.py	/^def keys_vim(key_str):$/;"	f
kill	plugged/fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
killChan	plugged/fzf/src/terminal.go	/^	killChan           chan int$/;"	m	struct:fzf.Terminal	typeref:typename:chan int
killPreview	plugged/fzf/src/terminal.go	/^func (t *Terminal) killPreview(code int) {$/;"	f	struct:fzf.Terminal
killed	plugged/fzf/src/reader.go	/^	killed   bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
l	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> l <Plug>(calendar_right)$/;"	m
l	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let l = line('.')$/;"	v
l	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let l = line('.')$/;"	v
l	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let l = line('.')$/;"	v
label	plugged/fzf/src/terminal.go	/^	label    string$/;"	m	struct:fzf.itemLine	typeref:typename:string
landmark_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let landmark_role = [$/;"	v
landmark_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main'/;"	v
landscape	plugged/lightline.vim/colorscheme.md	/^### landscape$/;"	S	chapter:Available Colorschemes
lang_tag	plugged/vim-polyglot/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
langonly	plugged/vim-polyglot/extras/menu.vim	/^	let langonly = substitute(s:lang, '_.*', "", "")$/;"	v
lastChunk	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f	struct:fzf.ChunkList	typeref:typename:*Chunk
lastX	plugged/fzf/src/tui/tcell.go	/^	lastX       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
lastY	plugged/fzf/src/tui/tcell.go	/^	lastY       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
launch	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
layout	plugged/fzf/src/terminal.go	/^	layout             layoutType$/;"	m	struct:fzf.Terminal	typeref:typename:layoutType
layoutDefault	plugged/fzf/src/options.go	/^	layoutDefault layoutType = iota$/;"	c	package:fzf	typeref:type:layoutType
layoutReverse	plugged/fzf/src/options.go	/^	layoutReverse$/;"	c	package:fzf
layoutReverseList	plugged/fzf/src/options.go	/^	layoutReverseList$/;"	c	package:fzf
layoutType	plugged/fzf/src/options.go	/^type layoutType int$/;"	t	package:fzf	typeref:typename:int
lbg	plugged/fzf/src/ansi.go	/^	lbg  tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
leave_with_wait	plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
ledger#align_amount_at_cursor	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_amount_at_cursor() abort$/;"	f
ledger#align_commodity	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_commodity() abort$/;"	f
ledger#align_commodity_buffer	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_commodity_buffer() abort$/;"	f
ledger#autocomplete_and_align	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#autocomplete_and_align() abort$/;"	f
ledger#declared_accounts	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#declared_accounts(...) abort$/;"	f
ledger#entry	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#entry() abort$/;"	f
ledger#filter_items	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#filter_items(list, keyword) abort$/;"	f
ledger#find_in_tree	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#find_in_tree(tree, levels) abort$/;"	f
ledger#output	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#output(report) abort$/;"	f
ledger#reconcile	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#reconcile(file, account, target_amount) abort$/;"	f
ledger#register	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#register(file, args) abort$/;"	f
ledger#report	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#report(file, args) abort$/;"	f
ledger#show_balance	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#show_balance(file, ...) abort$/;"	f
ledger#transaction_date_set	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_date_set(lnum, type, ...) abort$/;"	f
ledger#transaction_from_lnum	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_from_lnum(lnum) abort$/;"	f
ledger#transaction_post_state_get	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_post_state_get(lnum) abort$/;"	f
ledger#transaction_post_state_set	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_post_state_set(lnum, char) abort$/;"	f
ledger#transaction_post_state_toggle	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_post_state_toggle(lnum, ...) abort$/;"	f
ledger#transaction_state_set	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_set(lnum, char) abort$/;"	f
ledger#transaction_state_toggle	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_toggle(lnum, ...) abort$/;"	f
ledger#transactions	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transactions(...) abort$/;"	f
left	plugged/fzf/src/tui/light.go	/^	left     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
left	plugged/fzf/src/tui/tcell.go	/^	left        int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
less	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  var args, fs, less, options, parser;$/;"	v
let	plugged/vim-visual-multi/python/vm.py	/^def let(name, value):$/;"	f
li	plugged/vimwiki/autoload/vimwiki/style.css	/^li { margin: 0.3em auto; }$/;"	s
li > a	plugged/vimwiki/autoload/vimwiki/style.css	/^li > a {$/;"	s
li > a:hover	plugged/vimwiki/autoload/vimwiki/style.css	/^li > a:hover { color: #ff4500; }$/;"	s
lightline	plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline$/;"	a
lightline	plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline-disable$/;"	a
lightline	plugged/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline#colorscheme	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#background	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#fill	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#gui2cui_palette	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui_palette(palette) abort$/;"	f
lightline#colortable#name_to_rgb	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#disable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline.Custom	plugged/lightline.vim/test/expand.vim	/^  function! g:lightline.Custom()$/;"	f
lightline.vim	plugged/lightline.vim/README.md	/^# lightline.vim$/;"	c
line	plugged/fzf/src/terminal.go	/^	line string$/;"	m	struct:fzf.eachLine	typeref:typename:string
line_index	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
lines	plugged/fzf/src/history.go	/^	lines    []string$/;"	m	struct:fzf.History	typeref:typename:[]string
lines	plugged/fzf/src/terminal.go	/^	lines      []string$/;"	m	struct:fzf.previewer	typeref:typename:[]string
lines	plugged/fzf/src/terminal.go	/^	lines   []string$/;"	m	struct:fzf.previewResult	typeref:typename:[]string
link_fzf_in_path	plugged/fzf/install	/^link_fzf_in_path() {$/;"	f
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['amphtml']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['apple-touch-icon', 'apple-touch-icon-precomposed', 'apple-to/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['canonical']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['chrome-webstore-item']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['hub']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['import']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['manifest']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['pgpkey']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['search']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['sitemap']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['webmention']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linktypes$/;"	v
linktypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'dns-prefetch', 'external', 'help', 'icon', /;"	v
lintFile	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^func lintFile(w io.Writer, fname string) error {$/;"	f	package:main	typeref:typename:error
lintThrowMsg	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^func lintThrowMsg(w io.Writer, node ast.Expr, filename, wantPrefix, warningMsg string) {$/;"	f	package:main
list	plugged/fzf/src/terminal.go	/^	list         []*Item$/;"	m	struct:fzf.previewRequest	typeref:typename:[]*Item
list all tests	plugged/vim-visual-multi/test/README.md	/^## list all tests$/;"	s	chapter:How to Run:
list_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
lists	plugged/fzf/src/merger.go	/^	lists   [][]Result$/;"	m	struct:fzf.Merger	typeref:typename:[][]Result
live_region_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let live_region_attributes = {$/;"	v
livescript_compiler	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_compiler	plugged/vim-polyglot/ftplugin/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_make_options	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_make_options = ''$/;"	v
lnum	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let lnum = search('^\\s*(\\*:o\\?caml:', 'n')$/;"	v
load_data	plugged/vim-polyglot/scripts/build	/^def load_data()$/;"	f
load_heuristics	plugged/vim-polyglot/scripts/build	/^def load_heuristics$/;"	f
load_languages	plugged/vim-polyglot/scripts/build	/^def load_languages$/;"	f
load_packages	plugged/vim-polyglot/scripts/build	/^def load_packages$/;"	f
loaded_clrzr	plugged/clrzr/plugin/clrzr.vim	/^let loaded_clrzr = 1$/;"	v
loaded_eregex	plugged/vim-polyglot/scripts/eregex.vim	/^let loaded_eregex=1$/;"	v
location	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
log	plugged/vim-visual-multi/test/test.py	/^def log(string, f=None):$/;"	f
luadict2vimdict	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^local luadict2vimdict = function(luadict)$/;"	f
lualist2vimlist	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^local lualist2vimlist = function(lualist)$/;"	f
macros,macro definitions	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*macro_rules![ \\t]+([a-zA-Z0-9_]+)\/\\1\/d,macros,macro definitions\/$/;"	k	langdef:Rust
main	plugged/fzf/main.go	/^func main() {$/;"	f	package:main
main	plugged/fzf/main.go	/^package main$/;"	p
main	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	plugged/ultisnips/test_all.py	/^    def main():$/;"	f
main	plugged/vim-sleuth/test/sleuth-editorconfig	/^def main():$/;"	f
main	plugged/vim-visual-multi/test/test.py	/^def main():$/;"	f
main	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^func main() {$/;"	f	package:main
main	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^package main$/;"	p
main	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^        def main():$/;"	m	class:DummyClassForLocalScope
main	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^        def main():$/;"	m	class:DummyClassForLocalScope
main	plugged/vital.vim/test/Random/xor128.c	/^int main(int ac, char** av) {$/;"	f	typeref:typename:int
main_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aptconf.vim	/^  let main_syntax = 'aptconf'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/docker-compose.vim	/^    let main_syntax = 'yaml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ecrystal.vim	/^  let main_syntax = 'ecrystal'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/elixir.vim	/^  let main_syntax = "elixir"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^  let main_syntax = 'emblem'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ferm.vim	/^  let main_syntax = 'ferm'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/helm.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/hjson.vim	/^  let main_syntax = 'hjson'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/hss.vim	/^  let main_syntax = 'hss'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/hxml.vim	/^  let main_syntax='hxml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^  let main_syntax = 'jinja2'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jst.vim	/^  let main_syntax = 'jst'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/lua.vim	/^  let main_syntax = 'lua'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mako.vim	/^  let main_syntax = b:mako_outer_lang$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/qml.vim	/^  let main_syntax = 'qml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slim.vim	/^  let main_syntax = 'slim'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slime.vim	/^  let main_syntax = 'slime'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/svg.vim	/^  let main_syntax = 'svg'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^  let main_syntax = 'typescript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/typescriptreact.vim	/^  let main_syntax = 'typescriptreact'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/wml.vim	/^  let main_syntax = 'wml'$/;"	v
makeSpace	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) makeSpace() {$/;"	f	struct:tui.LightRenderer
makeSpinner	plugged/fzf/src/terminal.go	/^func makeSpinner(unicode bool) []string {$/;"	f	package:fzf	typeref:typename:[]string
make_term	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^make_term(Str) ->$/;"	f
mapleader	vimrc	/^let mapleader="\\<space>"$/;"	v
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
margin	plugged/fzf/src/terminal.go	/^	margin             [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
marker	plugged/fzf/src/terminal.go	/^	marker             string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerEmpty	plugged/fzf/src/terminal.go	/^	markerEmpty        string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerLen	plugged/fzf/src/terminal.go	/^	markerLen          int$/;"	m	struct:fzf.Terminal	typeref:typename:int
match	plugged/fzf/src/terminal_test.go	/^	match  string \/\/ output is matched against this regex (when output is empty string)$/;"	m	struct:fzf.want	typeref:typename:string
match	plugged/syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
matchChunk	plugged/fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []Result, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
matchControlSequence	plugged/fzf/src/ansi.go	/^func matchControlSequence(s string) int {$/;"	f	package:fzf	typeref:typename:int
matchOperatingSystemCommand	plugged/fzf/src/ansi.go	/^func matchOperatingSystemCommand(s string) int {$/;"	f	package:fzf	typeref:typename:int
match_count	plugged/fzf/test/test_go.rb	/^          def match_count$/;"	f	method:Tmux.until
matched	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matches	plugged/fzf/src/matcher.go	/^	matches []Result$/;"	m	struct:fzf.partialResult	typeref:typename:[]Result
matches	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
materia	plugged/lightline.vim/colorscheme.md	/^### materia$/;"	S	chapter:Available Colorschemes
material	plugged/lightline.vim/colorscheme.md	/^### material$/;"	S	chapter:Available Colorschemes
maxDiff	plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
maxHeightFunc	plugged/fzf/src/tui/light.go	/^	maxHeightFunc func(int) int$/;"	m	struct:tui.LightRenderer	typeref:typename:func(int) int
maxInputBuffer	plugged/fzf/src/tui/light.go	/^	maxInputBuffer  = 10 * 1024$/;"	c	package:tui
maxItems	plugged/fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
maxMulti	plugged/fzf/src/constants.go	/^	maxMulti          = math.MaxInt32$/;"	c	package:fzf
maxPartitions	plugged/fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c	package:fzf
maxPatternLength	plugged/fzf/src/constants.go	/^	maxPatternLength  = 300$/;"	c	package:fzf
maxSize	plugged/fzf/src/history.go	/^	maxSize  int$/;"	m	struct:fzf.History	typeref:typename:int
mel_minlines	plugged/vim-polyglot/syntax/mel.vim	/^  let mel_minlines=15$/;"	v
members	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*(public|private)[ \\t]+(static|readonly)?[ \\t]*([a/;"	k	langdef:typescript
merge	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) merge(other ColorPair, except Color) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
merged	plugged/fzf/src/merger.go	/^	merged  []Result$/;"	m	struct:fzf.Merger	typeref:typename:[]Result
mergedGet	plugged/fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
merger	plugged/fzf/src/terminal.go	/^	merger             *Merger$/;"	m	struct:fzf.Terminal	typeref:typename:*Merger
mergerCache	plugged/fzf/src/matcher.go	/^	mergerCache    map[string]*Merger$/;"	m	struct:fzf.Matcher	typeref:typename:map[string]*Merger
mergerCacheMax	plugged/fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c	package:fzf	typeref:typename:int
metadata_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
methods	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*(\\[[a-z]*\\]/;"	k	langdef:scala
microdata_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'i/;"	v
microdata_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
minHeight	plugged/fzf/src/terminal.go	/^	minHeight = 4$/;"	c	package:fzf
minItem	plugged/fzf/src/item.go	/^var minItem = Item{text: util.Chars{Index: -1}}$/;"	v	package:fzf
minRank	plugged/fzf/src/result.go	/^func minRank() Result {$/;"	f	package:fzf	typeref:typename:Result
minWidth	plugged/fzf/src/terminal.go	/^	minWidth  = 4$/;"	c	package:fzf
mkline	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
modified	plugged/fzf/src/history.go	/^	modified map[int]string$/;"	m	struct:fzf.History	typeref:typename:map[int]string
module.is_no_insert	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^	function! module.is_no_insert(char)$/;"	f
module.is_no_insert	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^	function! module.is_no_insert(char)$/;"	f
modules	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*module[ \\t]+([a-zA-Z0-9_]+)\/\\2\/n,modules\/$/;"	k	langdef:typescript
modules	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*namespace[ \\t]+([a-zA-Z0-9_]+)\/\\2\/n,modules\/$/;"	k	langdef:typescript
modules,module names	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?mod[ \\t]+([a-zA-Z0-9_]+)\/\\2\/m,modules,module names\/$/;"	k	langdef:Rust
molokai	plugged/lightline.vim/colorscheme.md	/^### molokai$/;"	S	chapter:Available Colorschemes
more tips	plugged/lightline.vim/README.md	/^### more tips$/;"	S	section:lightline.vim""Advanced configuration
mouse	plugged/fzf/src/tui/light.go	/^	mouse         bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
mouse	plugged/fzf/src/tui/tui.go	/^	mouse        bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
mouseSequence	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) mouseSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
move	plugged/fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f	struct:fzf.Terminal
move	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) move(y int, x int) {$/;"	f	struct:tui.LightRenderer
move	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
moveCursor	plugged/fzf/src/tui/tcell.go	/^	moveCursor  bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
multi	plugged/fzf/src/terminal.go	/^	multi              int$/;"	m	struct:fzf.Terminal	typeref:typename:int
multiline_basic_strings.includes_escaped_character	plugged/vital.vim/test/Text/TOML.vim	/^    function! multiline_basic_strings.includes_escaped_character()$/;"	f
multiline_basic_strings.trims_first_newline	plugged/vital.vim/test/Text/TOML.vim	/^    function! multiline_basic_strings.trims_first_newline()$/;"	f
multiline_basic_strings.trims_whitespaces_after_backslash	plugged/vital.vim/test/Text/TOML.vim	/^    function! multiline_basic_strings.trims_whitespaces_after_backslash()$/;"	f
mupad_cmdextversion	plugged/vim-polyglot/syntax/mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
mutex	plugged/fzf/src/cache.go	/^	mutex sync.Mutex$/;"	m	struct:fzf.ChunkCache	typeref:typename:sync.Mutex
mutex	plugged/fzf/src/chunklist.go	/^	mutex  sync.Mutex$/;"	m	struct:fzf.ChunkList	typeref:typename:sync.Mutex
mutex	plugged/fzf/src/reader.go	/^	mutex    sync.Mutex$/;"	m	struct:fzf.Reader	typeref:typename:sync.Mutex
mutex	plugged/fzf/src/terminal.go	/^	mutex              sync.Mutex$/;"	m	struct:fzf.Terminal	typeref:typename:sync.Mutex
mv_DEtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_totorder   = 1$/;"	v
myfunc#Bracket_check	autoload/myfunc.vim	/^function! myfunc#Bracket_check() abort$/;"	f
myfunc#CloseTerm	autoload/myfunc.vim	/^function! myfunc#CloseTerm() abort$/;"	f
myfunc#ExecuteScript	autoload/myfunc.vim	/^function! myfunc#ExecuteScript(location) abort$/;"	f
myfunc#Quitout	autoload/myfunc.vim	/^function! myfunc#Quitout() abort$/;"	f
myfunc#Quoterepl	autoload/myfunc.vim	/^function! myfunc#Quoterepl(name) abort$/;"	f
myfunc#Resize_Execution_Term	autoload/myfunc.vim	/^function! myfunc#Resize_Execution_Term(amount) abort$/;"	f
myfunc#SaveQuitout	autoload/myfunc.vim	/^function! myfunc#SaveQuitout() abort$/;"	f
myfunc#ToggleNetrw	autoload/myfunc.vim	/^function! myfunc#ToggleNetrw() abort$/;"	f
mypy	plugged/ultisnips/mypy.ini	/^[mypy]$/;"	s
mypy-unidecode	plugged/ultisnips/mypy.ini	/^[mypy-unidecode]$/;"	s
mypy-vim	plugged/ultisnips/mypy.ini	/^[mypy-vim]$/;"	s
mypy_path	plugged/ultisnips/mypy.ini	/^mypy_path=pythonx\/UltiSnips$/;"	k	section:mypy
n	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> n <Plug>(calendar_next_match)$/;"	m
n	plugged/incsearch.vim/test/autonohlsearch.vim	/^  map n  <Plug>(incsearch-nohl-n)$/;"	m
n	plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap n  n$/;"	m
n	plugged/incsearch.vim/test/n_and_N.vim	/^  noremap n  n$/;"	m
n	plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = n + 1$/;"	v
n	plugged/vim-polyglot/syntax/xpm.vim	/^let n      = 0$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = n + 1$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^  let n      = 0$/;"	v
n	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><expr> n ' j'[v:searchforward].'n'$/;"	m
n	vimrc	/^map n  <Plug>(incsearch-nohl-n)$/;"	m
n-character search motion	plugged/vim-easymotion/README.md	/^### n-character search motion$/;"	S	chapter:New features in version 2.0
name_temp	plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
need_to_install_plugins	vimrc	/^    let need_to_install_plugins = 1$/;"	v
need_to_install_plugins	vimrc	/^let need_to_install_plugins = 0$/;"	v
negative	plugged/ultisnips/test/test_ContextSnippets.py	/^    negative = "no xxx"$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
neocomplete#sources#ultisnips#define	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define() abort$/;"	f
nested_app_ebins	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
newItem	plugged/fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f	package:fzf	typeref:typename:*Item
newItems	plugged/fzf/src/terminal_test.go	/^func newItems(str ...string) []*Item {$/;"	f	package:fzf	typeref:typename:[]*Item
newRange	plugged/fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f	package:fzf	typeref:typename:Range
new_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def new_scratch_buffer(text):$/;"	f
new_shell	plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBash
new_shell	plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestFish
new_shell	plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestZsh
next	plugged/fzf/src/history.go	/^func (h *History) next() string {$/;"	f	struct:fzf.History	typeref:typename:string
nextAnsiEscapeSequence	plugged/fzf/src/ansi.go	/^func nextAnsiEscapeSequence(s string) (int, int) {$/;"	f	package:fzf	typeref:typename:(int, int)
nextInt	plugged/fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f	package:fzf	typeref:typename:int
nextString	plugged/fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f	package:fzf	typeref:typename:string
nim#init	plugged/vim-polyglot/autoload/nim.vim	/^fun! nim#init() abort$/;"	f
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins     = 1$/;"	v
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions   = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions = 1$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers      = 1$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers = 1$/;"	v
nim_highlight_space_errors	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
noInfoLine	plugged/fzf/src/terminal.go	/^func (t *Terminal) noInfoLine() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
no_unidecode_available	plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
node	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*node[[:space:]]*[\\'|\\"]*([a-zA-Z0-9_\\.\\-]+)[\\'|\\"]*\/\\1\/n,/;"	k	langdef:puppet
nord	plugged/lightline.vim/colorscheme.md	/^### nord$/;"	S	chapter:Available Colorschemes
normal	plugged/fzf/src/tui/tcell.go	/^	normal      ColorPair$/;"	m	struct:tui.TcellWindow	typeref:typename:ColorPair
normalize	plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
normalize	plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.term	typeref:typename:bool
normalizeRune	plugged/fzf/src/algo/algo.go	/^func normalizeRune(r rune) rune {$/;"	f	package:algo	typeref:typename:rune
normalize_file_path	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def normalize_file_path(path: str) -> str:$/;"	f	typeref:typename:str
normalized	plugged/fzf/src/algo/normalize.go	/^var normalized map[rune]rune = map[rune]rune{$/;"	v	package:algo	typeref:typename:map[rune]rune
notifyOnCont	plugged/fzf/src/terminal_unix.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnCont	plugged/fzf/src/terminal_windows.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	plugged/fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	plugged/fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyStop	plugged/fzf/src/terminal_unix.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
notifyStop	plugged/fzf/src/terminal_windows.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
nqc_minlines	plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
nsd7168b3f0101	plugged/vimwiki/doc/logo.svg	/^<svg width="200" height="43" viewBox="0 0 372 80" fill="none" xmlns="http:\/\/www.w3.org\/2000\//;"	n	uri:http://www.w3.org/2000/svg
ntabs_to_proper_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
nth	plugged/fzf/src/pattern.go	/^	nth           []Range$/;"	m	struct:fzf.Pattern	typeref:typename:[]Range
numLines	plugged/fzf/src/terminal.go	/^	numLines int$/;"	m	struct:fzf.previewed	typeref:typename:int
numPartitionsMultiplier	plugged/fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c	package:fzf
number	plugged/fzf/src/terminal.go	/^	number        bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
number	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def number(self):$/;"	m	class:TabStop
number	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
o	autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
o	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> o <Plug>(calendar_start_insert_next_line)$/;"	m
o.exec	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^  function! o.exec(lexered_tokens) abort$/;"	f
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
obj.addchild	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^  function! obj.addchild(...) dict abort$/;"	f
obj.consume	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^  function! obj.consume() dict abort$/;"	f
obj.end	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^  function! obj.end() dict abort$/;"	f
obj.inorder_traversal	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^  function! obj.inorder_traversal() dict abort$/;"	f
obj.next	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^  function! obj.next() dict abort$/;"	f
obj.next_is	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^  function! obj.next_is(label) dict abort$/;"	f
obj.postorder_traversal	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^  function! obj.postorder_traversal() dict abort$/;"	f
obj.preorder_traversal	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^  function! obj.preorder_traversal() dict abort$/;"	f
obj.renderer	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^  function! obj.renderer() dict abort$/;"	f
obj.todict	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^  function! obj.todict() dict abort$/;"	f
objects	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
of.any_type	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.any_type() abort$/;"	f
of.arity_is_correct	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.arity_is_correct() abort$/;"	f
of.arity_is_wrong	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.arity_is_wrong() abort$/;"	f
of.assert_invalid_args	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.assert_invalid_args() abort$/;"	f
of.assert_no_out_of_range	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.assert_no_out_of_range()$/;"	f
of.assert_only	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.assert_only() abort$/;"	f
of.assert_with_type	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.assert_with_type() abort$/;"	f
of.mixed_validation_with_assert_and_type	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.mixed_validation_with_assert_and_type() abort$/;"	f
of.no_check	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.no_check()$/;"	f
of.of_should_not_validate_if_disabled	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.of_should_not_validate_if_disabled() abort$/;"	f
of.of_should_throw_if_it_received_non_string_value	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.of_should_throw_if_it_received_non_string_value() abort$/;"	f
of.type_invalid_args	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.type_invalid_args() abort$/;"	f
of.union_types	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.union_types()$/;"	f
of.validate_returns_given_args	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.validate_returns_given_args()$/;"	f
of.validate_should_throw_if_it_received_non_list_value	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.validate_should_throw_if_it_received_non_list_value() abort$/;"	f
of.wrong_types_and_correct_types	plugged/vital.vim/test/Validator/Args.vim	/^  function! of.wrong_types_and_correct_types()$/;"	f
offset	plugged/fzf/src/ansi.go	/^	offset [2]int32$/;"	m	struct:fzf.ansiOffset	typeref:typename:[2]int32
offset	plugged/fzf/src/result.go	/^	offset [2]int32$/;"	m	struct:fzf.colorOffset	typeref:typename:[2]int32
offset	plugged/fzf/src/terminal.go	/^	offset             int$/;"	m	struct:fzf.Terminal	typeref:typename:int
offset	plugged/fzf/src/terminal.go	/^	offset     int$/;"	m	struct:fzf.previewer	typeref:typename:int
offset	plugged/fzf/src/terminal.go	/^	offset   int$/;"	m	struct:fzf.previewed	typeref:typename:int
offset	plugged/fzf/src/terminal.go	/^	offset  int$/;"	m	struct:fzf.previewResult	typeref:typename:int
offsetComponentRegex	plugged/fzf/src/terminal.go	/^var offsetComponentRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
offsetPollTries	plugged/fzf/src/tui/light.go	/^	offsetPollTries = 10$/;"	c	package:tui
offsetRegexp	plugged/fzf/src/tui/light.go	/^var offsetRegexp *regexp.Regexp = regexp.MustCompile("(.*)\\x1b\\\\[([0-9]+);([0-9]+)R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetRegexpBegin	plugged/fzf/src/tui/light.go	/^var offsetRegexpBegin *regexp.Regexp = regexp.MustCompile("^\\x1b\\\\[[0-9]+;[0-9]+R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetTrimCharsRegex	plugged/fzf/src/terminal.go	/^var offsetTrimCharsRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
ol	plugged/vimwiki/autoload/vimwiki/style.css	/^p, pre, blockquote, table, ul, ol, dl {$/;"	s
ol ol	plugged/vimwiki/autoload/vimwiki/style.css	/^ul ul, ul ol, ol ol, ol ul {$/;"	s
ol ul	plugged/vimwiki/autoload/vimwiki/style.css	/^ul ul, ul ol, ol ol, ol ul {$/;"	s
old_syntax	plugged/vim-polyglot/after/syntax/haskell.vim	/^let old_syntax = b:current_syntax$/;"	v
one (`background=dark`)	plugged/lightline.vim/README.md	/^### one (`background=dark`)$/;"	S	chapter:lightline.vim
one (`background=dark`)	plugged/lightline.vim/colorscheme.md	/^### one (`background=dark`)$/;"	S	chapter:Available Colorschemes
one (`background=light`)	plugged/lightline.vim/README.md	/^### one (`background=light`)$/;"	S	chapter:lightline.vim
one (`background=light`)	plugged/lightline.vim/colorscheme.md	/^### one (`background=light`)$/;"	S	chapter:Available Colorschemes
oneline_comments	plugged/vim-polyglot/syntax/spup.vim	/^    let oneline_comments = 2$/;"	v
openTtyIn	plugged/fzf/src/tui/light_unix.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
openTtyIn	plugged/fzf/src/tui/light_windows.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
opener.apply	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^  function! opener.apply(wl, winsize) abort$/;"	f
opt	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
optString	plugged/fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
option_set_to	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def option_set_to(name, new_value):$/;"	f
optionalNextString	plugged/fzf/src/options.go	/^func optionalNextString(args []string, i *int) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
optionalNumeric	plugged/fzf/src/options.go	/^func optionalNumeric(args []string, i *int, defaultValue int) int {$/;"	f	package:fzf	typeref:typename:int
optionalRunes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) optionalRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
options	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  var args, fs, less, options, parser;$/;"	v
opts.sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! opts.sink(lines)$/;"	f
opts.sinklist	plugged/fzf/plugin/fzf.vim	/^    function! opts.sinklist(lines) abort$/;"	f
optsFor	plugged/fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f	package:fzf	typeref:typename:*Options
org#fold_expr	plugged/vim-polyglot/autoload/org.vim	/^function org#fold_expr()$/;"	f
org#fold_text	plugged/vim-polyglot/autoload/org.vim	/^function org#fold_text() abort$/;"	f
org#option	plugged/vim-polyglot/autoload/org.vim	/^function org#option(name, default) abort$/;"	f
origState	plugged/fzf/src/tui/light.go	/^	origState     *term.State$/;"	m	struct:tui.LightRenderer	typeref:typename:*term.State
origStateInput	plugged/fzf/src/tui/light.go	/^	origStateInput  uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origStateOutput	plugged/fzf/src/tui/light.go	/^	origStateOutput uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origText	plugged/fzf/src/item.go	/^	origText    *[]byte       \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]byte
origin	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) origin() {$/;"	f	struct:tui.LightRenderer
origin	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
outHandle	plugged/fzf/src/tui/light.go	/^	outHandle       uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
output	plugged/fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
output	plugged/fzf/src/terminal_test.go	/^	output string \/\/ literal output$/;"	m	struct:fzf.want	typeref:typename:string
output	plugged/ultisnips/test/vim_test_case.py	/^    output = ""$/;"	v	class:VimTestCase
overflow	plugged/fzf/src/terminal.go	/^func (t *Terminal) overflow(runes []rune, max int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
overflow32	plugged/fzf/src/util/chars.go	/^	overflow32 uint32 = 0x80808080$/;"	c	package:util	typeref:typename:uint32
overflow64	plugged/fzf/src/util/chars.go	/^	overflow64 uint64 = 0x8080808080808080$/;"	c	package:util	typeref:typename:uint64
override	plugged/fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f	struct:fzf.History
overwrite	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> p <Nop>$/;"	m
p	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
p	plugged/vimwiki/autoload/vimwiki/style.css	/^p, pre, blockquote, table, ul, ol, dl {$/;"	s
p > a	plugged/vimwiki/autoload/vimwiki/style.css	/^p > a {$/;"	s
p > a:hover	plugged/vimwiki/autoload/vimwiki/style.css	/^p > a:hover {$/;"	s
packages	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*package[ \\t]+([a-zA-Z0-9_.]+)\/\\1\/p,packages\/$/;"	k	langdef:scala
padding	plugged/fzf/src/terminal.go	/^	padding            [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
parse.__float__	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.__float__()$/;"	f
parse.__integer__	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.__integer__()$/;"	f
parse.__keys__	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.__keys__()$/;"	f
parse.__multiline_basic_strings__	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.__multiline_basic_strings__()$/;"	f
parse.__table__	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.__table__()$/;"	f
parse.array	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.array()$/;"	f
parse.array_of_tables	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.array_of_tables()$/;"	f
parse.basic_strings	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.basic_strings()$/;"	f
parse.boolean	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.boolean()$/;"	f
parse.inline_table	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.inline_table()$/;"	f
parse.literal_string	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.literal_string()$/;"	f
parse.local_date	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.local_date()$/;"	f
parse.local_datetime	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.local_datetime()$/;"	f
parse.local_time	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.local_time()$/;"	f
parse.multiline_literal_string	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.multiline_literal_string()$/;"	f
parse.offset_datetime	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.offset_datetime()$/;"	f
parse.throws_if_input_is_in_illegal_format	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse.throws_if_input_is_in_illegal_format()$/;"	f
parseAlgo	plugged/fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f	package:fzf	typeref:typename:algo.Algo
parseAnsiCode	plugged/fzf/src/ansi.go	/^func parseAnsiCode(s string) (int, string) {$/;"	f	package:fzf	typeref:typename:(int, string)
parseBorder	plugged/fzf/src/options.go	/^func parseBorder(str string, optional bool) tui.BorderShape {$/;"	f	package:fzf	typeref:typename:tui.BorderShape
parseHeight	plugged/fzf/src/options.go	/^func parseHeight(str string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseInfoStyle	plugged/fzf/src/options.go	/^func parseInfoStyle(str string) infoStyle {$/;"	f	package:fzf	typeref:typename:infoStyle
parseKeyChords	plugged/fzf/src/options.go	/^func parseKeyChords(str string, message string) map[tui.Event]string {$/;"	f	package:fzf	typeref:typename:map[tui.Event]string
parseKeymap	plugged/fzf/src/options.go	/^func parseKeymap(keymap map[tui.Event][]*action, str string) {$/;"	f	package:fzf
parseLayout	plugged/fzf/src/options.go	/^func parseLayout(str string) layoutType {$/;"	f	package:fzf	typeref:typename:layoutType
parseMargin	plugged/fzf/src/options.go	/^func parseMargin(opt string, margin string) [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
parseOptions	plugged/fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f	package:fzf
parsePlaceholder	plugged/fzf/src/terminal.go	/^func parsePlaceholder(match string) (bool, string, placeholderFlags) {$/;"	f	package:fzf	typeref:typename:(bool, string, placeholderFlags)
parsePreviewWindow	plugged/fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f	package:fzf
parsePrompt	plugged/fzf/src/terminal.go	/^func (t *Terminal) parsePrompt(prompt string) (func(), int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(func(), int)
parseSize	plugged/fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseTerms	plugged/fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, normalize bool, str string) []termSet {$/;"	f	package:fzf	typeref:typename:[]termSet
parseTheme	plugged/fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
parseTiebreak	plugged/fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f	package:fzf	typeref:typename:[]criterion
parseToggleSort	plugged/fzf/src/options.go	/^func parseToggleSort(keymap map[tui.Event][]*action, str string) {$/;"	f	package:fzf
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_args	plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f
parse_file.parses_toml_formatted_file	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse_file.parses_toml_formatted_file()$/;"	f
parse_file.throws_if_file_isnot_readable	plugged/vital.vim/test/Text/TOML.vim	/^  function! parse_file.throws_if_file_isnot_readable()$/;"	f
parse_remote	plugged/vim-polyglot/scripts/build	/^def parse_remote(remote)$/;"	f
parser	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  parser = new less.Parser(options);$/;"	v
parser	plugged/syntastic/syntax_checkers/less/less-lint.js	/^  var args, fs, less, options, parser;$/;"	v
partialResult	plugged/fzf/src/matcher.go	/^type partialResult struct {$/;"	s	package:fzf
partitions	plugged/fzf/src/matcher.go	/^	partitions     int$/;"	m	struct:fzf.Matcher	typeref:typename:int
paste	plugged/fzf/test/test_go.rb	/^  def paste(str)$/;"	f	class:Tmux
pat	plugged/vimwiki/plugin/vimwiki.vim	/^  let pat = join(map(s:known_extensions, '"*" . v:val'), ',')$/;"	v
path	plugged/fzf/src/history.go	/^	path     string$/;"	m	struct:fzf.History	typeref:typename:string
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, ':', ',', 'g')$/;"	v
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, '^\\.\\=:\\|:\\.\\=$\\|:\\.\\=:', ',,', 'g') " POSIX cwd$/;"	v
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = system("gawk 'BEGIN { printf ENVIRON[\\"AWKPATH\\"] }'")$/;"	v
pathlist	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let pathlist = sort(glob($LOCALAPPDATA . '\\Julia-*\\bin\\julia.exe', 1, 1))$/;"	v
pattern	plugged/fzf/src/matcher.go	/^	pattern    *Pattern$/;"	m	struct:fzf.MatchRequest	typeref:typename:*Pattern
pattern	plugged/fzf/src/merger.go	/^	pattern *Pattern$/;"	m	struct:fzf.Merger	typeref:typename:*Pattern
patternBuilder	plugged/fzf/src/matcher.go	/^	patternBuilder func([]rune) *Pattern$/;"	m	struct:fzf.Matcher	typeref:typename:func([]rune) *Pattern
pattern_to_condition	plugged/vim-polyglot/scripts/build	/^def pattern_to_condition(rule)$/;"	f	method:copy_file
patterns_to_vim_patterns	plugged/vim-polyglot/scripts/build	/^def patterns_to_vim_patterns(patterns)$/;"	f
paused	plugged/fzf/src/terminal.go	/^	paused             bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
pborder	plugged/fzf/src/terminal.go	/^	pborder            tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
peek	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
percent	plugged/fzf/src/options.go	/^	percent bool$/;"	m	struct:fzf.sizeSpec	typeref:typename:bool
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
php_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_nowdoc=1$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_nowdoc=0$/;"	v
php_html_in_strings	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sql_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_nowdoc=1$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
php_xml_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_heredoc=0$/;"	v
php_xml_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_nowdoc=0$/;"	v
phrasing_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'co/;"	v
placeCursor	plugged/fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f	struct:fzf.Terminal
placeholder	plugged/fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
placeholderFlags	plugged/fzf/src/terminal.go	/^type placeholderFlags struct {$/;"	s	package:fzf
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plugin	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^        augroup plugin-git-messenger-close$/;"	a
plugin	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^    augroup plugin-git-messenger-buf-enter$/;"	a
plugin	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^augroup plugin-incsearch-highlight$/;"	a
plugin	plugged/vim-easymotion/autoload/EasyMotion.vim	/^    augroup plugin-easymotion-active$/;"	a
plugin	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^    augroup plugin-easymotion$/;"	a
plugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^augroup plugin-ft-crystal$/;"	a
plugin_cache_dir	plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
plugins	plugged/ultisnips/test/test_Plugin.py	/^    plugins = ["ervandew\/supertab"]$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
plus	plugged/fzf/src/terminal.go	/^	plus          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pm	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def pm(cls):$/;"	m	class:RemotePDB
pointer	plugged/fzf/src/terminal.go	/^	pointer            string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerEmpty	plugged/fzf/src/terminal.go	/^	pointerEmpty       string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerLen	plugged/fzf/src/terminal.go	/^	pointerLen         int$/;"	m	struct:fzf.Terminal	typeref:typename:int
points	plugged/fzf/src/result.go	/^	points [4]uint16$/;"	m	struct:fzf.Result	typeref:typename:[4]uint16
polyglot	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  augroup polyglot-observer$/;"	a
polyglot	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  augroup polyglot-sleuth$/;"	a
polyglot	plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup polyglot-observer | augroup END$/;"	a
polyglot	plugged/vim-polyglot/plugin/polyglot.vim	/^    augroup polyglot-sensible$/;"	a
polyglot#detect#Asa	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asa(...)$/;"	f
polyglot#detect#Asp	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asp(...)$/;"	f
polyglot#detect#Bas	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Bas(...)$/;"	f
polyglot#detect#Frag	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Frag(...)$/;"	f
polyglot#detect#Fs	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Fs(...)$/;"	f
polyglot#detect#H	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#H(...)$/;"	f
polyglot#detect#Html	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Html(...)$/;"	f
polyglot#detect#Idr	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Idr(...)$/;"	f
polyglot#detect#Inp	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Inp(...)$/;"	f
polyglot#detect#Lidr	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Lidr(...)$/;"	f
polyglot#detect#M	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#M(...)$/;"	f
polyglot#detect#Pl	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pl(...)$/;"	f
polyglot#detect#Pm	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pm(...)$/;"	f
polyglot#detect#Re	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Re(...)$/;"	f
polyglot#detect#T	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#T(...)$/;"	f
polyglot#detect#Tt2	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Tt2(...)$/;"	f
polyglot#ft#BindzoneCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#BindzoneCheck(default)$/;"	f
polyglot#ft#CSH	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#CSH()$/;"	f
polyglot#ft#Check_inp	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Check_inp()$/;"	f
polyglot#ft#Dep3patch	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Dep3patch()$/;"	f
polyglot#ft#DtraceCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#DtraceCheck()$/;"	f
polyglot#ft#EuphoriaCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#EuphoriaCheck()$/;"	f
polyglot#ft#ExCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#ExCheck()$/;"	f
polyglot#ft#FTRules	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTRules()$/;"	f
polyglot#ft#FTVB	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTVB(alt)$/;"	f
polyglot#ft#FTasm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasm()$/;"	f
polyglot#ft#FTasmsyntax	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasmsyntax()$/;"	f
polyglot#ft#FTbtm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTbtm()$/;"	f
polyglot#ft#FTchange	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTchange()$/;"	f
polyglot#ft#FTe	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTe()$/;"	f
polyglot#ft#FTent	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTent()$/;"	f
polyglot#ft#FTfs	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTfs()$/;"	f
polyglot#ft#FTheader	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTheader()$/;"	f
polyglot#ft#FThtml	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FThtml()$/;"	f
polyglot#ft#FTidl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTidl()$/;"	f
polyglot#ft#FTinc	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTinc()$/;"	f
polyglot#ft#FTlpc	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTlpc()$/;"	f
polyglot#ft#FTm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTm()$/;"	f
polyglot#ft#FTmm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmm()$/;"	f
polyglot#ft#FTmms	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmms()$/;"	f
polyglot#ft#FTnroff	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTnroff()$/;"	f
polyglot#ft#FTperl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTperl()$/;"	f
polyglot#ft#FTpl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTpl()$/;"	f
polyglot#ft#FTpp	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTpp()$/;"	f
polyglot#ft#FTprogress_asm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_asm()$/;"	f
polyglot#ft#FTprogress_cweb	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_cweb()$/;"	f
polyglot#ft#FTprogress_pascal	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_pascal()$/;"	f
polyglot#ft#FTr	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTr()$/;"	f
polyglot#ft#FTtex	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTtex()$/;"	f
polyglot#ft#FTxml	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTxml()$/;"	f
polyglot#ft#FTy	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTy()$/;"	f
polyglot#ft#McSetf	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#McSetf()$/;"	f
polyglot#ft#ProtoCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#ProtoCheck(default)$/;"	f
polyglot#ft#Redif	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Redif()$/;"	f
polyglot#ft#SQL	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SQL()$/;"	f
polyglot#ft#SetFileTypeSH	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeSH(name)$/;"	f
polyglot#ft#SetFileTypeShell	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeShell(name)$/;"	f
polyglot#init#init	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! polyglot#init#init()$/;"	f
polyglot#init#is_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! polyglot#init#is_disabled(caller, name, path)$/;"	f
polyglot#shebang#Detect	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#Detect()$/;"	f
polyglot#shebang#VimDetect	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#VimDetect()$/;"	f
polyglot#sleuth#GlobForFiletype	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^func! polyglot#sleuth#GlobForFiletype(type)$/;"	f
pony	plugged/vim-polyglot/indent/pony.vim	/^augroup pony$/;"	a
pony#ClearTrailingSpace	plugged/vim-polyglot/autoload/pony.vim	/^function! pony#ClearTrailingSpace(all, alt, ...)$/;"	f
pony#Indent	plugged/vim-polyglot/autoload/pony.vim	/^function! pony#Indent()$/;"	f
pos	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
pos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
posArray	plugged/fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f	package:algo	typeref:typename:*[]int
posDown	plugged/fzf/src/options.go	/^	posDown$/;"	c	package:fzf
posLeft	plugged/fzf/src/options.go	/^	posLeft$/;"	c	package:fzf
posRight	plugged/fzf/src/options.go	/^	posRight$/;"	c	package:fzf
posUp	plugged/fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c	package:fzf	typeref:type:windowPosition
position	plugged/fzf/src/options.go	/^	position    windowPosition$/;"	m	struct:fzf.previewOpts	typeref:typename:windowPosition
positive	plugged/ultisnips/test/test_ContextSnippets.py	/^    positive = "yes xxx"$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
postProcessOptions	plugged/fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f	package:fzf
postscr_level	plugged/vim-polyglot/syntax/postscr.vim	/^  let postscr_level = 2$/;"	v
posx	plugged/fzf/src/tui/light.go	/^	posx     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
posy	plugged/fzf/src/tui/light.go	/^	posy     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
powerline (default)	plugged/lightline.vim/README.md	/^### powerline (default)$/;"	S	chapter:lightline.vim
powerline (default)	plugged/lightline.vim/colorscheme.md	/^### powerline (default)$/;"	S	chapter:Available Colorschemes
powerlineish	plugged/lightline.vim/colorscheme.md	/^### powerlineish$/;"	S	chapter:Available Colorschemes
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
ppos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
ppwiz_highlight_defs	plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
pre	plugged/vimwiki/autoload/vimwiki/style.css	/^p, pre, blockquote, table, ul, ol, dl {$/;"	s
pre	plugged/vimwiki/autoload/vimwiki/style.css	/^pre {$/;"	s
prefixLength	plugged/fzf/src/tokenizer.go	/^	prefixLength int32$/;"	m	struct:fzf.Token	typeref:typename:int32
prepare	plugged/fzf/test/test_go.rb	/^  def prepare$/;"	f	class:Tmux
preserve	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
preserveSpace	plugged/fzf/src/terminal.go	/^	preserveSpace bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pressed	plugged/fzf/src/terminal.go	/^	pressed            string$/;"	m	struct:fzf.Terminal	typeref:typename:string
prevDownTime	plugged/fzf/src/tui/light.go	/^	prevDownTime  time.Time$/;"	m	struct:tui.LightRenderer	typeref:typename:time.Time
prevDownTime	plugged/fzf/src/tui/tui.go	/^	prevDownTime time.Time$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:time.Time
prevLines	plugged/fzf/src/terminal.go	/^	prevLines          []itemLine$/;"	m	struct:fzf.Terminal	typeref:typename:[]itemLine
preview	plugged/fzf/src/tui/light.go	/^	preview  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
preview	plugged/fzf/src/tui/tcell.go	/^	preview     bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
previewBox	plugged/fzf/src/terminal.go	/^	previewBox         *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
previewCancelWait	plugged/fzf/src/constants.go	/^	previewCancelWait = 500 * time.Millisecond$/;"	c	package:fzf
previewChunkDelay	plugged/fzf/src/constants.go	/^	previewChunkDelay = 100 * time.Millisecond$/;"	c	package:fzf
previewDelayed	plugged/fzf/src/constants.go	/^	previewDelayed    = 500 * time.Millisecond$/;"	c	package:fzf
previewOpts	plugged/fzf/src/options.go	/^type previewOpts struct {$/;"	s	package:fzf
previewOpts	plugged/fzf/src/terminal.go	/^	previewOpts        previewOpts$/;"	m	struct:fzf.Terminal	typeref:typename:previewOpts
previewRequest	plugged/fzf/src/terminal.go	/^type previewRequest struct {$/;"	s	package:fzf
previewResult	plugged/fzf/src/terminal.go	/^type previewResult struct {$/;"	s	package:fzf
preview_path	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let preview_path = s:is_wsl_bash$/;"	v
previewed	plugged/fzf/src/terminal.go	/^	previewed          previewed$/;"	m	struct:fzf.Terminal	typeref:typename:previewed
previewed	plugged/fzf/src/terminal.go	/^type previewed struct {$/;"	s	package:fzf
previewer	plugged/fzf/src/terminal.go	/^	previewer          previewer$/;"	m	struct:fzf.Terminal	typeref:typename:previewer
previewer	plugged/fzf/src/terminal.go	/^type previewer struct {$/;"	s	package:fzf
previous	plugged/fzf/src/history.go	/^func (h *History) previous() string {$/;"	f	struct:fzf.History	typeref:typename:string
printAll	plugged/fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f	struct:fzf.Terminal
printHeader	plugged/fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f	struct:fzf.Terminal
printHelp	plugged/vimwiki/test/run_tests.sh	/^printHelp() {$/;"	f
printHighlighted	plugged/fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result Result, colBase tui.ColorPair, colMatch tui.ColorPair/;"	f	struct:fzf.Terminal	typeref:typename:int
printInfo	plugged/fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f	struct:fzf.Terminal
printItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) printItem(result Result, line int, i int, current bool) {$/;"	f	struct:fzf.Terminal
printList	plugged/fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f	struct:fzf.Terminal
printPreview	plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f	struct:fzf.Terminal
printPreviewDelayed	plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreviewDelayed() {$/;"	f	struct:fzf.Terminal
printPrompt	plugged/fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f	struct:fzf.Terminal
printQuery	plugged/fzf/src/terminal.go	/^	printQuery         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
printString	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) printString(text string, pair ColorPair) {$/;"	f	struct:tui.TcellWindow
printVersions	plugged/vimwiki/test/run_tests.sh	/^printVersions() {$/;"	f
print_and	plugged/vim-polyglot/scripts/build	/^def print_and(list)$/;"	f	method:copy_file.rules_to_code.rule_to_code
print_banner	plugged/vim-visual-multi/test/test.py	/^def print_banner(string, f=None):$/;"	f
print_pattern	plugged/vim-polyglot/scripts/import_vim	/^def print_pattern(p)$/;"	f
print_stack	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
print_tests_list	plugged/vim-visual-multi/test/test.py	/^def print_tests_list(tests, f):$/;"	f
printer	plugged/fzf/src/terminal.go	/^	printer            func(string)$/;"	m	struct:fzf.Terminal	typeref:typename:func(string)
printsep	plugged/fzf/src/terminal.go	/^	printsep           string$/;"	m	struct:fzf.Terminal	typeref:typename:string
prior_isk	plugged/vim-polyglot/syntax/rst.vim	/^    let prior_isk = &l:iskeyword$/;"	v
priority	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
procFun	plugged/fzf/src/pattern.go	/^	procFun       map[termType]algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:map[termType]algo.Algo
processTabs	plugged/fzf/src/terminal.go	/^func (t *Terminal) processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(string, int)
process_list	plugged/vim-polyglot/scripts/build	/^def process_list(list, extras)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
progress	plugged/fzf/src/terminal.go	/^	progress           int$/;"	m	struct:fzf.Terminal	typeref:typename:int
progress	plugged/vim-polyglot/scripts/build	/^def progress$/;"	f	method:copy_file
progressMinDuration	plugged/fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c	package:fzf
prompt	plugged/fzf/src/terminal.go	/^	prompt             func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
promptLen	plugged/fzf/src/terminal.go	/^	promptLen          int$/;"	m	struct:fzf.Terminal	typeref:typename:int
promptLine	plugged/fzf/src/terminal.go	/^func (t *Terminal) promptLine() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
protector	plugged/fzf/src/protector/protector.go	/^package protector$/;"	p
protector	plugged/fzf/src/protector/protector_openbsd.go	/^package protector$/;"	p
public.lua.cons	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^function public.lua.cons(x, xs)$/;"	f
public.lua.from_lua	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^function public.lua.from_lua(x)$/;"	f
public.lua.lua_execute	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.lua	/^function public.lua.lua_execute(asts, pointer, tape)$/;"	f
public.lua.lua_parse	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.lua	/^function public.lua.lua_parse(tokens)$/;"	f
public.lua.map	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^function public.lua.map(list, f)$/;"	f
public.lua.parse	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.lua	/^function public.lua.parse(sexp)$/;"	f
public.lua.parse_progress	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.lua	/^function public.lua.parse_progress(tokens, parse_rules, context)$/;"	f
public.lua.plus	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^function public.lua.plus(x, y)$/;"	f
public.lua.rest	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^function public.lua.rest(array, index)$/;"	f
public.lua.to_lua	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.lua	/^function public.lua.to_lua(vobj)$/;"	f
public.lua.tokenize	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.lua	/^function public.lua.tokenize(lex_rule, sexp)$/;"	f
public.vim.lua_execute	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.lua	/^function public.vim.lua_execute(asts, pointer, tape)$/;"	f
public.vim.lua_parse	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.lua	/^function public.vim.lua_parse(tokens)$/;"	f
public.vim.parse	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.lua	/^function public.vim.parse(sexp)$/;"	f
puppet	plugged/vim-polyglot/ctags/puppet.ctags	/^--langdef=puppet$/;"	l
puppet	plugged/vim-polyglot/ctags/puppet_u.ctags	/^--langdef=puppet$/;"	l
puppet#align#AlignHashrockets	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#AlignHashrockets(...) abort$/;"	f
puppet#align#IndentLevel	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#IndentLevel(lnum) abort$/;"	f
puppet#align#LinesInBlock	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#LinesInBlock(lnum) abort$/;"	f
puppet#ctags#OptionFile	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#OptionFile() abort$/;"	f
puppet#ctags#Type	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#Type() abort$/;"	f
puppet#format#Fallback	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Fallback(start_lnum, end_lnum) abort$/;"	f
puppet#format#Format	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Format() abort$/;"	f
puppet#format#Hashrocket	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Hashrocket(start_lnum, end_lnum) abort$/;"	f
puppet#format#Indention	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Indention(start_lnum, end_lnum) abort$/;"	f
push	plugged/fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte) bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
pusher	plugged/fzf/src/reader.go	/^	pusher   func([]byte) bool$/;"	m	struct:fzf.Reader	typeref:typename:func([]byte) bool
pwindow	plugged/fzf/src/terminal.go	/^	pwindow            tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
pwindow	plugged/fzf/src/terminal.go	/^	pwindow      tui.Window$/;"	m	struct:fzf.previewRequest	typeref:typename:tui.Window
py_lines_with_regions	plugged/vim-visual-multi/python/vm.py	/^def py_lines_with_regions():$/;"	f
py_rebuild_from_map	plugged/vim-visual-multi/python/vm.py	/^def py_rebuild_from_map():$/;"	f
python#utils#fix_qflist	plugged/vim-polyglot/autoload/python/utils.vim	/^function! python#utils#fix_qflist() " {{{$/;"	f
python_version	plugged/ultisnips/mypy.ini	/^python_version = 3.7$/;"	k	section:mypy
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :call <SID>close_pane()<cr>$/;"	m
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
q	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> q <Plug>(calendar_hide)$/;"	m
q	plugged/vim-polyglot/autoload/ledger.vim	/^  nnoremap <silent> <buffer> q <c-w><c-p>@=winnr('#')<cr><c-w>c$/;"	m
q	plugged/vim-polyglot/ftplugin/coffee.vim	/^  nnoremap <buffer> <silent> q :hide<CR>$/;"	m
q	plugged/vim-polyglot/ftplugin/ls.vim	/^    nnoremap <buffer> <silent> q :hide<CR>$/;"	m
query	plugged/fzf/src/terminal.go	/^	query         bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
query	plugged/fzf/src/terminal_test.go	/^	query    string$/;"	m	struct:fzf.give	typeref:typename:string
query	plugged/vital.vim/benchmark/database-sqlite.vim	/^  let query .= printf($/;"	v
query	plugged/vital.vim/benchmark/database-sqlite.vim	/^let query .= 'COMMIT;'$/;"	v
query	plugged/vital.vim/benchmark/database-sqlite.vim	/^let query = 'BEGIN TRANSACTION;'$/;"	v
queryCache	plugged/fzf/src/cache.go	/^type queryCache map[string][]Result$/;"	t	package:fzf	typeref:typename:map[string][]Result
queryCacheMax	plugged/fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c	package:fzf	typeref:typename:int
queryLen	plugged/fzf/src/terminal.go	/^	queryLen           [2]int$/;"	m	struct:fzf.Terminal	typeref:typename:[2]int
queryLen	plugged/fzf/src/terminal.go	/^	queryLen int$/;"	m	struct:fzf.itemLine	typeref:typename:int
queued	plugged/fzf/src/tui/light.go	/^	queued        strings.Builder$/;"	m	struct:tui.LightRenderer	typeref:typename:strings.Builder
quoteEntry	plugged/fzf/src/terminal_unix.go	/^func quoteEntry(entry string) string {$/;"	f	package:fzf	typeref:typename:string
quoteEntry	plugged/fzf/src/terminal_windows.go	/^func quoteEntry(entry string) string {$/;"	f	package:fzf	typeref:typename:string
r	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> r <Nop>$/;"	m
randResult	plugged/fzf/src/merger_test.go	/^func randResult() Result {$/;"	f	package:fzf	typeref:typename:Result
rangeEllipsis	plugged/fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c	package:fzf
rdfa_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': /;"	v
rdfa_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
readFile	plugged/fzf/src/terminal_test.go	/^func readFile(path string) ([]byte, error) {$/;"	f	package:fzf	typeref:typename:([]byte, error)
readFiles	plugged/fzf/src/reader.go	/^func (r *Reader) readFiles() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromCommand	plugged/fzf/src/reader.go	/^func (r *Reader) readFromCommand(shell *string, command string) bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromStdin	plugged/fzf/src/reader.go	/^func (r *Reader) readFromStdin() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readerBufferSize	plugged/fzf/src/constants.go	/^	readerBufferSize       = 64 * 1024$/;"	c	package:fzf
readerPollIntervalMax	plugged/fzf/src/constants.go	/^	readerPollIntervalMax  = 50 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalMin	plugged/fzf/src/constants.go	/^	readerPollIntervalMin  = 10 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalStep	plugged/fzf/src/constants.go	/^	readerPollIntervalStep = 5 * time.Millisecond$/;"	c	package:fzf
reading	plugged/fzf/src/terminal.go	/^	reading            bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
readonce	plugged/fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
rebar_file	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir, normal) -> filename:join(Dir, "rebar.config");$/;"	f
rebar_file	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir, test)   ->$/;"	f
rebar_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
reconcile	plugged/vim-polyglot/autoload/ledger.vim	/^    augroup reconcile$/;"	a
reconcile	plugged/vim-polyglot/autoload/ledger.vim	/^  augroup reconcile$/;"	a
redirect_request	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^                def redirect_request(self, req, fp, code, msg, headers, newurl):$/;"	m	class:DummyClassForLocalScope.main.CustomHTTPRedirectHandler
redirect_request	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^                def redirect_request(self, req, fp, code, msg, headers, newurl):$/;"	m	class:DummyClassForLocalScope.main.CustomHTTPRedirectHandler
redraw	plugged/fzf/src/terminal.go	/^func (t *Terminal) redraw(clear bool) {$/;"	f	struct:fzf.Terminal
referrerpolicy	plugged/vim-polyglot/autoload/xml/html5.vim	/^let referrerpolicy = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'str/;"	v
refresh	plugged/fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f	struct:fzf.Terminal
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
regex	plugged/fzf/src/tokenizer.go	/^	regex *regexp.Regexp$/;"	m	struct:fzf.Delimiter	typeref:typename:*regexp.Regexp
regex_extra	plugged/vim-polyglot/ftplugin/sql.vim	/^                let regex_extra = '\\\\w*'$/;"	v
regex_extra	plugged/vim-polyglot/ftplugin/sql.vim	/^        let regex_extra = ''$/;"	v
register_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
relationship_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let relationship_attributes = {$/;"	v
release	plugged/fzf/Makefile	/^release:$/;"	t
relrev	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'inde/;"	v
remember_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
remove	plugged/fzf/uninstall	/^remove() {$/;"	f
remove_line	plugged/fzf/uninstall	/^remove_line() {$/;"	f
renderPreviewArea	plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewArea(unchanged bool) {$/;"	f	struct:fzf.Terminal
renderPreviewSpinner	plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewSpinner() {$/;"	f	struct:fzf.Terminal
renderPreviewText	plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewText(height int, lines []string, lineNo int, unchanged bool) {$/;"	f	struct:fzf.Terminal
renderer	plugged/fzf/src/tui/light.go	/^	renderer *LightRenderer$/;"	m	struct:tui.LightWindow	typeref:typename:*LightRenderer
repeat	plugged/fzf/src/tui/light.go	/^func repeat(r rune, times int) string {$/;"	f	package:tui	typeref:typename:string
repeat#errmsg	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#errmsg()$/;"	f
repeat#invalidate	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeat.vim	plugged/vim-repeat/README.markdown	/^# repeat.vim$/;"	c
repeatPlugin	plugged/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
repeat_custom_motion	plugged/vim-repeat/autoload/repeat.vim	/^    augroup repeat_custom_motion$/;"	a
replace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replacePlaceholder	plugged/fzf/src/terminal.go	/^func (t *Terminal) replacePlaceholder(template string, forcePlus bool, input string, list []*Ite/;"	f	struct:fzf.Terminal	typeref:typename:string
replacePlaceholder	plugged/fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, printsep string, f/;"	f	package:fzf	typeref:typename:string
replace_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replay_user_edits	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
repro	plugged/ultisnips/Makefile	/^repro:$/;"	t
reqBox	plugged/fzf/src/matcher.go	/^	reqBox         *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
reqBox	plugged/fzf/src/terminal.go	/^	reqBox             *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
reqClose	plugged/fzf/src/terminal.go	/^	reqClose$/;"	c	package:fzf
reqFullRedraw	plugged/fzf/src/terminal.go	/^	reqFullRedraw$/;"	c	package:fzf
reqHeader	plugged/fzf/src/terminal.go	/^	reqHeader$/;"	c	package:fzf
reqInfo	plugged/fzf/src/terminal.go	/^	reqInfo$/;"	c	package:fzf
reqJump	plugged/fzf/src/terminal.go	/^	reqJump$/;"	c	package:fzf
reqList	plugged/fzf/src/terminal.go	/^	reqList$/;"	c	package:fzf
reqPreviewDelayed	plugged/fzf/src/terminal.go	/^	reqPreviewDelayed$/;"	c	package:fzf
reqPreviewDisplay	plugged/fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c	package:fzf
reqPreviewEnqueue	plugged/fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c	package:fzf
reqPreviewRefresh	plugged/fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c	package:fzf
reqPrintQuery	plugged/fzf/src/terminal.go	/^	reqPrintQuery$/;"	c	package:fzf
reqPrompt	plugged/fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
reqQuit	plugged/fzf/src/terminal.go	/^	reqQuit$/;"	c	package:fzf
reqRedraw	plugged/fzf/src/terminal.go	/^	reqRedraw$/;"	c	package:fzf
reqRefresh	plugged/fzf/src/terminal.go	/^	reqRefresh$/;"	c	package:fzf
reqReinit	plugged/fzf/src/terminal.go	/^	reqReinit$/;"	c	package:fzf
reqReset	plugged/fzf/src/matcher.go	/^	reqReset$/;"	c	package:fzf
reqRetry	plugged/fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
reset	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset_indent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
resizeWindows	plugged/fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f	struct:fzf.Terminal
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
resource	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*[~|\\-]?>?[[:space:]]*([a-z][a-zA-Z0-9_:]+)[[:space:]]*\\{ *(.*):\//;"	k	langdef:puppet
restart	plugged/fzf/src/reader.go	/^func (r *Reader) restart(command string) {$/;"	f	struct:fzf.Reader
restoreTerminal	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) restoreTerminal() {$/;"	f	unknown:tui.LightRenderer
restoreTerminal	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) restoreTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
restore_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
result	plugged/fzf/src/terminal.go	/^	result   Result$/;"	m	struct:fzf.itemLine	typeref:typename:Result
reverseStringArray	plugged/fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f	package:fzf	typeref:typename:[]string
revision	plugged/fzf/main.go	/^var revision string = "devel"$/;"	v	package:main	typeref:typename:string
rhubarb	plugged/vim-rhubarb/plugin/rhubarb.vim	/^augroup rhubarb$/;"	a
rhubarb#Complete	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Complete(findstart, base) abort$/;"	f
rhubarb#FugitiveUrl	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#FugitiveUrl(...) abort$/;"	f
rhubarb#HomepageForUrl	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#HomepageForUrl(url) abort$/;"	f
rhubarb#JsonDecode	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonDecode(string) abort$/;"	f
rhubarb#JsonEncode	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonEncode(object) abort$/;"	f
rhubarb#RepoRequest	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoRequest(...) abort$/;"	f
rhubarb#RepoSearch	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoSearch(type, q, ...) abort$/;"	f
rhubarb#Request	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Request(path, ...) abort$/;"	f
rhubarb#fugitive_url	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#fugitive_url(...) abort$/;"	f
rhubarb#homepage_for_url	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#homepage_for_url(url) abort$/;"	f
rhubarb#omnifunc	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#omnifunc(findstart, base) abort$/;"	f
rhubarb#repo_request	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_request(...) abort$/;"	f
rhubarb#repo_search	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_search(...) abort$/;"	f
rhubarb#request	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#request(...) abort$/;"	f
rhubarb.vim	plugged/vim-rhubarb/README.markdown	/^# rhubarb.vim$/;"	c
rmcup	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) rmcup() {$/;"	f	struct:tui.LightRenderer
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, dpub_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, graphic_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, dpub_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['cell'] = abstract_role['section'] + ['aria-colindex', 'aria-colspan', 'aria/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['feed'] = role_attributes['list']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['figure'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-le/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-mult/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbo/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['ra/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['none'] = role_attributes['presentation']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['searchbox'] = role_attributes['textbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'ari/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['switch'] = role_attributes['checkbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-sel/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['table'] = abstract_role['section'] + ['aria-colcount', 'aria-rowcount']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['term'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
rubout	plugged/fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f	struct:fzf.Terminal
ruby_minlines	plugged/vim-polyglot/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rule_to_code	plugged/vim-polyglot/scripts/build	/^def rule_to_code(rule)$/;"	f	method:copy_file.rules_to_code
rules_to_code	plugged/vim-polyglot/scripts/build	/^def rules_to_code(rules)$/;"	f	method:copy_file
run	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^func run(w io.Writer, files []string) error {$/;"	f	package:main	typeref:typename:error
run 1 test:	plugged/vim-visual-multi/test/README.md	/^## run 1 test:$/;"	s	chapter:How to Run:
run all tests:	plugged/vim-visual-multi/test/README.md	/^## run all tests:$/;"	s	chapter:How to Run:
run with `g:VM_live_editing` disabled	plugged/vim-visual-multi/test/README.md	/^## run with `g:VM_live_editing` disabled$/;"	s	chapter:How to Run:
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
runVader	plugged/vimwiki/test/run_tests.sh	/^runVader() {$/;"	f
runVint	plugged/vimwiki/test/run_tests.sh	/^runVint() {$/;"	f
run_core	plugged/vim-visual-multi/test/test.py	/^def run_core(paths, nvim=False):$/;"	f
run_one_test	plugged/vim-visual-multi/test/test.py	/^def run_one_test(test, f=None, nvim=False):$/;"	f
run_script	plugged/vim-polyglot/scripts/test	/^def run_script(src)$/;"	f
run_vimscript	plugged/vim-polyglot/scripts/test	/^def run_vimscript(src)$/;"	f
running	plugged/fzf/src/terminal.go	/^	running            bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
running_on_windows	plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
rust	plugged/vim-polyglot/after/syntax/rust.vim	/^    augroup rust.vim.after$/;"	a
rust	plugged/vim-polyglot/ftplugin/rust.vim	/^    augroup rust.vim.DelimitMate$/;"	a
rust	plugged/vim-polyglot/ftplugin/rust.vim	/^augroup rust.vim.PreWrite$/;"	a
rust#AppendCmdLine	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#GetConfigVar	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#GetConfigVar(name, default)$/;"	f
rust#IncludeExpr	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#IncludeExpr(fname) abort$/;"	f
rust#Jump	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Load	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Load()$/;"	f
rust#Play	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rust#Test	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Test(mods, winsize, all, options) abort$/;"	f
rust#debugging#Info	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#Info() abort$/;"	f
rust#debugging#InfoToClipboard	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToClipboard() abort$/;"	f
rust#debugging#InfoToFile	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToFile(filename) abort$/;"	f
rust#delimitmate#onMap	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onMap() abort$/;"	f
rust#delimitmate#onUnmap	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onUnmap() abort$/;"	f
rust#tags#IsUCtags	plugged/vim-polyglot/autoload/rust/tags.vim	/^function! rust#tags#IsUCtags() abort$/;"	f
rustfmt#Cmd	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Cmd()$/;"	f
rustfmt#DetectVersion	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#DetectVersion()$/;"	f
rustfmt#Format	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#FormatRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
rustfmt#Load	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Load()$/;"	f
rustfmt#PreWrite	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#PreWrite()$/;"	f
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
s	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    augroup s:NoMoveYank$/;"	a
s	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s2)$/;"	m
s	plugged/vim-polyglot/syntax/xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	plugged/vim-polyglot/syntax/xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^    let s = getline(i)$/;"	v
s	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> s             :call startify#set_mark('S')<cr>$/;"	m
s	plugged/vital.vim/test/Random/xor128.c	/^uint32_t s;$/;"	v	typeref:typename:uint32_t
s	vimrc	/^map s <Plug>(incsearch-nohl)<Plug>(easymotion-sn)$/;"	m
s/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s:ALL_MODES	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^let s:ALL_MODES = 'noiclxs'$/;"	v
s:ALL_MODES_LIST	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^let s:ALL_MODES_LIST = split(s:ALL_MODES, '\\zs')$/;"	v
s:ATTR_NAMES	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^let s:ATTR_NAMES = {$/;"	v
s:AUTOCMDEVENTS	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:AUTOCMDEVENTS = getcompletion('', 'event')$/;"	v
s:AUTOLOADABLIZE_TEMPLATE	plugged/vital.vim/autoload/vitalizer.vim	/^let s:AUTOLOADABLIZE_TEMPLATE = readfile(s:FP.join(s:DATA_DIR, 'autoloadablize.vim'))$/;"	v
s:Accents	plugged/vim-polyglot/after/syntax/tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
s:AccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
s:AdaBlockStart	plugged/vim-polyglot/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\/;"	v
s:Add	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
s:AddBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
s:AddHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
s:AddITags	plugged/vim-polyglot/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
s:AddLogSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddLogSection(label, a, b) abort$/;"	f
s:AddParagraph	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:AddParagraph(paragraph) abort$/;"	f
s:AddSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
s:AddToClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
s:AfterAccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
s:AfterBlockOpening	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
s:AfterEndKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
s:AfterHangingSplat	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
s:AfterIndentKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
s:AfterLeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
s:AfterUnbalancedBracket	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
s:Alien2	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien2()$/;"	f
s:Alien3	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien3()$/;"	f
s:Alien4	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien4()$/;"	f
s:Alien5	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien5()$/;"	f
s:Alien6	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien6()$/;"	f
s:AlphaColor	plugged/clrzr/autoload/clrzr.vim	/^function! s:AlphaColor(Color_Func, color_text_in)$/;"	f
s:AlternatePair	plugged/vim-polyglot/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
s:Apply	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Apply(detected, safe_only) abort$/;"	f
s:ArgSplit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ArgSplit(string) abort$/;"	f
s:Args	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
s:AskPassArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
s:AwkErr	plugged/clrzr/autoload/clrzr.vim	/^function! s:AwkErr(chan, msg)$/;"	f
s:AwkExit	plugged/clrzr/autoload/clrzr.vim	/^function! s:AwkExit(job_id, exit)$/;"	f
s:AwkOut	plugged/clrzr/autoload/clrzr.vim	/^function! s:AwkOut(chan, msg)$/;"	f
s:BEGIN_BLOCK	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BLOCKLEVEL_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:BMAdd	plugged/vim-polyglot/extras/menu.vim	/^func s:BMAdd()$/;"	f
s:BMCanAdd	plugged/vim-polyglot/extras/menu.vim	/^func s:BMCanAdd(name, num)$/;"	f
s:BMFilename	plugged/vim-polyglot/extras/menu.vim	/^func s:BMFilename(name, num)$/;"	f
s:BMHash	plugged/vim-polyglot/extras/menu.vim	/^func s:BMHash(name)$/;"	f
s:BMHash2	plugged/vim-polyglot/extras/menu.vim	/^func s:BMHash2(name)$/;"	f
s:BMMunge	plugged/vim-polyglot/extras/menu.vim	/^func s:BMMunge(fname, bnum)$/;"	f
s:BMRemove	plugged/vim-polyglot/extras/menu.vim	/^func s:BMRemove()$/;"	f
s:BMShow	plugged/vim-polyglot/extras/menu.vim	/^func s:BMShow(...)$/;"	f
s:BMTruncName	plugged/vim-polyglot/extras/menu.vim	/^func s:BMTruncName(fname)$/;"	f
s:BRACKET_CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:BSearch	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:BSearch(resultset, left, right, vlnum) abort$/;"	f
s:BULK_SIZE	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:BULK_SIZE = 32$/;"	v
s:Balanced	plugged/vim-polyglot/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
s:BeginElementFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
s:BeginElementFoundIfEmpty	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
s:BeginningOfClauseFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol, lnum, i)$/;"	f
s:BlameBufnr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
s:BlameCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
s:BlameCommitFileLnum	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
s:BlameJump	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
s:BlameLeave	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
s:BlameMaps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameMaps(is_ftplugin) abort$/;"	f
s:BlameQuit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
s:BlameRehighlight	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
s:BlameSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, options) abort$/;"	f
s:BlankDown	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankDown() abort$/;"	f
s:BlankUp	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankUp() abort$/;"	f
s:BlobTemp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
s:BlockComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
s:Block_pattern	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
s:BlurStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
s:BranchCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BranchCfile(result) abort$/;"	f
s:BrowserOpen	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BrowserOpen(url, mods, echo_copy) abort$/;"	f
s:BufEnterHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook(fname) abort " {{{2$/;"	f
s:BufName	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
s:BufReadPostHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook(fname) abort " {{{2$/;"	f
s:BufWinEnterHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufWinEnterHook(fname) abort " {{{2$/;"	f
s:BufWritePostHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook(fname) abort " {{{2$/;"	f
s:Buffer	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^let s:Buffer = vital#easymotion#import('Vim.Buffer')$/;"	v
s:BuildCommand	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! s:BuildCommand(args, for_shell) abort$/;"	f
s:BuildEnvPrefix	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildEnvPrefix(env) abort$/;"	f
s:BuildResizeCmd	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:BuildResizeCmd(layout, resize, vresize) abort$/;"	f
s:BuildShell	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, git, args) abort$/;"	f
s:BuildStructures	plugged/vim-polyglot/indent/twig.vim	/^fun! s:BuildStructures()$/;"	f
s:C	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzy.vim	/^let s:C = vital#incsearch_fuzzy#import('Data.String.Converter')$/;"	v
s:C	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyspell.vim	/^let s:C = vital#incsearch_fuzzy#import('Data.String.Converter')$/;"	v
s:C	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyword.vim	/^let s:C = vital#incsearch_fuzzy#import('Data.String.Converter')$/;"	v
s:C	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:C = s:V.import('ColorEcho')$/;"	v
s:CLRZR_AWK_SCRIPT_PATH	plugged/clrzr/autoload/clrzr.vim	/^const s:CLRZR_AWK_SCRIPT_PATH = expand('<sfile>:p:h') . '\/clrzr.awk'$/;"	C
s:CMMA	plugged/clrzr/autoload/clrzr.vim	/^const s:CMMA = '\\s*,\\s*'$/;"	C
s:COLORS	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:COLORS = {$/;"	v
s:COMPOUND_ASSIGNMENT	plugged/vim-polyglot/indent/ls.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:COMPOUND_ASSIGNMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|'$/;"	v
s:COMPOUND_EXPRESSION	plugged/vim-polyglot/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTENT_TYPE	plugged/syntastic/syntax_checkers/html/validator.vim	/^let s:CONTENT_TYPE = {$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\|do\\)\\>$'$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_BLOCK	plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:CR	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! s:CR(normal, just_mrkr) abort$/;"	f
s:CSSIndent	plugged/vim-polyglot/indent/html.vim	/^func! s:CSSIndent()$/;"	f
s:CacheErrors	plugged/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(buf, checker_names) abort " {{{2$/;"	f
s:CacheRstFold	plugged/vim-polyglot/autoload/RstFold.vim	/^function s:CacheRstFold()$/;"	f
s:CalcVCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
s:CallBaseIndent	plugged/vim-polyglot/indent/twig.vim	/^function! s:CallBaseIndent()$/;"	f
s:Cancell	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:Cancell() " {{{$/;"	f
s:Capture	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Capture(cmd) abort$/;"	f
s:Case	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^let s:Case = {}$/;"	v
s:Case.camel	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.camel(word) abort$/;"	f
s:Case.capitalize	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.capitalize(word) abort$/;"	f
s:Case.convert	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.convert(type) abort$/;"	f
s:Case.dash	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.dash(word) abort$/;"	f
s:Case.dot	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.dot(word) abort$/;"	f
s:Case.lower	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.lower(word) abort$/;"	f
s:Case.menu	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.menu() abort$/;"	f
s:Case.pascal	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.pascal(word) abort$/;"	f
s:Case.snake	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.snake(word) abort$/;"	f
s:Case.snake_upper	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.snake_upper(word) abort$/;"	f
s:Case.space	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.space(word) abort$/;"	f
s:Case.title	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.title(word) abort$/;"	f
s:Case.upper	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! s:Case.upper(word) abort$/;"	f
s:CeilingDirectories	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CeilingDirectories() abort$/;"	f
s:CfilePorcelain	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CfilePorcelain(...) abort$/;"	f
s:CharAtCursor	plugged/vim-polyglot/autoload/pony.vim	/^function! s:CharAtCursor(...)$/;"	f
s:CheckBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
s:CheckCustomTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
s:CheckForFunctions	plugged/vim-polyglot/syntax/octave.vim	/^function! s:CheckForFunctions()$/;"	f
s:CheckPairedIsLastCharacter	plugged/vim-polyglot/after/indent/tex.vim	/^function! s:CheckPairedIsLastCharacter(lnum, col) "{{{$/;"	f
s:CheckSubtype	plugged/vim-polyglot/autoload/svelte.vim	/^  function! s:CheckSubtype()$/;"	f
s:CheckTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
s:CheckToIgnoreRightParen	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CheckToIgnoreRightParen( prev_lnum, num_levels )$/;"	f
s:ChompDefault	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
s:ChompStderr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompStderr(...) abort$/;"	f
s:Class	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:Class = {}$/;"	v
s:Class._clone	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:Class._clone() abort$/;"	f
s:ClassSep	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
s:ClearBufferProps	plugged/clrzr/autoload/clrzr.vim	/^function! s:ClearBufferProps(bufinfo)$/;"	f
s:ClearCache	plugged/syntastic/plugin/syntastic.vim	/^function! s:ClearCache(buf) abort " {{{2$/;"	f
s:ClearTokenCacheIfNeeded	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
s:ClosingBracketOnEmptyLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
s:ClosingHeredocDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
s:Closure	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^let s:Closure = {$/;"	v
s:Closure._decrease	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure._decrease() abort$/;"	f
s:Closure.apply	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.apply(arglist) abort$/;"	f
s:Closure.call	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.call(...) abort$/;"	f
s:Closure.compose	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.compose(...) abort$/;"	f
s:Closure.delete_function	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.delete_function() abort$/;"	f
s:Closure.to_function	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.to_function(...) abort$/;"	f
s:Closure.with_arglist	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.with_arglist(arglist) abort$/;"	f
s:Closure.with_args	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.with_args(...) abort$/;"	f
s:Closure.with_context	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.with_context(context) abort$/;"	f
s:Closure.with_param	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:Closure.with_param(param_list) abort$/;"	f
s:CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
s:CoffeeCompileClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
s:CoffeeCompileResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
s:CoffeeCompileToBuf	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
s:CoffeeComplete	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
s:CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
s:CoffeeMakeDeprecated	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
s:CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
s:CoffeeRunClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
s:CoffeeRunResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
s:CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
s:CoffeeWatchClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
s:CoffeeWatchResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
s:CoffeeWatchUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
s:ColonEnd	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\/;"	v
s:ColonStart	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:Color	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:Color = {}$/;"	v
s:Color.as_hsl_str	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:Color.as_hsl_str() abort$/;"	f
s:Color.as_rgb_hex	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:Color.as_rgb_hex() abort$/;"	f
s:Color.as_rgb_str	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:Color.as_rgb_str() abort$/;"	f
s:Color.distance	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:Color.distance(color) abort$/;"	f
s:Color.eq	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:Color.eq(color) abort$/;"	f
s:Comment	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Comment(arg)$/;"	f
s:CommentKeywordMatch	plugged/vim-polyglot/syntax/swift.vim	/^function! s:CommentKeywordMatch(keyword)$/;"	f
s:CommentLine	plugged/vim-polyglot/indent/occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:CommentOrString	plugged/vim-polyglot/indent/mp.vim	/^function! s:CommentOrString(line, pos)$/;"	f
s:CommitInteractive	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, options, patch) abort$/;"	f
s:CommitSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:CompactView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:CompactView() abort$/;"	f
s:CompactViewIncr	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:CompactViewIncr(base_vlnum) abort$/;"	f
s:CompletableSubcommands	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletableSubcommands(dir) abort$/;"	f
s:CompleteBisect	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteBisect(A, L, P, ...) abort$/;"	f
s:CompleteCheckerName	plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
s:CompleteFiletypes	plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
s:CompleteHeads	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteHeads(dir) abort$/;"	f
s:CompletePush	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletePush(A, L, P, ...) abort$/;"	f
s:CompleteRemote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P, ...) abort$/;"	f
s:CompleteRevision	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P, ...) abort$/;"	f
s:CompleteSub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
s:ConfigCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigCallback(r, into) abort$/;"	f
s:ConfigLengthSort	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigLengthSort(i1, i2) abort$/;"	f
s:ConfigTimestamps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
s:ConsumeResult	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:ConsumeResult(max) abort$/;"	f
s:ContainedGroup	plugged/vim-polyglot/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
s:ContainingCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
s:Context	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Context(reverse) abort$/;"	f
s:ContextMotion	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:ContextMotion(reverse) abort$/;"	f
s:ContinuedHangingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
s:ContinuedLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
s:Continues	plugged/vim-polyglot/indent/javascript.vim	/^function s:Continues()$/;"	f
s:Cookie	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^let s:Cookie = {$/;"	v
s:Cookie.attributes	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.attributes() abort$/;"	f
s:Cookie.creation_time	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.creation_time() abort$/;"	f
s:Cookie.domain	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.domain() abort$/;"	f
s:Cookie.expiry_time	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.expiry_time() abort$/;"	f
s:Cookie.is_expired	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.is_expired(...) abort$/;"	f
s:Cookie.is_host_only	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.is_host_only() abort$/;"	f
s:Cookie.is_http_only	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.is_http_only() abort$/;"	f
s:Cookie.is_match	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.is_match(url) abort$/;"	f
s:Cookie.is_persistent	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.is_persistent() abort$/;"	f
s:Cookie.is_secure	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.is_secure() abort$/;"	f
s:Cookie.is_valid	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.is_valid() abort$/;"	f
s:Cookie.last_access_time	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.last_access_time() abort$/;"	f
s:Cookie.make_cookie_header	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.make_cookie_header() abort$/;"	f
s:Cookie.name	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.name() abort$/;"	f
s:Cookie.path	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.path() abort$/;"	f
s:Cookie.set_value	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.set_value(value) abort$/;"	f
s:Cookie.touch	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.touch(...) abort$/;"	f
s:Cookie.value	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:Cookie.value() abort$/;"	f
s:CountITags	plugged/vim-polyglot/indent/html.vim	/^func! s:CountITags(text)$/;"	f
s:CountTagsAndState	plugged/vim-polyglot/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
s:CountUnbalancedParen	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CountUnbalancedParen( line, paren_to_check )$/;"	f
s:Counter	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter(count) abort "{{{$/;"	f
s:Counter	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Counter = {$/;"	v
s:Counter	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^let s:Counter = {$/;"	v
s:Counter._hash	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter._hash(x) abort$/;"	f
s:Counter._init_count	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter._init_count(x) abort$/;"	f
s:Counter._tick	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter._tick(...) abort "{{{$/;"	f
s:Counter._to_iter_countable	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter._to_iter_countable(countable) abort$/;"	f
s:Counter.add	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.add(countable) abort$/;"	f
s:Counter.clear	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.clear() abort$/;"	f
s:Counter.del	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.del(x) abort$/;"	f
s:Counter.elements	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.elements() abort$/;"	f
s:Counter.finishif	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.finishif(func, args, ...) abort "{{{$/;"	f
s:Counter.get	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.get(value) abort$/;"	f
s:Counter.hasdone	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.hasdone() abort "{{{$/;"	f
s:Counter.in	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.in(x) abort$/;"	f
s:Counter.intersection	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.intersection(other) abort$/;"	f
s:Counter.keep_positive	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.keep_positive() abort$/;"	f
s:Counter.leftcount	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.leftcount() abort "{{{$/;"	f
s:Counter.most_common	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.most_common(...) abort$/;"	f
s:Counter.repeat	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.repeat(...) abort "{{{$/;"	f
s:Counter.reverse	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.reverse() abort$/;"	f
s:Counter.set	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.set(x, count) abort$/;"	f
s:Counter.subtract	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.subtract(countable) abort$/;"	f
s:Counter.to_dict	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.to_dict() abort$/;"	f
s:Counter.to_list	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.to_list() abort$/;"	f
s:Counter.union	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.union(other) abort$/;"	f
s:Counter.values	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:Counter.values() abort$/;"	f
s:Cpath	plugged/vim-polyglot/syntax/lex.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/lex.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h")."\/cpp.vim")$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/yacc.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/yacc.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h").(exists("g:yacc_uses_cpp")? "\/cpp.vim" : "\/c.vi/;"	v
s:CreateCoordKeyDict	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
s:CreateOrExpression	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
s:CssFirstUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
s:CssPrevNonComment	plugged/vim-polyglot/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
s:CssUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
s:CurlResponse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CurlResponse(result) abort$/;"	f
s:CurrentNimFile	plugged/vim-polyglot/autoload/nim.vim	/^fun! s:CurrentNimFile() abort$/;"	f
s:Cursor	plugged/vim-visual-multi/autoload/vm/insert.vim	/^let s:Cursor = {}$/;"	v
s:Cursor.new	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Cursor.new(ln, col) abort$/;"	f
s:Cursor.update	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Cursor.update(ln, change) abort$/;"	f
s:CursorOptions	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:CursorOptions() abort$/;"	f
s:DATA_DIR	plugged/vital.vim/autoload/vitalizer.vim	/^let s:DATA_DIR = s:FP.join(g:vitalizer#vital_dir, 'data', 'vital')$/;"	v
s:DEFAULTAUGROUP	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:DEFAULTAUGROUP = 'vital-Schedule'$/;"	v
s:DEFAULTS	plugged/syntastic/syntax_checkers/html/validator.vim	/^let s:DEFAULTS = {$/;"	v
s:DEFAULTS	plugged/syntastic/syntax_checkers/html/w3.vim	/^let s:DEFAULTS = {$/;"	v
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DEFAULT_WAIT_INTERVAL	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:DEFAULT_WAIT_INTERVAL = 30$/;"	v
s:DESCRIPTORS_PATTERN	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:DESCRIPTORS_PATTERN = '[' . join(keys(s:format_info), '') . ']'$/;"	v
s:DICT_T	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:DICT_T = type({})$/;"	v
s:DIRECTION	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	plugged/incsearch.vim/test/n_and_N.vim	/^let s:DIRECTION = { 'backward': 0, 'forward': 1}$/;"	v
s:DIRECTION	plugged/vim-asterisk/autoload/asterisk.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:DIRECTION = { 'forward': 0, 'backward': 1, 'bidirection': 2}$/;"	v
s:DIRECTION	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:DIRECTION = {'forward': 0, 'backward': 1}$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/ls.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/moon.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DateTime	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:DateTime = s:_new_class('DateTime')$/;"	v
s:DateTime	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:DateTime['+'] = s:DateTime.to$/;"	v
s:DateTime	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:DateTime['-'] = s:DateTime.delta$/;"	v
s:DateTime	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:DateTime['=='] = s:DateTime.is$/;"	v
s:DateTime._normalize	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime._normalize() abort$/;"	f
s:DateTime.compare	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.compare(dt) abort$/;"	f
s:DateTime.day	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.day() abort$/;"	f
s:DateTime.day_of_week	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.day_of_week() abort$/;"	f
s:DateTime.day_of_year	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.day_of_year() abort$/;"	f
s:DateTime.days_from_era	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.days_from_era() abort$/;"	f
s:DateTime.delta	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.delta(dt) abort$/;"	f
s:DateTime.format	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.format(format, ...) abort$/;"	f
s:DateTime.hour	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.hour() abort$/;"	f
s:DateTime.is	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.is(dt) abort$/;"	f
s:DateTime.is_leap_year	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.is_leap_year() abort$/;"	f
s:DateTime.julian_day	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.julian_day(...) abort$/;"	f
s:DateTime.minute	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.minute() abort$/;"	f
s:DateTime.month	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.month() abort$/;"	f
s:DateTime.quarter	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.quarter() abort$/;"	f
s:DateTime.second	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.second() abort$/;"	f
s:DateTime.seconds_of_day	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.seconds_of_day() abort$/;"	f
s:DateTime.strftime	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.strftime(format, ...) abort$/;"	f
s:DateTime.timezone	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.timezone(...) abort$/;"	f
s:DateTime.to	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.to(...) abort$/;"	f
s:DateTime.to_string	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.to_string() abort$/;"	f
s:DateTime.unix_time	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.unix_time() abort$/;"	f
s:DateTime.year	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:DateTime.year() abort$/;"	f
s:Debug	plugged/clrzr/autoload/clrzr.vim	/^function! s:Debug(var)$/;"	f
s:DecreaseFunc	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
s:DecreaseIndent	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseIndent()$/;"	f
s:DecreaseIndentOnClosingTag	plugged/vim-polyglot/indent/mp.vim	/^function! s:DecreaseIndentOnClosingTag(curr_indent)$/;"	f
s:DefRuby	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
s:DefactorizeLine	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:DefactorizeLine(line, fname_guess) abort$/;"	f
s:DefaultContext	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! s:DefaultContext() abort$/;"	f
s:DefaultPatternSet	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^let s:DefaultPatternSet = {'_cache': {}}$/;"	v
s:DefaultPatternSet.dec_octet	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.dec_octet() abort$/;"	f
s:DefaultPatternSet.fragment	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.fragment() abort$/;"	f
s:DefaultPatternSet.get	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.get(component, ...) abort$/;"	f
s:DefaultPatternSet.h16	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.h16() abort$/;"	f
s:DefaultPatternSet.host	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.host() abort$/;"	f
s:DefaultPatternSet.ip_literal	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.ip_literal() abort$/;"	f
s:DefaultPatternSet.ipv4address	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.ipv4address() abort$/;"	f
s:DefaultPatternSet.ipv6address	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.ipv6address() abort$/;"	f
s:DefaultPatternSet.ipv_future	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.ipv_future() abort$/;"	f
s:DefaultPatternSet.ls32	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.ls32() abort$/;"	f
s:DefaultPatternSet.path	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.path() abort$/;"	f
s:DefaultPatternSet.path_abempty	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.path_abempty() abort$/;"	f
s:DefaultPatternSet.path_absolute	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.path_absolute() abort$/;"	f
s:DefaultPatternSet.path_noscheme	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.path_noscheme() abort$/;"	f
s:DefaultPatternSet.path_rootless	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.path_rootless() abort$/;"	f
s:DefaultPatternSet.pchar	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.pchar() abort$/;"	f
s:DefaultPatternSet.pct_encoded	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.pct_encoded() abort$/;"	f
s:DefaultPatternSet.port	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.port() abort$/;"	f
s:DefaultPatternSet.query	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.query() abort$/;"	f
s:DefaultPatternSet.reg_name	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.reg_name() abort$/;"	f
s:DefaultPatternSet.scheme	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.scheme() abort$/;"	f
s:DefaultPatternSet.segment	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.segment() abort$/;"	f
s:DefaultPatternSet.segment_nz	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.segment_nz() abort$/;"	f
s:DefaultPatternSet.segment_nz_nc	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.segment_nz_nc() abort$/;"	f
s:DefaultPatternSet.sub_delims	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.sub_delims() abort$/;"	f
s:DefaultPatternSet.unreserved	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.unreserved() abort$/;"	f
s:DefaultPatternSet.userinfo	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:DefaultPatternSet.userinfo() abort$/;"	f
s:DefineInlineMarkup	plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
s:DefineOneInlineMarkup	plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
s:DeindentingKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
s:DeleteLines	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:DeleteLines(start, end) abort$/;"	f
s:Detect	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Detect() abort$/;"	f
s:DetectEditorConfig	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:DetectEditorConfig(absolute_path, ...) abort$/;"	f
s:Dict	plugged/vital.vim/autoload/vitalizer.vim	/^let s:Dict = s:V.import('Data.Dict')$/;"	v
s:Diff	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:Diff(orig, modi) abort$/;"	f
s:DiffFile	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:DiffFile(orig, modi) abort$/;"	f
s:DiffModifier	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DiffModifier(count, default) abort$/;"	f
s:DifftoolSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DifftoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
s:DirCheck	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
s:DirCommitFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
s:DirRev	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
s:DirUrlPrefix	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirUrlPrefix(...) abort$/;"	f
s:DiscardResult	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:DiscardResult() abort$/;"	f
s:Do	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
s:DoAutocmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmd(...) abort$/;"	f
s:DoAutocmdChanged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmdChanged(dir) abort$/;"	f
s:DoSearchAsync	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:DoSearchAsync(args) abort$/;"	f
s:DoSearchSync	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:DoSearchSync(args) abort$/;"	f
s:DoStagePushHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStagePushHeader(value) abort$/;"	f
s:DoStageUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
s:DoStageUnpushedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
s:DoStageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
s:DoStageUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
s:DoStageUntracked	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
s:DoStageUntrackedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
s:DoToggleHeadHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
s:DoToggleHelpHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHelpHeader(value) abort$/;"	f
s:DoTogglePushHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoTogglePushHeader(value) abort$/;"	f
s:DoToggleStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
s:DoToggleStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
s:DoToggleUnpulled	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
s:DoToggleUnpulledHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
s:DoToggleUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
s:DoToggleUnpushedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
s:DoToggleUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
s:DoToggleUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
s:DoToggleUntracked	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
s:DoToggleUntrackedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
s:DoUnstageStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
s:DoUnstageStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
s:DoUnstageUnpulled	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
s:DoUnstageUnpulledHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
s:DoUnstageUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
s:DoUnstageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
s:DoWhile	plugged/vim-polyglot/indent/javascript.vim	/^function s:DoWhile()$/;"	f
s:Doautocmd	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:Doautocmd = s:modules.get('Doautocmd')$/;"	v
s:DocumentationForSymbolRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:DocumentationForSymbolRequest(xmlSig, assembly)$/;"	f
s:DotPackagesFile	plugged/vim-polyglot/autoload/dart.vim	/^function! s:DotPackagesFile() abort$/;"	f
s:DotPromptUser	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
s:DotRelative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
s:ECRDedent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRDedent(...) abort$/;"	f
s:ECRIndent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRIndent(...) abort$/;"	f
s:ELSE_COND	plugged/vim-polyglot/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:EMPTY_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:ES	plugged/vim-polyglot/indent/vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:ESCAPEDCHARS	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:ESCAPEDCHARS	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n\\"#%'*<?`|"$/;"	v
s:EasyMotion	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive, ...) " {{{$/;"	f
s:Echo	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! s:Echo(format, argv, hlgroup, save) abort$/;"	f
s:Echo	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:Echo(message) abort$/;"	f
s:EchoGlobalVariables	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
s:Edit	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^let s:Edit = {}$/;"	v
s:Edit	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^let s:Edit = {}$/;"	v
s:Edit	plugged/vim-visual-multi/autoload/vm/edit.vim	/^let s:Edit = {'skip_index': -1}$/;"	v
s:Edit	plugged/vim-visual-multi/autoload/vm/edit.vim	/^let s:Edit.extra_spaces = {}$/;"	v
s:Edit._numbers	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit._numbers(start, step, separator, append) abort$/;"	f
s:Edit.after_commands	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.after_commands(reselect, ...) abort$/;"	f
s:Edit.align	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.align() abort$/;"	f
s:Edit.apply_change	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.apply_change() abort$/;"	f
s:Edit.before_commands	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.before_commands() abort$/;"	f
s:Edit.block_paste	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.block_paste(before) abort$/;"	f
s:Edit.change	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.change(X, count, reg, smart_case) abort$/;"	f
s:Edit.convert_vimreg	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.convert_vimreg(as_block) abort$/;"	f
s:Edit.delete	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.delete(X, register, count, manual) abort$/;"	f
s:Edit.dot	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.dot() abort$/;"	f
s:Edit.duplicate	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.duplicate() abort$/;"	f
s:Edit.ex	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.ex() abort$/;"	f
s:Edit.ex_done	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.ex_done() abort$/;"	f
s:Edit.ex_get	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.ex_get() abort$/;"	f
s:Edit.extra_spaces.add	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.extra_spaces.add(r, ...) abort$/;"	f
s:Edit.extra_spaces.remove	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.extra_spaces.remove(...) abort$/;"	f
s:Edit.fill_register	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.fill_register(reg, text, force_ow) abort$/;"	f
s:Edit.numbers	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.numbers(start, app) abort$/;"	f
s:Edit.paste	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.paste(before, vim_reg, reselect, register, ...) abort$/;"	f
s:Edit.post_process	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.post_process(reselect, ...) abort$/;"	f
s:Edit.process	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.process(cmd, ...) abort$/;"	f
s:Edit.process_visual	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.process_visual(cmd, recursive) abort$/;"	f
s:Edit.replace	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.replace() abort$/;"	f
s:Edit.replace_chars	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.replace_chars() abort$/;"	f
s:Edit.replace_expression	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.replace_expression() abort$/;"	f
s:Edit.replace_regions_with_text	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.replace_regions_with_text(text, ...) abort$/;"	f
s:Edit.rotate	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.rotate() abort$/;"	f
s:Edit.run_ex	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.run_ex(...) abort$/;"	f
s:Edit.run_macro	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.run_macro() abort$/;"	f
s:Edit.run_normal	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.run_normal(cmd, ...) abort$/;"	f
s:Edit.run_visual	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:Edit.run_visual(cmd, recursive, ...) abort$/;"	f
s:Edit.shift	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.shift(dir) abort$/;"	f
s:Edit.store_widths	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.store_widths(...) abort$/;"	f
s:Edit.surround	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.surround() abort$/;"	f
s:Edit.surround_tags	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.surround_tags() abort$/;"	f
s:Edit.transpose	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:Edit.transpose() abort$/;"	f
s:Edit.xdelete	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.xdelete(key, cnt) abort$/;"	f
s:Edit.yank	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:Edit.yank(reg, silent, ...) abort$/;"	f
s:EditClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
s:EditConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
s:EditUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^    function s:EditUrlUnderCursor()$/;"	f
s:EditVimrc	plugged/vim-polyglot/extras/menu.vim	/^fun! s:EditVimrc()$/;"	f
s:EditorConfigToOptions	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:EditorConfigToOptions(pairs) abort$/;"	f
s:Eglobal	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Eglobal(bang, ...) range$/;"	f
s:Ellipsis	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Ellipsis() abort$/;"	f
s:Ematch	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Ematch(...)$/;"	f
s:Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
s:EmptyInsideString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
s:EnableByDefault	plugged/vim-polyglot/syntax/python.vim	/^function! s:EnableByDefault(name)$/;"	f
s:Enabled	plugged/vim-polyglot/syntax/python.vim	/^function! s:Enabled(name)$/;"	f
s:EndBlockIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
s:EndSkipExpr	plugged/vim-polyglot/indent/ruby.vim	/^function! s:EndSkipExpr()$/;"	f
s:EndStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:EndStructure(name)$/;"	f
s:Enter_annotation_buffer	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Enter_annotation_buffer(annot_file_path)$/;"	f
s:ErlangCalcIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
s:ErlangCalcIndent2	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
s:ErrMsg	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
s:Error	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:Error(msg, ...) abort$/;"	f
s:Escape	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! s:Escape(for_shell, str)$/;"	f
s:EscapeAndUnescape	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:EscapeAndUnescape(vimregex, delim)$/;"	f
s:Esubstitute	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Esubstitute(...) range$/;"	f
s:Event	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Event = {$/;"	v
s:Event.add	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Event.add(augroup, event, pat, task) abort "{{{$/;"	f
s:Event.remove	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Event.remove(augroup, event, pat, task) abort "{{{$/;"	f
s:Evglobal	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Evglobal(...) range$/;"	f
s:ExchangeReplaceSpecials	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExchangeReplaceSpecials(replacement, sort)$/;"	f
s:ExecMove	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:ExecMove(cmd) abort$/;"	f
s:ExecPath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
s:ExecSearch	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:ExecSearch(args) abort$/;"	f
s:Exit_annotation_buffer	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
s:ExitingOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
s:ExitingOneLineScope	plugged/vim-polyglot/indent/typescript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
s:Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
s:Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
s:ExpandAtomsInBrackets	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExpandAtomsInBrackets(bracket)$/;"	f
s:ExpandMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ExpandMap(map)$/;"	f
s:ExpandVar	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
s:ExpandVarLegacy	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
s:ExpireStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
s:ExprCol	plugged/vim-polyglot/indent/javascript.vim	/^function s:ExprCol()$/;"	f
s:ExtendedRegex2VimRegex	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegex(extendedregex, ...)$/;"	f
s:ExtendedRegex2VimRegexLineWise	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegexLineWise(...) range$/;"	f
s:ExtraBrackets	plugged/vim-polyglot/indent/falcon.vim	/^function s:ExtraBrackets(lnum)$/;"	f
s:ExtraBrackets	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
s:Extract_type_data	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Extract_type_data(block_pattern, annot_file_name)$/;"	f
s:F	plugged/vital.vim/autoload/vitalizer.vim	/^let s:F = s:V.import('System.File')$/;"	v
s:FALSE	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-asterisk/autoload/asterisk.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:FALSE = 0$/;"	v
s:FLATTEN_DEFAULT_LIMIT	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^let s:FLATTEN_DEFAULT_LIMIT = 1 | lockvar s:FLATTEN_DEFAULT_LIMIT$/;"	v
s:FNAMEESCAPEPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:FNAMEESCAPEPATTERN = '\\\\\\ze[' . escape(s:ESCAPEDCHARS, ']^-\\') . ']'$/;"	v
s:FP	plugged/vital.vim/autoload/vitalizer.vim	/^let s:FP = s:V.import('System.Filepath')$/;"	v
s:FULFILLED	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:FULFILLED = 1$/;"	v
s:FUNCTION	plugged/vim-polyglot/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = 0$/;"	v
s:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = g:Ferm_SpecialDelimiters$/;"	v
s:FetchSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FetchSubcommand(...) abort$/;"	f
s:FileByOffset	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:FileByOffset(num) abort$/;"	f
s:FileFormat	plugged/vim-polyglot/extras/menu.vim	/^fun! s:FileFormat()$/;"	f
s:FileIgnoreCase	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FileIgnoreCase(for_completion) abort$/;"	f
s:Filename	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Filename(paragraph) abort$/;"	f
s:Filetype	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! s:Filetype()$/;"	f
s:FilterEscape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
s:FindComment	plugged/vim-polyglot/indent/moon.vim	/^function! s:FindComment(linenum)$/;"	f
s:FindContainingClass	plugged/vim-polyglot/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
s:FindCornerOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornerOfSyntax(lnum, col, step)$/;"	f
s:FindCornersOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornersOfSyntax(lnum, col)$/;"	f
s:FindDartFmt	plugged/vim-polyglot/autoload/dart.vim	/^function! s:FindDartFmt() abort$/;"	f
s:FindECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindECRControl(...) abort$/;"	f
s:FindIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
s:FindLeftOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindLeftOfSyntax(lnum, col)$/;"	f
s:FindLet	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindLet	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindLet	plugged/vim-polyglot/indent/sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindMarker	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^func! s:FindMarker(dir, markers) abort$/;"	f
s:FindNextFile	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:FindNextFile(forward) abort$/;"	f
s:FindNextSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindNextSyntax(lnum, col, name)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/elm.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPrevECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindPrevECRControl(...) abort$/;"	f
s:FindPrevLEIndentedLineMatchingRegex	plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLEIndentedLineMatchingRegex(lnum, regex)$/;"	f
s:FindPrevLessIndentedLine	plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLessIndentedLine(lnum, ...)$/;"	f
s:FindPrevLnum	plugged/vim-polyglot/autoload/fish.vim	/^function! s:FindPrevLnum(lnum)$/;"	f
s:FindPreviousNonCompilerDirectiveLine	plugged/vim-polyglot/indent/cs.vim	/^function! s:FindPreviousNonCompilerDirectiveLine(start_lnum)$/;"	f
s:FindPreviousOpenStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:FindPreviousOpenStructure(lineNumber)$/;"	f
s:FindRightOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindRightOfSyntax(lnum, col)$/;"	f
s:FindStartLine	plugged/vim-polyglot/indent/nim.vim	/^function! s:FindStartLine(fromln, pattern)$/;"	f
s:Find_common_path	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
s:FirstLevelIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\/;"	v
s:FirstLevelNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\/;"	v
s:First_word_len	plugged/vim-polyglot/indent/awk.vim	/^function! s:First_word_len( line )$/;"	f
s:FixFText	plugged/vim-polyglot/extras/menu.vim	/^fun! s:FixFText()$/;"	f
s:FnameEscape	plugged/vim-polyglot/extras/menu.vim	/^func s:FnameEscape(fname)$/;"	f
s:Fnameescape	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
s:FnmatchReplace	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:FnmatchReplace(pat) abort$/;"	f
s:FnmatchTranslate	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:FnmatchTranslate(pat) abort$/;"	f
s:FocusMatch	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! s:FocusMatch(lines) abort$/;"	f
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:FoldableRegion	plugged/vim-polyglot/syntax/lua.vim	/^function! s:FoldableRegion(tag, name, expr)$/;"	f
s:Format	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
s:FormatFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
s:FormatLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
s:FormatRebase	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
s:ForwardToZshChecker	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
s:FreshState	plugged/vim-polyglot/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
s:FsdnRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:FsdnRequest(query)$/;"	f
s:Funcs	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^let s:Funcs = {}$/;"	v
s:Funcs	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^let s:Funcs.Scroll = {}$/;"	v
s:Funcs.Cursor	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.Cursor(A) abort$/;"	f
s:Funcs.Scroll.can_see_bof	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.Scroll.can_see_bof() abort$/;"	f
s:Funcs.Scroll.can_see_eof	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.Scroll.can_see_eof() abort$/;"	f
s:Funcs.Scroll.force	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.Scroll.force(line) abort$/;"	f
s:Funcs.Scroll.get	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.Scroll.get(...) abort$/;"	f
s:Funcs.Scroll.restore	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.Scroll.restore(...) abort$/;"	f
s:Funcs.byte2pos	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.byte2pos(byte) abort$/;"	f
s:Funcs.char_at_pos	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.char_at_pos(l, c) abort$/;"	f
s:Funcs.char_under_cursor	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.char_under_cursor() abort$/;"	f
s:Funcs.curs2byte	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.curs2byte() abort$/;"	f
s:Funcs.default_reg	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.default_reg() abort$/;"	f
s:Funcs.exit	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.exit(msg) abort$/;"	f
s:Funcs.get_expr	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.get_expr(x) abort$/;"	f
s:Funcs.get_reg	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.get_reg(...) abort$/;"	f
s:Funcs.get_regs_1_9	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.get_regs_1_9() abort$/;"	f
s:Funcs.get_vertcol	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.get_vertcol() abort$/;"	f
s:Funcs.infoline	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.infoline() abort$/;"	f
s:Funcs.msg	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.msg(text) abort$/;"	f
s:Funcs.no_regions	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.no_regions() abort$/;"	f
s:Funcs.not_VM	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.not_VM() abort$/;"	f
s:Funcs.pad	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^function! s:Funcs.pad(t, n, ...)$/;"	f
s:Funcs.pos2byte	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.pos2byte(...) abort$/;"	f
s:Funcs.redraw	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.redraw() abort$/;"	f
s:Funcs.region_txt	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.region_txt(r) abort$/;"	f
s:Funcs.region_with_id	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.region_with_id(id) abort$/;"	f
s:Funcs.regions_contents	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.regions_contents() abort$/;"	f
s:Funcs.repeat_char	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.repeat_char(c) abort$/;"	f
s:Funcs.restore_reg	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.restore_reg() abort$/;"	f
s:Funcs.restore_regs	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.restore_regs() abort$/;"	f
s:Funcs.restore_visual_marks	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.restore_visual_marks() abort$/;"	f
s:Funcs.search_chars	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.search_chars(n) abort$/;"	f
s:Funcs.set_reg	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.set_reg(text) abort$/;"	f
s:Funcs.set_statusline	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.set_statusline(auto) abort$/;"	f
s:Funcs.should_quit	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.should_quit() abort$/;"	f
s:Funcs.size	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.size() abort$/;"	f
s:Funcs.special_statusline	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.special_statusline(msg) abort$/;"	f
s:Funcs.sync_minlines	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.sync_minlines() abort$/;"	f
s:Funcs.syntax	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.syntax(pos) abort$/;"	f
s:Funcs.toggle_option	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:Funcs.toggle_option(option) abort$/;"	f
s:GETSVARSFUNCNAME	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^let s:GETSVARSFUNCNAME = '___VITAL_VIM_SCRIPTLOCAL_GET_SVARS___'$/;"	v
s:GF	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:Generate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(object, ...) abort$/;"	f
s:Generator	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^let s:Generator = {}$/;"	v
s:Generator	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^let s:Generator = {}$/;"	v
s:Generator.max	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:Generator.max() abort$/;"	f
s:Generator.max	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:Generator.max() abort$/;"	f
s:Generator.min	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:Generator.min() abort$/;"	f
s:Generator.min	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:Generator.min() abort$/;"	f
s:Generator.next	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:Generator.next() abort$/;"	f
s:Generator.next	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:Generator.next() abort$/;"	f
s:Generator.seed	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:Generator.seed(seeds) abort$/;"	f
s:Generator.seed	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:Generator.seed(seeds) abort$/;"	f
s:GetBufferRubyClass	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
s:GetBufferRubyEntity	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
s:GetBufferRubyModule	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
s:GetBufferRubySingletonMethods	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
s:GetChar	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetChar(...) abort "{{{$/;"	f
s:GetContents	plugged/vim-polyglot/indent/lua.vim	/^function s:GetContents(lnum)$/;"	f
s:GetDefaultPolicy	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
s:GetDelim	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:GetDelim(str)$/;"	f
s:GetDialect	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect(buf) " {{{2$/;"	f
s:GetEndIndentation	plugged/vim-polyglot/after/indent/tex.vim	/^function! s:GetEndIndentation(lnum) " {{{$/;"	f
s:GetHeaderLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLevel(...)$/;"	f
s:GetHeaderLineNum	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLineNum(...)$/;"	f
s:GetHeaderList	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderList()$/;"	f
s:GetIncludes	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! s:GetIncludes(checker, base) " {{{2$/;"	f
s:GetInd	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetInd	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetInd	plugged/vim-polyglot/indent/sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetIndtokenAtCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
s:GetLastBeginIndentation	plugged/vim-polyglot/after/indent/tex.vim	/^function! s:GetLastBeginIndentation(lnum) " {{{$/;"	f
s:GetLevelOfHeaderAtLine	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetLevelOfHeaderAtLine(linenum)$/;"	f
s:GetLineWithoutFullComment	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
s:GetLineWithoutFullComment	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
s:GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetLiveScriptIndent(curlinenum)$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/falcon.vim	/^function s:GetMSL(lnum)$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/typescript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
s:GetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
s:GetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:GetMakePrg()$/;"	f
s:GetMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg(buf) " {{{2$/;"	f
s:GetMatch	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetMatch(curline)$/;"	f
s:GetMatch	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMatch(curline)$/;"	f
s:GetMavenClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
s:GetMavenProperties	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
s:GetMdIndent	plugged/vim-polyglot/indent/rmd.vim	/^function s:GetMdIndent()$/;"	f
s:GetMoonIndent	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMoonIndent(curlinenum)$/;"	f
s:GetNextHeaderLineNumberAtLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetNextHeaderLineNumberAtLevel(level, ...)$/;"	f
s:GetOcamlBuildMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg(buf) " {{{2$/;"	f
s:GetOcamlcMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg(buf) " {{{2$/;"	f
s:GetOffsetOf	plugged/vim-polyglot/indent/config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
s:GetOtherMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg(buf) " {{{2$/;"	f
s:GetPair	plugged/vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
s:GetParentHeaderLineNumber	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetParentHeaderLineNumber(...)$/;"	f
s:GetPrevNonCommentLineNum	plugged/vim-polyglot/indent/pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
s:GetPrevNormalLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
s:GetPrevNormalLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
s:GetPrevNormalLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
s:GetPreviousHeaderLineNumberAtLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)$/;"	f
s:GetProfile	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile(buf) " {{{2$/;"	f
s:GetPyIndent	plugged/vim-polyglot/indent/rmd.vim	/^function s:GetPyIndent()$/;"	f
s:GetRelVer	plugged/vim-polyglot/ftplugin/spec.vim	/^	function! s:GetRelVer()$/;"	f
s:GetRubyVarType	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
s:GetScriptType	plugged/vim-polyglot/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
s:GetShell	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell(buf) " {{{2$/;"	f
s:GetShell	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! s:GetShell(buf) " {{{2$/;"	f
s:GetStmtStarterIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
s:GetSynStack	plugged/vim-polyglot/indent/purescript.vim	/^function! s:GetSynStack(lnum, col)$/;"	f
s:GetTokensFromLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
s:GetTrimmedLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
s:GetTrimmedLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
s:GetTrimmedLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
s:GetVarIndent	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetVarIndent(lnum)$/;"	f
s:GetVarIndent	plugged/vim-polyglot/indent/typescript.vim	/^function s:GetVarIndent(lnum)$/;"	f
s:GetVars	plugged/vim-polyglot/indent/javascript.vim	/^function s:GetVars()$/;"	f
s:GetVisualStartPosition	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
s:GetWindow	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:GetWindow() abort$/;"	f
s:GetYamlIndent	plugged/vim-polyglot/indent/rmd.vim	/^function s:GetYamlIndent()$/;"	f
s:Get_brace_balance	plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
s:Get_prev_line	plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
s:Get_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Get_type(mode, annot_file_name)$/;"	f
s:GitCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitCmd() abort$/;"	f
s:GitDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitDir(...) abort$/;"	f
s:GitShellCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitShellCmd() abort$/;"	f
s:GlobComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern, ...) abort$/;"	f
s:Global	plugged/vim-visual-multi/autoload/vm/global.vim	/^let s:Global = {}$/;"	v
s:Global.active_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.active_regions(...) abort$/;"	f
s:Global.all_empty	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.all_empty() abort$/;"	f
s:Global.backup_last_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.backup_last_regions() abort$/;"	f
s:Global.backup_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.backup_regions() abort$/;"	f
s:Global.change_mode	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.change_mode(...) abort$/;"	f
s:Global.check_mutliline	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.check_mutliline(all, ...) abort$/;"	f
s:Global.collapse_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.collapse_regions() abort$/;"	f
s:Global.cursor_mode	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.cursor_mode() abort$/;"	f
s:Global.erase_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.erase_regions() abort$/;"	f
s:Global.extend_mode	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.extend_mode() abort$/;"	f
s:Global.filter_by_expression	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.filter_by_expression(exp, type) abort$/;"	f
s:Global.get_all_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.get_all_regions(...) abort$/;"	f
s:Global.lines_with_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.lines_with_regions(reverse, ...) abort$/;"	f
s:Global.merge_cursors	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.merge_cursors() abort$/;"	f
s:Global.merge_maps	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.merge_maps(map) abort$/;"	f
s:Global.merge_overlapping	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.merge_overlapping(R) abort$/;"	f
s:Global.merge_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.merge_regions(...) abort$/;"	f
s:Global.nearest_region	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.nearest_region(...) abort$/;"	f
s:Global.new_cursor	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.new_cursor(...) abort$/;"	f
s:Global.new_region	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.new_region() abort$/;"	f
s:Global.one_region_per_line	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.one_region_per_line() abort$/;"	f
s:Global.overlapping_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.overlapping_regions(R) abort$/;"	f
s:Global.rebuild_from_map	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.rebuild_from_map(map, ...) abort$/;"	f
s:Global.region_at_pos	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.region_at_pos(...) abort$/;"	f
s:Global.regions_text	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.regions_text() abort$/;"	f
s:Global.remove_empty_lines	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.remove_empty_lines() abort$/;"	f
s:Global.remove_highlight	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.remove_highlight() abort$/;"	f
s:Global.remove_last_region	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.remove_last_region(...) abort$/;"	f
s:Global.remove_regions_by_id	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.remove_regions_by_id(list) abort$/;"	f
s:Global.reorder_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.reorder_regions() abort$/;"	f
s:Global.reset_byte_map	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.reset_byte_map(update) abort$/;"	f
s:Global.reset_index	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.reset_index() abort$/;"	f
s:Global.reset_vars	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.reset_vars() abort$/;"	f
s:Global.restore_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.restore_regions(index) abort$/;"	f
s:Global.select_region	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.select_region(i) abort$/;"	f
s:Global.select_region_at_pos	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.select_region_at_pos(pos) abort$/;"	f
s:Global.split_lines	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.split_lines() abort$/;"	f
s:Global.subtract_maps	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.subtract_maps(map) abort$/;"	f
s:Global.update_and_select_region	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.update_and_select_region(...) abort$/;"	f
s:Global.update_cursor_highlight	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.update_cursor_highlight(...) abort$/;"	f
s:Global.update_highlight	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.update_highlight(...) abort$/;"	f
s:Global.update_indices	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.update_indices(...) abort$/;"	f
s:Global.update_map_and_select_region	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.update_map_and_select_region(...) abort$/;"	f
s:Global.update_region_patterns	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.update_region_patterns(pat) abort$/;"	f
s:Global.update_regions	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! s:Global.update_regions() abort$/;"	f
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:Greek	plugged/vim-polyglot/after/syntax/tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
s:GrepCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepCfile(result) abort$/;"	f
s:GrepOptions	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepOptions(args, dir) abort$/;"	f
s:GrepParseLine	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(options, quiet, dir, line) abort$/;"	f
s:GrepSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:GroupingAlgorithmOriginal	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
s:GroupingAlgorithmSCTree	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
s:Guess	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Guess(source, detected, lines) abort$/;"	f
s:HAS_GUI_RUNNING	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:HAS_GUI_RUNNING = has('gui_running')$/;"	v
s:HAS_GUI_RUNNING	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:HAS_GUI_RUNNING = has('gui_running')$/;"	v
s:HAS_RELTIME_AND_FLOAT	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^let s:HAS_RELTIME_AND_FLOAT = has('reltime') && has('float')$/;"	v
s:HAS_TIMERS	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:HAS_TIMERS = has('timers')$/;"	v
s:HELPHISTORY	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPHISTORY = []$/;"	v
s:HELPPROMPT	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPPROMPT = 'help?> '$/;"	v
s:HEX_TABLE	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:HEX_TABLE = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F/;"	v
s:HIGROUP	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:HIGROUP = 'HighlightedyankRegion'$/;"	v
s:HMAC	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^let s:HMAC = {$/;"	v
s:HMAC.calc	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:HMAC.calc(data) abort$/;"	f
s:HMAC.hash	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:HMAC.hash(hashobj) abort$/;"	f
s:HMAC.hmac	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:HMAC.hmac(data) abort$/;"	f
s:HMAC.key	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:HMAC.key(key) abort$/;"	f
s:HSL	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:HSL = deepcopy(s:Color)$/;"	v
s:HSL.as_hsl	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:HSL.as_hsl() abort$/;"	f
s:HSL.as_rgb	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:HSL.as_rgb() abort$/;"	f
s:HSL_RE	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:HSL_RE = '\\v^hsl\\((\\d+),\\s*(\\d+)\\%,\\s*(\\d+)\\%\\)$'$/;"	v
s:HTTP	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTPS.vim	/^let s:HTTP = {}$/;"	v
s:HasOpt	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
s:HeaderDecrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:HeaderDecrease(line1, line2, ...)$/;"	f
s:Helpfind	plugged/vim-polyglot/extras/menu.vim	/^fun! s:Helpfind()$/;"	f
s:HexCode	plugged/clrzr/autoload/clrzr.vim	/^function! s:HexCode(color_text_in) "{{{2$/;"	f
s:Hinter	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:Hinter = {$/;"	v
s:Hinter._pos2hint_to_line2col2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
s:Hinter._replace_line_for_hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_line_for_hint(col_num, line, hint) abort$/;"	f
s:Hinter._replace_tab_target	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_tab_target(col_num, line) abort$/;"	f
s:Hinter._replace_text_to_space	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_text_to_space(line, col_num, len) abort$/;"	f
s:Hinter._save_lines	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._save_lines() abort$/;"	f
s:Hinter._show_hint_for_line	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_line(winnr, lnum, col2hint) abort$/;"	f
s:Hinter._show_hint_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_win(winnr) abort$/;"	f
s:Hinter.after	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.after() abort$/;"	f
s:Hinter.before	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.before() abort$/;"	f
s:Hinter.disable_conceal_in_other_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.disable_conceal_in_other_win() abort$/;"	f
s:Hinter.init	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.init(hint_dict) abort$/;"	f
s:Hinter.modify_env_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.modify_env_for_win(winnr) abort$/;"	f
s:Hinter.new	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.new(hint_dict, config) abort$/;"	f
s:Hinter.remove_hints	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.remove_hints(winnr) abort$/;"	f
s:Hinter.restore_conceal_in_other_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_conceal_in_other_win() abort$/;"	f
s:Hinter.restore_env	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_env() abort$/;"	f
s:Hinter.restore_lines_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_lines_for_win(winnr) abort$/;"	f
s:Hinter.restore_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_options() abort$/;"	f
s:Hinter.save_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.save_options() abort$/;"	f
s:Hinter.show_hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint() abort$/;"	f
s:Hinter.show_hint_pos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint_pos(lnum, cnum, char, winnr) abort$/;"	f
s:HitAHintMotion	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:HitAHintMotion = s:V.import('HitAHint.Motion')$/;"	v
s:HslColor	plugged/clrzr/autoload/clrzr.vim	/^function! s:HslColor(color_text_in) "{{{2$/;"	f
s:I	plugged/vital.vim/autoload/vitalizer.vim	/^let s:I = s:V.import('Data.String.Interpolation')$/;"	v
s:IGNORE_ERRORS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:INDENT_AFTER_KEYWORD	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_KEYWORD	plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|with\\|elseif\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:INDENT_AFTER_OPERATOR	plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:INLINE_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:INT	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:INT = { 'MAX': 2147483647 }$/;"	v
s:INT	plugged/vim-asterisk/autoload/asterisk.vim	/^let s:INT = { 'MAX': 2147483647 }$/;"	v
s:IS_WINDOWS	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:IS_WINDOWS = has('win32')$/;"	v
s:IdrisCommand	plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:IdrisCommand(...)$/;"	f
s:IdrisCommand	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:IdrisCommand(...)$/;"	f
s:IgnoreError	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
s:IgnoreError	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
s:InBracket	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InBracket(...)$/;"	f
s:InComment	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment(...)$/;"	f
s:InComment2	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment2(...)$/;"	f
s:InCommentOrLiteral	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InCommentOrLiteral(...)$/;"	f
s:InKeyword	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InKeyword(...)$/;"	f
s:InLiteral	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral(...)$/;"	f
s:InLiteral2	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral2(...)$/;"	f
s:InMultiVarStatement	plugged/vim-polyglot/indent/solidity.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
s:InMultiVarStatement	plugged/vim-polyglot/indent/typescript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
s:InOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:InOneLineScope(lnum)$/;"	f
s:InOneLineScope	plugged/vim-polyglot/indent/typescript.vim	/^function s:InOneLineScope(lnum)$/;"	f
s:InString	plugged/vim-polyglot/indent/graphql.vim	/^function s:InString(lnum, col)$/;"	f
s:IncreaseFunc	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
s:IncreaseIndent	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseIndent()$/;"	f
s:IndentError	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
s:IndentLevel	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^function! s:IndentLevel(lnum)$/;"	f
s:IndentWithContinuation	plugged/vim-polyglot/indent/solidity.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
s:IndentWithContinuation	plugged/vim-polyglot/indent/typescript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
s:IndentingKeywordInMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
s:Init	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Init(safe_only) abort$/;"	f
s:InitMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:InitMainWindow() abort$/;"	f
s:InitPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! s:InitPreviewWindow() abort$/;"	f
s:InitViewMode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:InitViewMode() abort$/;"	f
s:InnerPos	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InnerPos(x, y)$/;"	f
s:Insert	plugged/vim-visual-multi/autoload/vm/insert.vim	/^let s:Insert = {'index': -1, 'cursors': [], 'replace': 0, 'type': ''}$/;"	v
s:Insert	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! s:Insert(key) abort$/;"	f
s:Insert.apply_settings	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.apply_settings() abort$/;"	f
s:Insert.auto_end	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.auto_end() abort$/;"	f
s:Insert.auto_start	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.auto_start() abort$/;"	f
s:Insert.clear_hi	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.clear_hi() abort$/;"	f
s:Insert.key	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.key(type) abort$/;"	f
s:Insert.start	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.start(...) abort$/;"	f
s:Insert.stop	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.stop(...) abort$/;"	f
s:Insert.update_text	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Insert.update_text(insert_leave) abort$/;"	f
s:InsertRegister	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:InsertRegister = s:modules.get('InsertRegister').make()$/;"	v
s:InsertRegister	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:InsertRegister.search_register = ''$/;"	v
s:InsertRegister.on_char_pre	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^function! s:InsertRegister.on_char_pre(cmdline) abort$/;"	f
s:InsertRegister.on_enter	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^function! s:InsertRegister.on_enter(...) abort$/;"	f
s:InsertRegister_orig_on_char_pre	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:InsertRegister_orig_on_char_pre = s:InsertRegister.on_char_pre$/;"	v
s:InsertToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:InsertToc(format, ...)$/;"	f
s:InsideMultilineString	plugged/vim-polyglot/indent/puppet.vim	/^function! s:InsideMultilineString(lnum)$/;"	f
s:InsideTag	plugged/vim-polyglot/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
s:IntAlphaMix	plugged/clrzr/autoload/clrzr.vim	/^function! s:IntAlphaMix(rgba_fg, rgb_bg)$/;"	f
s:InvalidTriggers	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:InvalidTriggers(triggerlist) abort "{{{$/;"	f
s:IsAllConsumed	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:IsAllConsumed() abort$/;"	f
s:IsAlphaFirst	plugged/clrzr/autoload/clrzr.vim	/^function! s:IsAlphaFirst()$/;"	f
s:IsAssignment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
s:IsAttributeLine	plugged/vim-polyglot/indent/cs.vim	/^function! s:IsAttributeLine(line)$/;"	f
s:IsBlankLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
s:IsBlock	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsBlock()$/;"	f
s:IsBlockEnd	plugged/vim-polyglot/indent/svelte.vim	/^function! s:IsBlockEnd(cursyns, curline)$/;"	f
s:IsBlockStart	plugged/vim-polyglot/indent/svelte.vim	/^function! s:IsBlockStart(prevsyns)$/;"	f
s:IsCatchStandalone	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
s:IsColComment	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsColComment(lnum, cnum)$/;"	f
s:IsComment	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
s:IsComment	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsComment(linenum, col)$/;"	f
s:IsComment	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsComment(linenum, col)$/;"	f
s:IsCommentLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentLine(linenum)$/;"	f
s:IsCommentLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentLine(linenum)$/;"	f
s:IsCommentLine	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsCommentLine(lnum)$/;"	f
s:IsCommentOrString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
s:IsCommentOrString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
s:IsCommentOrString	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
s:IsCompilerDirective	plugged/vim-polyglot/indent/cs.vim	/^function! s:IsCompilerDirective(line)$/;"	f
s:IsConflicted	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
s:IsContOne	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
s:IsContinued	plugged/vim-polyglot/autoload/pony.vim	/^function! s:IsContinued(lnum)$/;"	f
s:IsContinuedLine	plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsContinuedLine(lnum)$/;"	f
s:IsEnabled	plugged/clrzr/autoload/clrzr.vim	/^function! s:IsEnabled()$/;"	f
s:IsExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndent()$/;"	f
s:IsExcludedFromIndentAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndentAtPosition(line, column)$/;"	f
s:IsHeaderLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
s:IsInBlock	plugged/vim-polyglot/indent/hog.vim	/^function s:IsInBlock(lnum)$/;"	f
s:IsInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
s:IsInComment	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInComment(pos)$/;"	f
s:IsInCommentOrString	plugged/vim-polyglot/indent/lua.vim	/^function s:IsInCommentOrString(lnum, col)$/;"	f
s:IsInMultilineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
s:IsInRubyGroup	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
s:IsInString	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	plugged/vim-polyglot/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
s:IsInString	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInStringDelimiter	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
s:IsInStringDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrDocumentation	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
s:IsLiStart	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsLiStart(line)$/;"	f
s:IsLineAtomContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
s:IsLineComment	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsLineComment(lnum)$/;"	f
s:IsLineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsLineComment(lnum, col)$/;"	f
s:IsLineStringContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
s:IsMkdCode	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
s:IsPosInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
s:IsShellValid	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid(buf) " {{{2$/;"	f
s:IsStartingDelimiter	plugged/vim-polyglot/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
s:IsString	plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsString(lnum, col)$/;"	f
s:IsString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
s:IsString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsString(linenum, col)$/;"	f
s:IsString	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsString(linenum, col)$/;"	f
s:IsSwitch	plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsSwitch(lnum)$/;"	f
s:IsSwitch	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
s:IsSyntaxNameExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsSyntaxNameExcludedFromIndent(name)$/;"	f
s:J	plugged/vim-polyglot/autoload/crystal_lang.vim	/^  let s:J = s:V.import('Web.JSON')$/;"	v
s:Jar	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^let s:Jar = {$/;"	v
s:Jar.add	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.add(cookie) abort$/;"	f
s:Jar.add_all	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.add_all(cookies) abort$/;"	f
s:Jar.add_from_headers	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.add_from_headers(headers, request_uri) abort$/;"	f
s:Jar.build_http_header	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.build_http_header(url, ...) abort$/;"	f
s:Jar.clear	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.clear() abort$/;"	f
s:Jar.export	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.export(...) abort$/;"	f
s:Jar.get	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.get(...) abort$/;"	f
s:Jar.get_all	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.get_all(...) abort$/;"	f
s:Jar.import	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.import(data) abort$/;"	f
s:Jar.sweep_expired	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:Jar.sweep_expired(...) abort$/;"	f
s:JobExecute	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobExecute(argv, jopts, stdin, callback, ...) abort$/;"	f
s:JobNvimCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobNvimCallback(lines, job, data, type) abort$/;"	f
s:JobNvimExit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobNvimExit(dict, callback, job, data, type) dict abort$/;"	f
s:JobOpts	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobOpts(cmd, env) abort$/;"	f
s:JobVimExit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobVimExit(dict, callback, temp, job, status) abort$/;"	f
s:JoinChomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JoinChomp(list) abort$/;"	f
s:Jump_Back	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
s:Jump_Forward	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
s:KEYWORDPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:KEYWORDPATTERN = '\\m@\\?\\h\\k*!\\?'$/;"	v
s:KEYWORD_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KIND_BLOCK_FOLLOW	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_FOLLOW = 1$/;"	v
s:KIND_BLOCK_PREC	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_PREC = 0$/;"	v
s:KIND_FUNC_BEGIN	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_BEGIN = 2$/;"	v
s:KIND_FUNC_END	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_END = 3$/;"	v
s:KeyMapping	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:KeyMapping = s:modules.get('KeyMapping')$/;"	v
s:Keywordprg	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
s:L	plugged/vital.vim/autoload/vitalizer.vim	/^let s:L = s:V.import('Data.List')$/;"	v
s:L2U_InsertCompleteDoneAutocommand	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_InsertCompleteDoneAutocommand()$/;"	f
s:L2U_InsertInsertLeaveAutocommand	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_InsertInsertLeaveAutocommand()$/;"	f
s:L2U_InsertLeaveClenup	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function s:L2U_InsertLeaveClenup()$/;"	f
s:L2U_ReinstateMapping	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ReinstateMapping(mmdict)$/;"	f
s:L2U_RemoveCompleteDoneAutocommand	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_RemoveCompleteDoneAutocommand()$/;"	f
s:L2U_ResetLastCompletionInfo	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ResetLastCompletionInfo()$/;"	f
s:L2U_RestoreCompleteopt	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_RestoreCompleteopt()$/;"	f
s:L2U_SetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetAutoSub(wait_insert_enter)$/;"	f
s:L2U_SetCompleteopt	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetCompleteopt()$/;"	f
s:L2U_SetFallbackMapping	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetFallbackMapping(s, k)$/;"	f
s:L2U_SetKeymap	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetKeymap()$/;"	f
s:L2U_SetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetTab(wait_insert_enter)$/;"	f
s:L2U_Setup	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_Setup()$/;"	f
s:L2U_SetupGlobal	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetupGlobal()$/;"	f
s:L2U_UnsetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetAutoSub()$/;"	f
s:L2U_UnsetKeymap	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetKeymap()$/;"	f
s:L2U_UnsetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetTab()$/;"	f
s:L2U_deprecated_options	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_deprecated_options()$/;"	f
s:L2U_file_type_regex	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_file_type_regex(ft)$/;"	f
s:L2U_fix_compose_chars	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_fix_compose_chars(uni)$/;"	f
s:L2U_ismatch	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ismatch()$/;"	f
s:L2U_longest_common_prefix	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_longest_common_prefix(partmatches)$/;"	f
s:L2U_partmatches_sort	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_partmatches_sort(p1, p2)$/;"	f
s:LOADER_FILES	plugged/vital.vim/autoload/vitalizer.vim	/^let s:LOADER_FILES = [$/;"	v
s:Lambda	plugged/vital.vim/test/_testdata/vital/testplugin/autoload/vital/__testplugin__/ErrorSelfmodule.vim	/^  let s:Lambda = {-> s:Obj._anonymous_func()}$/;"	v
s:LastTagIsOpen	plugged/vim-polyglot/indent/mp.vim	/^function! s:LastTagIsOpen(line)$/;"	f
s:LastValidMatchEnd	plugged/vim-polyglot/indent/mp.vim	/^function! s:LastValidMatchEnd(line, pat, start)$/;"	f
s:LeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
s:Left	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:Line	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Line(line) abort$/;"	f
s:Line	plugged/vim-visual-multi/autoload/vm/insert.vim	/^let s:Line = {}$/;"	v
s:Line.new	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Line.new(line, cursor) abort$/;"	f
s:Line.replace	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Line.replace(change, replacementText, width) abort$/;"	f
s:Line.update	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:Line.update(change, text) abort$/;"	f
s:LineCompact	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:LineCompact(match) abort$/;"	f
s:LineHasOpeningBrackets	plugged/vim-polyglot/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LineHasOpeningBrackets	plugged/vim-polyglot/indent/solidity.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LineHasOpeningBrackets	plugged/vim-polyglot/indent/typescript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LinesError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
s:LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompile(startline, endline, args)$/;"	f
s:LiveScriptCompileClose	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileClose()$/;"	f
s:LiveScriptCompileComplete	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileComplete(arg, cmdline, cursor)$/;"	f
s:LiveScriptCompileResetVars	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileResetVars()$/;"	f
s:LiveScriptCompileUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileUpdate(startline, endline)$/;"	f
s:LiveScriptCompileWatchUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileWatchUpdate()$/;"	f
s:LoadConfigFile	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
s:LoadDefaultSyntax	plugged/vim-polyglot/syntax/svelte.vim	/^function! s:LoadDefaultSyntax(group, type)$/;"	f
s:LoadFullSyntax	plugged/vim-polyglot/syntax/svelte.vim	/^function! s:LoadFullSyntax(group, type)$/;"	f
s:LoadSyntax	plugged/vim-polyglot/syntax/svelte.vim	/^function! s:LoadSyntax(group, type)$/;"	f
s:LoadVimSesn	plugged/vim-polyglot/extras/menu.vim	/^fun! s:LoadVimSesn()$/;"	f
s:Load_annotation	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Load_annotation(annot_file_name)$/;"	f
s:LocateCompactView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:LocateCompactView(vlnum) abort$/;"	f
s:LocateNormalView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:LocateNormalView(vlnum) abort$/;"	f
s:Locate_annotation	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
s:Log	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Log(s)$/;"	f
s:Log	plugged/vim-polyglot/indent/svelte.vim	/^function! s:Log(msg)$/;"	f
s:LogFlushQueue	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state, dir) abort$/;"	f
s:LogParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, prefix, line) abort$/;"	f
s:LookingAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:LookingAt()$/;"	f
s:MAIN_BUF_NAME	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^let s:MAIN_BUF_NAME = "__CtrlSF__"$/;"	v
s:MAXCOL	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAXCOL	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAXCOL	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAXCOL	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/ls.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/moon.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MainBlockIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
s:MakeParagraph	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:MakeParagraph() abort$/;"	f
s:Manager	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^let s:Manager = {$/;"	v
s:Manager.add	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.add(bufnr, ...) abort$/;"	f
s:Manager.close	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.close(...) abort$/;"	f
s:Manager.config	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.config(...) abort$/;"	f
s:Manager.do	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.do(cmd) abort$/;"	f
s:Manager.is_managed	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.is_managed(bufnr) abort$/;"	f
s:Manager.list	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.list() abort$/;"	f
s:Manager.move	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.move(...) abort$/;"	f
s:Manager.nearest	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.nearest(...) abort$/;"	f
s:Manager.open	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.open(bufname, ...) abort$/;"	f
s:Manager.opened	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.opened(bufname) abort$/;"	f
s:Manager.user_config	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:Manager.user_config(config) abort$/;"	f
s:Map	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
s:Map	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, flags) abort$/;"	f
s:Map	plugged/vim-polyglot/indent/twig.vim	/^function! s:Map(Fun, list)$/;"	f
s:Map	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Map(...) abort$/;"	f
s:MapMotion	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
s:MapNextFamily	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:MapNextFamily(map,cmd) abort$/;"	f
s:MapNormVis	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNormVis(rhs,lhs)$/;"	f
s:MapNotHasmapto	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNotHasmapto(lhs, rhs)$/;"	f
s:Maps	plugged/vim-visual-multi/autoload/vm/maps.vim	/^let s:Maps = {}$/;"	v
s:Maps.disable	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:Maps.disable(keep_permanent) abort$/;"	f
s:Maps.enable	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:Maps.enable() abort$/;"	f
s:Maps.end	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:Maps.end(keep_permanent) abort$/;"	f
s:Maps.map_esc_and_toggle	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:Maps.map_esc_and_toggle() abort$/;"	f
s:Maps.mappings_toggle	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:Maps.mappings_toggle() abort$/;"	f
s:Maps.start	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:Maps.start() abort$/;"	f
s:Maps.unmap_esc_and_toggle	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:Maps.unmap_esc_and_toggle() abort$/;"	f
s:MarkdownClearSyntaxVariables	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownClearSyntaxVariables()$/;"	f
s:MarkdownHighlightSources	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownHighlightSources(force)$/;"	f
s:MarkdownRefreshSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownRefreshSyntax(force)$/;"	f
s:Markdown_GetUrlForPosition	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Markdown_GetUrlForPosition(lnum, col)$/;"	f
s:Match	plugged/vim-polyglot/indent/falcon.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	plugged/vim-polyglot/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	plugged/vim-polyglot/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
s:Match	plugged/vim-polyglot/indent/solidity.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	plugged/vim-polyglot/indent/typescript.vim	/^function s:Match(lnum, regex)$/;"	f
s:MatchAt	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchAt(lnum, col, pattern) abort$/;"	f
s:MatchCount	plugged/vim-polyglot/indent/pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
s:MatchCursor	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchCursor(pattern) abort$/;"	f
s:MatchECR	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECR(...) abort$/;"	f
s:MatchECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECRControl(...) abort$/;"	f
s:MatchLast	plugged/vim-polyglot/indent/falcon.vim	/^function s:MatchLast(lnum, regex)$/;"	f
s:Match_borders	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
s:Match_data	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_data()$/;"	f
s:MavenOutputDirectory	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
s:MaxLookback	plugged/vim-polyglot/indent/ls.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
s:MaxLookback	plugged/vim-polyglot/indent/moon.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
s:MergeHead	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeHead(dir) abort$/;"	f
s:MergeSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:MergetoolSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergetoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Mes	plugged/vital.vim/autoload/vitalizer.vim	/^let s:Mes = s:V.import('Vim.Message')$/;"	v
s:Message	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
s:Message	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^let s:Message = {}$/;"	v
s:Message	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^let s:Message._ = s:Message.get$/;"	v
s:Message.get	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^function! s:Message.get(text) abort$/;"	f
s:Message.load	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^function! s:Message.load(lang) abort$/;"	f
s:Message.missing	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^function! s:Message.missing(text) abort$/;"	f
s:MetaTask	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask() abort "{{{$/;"	f
s:MetaTask	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:MetaTask = {$/;"	v
s:MetaTask.append	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.append(task) abort "{{{$/;"	f
s:MetaTask.call	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.call(func, args, ...) abort "{{{$/;"	f
s:MetaTask.clear	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.clear() abort "{{{$/;"	f
s:MetaTask.clone	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.clone() abort "{{{$/;"	f
s:MetaTask.execute	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.execute(cmd) abort "{{{$/;"	f
s:MetaTask.trigger	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.trigger() abort "{{{$/;"	f
s:ModelineOptions	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:ModelineOptions(source) abort$/;"	f
s:ModifyFileName	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! s:ModifyFileName(filename) abort$/;"	f
s:Mods	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
s:Modules	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules(buf)$/;"	f
s:ModuloIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:ModuloIndent(ind)$/;"	f
s:Move	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
s:Move	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Move(cmd, count, map) abort$/;"	f
s:MoveSelectionDown	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionDown(count) abort$/;"	f
s:MoveSelectionUp	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionUp(count) abort$/;"	f
s:MoveToCurHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToCurHeader()$/;"	f
s:MoveToNextHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextHeader()$/;"	f
s:MoveToNextSiblingHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextSiblingHeader()$/;"	f
s:MoveToParentHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToParentHeader()$/;"	f
s:MoveToPreviousHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousHeader()$/;"	f
s:MoveToPreviousSiblingHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousSiblingHeader()$/;"	f
s:MultilineStringOrLineComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
s:NC	plugged/vim-polyglot/indent/vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	plugged/vim-polyglot/indent/vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NODOCPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:NODOCPATTERN = '\\C\\VNo documentation found.'$/;"	v
s:NONE	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:NONE = []$/;"	v
s:NONE	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^let s:NONE = []$/;"	v
s:NONE	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^let s:NONE = []$/;"	v
s:NONE_KEY	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^let s:NONE_KEY = 'vital_data_optional_none' | lockvar s:NONE_KEY$/;"	v
s:NOOP	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:NOOP = funcref('s:noop')$/;"	v
s:NULLPOS	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLPOS	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLPOS	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLPOS	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLREGION	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:NULLREGION = [s:NULLPOS, s:NULLPOS, '']$/;"	v
s:NULLREGION	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:NULLREGION = {$/;"	v
s:Nat	plugged/vim-polyglot/indent/javascript.vim	/^function s:Nat(int)$/;"	f
s:NavigateUp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
s:NeatTask	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask() abort "{{{$/;"	f
s:NeatTask	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:NeatTask = {$/;"	v
s:NeatTask.cancel	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.cancel() abort "{{{$/;"	f
s:NeatTask.isactive	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.isactive() abort "{{{$/;"	f
s:NeatTask.trigger	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.trigger() abort "{{{$/;"	f
s:NeatTask.waitfor	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.waitfor() abort "{{{$/;"	f
s:NewTags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
s:NextExpandedHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
s:NextFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
s:NextFileEntry	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:NextFileEntry(count) abort$/;"	f
s:NextHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
s:NextIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
s:NextItem	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
s:NextNonBlankLine	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^function! s:NextNonBlankLine(lnum)$/;"	f
s:NextSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
s:NextSection	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
s:NextSectionEnd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
s:NextToken	plugged/ctrlsf.vim/autoload/ctrlsf/lex.vim	/^func! s:NextToken(chars, start) abort$/;"	f
s:NoTeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^function! s:NoTeXIndent()$/;"	f
s:NormalView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:NormalView() abort$/;"	f
s:NormalViewIncr	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:NormalViewIncr(base_vlnum) abort$/;"	f
s:NullError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(cmd) abort$/;"	f
s:NumberOfMatches	plugged/vim-polyglot/indent/swift.vim	/^function! s:NumberOfMatches(char, string, index)$/;"	f
s:O	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! s:O(upper)$/;"	f
s:OFF	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:OFF = 0$/;"	v
s:OFF	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:OFF = 0$/;"	v
s:OFF	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:OFF = 0$/;"	v
s:OFF	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:OFF = 0$/;"	v
s:OFF	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:OFF = 0$/;"	v
s:ON	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:ON = 1$/;"	v
s:ON	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:ON = 1$/;"	v
s:ON	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:ON = 1$/;"	v
s:ON	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:ON = 1$/;"	v
s:ON	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:ON = 1$/;"	v
s:OPERATOR_LIST	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^let s:OPERATOR_LIST = [$/;"	v
s:OUTDENT_AFTER	plugged/vim-polyglot/indent/ls.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:OUTDENT_AFTER	plugged/vim-polyglot/indent/moon.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\)\\>'$/;"	v
s:Obj	plugged/vital.vim/test/_testdata/vital/testplugin/autoload/vital/__testplugin__/ErrorSelfmodule.vim	/^let s:Obj = {}$/;"	v
s:Obj._anonymous_func	plugged/vital.vim/test/_testdata/vital/testplugin/autoload/vital/__testplugin__/ErrorSelfmodule.vim	/^function! s:Obj._anonymous_func() dict abort$/;"	f
s:Observe	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:Observe()$/;"	f
s:OcpGrep	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function! s:OcpGrep(bang,args) abort$/;"	f
s:OneScope	plugged/vim-polyglot/indent/javascript.vim	/^function s:OneScope()$/;"	f
s:Open	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:Open() abort$/;"	f
s:OpenAndDraw	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:OpenAndDraw() abort$/;"	f
s:OpenBrace	plugged/vim-polyglot/indent/puppet.vim	/^function! s:OpenBrace(lnum)$/;"	f
s:OpenFileInTab	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:OpenFileInTab(file, lnum, col, mode) abort$/;"	f
s:OpenFileInWindow	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:OpenFileInWindow(file, lnum, col, mode, split) abort$/;"	f
s:OpenMatch	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! s:OpenMatch(lines) abort$/;"	f
s:OpenParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(string, wants_cmd) abort$/;"	f
s:OpenUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:OpenUrlUnderCursor()$/;"	f
s:Operator	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! s:Operator(op, n, reg) abort$/;"	f
s:OptionComp	plugged/ctrlsf.vim/autoload/ctrlsf/comp.vim	/^func! s:OptionComp(arglead, cmdline, cursorpos)$/;"	f
s:Or	plugged/vim-polyglot/autoload/pony.vim	/^function! s:Or(x, y)$/;"	f
s:OuterPos	plugged/vim-polyglot/autoload/pony.vim	/^function! s:OuterPos(x, y)$/;"	f
s:Owner	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
s:P	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:P = s:V.import('Process')$/;"	v
s:P	plugged/vital.vim/autoload/vitalizer.vim	/^let s:P = s:V.import('Prelude')$/;"	v
s:PENDING	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:PENDING = 0$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/ls.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/moon.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:PREVIEW_BUF_NAME	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^let s:PREVIEW_BUF_NAME = "__CtrlSFPreview__"$/;"	v
s:PROMISE	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:PROMISE = {$/;"	v
s:PROMISE	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:PROMISE.catch = funcref('s:_promise_catch')$/;"	v
s:PROMISE	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:PROMISE.finally = funcref('s:_promise_finally')$/;"	v
s:PROMISE	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:PROMISE.then = funcref('s:_promise_then')$/;"	v
s:PS	plugged/vim-polyglot/ftplugin/purescript.vim	/^let s:PS = []$/;"	v
s:PackageMap	plugged/vim-polyglot/autoload/dart.vim	/^function! s:PackageMap() abort$/;"	f
s:ParseCino	plugged/vim-polyglot/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
s:ParseCoffeeError	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
s:ParseOneLine	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:ParseOneLine(line) abort$/;"	f
s:ParseOptions	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! s:ParseOptions(options_str) abort$/;"	f
s:ParseRpmVars	plugged/vim-polyglot/ftplugin/spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
s:PartOfInclude	plugged/vim-polyglot/indent/puppet.vim	/^function! s:PartOfInclude(lnum)$/;"	f
s:PatchSearchExpr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
s:PathComp	plugged/ctrlsf.vim/autoload/ctrlsf/comp.vim	/^func! s:PathComp(arglead, cmdline, cursorpos)$/;"	f
s:PathInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
s:PlainNotification	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:PlainNotification(content)$/;"	f
s:PlusEscape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PlusEscape(string) abort$/;"	f
s:PolyglotObserve	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:PolyglotObserve(fn)$/;"	f
s:Pop	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f
s:Pop	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Pop()$/;"	f
s:Position	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:Position(line, character)$/;"	f
s:PreYankMotion	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    function! s:PreYankMotion() abort$/;"	f
s:PrepareEnv	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PrepareEnv(env, dir) abort$/;"	f
s:PrepareJob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PrepareJob(opts) abort$/;"	f
s:PreparePathArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal, explicit) abort$/;"	f
s:PrevIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
s:PrevLineOfCode	plugged/vim-polyglot/indent/lua.vim	/^function s:PrevLineOfCode(lnum)$/;"	f
s:PrevMatch	plugged/vim-polyglot/indent/sas.vim	/^function! s:PrevMatch(lnum, regex)$/;"	f
s:PrevMultilineEmptyTag	plugged/vim-polyglot/indent/svelte.vim	/^function! s:PrevMultilineEmptyTag(lnum)$/;"	f
s:PrevNonBlank	plugged/vim-polyglot/indent/markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
s:PrevNonBlankNonComment	plugged/vim-polyglot/indent/mp.vim	/^function! s:PrevNonBlankNonComment(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/falcon.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/solidity.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/typescript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonMultilineString	plugged/vim-polyglot/indent/puppet.vim	/^function! s:PrevNonMultilineString(lnum)$/;"	f
s:PrevNonblank	plugged/vim-polyglot/autoload/pony.vim	/^function! s:PrevNonblank(lnum)$/;"	f
s:PreviewFile	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:PreviewFile(file, lnum, col, follow) abort$/;"	f
s:PreviousFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
s:PreviousFileEntry	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:PreviousFileEntry(count) abort$/;"	f
s:PreviousHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
s:PreviousItem	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
s:PreviousNotMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
s:PreviousSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
s:PreviousSectionEnd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
s:PreviousToken	plugged/vim-polyglot/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
s:Printf	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! s:Printf(format, argv) abort$/;"	f
s:ProcessMatch	plugged/clrzr/autoload/clrzr.vim	/^function! s:ProcessMatch(match)$/;"	f
s:ProjectParms	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:ProjectParms(projectUri)$/;"	f
s:ProjectionistDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
s:Prompt	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
s:PromptUser	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
s:Pure	plugged/vim-polyglot/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
s:PurifyCode	plugged/vim-polyglot/indent/pascal.vim	/^function! s:PurifyCode( line_num )$/;"	f
s:Push	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f
s:Push	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Push(fct, kind)$/;"	f
s:PushSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PushSubcommand(...) abort$/;"	f
s:Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^function! s:Python2Syntax()$/;"	f
s:QueryLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec, limit) abort$/;"	f
s:QuickfixCreate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
s:QuickfixGet	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
s:QuickfixOpen	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixOpen(nr, mods) abort$/;"	f
s:QuickfixSet	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
s:QuickfixStream	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, event, title, cmd, first, mods, callback, ...) abort$/;"	f
s:Quit	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:Quit() abort$/;"	f
s:QuitPreHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook(fname) abort " {{{2$/;"	f
s:R	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:R = function('calendar#string#truncate_reverse')$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:R                = { -> s:V.Regions      }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^let s:R   = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/edit.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/insert.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/operators.vim	/^let s:R      = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/region.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/search.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:R	plugged/vim-visual-multi/autoload/vm/visual.vim	/^let s:R = { -> s:V.Regions }$/;"	v
s:REJECTED	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:REJECTED = 2$/;"	v
s:REPL_SEARCH	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'Base.Docs.repl_search'$/;"	v
s:REPL_SEARCH	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'import REPL.repl_search; repl_search'$/;"	v
s:RGB	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:RGB = deepcopy(s:Color)$/;"	v
s:RGB.as_hsl	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:RGB.as_hsl() abort$/;"	f
s:RGB.as_rgb	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:RGB.as_rgb() abort$/;"	f
s:RGB_FILE_RE	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:RGB_FILE_RE = '\\v^\\s*(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(.+)$'$/;"	v
s:RGB_HEX_RE	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:RGB_HEX_RE = '\\v^#(\\x{3}(\\x{3})?)$'$/;"	v
s:RGB_RE	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:RGB_RE = '\\v^rgb\\((\\d+\\%?),\\s*(\\d+\\%?),\\s*(\\d+\\%?)\\)$'$/;"	v
s:RIndent	plugged/vim-polyglot/indent/rmd.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	plugged/vim-polyglot/indent/rrst.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RXFLT	plugged/clrzr/autoload/clrzr.vim	/^const s:RXFLT = '%(\\d*\\.)?\\d+'$/;"	C
s:RXPCT	plugged/clrzr/autoload/clrzr.vim	/^const s:RXPCT = '%(\\d*\\.)?\\d+\\%'$/;"	C
s:RXPCTORFLT	plugged/clrzr/autoload/clrzr.vim	/^const s:RXPCTORFLT = '%(\\d*\\.)?\\d+\\%?'$/;"	C
s:Racket_visual_doc	plugged/vim-polyglot/ftplugin/racket.vim	/^function! s:Racket_visual_doc()$/;"	f
s:Random	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^let s:Random = {}$/;"	v
s:Random.bool	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:Random.bool() abort$/;"	f
s:Random.generate_canonical	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:Random.generate_canonical() abort$/;"	f
s:Random.next	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:Random.next(...) abort$/;"	f
s:Random.range	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:Random.range(from, ...) abort$/;"	f
s:Random.sample	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:Random.sample(list, ...) abort$/;"	f
s:Random.seed	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:Random.seed(seed) abort$/;"	f
s:Random.shuffle	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:Random.shuffle(list) abort$/;"	f
s:ReadEditorConfig	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:ReadEditorConfig(absolute_path) abort$/;"	f
s:ReadFile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ReadFile(path, line_count) abort$/;"	f
s:ReadPrepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadPrepare(line1, count, range, mods) abort$/;"	f
s:Ready	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Ready(detected) abort$/;"	f
s:RebaseArgument	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
s:RebaseSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:RebuildTextProps	plugged/clrzr/autoload/clrzr.vim	/^function! s:RebuildTextProps(bufinfo, l_first, l_last)$/;"	f
s:ReferenceName	plugged/vim-polyglot/syntax/rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\%([-_.:+]\\?[[:alnum:]]\\+\\)*'$/;"	v
s:RefreshDirtyRange	plugged/clrzr/autoload/clrzr.vim	/^function! s:RefreshDirtyRange()$/;"	f
s:Region	plugged/vim-visual-multi/autoload/vm/region.vim	/^let s:Region = {}$/;"	v
s:Region.A_	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.A_() abort$/;"	f
s:Region.B_	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.B_() abort$/;"	f
s:Region.char	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.char() abort$/;"	f
s:Region.clear	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.clear(...) abort$/;"	f
s:Region.cur_Col	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.cur_Col() abort$/;"	f
s:Region.cur_col	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.cur_col() abort$/;"	f
s:Region.cur_ln	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.cur_ln() abort$/;"	f
s:Region.empty	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.empty() abort$/;"	f
s:Region.highlight	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.highlight() abort$/;"	f
s:Region.move	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.move(...) abort$/;"	f
s:Region.new	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.new(cursor, ...) abort$/;"	f
s:Region.remove	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.remove() abort$/;"	f
s:Region.remove_from_byte_map	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.remove_from_byte_map(all) abort$/;"	f
s:Region.remove_highlight	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.remove_highlight() abort$/;"	f
s:Region.set_vcol	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.set_vcol(...) abort$/;"	f
s:Region.shift	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.shift(x, y) abort$/;"	f
s:Region.update	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update() abort$/;"	f
s:Region.update_bytes_map	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update_bytes_map() abort$/;"	f
s:Region.update_content	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update_content() abort$/;"	f
s:Region.update_cursor	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update_cursor(...) abort$/;"	f
s:Region.update_cursor_pos	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update_cursor_pos() abort$/;"	f
s:Region.update_highlight	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update_highlight() abort$/;"	f
s:Region.update_region	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update_region(...) abort$/;"	f
s:Region.update_vars	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:Region.update_vars() abort$/;"	f
s:Relative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
s:ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
s:ReloadStatusBuffer	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatusBuffer(...) abort$/;"	f
s:ReloadTabStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
s:ReloadWinStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
s:Remote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir, remote, flags, cb) abort$/;"	f
s:RemoteCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteCallback(config, into, flags, cb) abort$/;"	f
s:RemoteDefault	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteDefault(dir) abort$/;"	f
s:RemoteParseArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteParseArgs(args) abort$/;"	f
s:RemoteResolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteResolve(url, flags) abort$/;"	f
s:RemoteUrlCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteUrlCallback(remote, callback) abort$/;"	f
s:Remove	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveCarriageReturn	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
s:RemoveITags	plugged/vim-polyglot/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
s:RemoveProps	plugged/clrzr/autoload/clrzr.vim	/^function! s:RemoveProps(n_buf, l_first, l_last)$/;"	f
s:RemoveTrailingComments	plugged/vim-polyglot/indent/solidity.vim	/^function s:RemoveTrailingComments(content)$/;"	f
s:RemoveTrailingComments	plugged/vim-polyglot/indent/typescript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
s:Replace	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! s:Replace(key) abort$/;"	f
s:ReplaceAsStr	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceAsStr(str, search, replacement, ...)$/;"	f
s:ReplaceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
s:ReplaceExtendedRegexFactorWithNumberFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceExtendedRegexFactorWithNumberFactor(extendedregex)$/;"	f
s:ReplaceNumberFactorWithVimRegexFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceNumberFactorWithVimRegexFactor(halfway)$/;"	f
s:ReplaceRemainFactorWithVimRegexFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceRemainFactorWithVimRegexFactor(halfway)$/;"	f
s:Reset	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:Reset() abort$/;"	f
s:ResizeNeighborWins	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:ResizeNeighborWins() abort$/;"	f
s:Resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
s:RestoreShiftwidth	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
s:RestoreValue	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
s:RevertSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:RgbBgColor	plugged/clrzr/autoload/clrzr.vim	/^function! s:RgbBgColor()$/;"	f
s:RgbColor	plugged/clrzr/autoload/clrzr.vim	/^function! s:RgbColor(color_text_in) "{{{2$/;"	f
s:Right	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:RmDir	plugged/vim-polyglot/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
s:Run	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
s:RunBufDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunBufDelete(bufnr) abort$/;"	f
s:RunClose	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunClose(state, tmp, job, ...) abort$/;"	f
s:RunCloseIn	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunCloseIn(job) abort$/;"	f
s:RunEcho	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEcho(tmp) abort$/;"	f
s:RunEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEdit(state, tmp, job) abort$/;"	f
s:RunExit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunExit(state, tmp, job, exit_status) abort$/;"	f
s:RunFinished	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunFinished(state, ...) abort$/;"	f
s:RunReceive	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunReceive(state, tmp, type, job, data, ...) abort$/;"	f
s:RunRustfmt	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, tmpname, from_writepre)$/;"	f
s:RunSave	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSave(state) abort$/;"	f
s:RunSend	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSend(job, str) abort$/;"	f
s:RunTick	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunTick(job) abort$/;"	f
s:RunWait	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunWait(state, tmp, job, ...) abort$/;"	f
s:RustfmtCommand	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommand()$/;"	f
s:RustfmtCommandRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
s:RustfmtConfigOptions	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtConfigOptions()$/;"	f
s:RustfmtWriteMode	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtWriteMode()$/;"	f
s:S	plugged/vital.vim/autoload/vitalizer.vim	/^let s:S = s:V.import('Data.String')$/;"	v
s:S	plugged/vital.vim/benchmark/database-sqlite.vim	/^let s:S = vital#vital#new().import('Database.SQLite')$/;"	v
s:SEP	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^let s:SEP = has('win32') ? '\\' : '\/'$/;"	v
s:SID	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:SID() abort$/;"	f
s:SID	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:SID() abort$/;"	f
s:SID	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:SID = printf("\\<SNR>%s_", s:SID())$/;"	v
s:SID	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:SID() abort$/;"	f
s:SID	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:SID = printf("\\<SNR>%s_", s:SID())$/;"	v
s:SID	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/absolute.vim	/^function s:SID() abort$/;"	f
s:SID	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/escape%.vim	/^function s:SID() abort$/;"	f
s:SID	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/relative.vim	/^function s:SID() abort$/;"	f
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/ls.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/moon.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\)\\>\\)\\@!'$/;"	v
s:SIZED	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:SIZED = 0x08$/;"	v
s:SNR	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	plugged/vital.vim/autoload/vital/vital.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SOME_KEY	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^let s:SOME_KEY = 'vital_data_optional_some' | lockvar s:SOME_KEY$/;"	v
s:SQLBlockEnd	plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:STATE	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:STATE = s:ON$/;"	v
s:SYNTAX_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_COMMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_COMMENT = 'moon\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING = 'moon\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:SafeStateUpdate	plugged/clrzr/autoload/clrzr.vim	/^function! s:SafeStateUpdate()$/;"	f
s:Safe_indent	plugged/vim-polyglot/indent/awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
s:SaveClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
s:SaveConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
s:SaveFile	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:SaveFile(orig, modi) abort$/;"	f
s:SaveValue	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
s:SaveVimSesn	plugged/vim-polyglot/extras/menu.vim	/^fun! s:SaveVimSesn()$/;"	f
s:Schedule	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:Schedule = vital#highlightedyank#new().import('Schedule')$/;"	v
s:ScratchBufBuild	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
s:ScratchBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
s:Search	plugged/vim-visual-multi/autoload/vm/search.vim	/^let s:Search = {}$/;"	v
s:Search.add	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.add(...) abort$/;"	f
s:Search.add_if_empty	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.add_if_empty(...) abort$/;"	f
s:Search.case	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.case() abort$/;"	f
s:Search.ensure_is_set	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.ensure_is_set(...) abort$/;"	f
s:Search.escape_pattern	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.escape_pattern(t) abort$/;"	f
s:Search.get_from_region	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.get_from_region() abort$/;"	f
s:Search.get_pattern	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.get_pattern(register) abort$/;"	f
s:Search.get_slash_reg	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.get_slash_reg(...) abort$/;"	f
s:Search.join	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.join(...) abort$/;"	f
s:Search.menu	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.menu() abort$/;"	f
s:Search.remove	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.remove(also_regions) abort$/;"	f
s:Search.rewrite	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.rewrite(last) abort$/;"	f
s:Search.update_patterns	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.update_patterns(...) abort$/;"	f
s:Search.validate	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:Search.validate() abort$/;"	f
s:SearchCode	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
s:SearchCwordCmd	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:SearchCwordCmd(type, word_boundary, to_exec)$/;"	f
s:SearchDict	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
s:SearchDict2	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
s:SearchDone	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:SearchDone() abort$/;"	f
s:SearchEndPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
s:SearchLoop	plugged/vim-polyglot/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
s:SearchMatchingKeyword	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
s:SearchP	plugged/vim-polyglot/extras/menu.vim	/^fun! s:SearchP()$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/ls.vim	/^function! s:SearchPair(start, end)$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/moon.vim	/^function! s:SearchPair(start, end)$/;"	f
s:SearchPwordCmd	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:SearchPwordCmd(type, to_exec)$/;"	f
s:SearchSection	plugged/vim-polyglot/ftplugin/j.vim	/^function! s:SearchSection(end, backwards, visualmode) abort$/;"	f
s:SearchTestFunctionNameUnderCursor	plugged/vim-polyglot/autoload/rust.vim	/^function! s:SearchTestFunctionNameUnderCursor() abort$/;"	f
s:SearchVwordCmd	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:SearchVwordCmd(type, to_exec)$/;"	f
s:SecondLevelIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CAS/;"	v
s:SecondLevelNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:Seems_continuing	plugged/vim-polyglot/indent/awk.vim	/^function! s:Seems_continuing( line )$/;"	f
s:SelectAll	plugged/vim-polyglot/extras/menu.vim	/^func s:SelectAll()$/;"	f
s:Selection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
s:SetCompilerType	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
s:SetCurrentSyntax	plugged/vim-polyglot/syntax/svelte.vim	/^function! s:SetCurrentSyntax(type)$/;"	f
s:SetDefault	plugged/vim-polyglot/autoload/polyglot/init.vim	/^function! s:SetDefault(name, value)$/;"	f
s:SetLines	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
s:SetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
s:SetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:SetMakePrg()$/;"	f
s:SetModifiers	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:SetModifiers(mods)$/;"	f
s:SetUpMessage	plugged/vim-rhubarb/plugin/rhubarb.vim	/^function! s:SetUpMessage(filename) abort$/;"	f
s:SetexToAtx	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SetexToAtx(line1, line2)$/;"	f
s:Setf	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:Setf(ft)$/;"	f
s:SetupColorSchemes	plugged/vim-polyglot/extras/menu.vim	/^func s:SetupColorSchemes() abort$/;"	f
s:SetupCompilers	plugged/vim-polyglot/extras/menu.vim	/^func s:SetupCompilers() abort$/;"	f
s:SetupKeymaps	plugged/vim-polyglot/extras/menu.vim	/^  func s:SetupKeymaps() abort$/;"	f
s:SetupLazyloadMenus	plugged/vim-polyglot/extras/menu.vim	/^  func s:SetupLazyloadMenus()$/;"	f
s:SetupPaste	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:SetupPaste() abort$/;"	f
s:ShellTokenize	plugged/vim-polyglot/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
s:ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
s:ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:ShouldSkip	plugged/vim-polyglot/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
s:ShouldSkip	plugged/vim-polyglot/indent/ls.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
s:ShouldSkip	plugged/vim-polyglot/indent/moon.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
s:SimplifyAdjacentCollections	plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyAdjacentCollections(p)$/;"	f
s:SimplifyToAssumeAllPrintable	plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyToAssumeAllPrintable(p)$/;"	f
s:SkipExpr	plugged/vim-polyglot/indent/ls.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
s:SkipExpr	plugged/vim-polyglot/indent/moon.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
s:SkipFunc	plugged/vim-polyglot/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
s:SkipPattern	plugged/vim-polyglot/indent/sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
s:Slash	plugged/vim-fugitive/autoload/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:Slash	plugged/vim-fugitive/plugin/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:Slash	plugged/vim-sleuth/plugin/sleuth.vim	/^  function! s:Slash(path) abort$/;"	f
s:Sleuth	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Sleuth(line1, line2, range, bang, mods, args) abort$/;"	f
s:SmartSearch	plugged/vim-polyglot/indent/ls.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
s:SmartSearch	plugged/vim-polyglot/indent/moon.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
s:SnoopEvent	plugged/clrzr/autoload/clrzr.vim	/^function! s:SnoopEvent(evt)$/;"	f
s:SpecChangelog	plugged/vim-polyglot/ftplugin/spec.vim	/^	function s:SpecChangelog(format)$/;"	f
s:SpellDel	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellDel()$/;"	f
s:SpellLang	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellLang()$/;"	f
s:SpellPopup	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellPopup()$/;"	f
s:SpellReplace	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellReplace(n)$/;"	f
s:SplitClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
s:SplitExpandChain	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
s:SquashArgument	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
s:SshParseConfig	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseConfig(into, root, file, ...) abort$/;"	f
s:SshParseHost	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseHost(value) abort$/;"	f
s:SshParseInclude	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseInclude(into, root, host, value) abort$/;"	f
s:StageApply	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
s:StageArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
s:StageDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
s:StageDiff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageIgnore	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
s:StageInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
s:StageInline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
s:StageJump	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
s:StagePatch	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StageReveal	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal() abort$/;"	f
s:StageSeek	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
s:StarSetf	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:StarSetf(ft)$/;"	f
s:StarSetf	plugged/vim-polyglot/extras/filetype.vim	/^func! s:StarSetf(ft)$/;"	f
s:StartOfFile	plugged/vim-polyglot/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
s:StartStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:StartStructure(name)$/;"	f
s:Starts_with_word	plugged/vim-polyglot/indent/awk.vim	/^function! s:Starts_with_word( line )$/;"	f
s:StatementIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
s:StatusCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
s:StatusCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
s:StatuslineRefresh	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:StatuslineRefresh() abort$/;"	f
s:StdoutToFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StdoutToFile(out, cmd, ...) abort$/;"	f
s:StopJob	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:StopJob() abort$/;"	f
s:StopTimer	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:StopTimer() abort$/;"	f
s:Stream	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:Stream = {}$/;"	v
s:Stream.__has_characteristic__	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.__has_characteristic__(flag) abort$/;"	f
s:Stream.all	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.all(f) abort$/;"	f
s:Stream.any	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.any(f) abort$/;"	f
s:Stream.concat	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.concat(streams) abort$/;"	f
s:Stream.count	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.count(...) abort$/;"	f
s:Stream.distinct	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.distinct(...) abort$/;"	f
s:Stream.drop	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.drop(n) abort$/;"	f
s:Stream.drop_while	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.drop_while(f) abort$/;"	f
s:Stream.filter	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.filter(f) abort$/;"	f
s:Stream.find	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.find(f, ...) abort$/;"	f
s:Stream.first	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.first(...) abort$/;"	f
s:Stream.flat_map	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.flat_map(f) abort$/;"	f
s:Stream.foreach	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.foreach(f) abort$/;"	f
s:Stream.group_by	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.group_by(f) abort$/;"	f
s:Stream.last	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.last(...) abort$/;"	f
s:Stream.map	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.map(f) abort$/;"	f
s:Stream.none	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.none(f) abort$/;"	f
s:Stream.peek	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.peek(f) abort$/;"	f
s:Stream.reduce	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.reduce(f, ...) abort$/;"	f
s:Stream.slice_before	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.slice_before(f) abort$/;"	f
s:Stream.sorted	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.sorted(...) abort$/;"	f
s:Stream.take	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.take(n) abort$/;"	f
s:Stream.take_while	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.take_while(f) abort$/;"	f
s:Stream.to_dict	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.to_dict(key_mapper, value_mapper, ...) abort$/;"	f
s:Stream.to_list	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.to_list() abort$/;"	f
s:Stream.zip	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.zip(streams) abort$/;"	f
s:Stream.zip_with_index	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:Stream.zip_with_index() abort$/;"	f
s:Summary	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Summary(procbar) abort$/;"	f
s:SuperSub	plugged/vim-polyglot/after/syntax/tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
s:Switch	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch() abort "{{{$/;"	f
s:Switch	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Switch = {$/;"	v
s:Switch._isactive	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._isactive() abort "{{{$/;"	f
s:Switch._off	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._off() abort "{{{$/;"	f
s:Switch._on	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._on() abort "{{{$/;"	f
s:Switch._skipsthistime	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._skipsthistime() abort "{{{$/;"	f
s:Switch.skip	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch.skip(...) abort "{{{$/;"	f
s:Switch.skipif	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch.skipif(func, args, ...) abort "{{{$/;"	f
s:SwitchWindow	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
s:SynAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
s:SynAttrXMLish	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynAttrXMLish(synattr)$/;"	f
s:SynBlockBody	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynBlockBody(syn)$/;"	f
s:SynBlockEnd	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynBlockEnd(syn)$/;"	f
s:SynBlockStart	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynBlockStart(syn)$/;"	f
s:SynCoffee	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynCoffee(syn)$/;"	f
s:SynEOL	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynEOL(lnum)$/;"	f
s:SynHTML	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynHTML(syn)$/;"	f
s:SynOnOff	plugged/vim-polyglot/extras/menu.vim	/^    fun s:SynOnOff()$/;"	f
s:SynPug	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynPug(syn)$/;"	f
s:SynSASS	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynSASS(syn)$/;"	f
s:SynSOL	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynSOL(lnum)$/;"	f
s:SynStyle	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynStyle(syn)$/;"	f
s:SynSvelteScriptOrStyle	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynSvelteScriptOrStyle(syn)$/;"	f
s:SynTSXBlockEnd	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXBlockEnd(syns)$/;"	f
s:SynTSXContinues	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXContinues(cursyn, prevsyn)$/;"	f
s:SynTSXDepth	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXDepth(syns)$/;"	f
s:SynTypeScript	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynTypeScript(syn)$/;"	f
s:SynXMLish	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynXMLish(syns)$/;"	f
s:SynsEOL	plugged/vim-polyglot/autoload/svelte.vim	/^function! s:SynsEOL(lnum)$/;"	f
s:SynsEOL	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynsEOL(lnum)$/;"	f
s:SynsSOL	plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynsSOL(lnum)$/;"	f
s:SyntaxInclude	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SyntaxInclude(filetype)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/ls.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/moon.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxName()$/;"	f
s:SyntaxNameAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxNameAtPosition(line, column)$/;"	f
s:SystemError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
s:SystemList	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemList(cmd) abort$/;"	f
s:T	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:T = function('calendar#string#truncate')$/;"	v
s:TAGS_METADATA_FILE_NAME	plugged/vimwiki/autoload/vimwiki/tags.vim	/^let s:TAGS_METADATA_FILE_NAME = '.vimwiki_tags'$/;"	v
s:TIMEOUT_ERROR	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:TIMEOUT_ERROR = 'vital: Async.Promise: Timeout'$/;"	v
s:TRUE	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-asterisk/autoload/asterisk.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:TRUE = 1$/;"	v
s:TRUE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:TRUE = !0$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': t/;"	v
s:TYPE_DICT	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_DICT	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^let s:TYPE_DICT    = type({})$/;"	v
s:TYPE_DICT	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_FUNCREF	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^let s:TYPE_FUNCREF = type(function('tr'))$/;"	v
s:TYPE_LIST	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_NUM	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:TYPE_NUM = type(0)$/;"	v
s:TYPE_STRING	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:TYPE_STRING	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^let s:TYPE_STRING  = type('')$/;"	v
s:TYPE_STRING	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:T_BOOL	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_BOOL = 6$/;"	v
s:T_CHANNEL	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_CHANNEL = 9$/;"	v
s:T_DICT	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_DICT = 4$/;"	v
s:T_FLOAT	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_FLOAT = 5$/;"	v
s:T_FUNC	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_FUNC = 2$/;"	v
s:T_JOB	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_JOB = 8$/;"	v
s:T_LIST	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_LIST = 3$/;"	v
s:T_NONE	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_NONE = 7$/;"	v
s:T_NUMBER	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_NUMBER = 0$/;"	v
s:T_STRING	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:T_STRING = 1$/;"	v
s:Tab	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Tab()$/;"	f
s:TableFormat	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:TableFormat()$/;"	f
s:Tag	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:Tag()$/;"	f
s:TagFiles	plugged/vim-polyglot/extras/menu.vim	/^fun! s:TagFiles()$/;"	f
s:Task	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task(...) abort "{{{$/;"	f
s:Task	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Task = {$/;"	v
s:Task._getid	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task._getid() abort "{{{$/;"	f
s:Task.cancel	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.cancel() abort "{{{$/;"	f
s:Task.clone	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.clone() abort "{{{$/;"	f
s:Task.isactive	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.isactive() abort "{{{$/;"	f
s:Task.waitfor	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.waitfor(triggerlist) abort "{{{$/;"	f
s:TaskChain	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain(...) abort "{{{$/;"	f
s:TaskChain	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:TaskChain = {$/;"	v
s:TaskChain._addorder	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._addorder(ordertask) abort "{{{$/;"	f
s:TaskChain._addtrigger	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._addtrigger(triggertask, args) abort "{{{$/;"	f
s:TaskChain._getorder	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._getorder() abort "{{{$/;"	f
s:TaskChain._gettrigger	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._gettrigger() abort "{{{$/;"	f
s:TaskChain._gonext	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._gonext() abort "{{{$/;"	f
s:TaskChain._isover	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._isover() abort "{{{$/;"	f
s:TaskChain.cancel	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.cancel() abort "{{{$/;"	f
s:TaskChain.hook	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.hook(triggerlist) abort "{{{$/;"	f
s:TaskChain.trigger	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.trigger() abort "{{{$/;"	f
s:TaskChain.waitfor	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.waitfor() abort "{{{$/;"	f
s:TeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function("s:NoTeXIndent")$/;"	v
s:TeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:TempDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDelete(file) abort$/;"	f
s:TempDotMap	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDotMap() abort$/;"	f
s:TempReadPost	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
s:TempReadPre	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
s:TempScript	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempScript(...) abort$/;"	f
s:TempState	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
s:TextDocumentIdentifier	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentIdentifier(path)$/;"	f
s:TextDocumentPositionParams	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentPositionParams(documentUri, line, character)$/;"	f
s:TextWidth	plugged/vim-polyglot/extras/menu.vim	/^fun! s:TextWidth()$/;"	f
s:Themes	plugged/vim-visual-multi/autoload/vm/themes.vim	/^let s:Themes = {}$/;"	v
s:Themes	plugged/vim-visual-multi/autoload/vm/themes.vim	/^let s:Themes._dark = ['iceblue', 'ocean', 'neon', 'purplegray', 'nord', 'codedark', 'spacegray',/;"	v
s:Themes	plugged/vim-visual-multi/autoload/vm/themes.vim	/^let s:Themes._light = ['sand', 'paper', 'lightblue1', 'lightblue2', 'lightpurple1', 'lightpurple/;"	v
s:Themes.codedark	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.codedark()$/;"	f
s:Themes.iceblue	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.iceblue()$/;"	f
s:Themes.lightblue1	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.lightblue1()$/;"	f
s:Themes.lightblue2	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.lightblue2()$/;"	f
s:Themes.lightpurple1	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.lightpurple1()$/;"	f
s:Themes.lightpurple2	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.lightpurple2()$/;"	f
s:Themes.neon	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.neon()$/;"	f
s:Themes.nord	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.nord()$/;"	f
s:Themes.ocean	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.ocean()$/;"	f
s:Themes.olive	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.olive()$/;"	f
s:Themes.paper	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.paper()$/;"	f
s:Themes.purplegray	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.purplegray()$/;"	f
s:Themes.sand	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.sand()$/;"	f
s:Themes.spacegray	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! s:Themes.spacegray()$/;"	f
s:Throw	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Throw(message) "{{{$/;"	f
s:TidyEncOptByFenc	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
s:TidyEncOptByFenc	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
s:TimeDelta	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:TimeDelta = s:_new_class('TimeDelta')$/;"	v
s:TimeDelta._normalize	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta._normalize() abort$/;"	f
s:TimeDelta.about	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.about() abort$/;"	f
s:TimeDelta.add	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.add(...) abort$/;"	f
s:TimeDelta.days	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.days() abort$/;"	f
s:TimeDelta.duration	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.duration() abort$/;"	f
s:TimeDelta.hours	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.hours() abort$/;"	f
s:TimeDelta.is	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.is(td) abort$/;"	f
s:TimeDelta.minutes	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.minutes() abort$/;"	f
s:TimeDelta.months	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.months() abort$/;"	f
s:TimeDelta.negate	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.negate() abort$/;"	f
s:TimeDelta.seconds	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.seconds() abort$/;"	f
s:TimeDelta.sign	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.sign() abort$/;"	f
s:TimeDelta.subtract	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.subtract(...) abort$/;"	f
s:TimeDelta.to_string	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.to_string() abort$/;"	f
s:TimeDelta.total_seconds	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.total_seconds() abort$/;"	f
s:TimeDelta.weeks	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.weeks() abort$/;"	f
s:TimeDelta.years	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeDelta.years() abort$/;"	f
s:TimeZone	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:TimeZone = s:_new_class('TimeZone')$/;"	v
s:TimeZone.hours	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeZone.hours() abort$/;"	f
s:TimeZone.minutes	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeZone.minutes() abort$/;"	f
s:TimeZone.offset	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeZone.offset() abort$/;"	f
s:TimeZone.offset_string	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeZone.offset_string() abort$/;"	f
s:TimeZone.sign	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeZone.sign() abort$/;"	f
s:TimeZone.w3c	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:TimeZone.w3c() abort$/;"	f
s:Timer	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Timer = {$/;"	v
s:Timer.add	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Timer.add(time, task) abort "{{{$/;"	f
s:Timer.remove	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Timer.remove(id) abort "{{{$/;"	f
s:Toc	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Toc(...)$/;"	f
s:Toggle	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Toggle(op) abort$/;"	f
s:ToggleGuiOption	plugged/vim-polyglot/extras/menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f
s:Token	plugged/vim-polyglot/indent/javascript.vim	/^function s:Token()$/;"	f
s:TokenizeLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
s:ToolItems	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolItems(state, from, to, offsets, text, ...) abort$/;"	f
s:ToolParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolParse(state, line) abort$/;"	f
s:ToolStream	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolStream(line1, line2, range, bang, mods, options, args, state) abort$/;"	f
s:ToolToFrom	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolToFrom(str) abort$/;"	f
s:Transform	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Transform(algorithm,type) abort$/;"	f
s:TransformOpfunc	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformOpfunc(type) abort$/;"	f
s:TransformSetup	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformSetup(algorithm) abort$/;"	f
s:TranslateRegex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! s:TranslateRegex(pattern) abort$/;"	f
s:Tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
s:Tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
s:TreeChomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
s:TreeInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
s:TrimPhantomLine	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:TrimPhantomLine(buffer, orig) abort$/;"	f
s:U	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:U = incsearch#util#import()$/;"	v
s:URI	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^let s:URI = {$/;"	v
s:UltiSnippetTextObj	plugged/ultisnips/ftplugin/snippets.vim	/^fun! s:UltiSnippetTextObj(inner) abort$/;"	f
s:UnHlAlpha	plugged/clrzr/autoload/clrzr.vim	/^function! s:UnHlAlpha(text, n_col, n_length)$/;"	f
s:UndoAllChanges	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:UndoAllChanges() abort$/;"	f
s:UnexpectedToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
s:Uniq	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
s:UnletStack	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:UnletStack()$/;"	f
s:UpdateErrors	plugged/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(buf, auto_invoked, checker_names) abort " {{{2$/;"	f
s:UpdateIndex	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UpdateIndex(dir, info) abort$/;"	f
s:UpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
s:UpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^  function! s:UpdateMakePrg()$/;"	f
s:UpdateNimLog	plugged/vim-polyglot/autoload/nim.vim	/^fun! s:UpdateNimLog() abort$/;"	f
s:UrlParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UrlParse(url) abort$/;"	f
s:UsableWin	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
s:UserCommandCwd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandCwd(dir) abort$/;"	f
s:UserCommandList	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
s:V	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:V	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:V	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:V = vital#crystal#new()$/;"	v
s:V	plugged/vital.vim/autoload/vitalizer.vim	/^let s:V = vital#vital#new()$/;"	v
s:VERSION	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:VERSION = s:version()$/;"	v
s:VIM_RGB_FILE	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:VIM_RGB_FILE = expand('$VIMRUNTIME\/rgb.txt')$/;"	v
s:ValidMatchEnd	plugged/vim-polyglot/indent/mp.vim	/^function! s:ValidMatchEnd(line, pat, start)$/;"	f
s:ValidateDub	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! s:ValidateDub(checker) " {{{2$/;"	f
s:VbSearch	plugged/vim-polyglot/ftplugin/vb.vim	/^function! s:VbSearch(pattern, flags)$/;"	f
s:VerifyConsistent	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:VerifyConsistent(on_disk, on_mem) abort$/;"	f
s:VersionAwareNetrwBrowseX	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VersionAwareNetrwBrowseX(url)$/;"	f
s:VersionCheck	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:VersionCheck() abort$/;"	f
s:VimEnterHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:VimEnterHook() abort " {{{2$/;"	f
s:VisMove	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VisMove(f)$/;"	f
s:Visual	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! s:Visual(cmd) abort$/;"	f
s:VisualSelection	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:VisualSelection() abort$/;"	f
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^  let s:Vital._get_module = function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^  let s:Vital._get_module = function('s:_get_module')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital._import = function('s:_import')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital.exists = function('s:exists')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital.import = function('s:import')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital.load = function('s:load')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital.plugin_name = function('s:plugin_name')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital.search = function('s:search')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital.unload = function('s:unload')$/;"	v
s:Vital	plugged/vital.vim/autoload/vital/vital.vim	/^let s:Vital.vital_files = function('s:vital_files')$/;"	v
s:W	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:W = function((exists('*strdisplaywidth') ? '' : 'calendar#string#') . 'strdisplaywidth')$/;"	v
s:Warn	plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:Warn(msg) abort$/;"	f
s:Warning	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:Warning(msg, ...) abort$/;"	f
s:Weight	plugged/vim-polyglot/indent/mp.vim	/^function! s:Weight(line)$/;"	f
s:WinShellEsc	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:WinShellEsc(arg) abort$/;"	f
s:WithBuffered	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:WithBuffered = {'__buffer': []}$/;"	v
s:WithBuffered.__read_to_buffer__	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:WithBuffered.__read_to_buffer__(n) abort$/;"	f
s:WithPath	plugged/vim-polyglot/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
s:Worker	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^let s:Worker = funcref('s:_worker')$/;"	v
s:WorkspaceLoadParms	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspaceLoadParms(files)$/;"	f
s:WorkspacePeekRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspacePeekRequest(directory, deep, excludedDirs)$/;"	f
s:WriteDebugBuf	plugged/clrzr/autoload/clrzr.vim	/^function! s:WriteDebugBuf(object)$/;"	f
s:WriteParagraph	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:WriteParagraph(buffer, orig, modi) abort$/;"	f
s:X	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:X                = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^let s:X   = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/edit.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/insert.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/region.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:X	plugged/vim-visual-multi/autoload/vm/visual.vim	/^let s:X = { -> g:Vm.extend_mode }$/;"	v
s:XTERM_PALETTE	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:XTERM_PALETTE = [$/;"	v
s:XxdBack	plugged/vim-polyglot/extras/menu.vim	/^func s:XxdBack()$/;"	f
s:XxdConv	plugged/vim-polyglot/extras/menu.vim	/^func s:XxdConv()$/;"	f
s:XxdFind	plugged/vim-polyglot/extras/menu.vim	/^func s:XxdFind()$/;"	f
s:Yank	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! s:Yank() abort$/;"	f
s:YankAssassin	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    function! s:YankAssassin() abort$/;"	f
s:YankAssassinMapping	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^    function! s:YankAssassinMapping(type, ...) abort$/;"	f
s:_	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:_ = {}$/;"	v
s:_	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:_ = {}$/;"	v
s:_	plugged/doom-one.vim/colors/doom-one.vim	/^function! s:_ (name, ...)$/;"	f
s:_	plugged/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:_DEFAULT_CHECKERS	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_DEFAULT_PARSER	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^let s:_DEFAULT_PARSER = {'options' : {}}$/;"	v
s:_DEFAULT_PARSER.complete	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_DEFAULT_PARSER.complete(arglead, cmdline, cursorpos) abort$/;"	f
s:_DEFAULT_PARSER.complete_greedily	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_DEFAULT_PARSER.complete_greedily(arglead, cmdline, cursorpos) abort$/;"	f
s:_DEFAULT_PARSER.help	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_DEFAULT_PARSER.help() abort$/;"	f
s:_DEFAULT_PARSER.on	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_DEFAULT_PARSER.on(def, desc, ...) abort$/;"	f
s:_DEFAULT_PARSER.parse	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_DEFAULT_PARSER.parse(...) abort$/;"	f
s:_DICT_TYPE	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^let s:_DICT_TYPE = type({})$/;"	v
s:_ECLIM_TYPES	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_FILE_SHORTCUTS	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:_FILE_SHORTCUTS = {$/;"	v
s:_LIST_TYPE	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^let s:_LIST_TYPE = type([])$/;"	v
s:_NODE_MAX_DIGIT	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^let s:_NODE_MAX_DIGIT = 4$/;"	v
s:_NODE_MAX_NUM	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^let s:_NODE_MAX_NUM = 10000$/;"	v
s:_NOTIFIER_TYPES	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_NUM_TYPE	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^let s:_NUM_TYPE = type(0)$/;"	v
s:_PERSISTENT_NOTIFIERS	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_PRESET_COMPLETER	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^let s:_PRESET_COMPLETER = {}$/;"	v
s:_PRESET_COMPLETER.file	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_PRESET_COMPLETER.file(optlead, cmdline, cursorpos) abort$/;"	f
s:_SID	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Input.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/vital.vim/data/vital/autoloadablize.vim	/^function! s:_SID() abort$/;"	f
s:_STRING_TYPE	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^let s:_STRING_TYPE = type('')$/;"	v
s:_UNDEFINED	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_UNDEFINED	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_UNDEFINED	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_YCM_TYPES	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_ZERO	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^let s:_ZERO = {'num': [0], 'sign': 1}$/;"	v
s:__curry_stub	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^function! s:__curry_stub(...) dict abort$/;"	f
s:__dict_pair	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^let s:__dict_pair = [type({}), type({})]$/;"	v
s:__function_pair	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^let s:__function_pair = [type(function('function')), type(function('function'))]$/;"	v
s:__get_map_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:__get_map_command(type, mode, dict, lhs, rhs) abort$/;"	f
s:__get_unmap_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:__get_unmap_command(type, mode, dict, lhs) abort$/;"	f
s:__list_pair	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^let s:__list_pair = [type([]), type([])]$/;"	v
s:__matchNode	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__matchNode(node, cond) abort$/;"	f
s:__number_pair	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^let s:__number_pair = [type(10), type(10)]$/;"	v
s:__parse_tree	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__parse_tree(ctx, top) abort$/;"	f
s:__sid	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^function! s:__sid() abort$/;"	f
s:__string_pair	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^let s:__string_pair = [type(''), type('')]$/;"	v
s:__template	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^let s:__template = { 'name': '', 'attr': {}, 'child': [] }$/;"	v
s:__template.childNode	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__template.childNode(...) dict abort$/;"	f
s:__template.childNodes	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__template.childNodes(...) dict abort$/;"	f
s:__template.find	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__template.find(...) dict abort$/;"	f
s:__template.findAll	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__template.findAll(...) dict abort$/;"	f
s:__template.toString	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__template.toString() dict abort$/;"	f
s:__template.value	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:__template.value(...) dict abort$/;"	f
s:__urlencode_char	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:__urlencode_char(c) abort$/;"	f
s:_abs_add	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_abs_add(a,b) abort$/;"	f
s:_abs_compare	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_abs_compare(a,b) abort$/;"	f
s:_abs_mul_shortint	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_abs_mul_shortint(a,n) abort$/;"	f
s:_abs_sub	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_abs_sub(a,b) abort$/;"	f
s:_add_to_errors	plugged/syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
s:_adjust_for_filling	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_adjust_for_filling(context, colidx, width) abort$/;"	f
s:_all	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_all(promises, resolve, reject) abort$/;"	f
s:_am_pm_lower	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_am_pm_lower(locale) abort$/;"	f
s:_am_pm_names	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_am_pm_names(lowercase, locale) abort$/;"	f
s:_am_pm_upper	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_am_pm_upper(locale) abort$/;"	f
s:_apply_common_options	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^function! s:_apply_common_options(wl, layoutdata) abort$/;"	f
s:_array	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_array(input) abort$/;"	f
s:_array_of_tables	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_array_of_tables(input) abort$/;"	f
s:_as_echon	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
s:_as_echon	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
s:_as_statusline	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
s:_as_statusline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
s:_assert	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_assert(...) abort$/;"	f
s:_assertion	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:_assertion(q_args, local, scriptfilename, about_currline, cmd) abort$/;"	f
s:_auto_cmap	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
s:_auto_cmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
s:_autocmd	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_autocmd(augroup, event, pat) abort "{{{$/;"	f
s:_base	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^  let s:_base = 1$/;"	v
s:_base	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^let s:_base = 0$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set = {$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.and = s:_base_set.intersection$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.ge = s:_base_set.issuperset$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.le = s:_base_set.issubset$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.or = s:_base_set.union$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.sub = s:_base_set.difference$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.xor = s:_base_set.symmetric_difference$/;"	v
s:_base_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:_base_set = {$/;"	v
s:_base_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:_base_set.and = s:_base_set.intersection$/;"	v
s:_base_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:_base_set.ge = s:_base_set.issuperset$/;"	v
s:_base_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:_base_set.le = s:_base_set.issubset$/;"	v
s:_base_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:_base_set.or = s:_base_set.union$/;"	v
s:_base_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:_base_set.sub = s:_base_set.difference$/;"	v
s:_base_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:_base_set.xor = s:_base_set.symmetric_difference$/;"	v
s:_base_set._add	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._add(x) abort$/;"	f
s:_base_set._add	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set._add(x) abort$/;"	f
s:_base_set._clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._clear() abort$/;"	f
s:_base_set._clear	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set._clear() abort$/;"	f
s:_base_set._hash	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._hash(x) abort$/;"	f
s:_base_set._hash	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set._hash(x) abort$/;"	f
s:_base_set._new	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._new(...) abort$/;"	f
s:_base_set._new	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set._new(...) abort$/;"	f
s:_base_set._set_data	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._set_data(xs) abort$/;"	f
s:_base_set._set_data	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set._set_data(xs) abort$/;"	f
s:_base_set._to_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._to_set(x) abort$/;"	f
s:_base_set._to_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set._to_set(x) abort$/;"	f
s:_base_set._update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._update(xs) abort$/;"	f
s:_base_set._update	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set._update(xs) abort$/;"	f
s:_base_set.difference	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.difference(t) abort$/;"	f
s:_base_set.difference	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.difference(t) abort$/;"	f
s:_base_set.gt	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.gt(t) abort$/;"	f
s:_base_set.gt	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.gt(t) abort$/;"	f
s:_base_set.in	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.in(x) abort$/;"	f
s:_base_set.in	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.in(x) abort$/;"	f
s:_base_set.intersection	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.intersection(t) abort$/;"	f
s:_base_set.intersection	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.intersection(t) abort$/;"	f
s:_base_set.issubset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issubset(t) abort$/;"	f
s:_base_set.issubset	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.issubset(t) abort$/;"	f
s:_base_set.issuperset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issuperset(t) abort$/;"	f
s:_base_set.issuperset	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.issuperset(t) abort$/;"	f
s:_base_set.len	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.len() abort$/;"	f
s:_base_set.len	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.len() abort$/;"	f
s:_base_set.lt	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.lt(t) abort$/;"	f
s:_base_set.lt	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.lt(t) abort$/;"	f
s:_base_set.symmetric_difference	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.symmetric_difference(t) abort$/;"	f
s:_base_set.symmetric_difference	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.symmetric_difference(t) abort$/;"	f
s:_base_set.to_list	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.to_list() abort$/;"	f
s:_base_set.to_list	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.to_list() abort$/;"	f
s:_base_set.union	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.union(t) abort$/;"	f
s:_base_set.union	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_base_set.union(t) abort$/;"	f
s:_basic_comparator	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_basic_comparator(x, y) abort$/;"	f
s:_basic_string	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_basic_string(input) abort$/;"	f
s:_boolean	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_boolean(input) abort$/;"	f
s:_border_layout_adjust_size	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^function! s:_border_layout_adjust_size(wl, data) dict abort$/;"	f
s:_border_layout_apply	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^function! s:_border_layout_apply(wl, data) dict abort$/;"	f
s:_bounder	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_bounder = s:SimplifyToAssumeAllPrintable('\\%([[\\]{}, \\t]\\@!\\p\\)')$/;"	v
s:_buffer_complete	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
s:_buffer_complete	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
s:_build_last_response	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_build_last_response(responses) abort$/;"	f
s:_build_response	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_build_response(header, content) abort$/;"	f
s:_build_settings	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_build_settings(args) abort$/;"	f
s:_bytes2str	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:_bytes2str(bytes) abort$/;"	f
s:_cache	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^let s:_cache = { '_': {} }$/;"	v
s:_cache.get	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_cache.get(key) abort$/;"	f
s:_cache.has	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_cache.has(key) abort$/;"	f
s:_cache.return	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_cache.return(key, value) abort$/;"	f
s:_calendar	plugged/calendar.vim/autoload/calendar.vim	/^let s:_calendar = {}$/;"	v
s:_call1	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_call1(f, arg) abort$/;"	f
s:_call_binary_string_expr	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_call_binary_string_expr(expr, pair) abort$/;"	f
s:_call_binary_string_expr_val_memo	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_call_binary_string_expr_val_memo(expr, pair) abort$/;"	f
s:_call_handler_method	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_call_handler_method(this, name, args) abort$/;"	f
s:_call_string_expr	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
s:_call_string_expr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
s:_call_string_expr	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
s:_call_string_expr	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
s:_capture	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
s:_capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
s:_capture	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_capture(command) abort$/;"	f
s:_capture_lines	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_capture_lines(command) abort$/;"	f
s:_chain	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_chain(promise_factories, results) abort$/;"	f
s:_chain	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_chain(...) dict abort$/;"	f
s:_checkPackage	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
s:_checkPhp	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
s:_checkPython	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
s:_checkRuby	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
s:_check_assert_args	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_check_assert_args(args) abort$/;"	f
s:_check_extra_option	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_check_extra_option(parsed_args, options) abort$/;"	f
s:_check_hsl_range	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_check_hsl_range(h, s, l) abort$/;"	f
s:_check_out_of_range	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_check_out_of_range(no, types) abort$/;"	f
s:_check_rgb_range	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_check_rgb_range(r, g, b) abort$/;"	f
s:_check_stack	plugged/syntastic/plugin/syntastic.vim	/^let s:_check_stack = []$/;"	v
s:_check_terminal_code_range	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_check_terminal_code_range(code) abort$/;"	f
s:_check_type_args	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_check_type_args(args) abort$/;"	f
s:_clamp	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
s:_clamp	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
s:_collection	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_collection = '[^\\@!\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_column_width	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^function! s:_column_width(pwinwidth, n) abort$/;"	f
s:_common	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:_common() abort$/;"	f
s:_common_generator	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:_common_generator() abort$/;"	f
s:_common_generator	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:_common_generator() abort$/;"	f
s:_compare	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_compare	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_compare_by_string_expr	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_compare_by_string_expr(a, b) abort$/;"	f
s:_compare_checker_names	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_compare_checker_names(a, b) abort " {{{2$/;"	f
s:_compare_error_items_by_columns	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
s:_compare_error_items_by_lines	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
s:_compare_with	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_compare_with(x, y) abort$/;"	f
s:_complete_long_option	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_complete_long_option(arglead, options) abort$/;"	f
s:_complete_short_option	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_complete_short_option(arglead, options) abort$/;"	f
s:_complete_unknown_option	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_complete_unknown_option(Completer, arglead, cmdline, cursorpos) abort$/;"	f
s:_complete_user_specified_option	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_complete_user_specified_option(options, arglead, cmdline, cursorpos) abort$/;"	f
s:_complete_user_specified_short_option	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_complete_user_specified_short_option(options, arglead, cmdline, cursorpos) abort$/;"	f
s:_compute_adjustment	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_compute_adjustment(context, colidx, left_joint, center_joint, right_joint) abort$/;"	f
s:_compute_table_width	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_compute_table_width(context) abort$/;"	f
s:_compute_width_ranges	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_compute_width_ranges(context) abort$/;"	f
s:_compute_widths	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_compute_widths(context) abort$/;"	f
s:_concat_characteristics	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_concat_characteristics(characteristics_list) abort$/;"	f
s:_config	plugged/vim-asterisk/autoload/asterisk.vim	/^let s:_config = {$/;"	v
s:_config	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:_config(c) abort$/;"	f
s:_consume	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_consume(input, pattern) abort$/;"	f
s:_context_eval	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^function! s:_context_eval(expr, context) abort$/;"	f
s:_convert_sid	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
s:_convert_sid	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
s:_cookie_id	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:_cookie_id(cookie) abort$/;"	f
s:_create_function_id	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_create_function_id() abort$/;"	f
s:_create_hash	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
s:_create_win2pos2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_create_win2pos2hint(dict, hint_dict, ...) abort$/;"	f
s:_datetime	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_datetime(input) abort$/;"	f
s:_debug_mode	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^let s:_debug_mode = 0$/;"	v
s:_decode_JSON	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! s:_decode_JSON(json) abort " {{{2$/;"	f
s:_default_compare	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_default_compare	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_default_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_default_error_handler	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^function! s:_default_error_handler() abort$/;"	f
s:_default_tz	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^  function! s:_default_tz() abort$/;"	f
s:_define_ansi_highlights	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_define_ansi_highlights() abort$/;"	f
s:_define_scriptfunction	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:_define_scriptfunction(fname) abort$/;"	f
s:_delete	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_delete = function(v:version > 704 || (v:version == 704 && has('patch1128')) ? 'delete' : /;"	v
s:_delete_dumb	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_delete_dumb(what, flags) abort " {{{2$/;"	f
s:_disabled_by_eclim	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
s:_disabled_by_ycm	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
s:_distance	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:_distance(a, b) abort$/;"	f
s:_div	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_div(n, d) abort$/;"	f
s:_divmod	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_divmod(n, d) abort$/;"	f
s:_doautocmd	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_doautocmd(augroup, event, pat) abort "{{{$/;"	f
s:_dot_to_sharp	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dot_to_sharp	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dot_to_sharp	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dot_to_sharp	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dot_to_sharp	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dot_to_sharp	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dump_record	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^function! s:_dump_record(obj) abort$/;"	f
s:_eat_authority	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_authority(str, pattern_set) abort$/;"	f
s:_eat_em	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_em(str, pat, ...) abort$/;"	f
s:_eat_fragment	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_fragment(str, pattern_set) abort$/;"	f
s:_eat_hier_part	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_hier_part(rest, pattern_set) abort$/;"	f
s:_eat_host	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_host(str, pattern_set) abort$/;"	f
s:_eat_path	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_path(str, pattern_set) abort$/;"	f
s:_eat_path_abempty	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_path_abempty(str, pattern_set) abort$/;"	f
s:_eat_path_absolute	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_path_absolute(str, pattern_set) abort$/;"	f
s:_eat_path_noscheme	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_path_noscheme(str, pattern_set) abort$/;"	f
s:_eat_path_rootless	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_path_rootless(str, pattern_set) abort$/;"	f
s:_eat_port	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_port(str, pattern_set) abort$/;"	f
s:_eat_query	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_query(str, pattern_set) abort$/;"	f
s:_eat_scheme	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_scheme(str, pattern_set) abort$/;"	f
s:_eat_userinfo	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_eat_userinfo(str, pattern_set) abort$/;"	f
s:_echo	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:_echo(x) abort$/;"	f
s:_echohl	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:_echohl(msg, hlgroup, ...) abort$/;"	f
s:_echon	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
s:_echon	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
s:_encode_dict	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_dict(val, settings) abort$/;"	f
s:_encode_dict	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_encode_dict(val, settings) abort$/;"	f
s:_encode_list	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_list(val, settings) abort$/;"	f
s:_encode_list	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_encode_list(val, settings) abort$/;"	f
s:_encode_name	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
s:_ends_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_ends_with(text, expr, lnum)$/;"	f
s:_engine	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_engine	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_ensure_key	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_ensure_key(key) abort$/;"	f
s:_ensure_key	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:_ensure_key(key) abort$/;"	f
s:_eof	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_eof(input) abort$/;"	f
s:_equals	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_equals(input) abort$/;"	f
s:_error	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_error(message, ...) abort$/;"	f
s:_error	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_error(input) abort$/;"	f
s:_escape_file_searching	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:_escape_file_searching(buffer_name) abort$/;"	f
s:_eval	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_eval(...) dict abort$/;"	f
s:_eval	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_eval(fs, x) abort$/;"	f
s:_event_and_patterns	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_event_and_patterns(eventexpr) abort "{{{$/;"	f
s:_exception	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:_exception(msg) abort$/;"	f
s:_exception	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:_exception(msg) abort$/;"	f
s:_execute	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
s:_execute	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_execute(cmd) abort$/;"	f
s:_execute	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:_execute = function('execute')$/;"	v
s:_execute	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
s:_execute	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_execute(cmd) abort$/;"	f
s:_execute	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_execute(cmd) abort$/;"	f
s:_execute	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_execute(...) dict abort$/;"	f
s:_execute	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^function! s:_execute(args, options) abort$/;"	f
s:_execute_search	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:_execute_search(cmd) abort$/;"	f
s:_exists_autoload_func_with_source	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
s:_exists_autoload_func_with_source	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
s:_expand_short_option	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_expand_short_option(arg, options) abort$/;"	f
s:_explain_skip	plugged/syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
s:_extract_files	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_files	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_files	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_files	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_special_opts	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_extract_special_opts(argc, argv) abort$/;"	f
s:_f_file_readlines	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_f_file_readlines() dict abort$/;"	f
s:_f_from_list	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_f_from_list() dict abort$/;"	f
s:_f_iterate	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_f_iterate() dict abort$/;"	f
s:_f_zip	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_f_zip() dict abort$/;"	f
s:_facade_adjust_size	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_facade_adjust_size() dict abort$/;"	f
s:_facade_apply	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_facade_apply() dict abort$/;"	f
s:_false	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_false() abort$/;"	f
s:_false	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_false() abort$/;"	f
s:_file2module	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file2module	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file2module	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file2module	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file2module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file2module	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file_resolve	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_file_resolve(file) abort$/;"	f
s:_fill_char	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_fill_char(char, width) abort$/;"	f
s:_find_index	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
s:_find_right_r	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_find_right_r(cs, i) abort$/;"	f
s:_find_tabpage	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:_find_tabpage(scope_var) abort$/;"	f
s:_find_window	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:_find_window(scope_var) abort$/;"	f
s:_finish	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
s:_finish	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
s:_fix_form	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_fix_form(a) abort$/;"	f
s:_flatten_fully	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:_flatten_fully(x) abort$/;"	f
s:_flatten_with_limit	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:_flatten_with_limit(x, limit) abort$/;"	f
s:_float	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_float(input) abort$/;"	f
s:_float2str	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_float2str = function(has('float') ? 's:_float2str_smart' : 's:_float2str_dumb')$/;"	v
s:_float2str_dumb	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_dumb(val) abort " {{{2$/;"	f
s:_float2str_smart	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_smart(val) abort " {{{2$/;"	f
s:_flow_layout_adjust_size	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/FlowLayout.vim	/^function! s:_flow_layout_adjust_size(wl, data) dict abort$/;"	f
s:_flow_layout_apply	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/FlowLayout.vim	/^function! s:_flow_layout_apply(wl, data) dict abort$/;"	f
s:_fmix32	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:_fmix32(x) abort$/;"	f
s:_foldl	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
s:_foldl	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
s:_foldl	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
s:_foldr_internal	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_foldr_internal(call, f, state, xs) abort$/;"	f
s:_format_throwpoint	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_format_throwpoint(throwpoint) abort$/;"	f
s:_format_variable	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
s:_freeze	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_freeze(stream, depth, intermediate) abort$/;"	f
s:_fulfill	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_fulfill(promise, value) abort$/;"	f
s:_function	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_function = function('function')$/;"	v
s:_function	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function_exists	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_function_exists(name) abort$/;"	f
s:_function_name	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_function_name(id) abort$/;"	f
s:_fuzz	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_fuzz = function(exists('*getpid') ? 'getpid' : 's:_fuzz_dumb')$/;"	v
s:_fuzz_dumb	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_fuzz_dumb() abort " {{{2$/;"	f
s:_g2jd	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_g2jd(year, month, day) abort$/;"	f
s:_gcd	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:_gcd(m, n) abort$/;"	f
s:_get_arglist_and_context	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_get_arglist_and_context(args) abort$/;"	f
s:_get_binary_caller	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_get_binary_caller(binary_f) abort$/;"	f
s:_get_binary_caller_	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_get_binary_caller_(binary_f) abort$/;"	f
s:_get_binding	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_get_binding(args) abort$/;"	f
s:_get_builtin_module	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_builtin_module	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_builtin_module	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_builtin_module	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_builtin_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_builtin_module	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_caller_for	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:_get_caller_for(f) abort$/;"	f
s:_get_cflags	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
s:_get_checker_var	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
s:_get_client	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_get_client(settings) abort$/;"	f
s:_get_default_path	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_get_default_path(path) abort$/;"	f
s:_get_func_info	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_get_func_info(name) abort$/;"	f
s:_get_generator	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:_get_generator(arg) abort$/;"	f
s:_get_handler_module	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_get_handler_module(scheme, uriobj) abort$/;"	f
s:_get_include_dirs	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
s:_get_key	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
s:_get_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
s:_get_module	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_module	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_module	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_module	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_module	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_non_empty_list_or_default	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_get_non_empty_list_or_default(stream, size, default, caller) abort$/;"	f
s:_get_num_digits	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:_get_num_digits(base) abort$/;"	f
s:_get_svars_func	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^let s:_get_svars_func = [$/;"	v
s:_get_unary_caller	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_get_unary_caller(f) abort$/;"	f
s:_get_valid_major_version	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:_get_valid_major_version(version) abort$/;"	f
s:_getbufvar	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_getbufvar = function(v:version > 703 || (v:version == 703 && has('patch831')) ? 'getbufva/;"	v
s:_getbufvar_dumb	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_getbufvar_dumb(buf, name, ...) abort " {{{2$/;"	f
s:_gettabdict	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:_gettabdict(tabnr) abort$/;"	f
s:_global_vital_files	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_global_vital_files	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_global_vital_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_global_vital_files	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_global_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_global_vital_files	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_grid_layout_adjust_size	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^function! s:_grid_layout_adjust_size(wl, data) dict abort$/;"	f
s:_grid_layout_apply	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^function! s:_grid_layout_apply(wl, data) dict abort$/;"	f
s:_halign	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_halign(style, str, width) abort$/;"	f
s:_handle_thenable	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_handle_thenable(promise, thenable) abort$/;"	f
s:_has_a_nest	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:_has_a_nest(x) abort$/;"	f
s:_has_copy_dir_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:_has_copy_dir_exe() abort$/;"	f
s:_has_copy_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:_has_copy_exe() abort$/;"	f
s:_has_error	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_has_error(func, args) abort$/;"	f
s:_has_move_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:_has_move_exe() abort$/;"	f
s:_hash_func	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_hash_func(x) abort$/;"	f
s:_hash_func	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_hash_func(x) abort$/;"	f
s:_hsl2rgb	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_hsl2rgb(h, s, l) abort$/;"	f
s:_ignore_file	plugged/syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
s:_import	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_import_func_name	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_import_func_name	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_import_func_name	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_import_func_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_import_func_name	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_index	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^function! s:_index(idx) abort$/;"	f
s:_inf_stream	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_inf_stream(f, init, expr, caller) abort$/;"	f
s:_inherit	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_inherit(sub, super) abort "{{{$/;"	f
s:_init	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_init()$/;"	f
s:_init	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
s:_init_by_array	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:_init_by_array(g, init_key) abort$/;"	f
s:_init_genrand	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:_init_genrand(g, s) abort$/;"	f
s:_init_hl	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_init_hl() abort$/;"	f
s:_inline_table	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_inline_table(input) abort$/;"	f
s:_integer	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_integer(input) abort$/;"	f
s:_invalid_triggerlist	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_invalid_triggerlist(triggerlist) abort "{{{$/;"	f
s:_invoke_callback	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_invoke_callback(settled, promise, callback, result, ...) abort$/;"	f
s:_isAvailableDefault	plugged/syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
s:_isDebugEnabled	plugged/syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled/;"	v
s:_isDebugEnabled_dumb	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
s:_isDebugEnabled_smart	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
s:_is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_is_available() abort$/;"	f
s:_is_class	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_is_class(obj, class) abort$/;"	f
s:_is_counter	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:_is_counter(x) abort$/;"	f
s:_is_equal	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_is_equal(__expr, __hl)$/;"	f
s:_is_flag	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_is_flag(flag, ...) abort$/;"	f
s:_is_funcname	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_is_funcname(name) abort$/;"	f
s:_is_input_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:_is_input_enter(cmdline)$/;"	f
s:_is_ip_addr	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_is_ip_addr(str) abort$/;"	f
s:_is_match_domain	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_is_match_domain(req_domain, cookie_domain) abort$/;"	f
s:_is_match_path	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_is_match_path(req_path, cookie_path) abort$/;"	f
s:_is_modified	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_is_modified(name) abort " {{{2$/;"	f
s:_is_number	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_is_number(str) abort$/;"	f
s:_is_operator	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_is_operator(str) abort$/;"	f
s:_is_own_exception	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_is_own_exception(str) abort$/;"	f
s:_is_quitting	plugged/syntastic/plugin/syntastic.vim	/^function! s:_is_quitting(buf) abort " {{{2$/;"	f
s:_is_same_index	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
s:_is_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_is_set(x) abort$/;"	f
s:_is_set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_is_set(x) abort$/;"	f
s:_is_set_cookie_header	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:_is_set_cookie_header(header) abort$/;"	f
s:_is_valid_highlight	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
s:_is_valid_highlight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
s:_is_valid_regexp	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_is_valid_regexp(pattern) abort$/;"	f
s:_is_valid_type_arg	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_is_valid_type_arg(arg) abort$/;"	f
s:_isnecessaryaugroup	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_isnecessaryaugroup(name) abort "{{{$/;"	f
s:_isvalidtriggertype	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_isvalidtriggertype(item) abort "{{{$/;"	f
s:_jd2g	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_jd2g(jd) abort$/;"	f
s:_keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
s:_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
s:_keys	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_keys(input, end) abort$/;"	f
s:_keys_count	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_keys_count(targets_len, keys_len) abort$/;"	f
s:_layout_apply	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_layout_apply(buffers, layout_data, ...) dict abort$/;"	f
s:_layout_buffer	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_layout_buffer(id) dict abort$/;"	f
s:_layout_buffers	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_layout_buffers() dict abort$/;"	f
s:_layout_bufopen	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_layout_bufopen(id) dict abort$/;"	f
s:_layout_prepare	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_layout_prepare(layout_data) dict abort$/;"	f
s:_layout_walias	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_layout_walias(winnr, alias) dict abort$/;"	f
s:_layout_winnr	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_layout_winnr(walias) dict abort$/;"	f
s:_lcm	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:_lcm(m, n) abort$/;"	f
s:_lightline	plugged/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:_line_height	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^function! s:_line_height(pwinheight, n) abort$/;"	f
s:_list	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_list(v) abort$/;"	f
s:_list2dict	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:_list2dict(list) abort$/;"	f
s:_list_comparator	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:_list_comparator(xs, ys) abort$/;"	f
s:_literal	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_literal(input) abort$/;"	f
s:_local_func	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_local_func(name) abort$/;"	f
s:_local_time	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_local_time(input) abort$/;"	f
s:_logRedirect	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
s:_log_timestamp	plugged/syntastic/autoload/syntastic/log.vim	/^let s:_log_timestamp = function(has('float') && exists('*reltimefloat') ? 's:_log_timestamp_smar/;"	v
s:_log_timestamp_dumb	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_dumb() abort " {{{2$/;"	f
s:_log_timestamp_smart	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_smart() abort " {{{2$/;"	f
s:_lua_execute	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:_lua_execute(asts, pointer, tape) abort$/;"	f
s:_lua_parse	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:_lua_parse(bfcode) abort$/;"	f
s:_make_args	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_make_args(cmd_args) abort$/;"	f
s:_make_border_string	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_make_border_string(context, left_joint, center_joint, right_joint, border) abort$/;"	f
s:_make_border_style	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_make_border_style(style) abort$/;"	f
s:_make_config	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:_make_config(manager, configs) abort$/;"	f
s:_make_cookie_header_entry	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:_make_cookie_header_entry(cookie) abort$/;"	f
s:_make_equals_size	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_make_equals_size(row) abort$/;"	f
s:_make_function	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_make_function(name, id) abort$/;"	f
s:_make_fuzzy_spell	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:_make_fuzzy_spell(word) abort$/;"	f
s:_make_header_args	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_make_header_args(headdata, option, quote) abort$/;"	f
s:_make_internal_row_object	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_make_internal_row_object(defs, row) abort$/;"	f
s:_make_is_comparable_cache	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^function! s:_make_is_comparable_cache() abort$/;"	f
s:_make_opener	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^function! s:_make_opener(engine, opener, data) abort$/;"	f
s:_make_option_definition_for_help	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_make_option_definition_for_help(opt) abort$/;"	f
s:_make_option_description_for_help	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_make_option_description_for_help(opt) abort$/;"	f
s:_make_postfile	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_make_postfile(data) abort$/;"	f
s:_make_row_string	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_make_row_string(context, row, left_border, center_border, right_border) abort$/;"	f
s:_maparg	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
s:_maparg	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
s:_match	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_match(input, pattern) abort$/;"	f
s:_max_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
s:_max_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
s:_max_by	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
s:_may_replace_left_r_cond	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_may_replace_left_r_cond(escape_bs, flag) abort$/;"	f
s:_merge_paths	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_merge_paths(baseobj, relobj) abort$/;"	f
s:_mod	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_mod(n, d) abort$/;"	f
s:_module_path	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_path	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_path	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_path	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_path	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_module_sid_base_dir	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_module_sid_base_dir	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_module_sid_base_dir	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_module_sid_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_module_sid_base_dir	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_month_abbr	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_month_abbr(locale) abort$/;"	f
s:_month_full	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_month_full(locale) abort$/;"	f
s:_move	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_move(l, binding) abort$/;"	f
s:_move	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:_move(tabnr, winnr) abort$/;"	f
s:_multiline_basic_string	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_multiline_basic_string(input) abort$/;"	f
s:_multiline_literal	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_multiline_literal(input) abort$/;"	f
s:_names	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_names(dates, format, locale) abort$/;"	f
s:_neg_collection	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_neg_collection = '[^\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_new	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_new(function, arglist, context) abort$/;"	f
s:_new	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_new(base, ...) abort$/;"	f
s:_new_class	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_new_class(class) abort$/;"	f
s:_new_environment	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
s:_new_environment	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
s:_new_environment	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
s:_new_facade	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_new_facade(wl, engine, layout_data) abort$/;"	f
s:_new_from_list	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_new_from_list(list, characteristics, caller) abort$/;"	f
s:_new_instance	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
s:_new_instance	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
s:_new_instance	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
s:_new_option	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
s:_new_option	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
s:_new_option	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
s:_new_register	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
s:_new_register	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
s:_new_register	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
s:_new_variable	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
s:_new_variable	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
s:_new_variable	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
s:_next_id	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_next_id() abort$/;"	f
s:_normalise_filetype	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
s:_normalize_color_name	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_normalize_color_name(str) abort$/;"	f
s:_normalized_attr_name	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_normalized_attr_name(attr_name) abort$/;"	f
s:_not	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_not(v) abort$/;"	f
s:_notify_done	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_notify_done(wg, index, value) abort$/;"	f
s:_nr2char	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_nr2char(nr) abort$/;"	f
s:_nr2hex	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_nr2hex(n) abort$/;"	f
s:_null	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_null() abort$/;"	f
s:_null	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_null() abort$/;"	f
s:_of	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_of(n) abort$/;"	f
s:_on_finally	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_on_finally(CB, parent, Result) abort$/;"	f
s:_on_unhandled_rejection	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:_on_unhandled_rejection = s:NOOP$/;"	v
s:_os_name	plugged/syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
s:_outputter	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:_outputter(dict) abort$/;"	f
s:_pad_with_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
s:_pad_with_char	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
s:_parse	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_parse(input) abort$/;"	f
s:_parse_arg	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_parse_arg(arg, options) abort$/;"	f
s:_parse_args	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_parse_args(cmd_args, options) abort$/;"	f
s:_parse_cookie_str	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_parse_cookie_str(str) abort$/;"	f
s:_parse_cookie_value	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_parse_cookie_value(name_value) abort$/;"	f
s:_parse_first_idx_range	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^function! s:_parse_first_idx_range(str, ...) abort$/;"	f
s:_parse_line	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
s:_parse_line	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
s:_parse_relative_part	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_parse_relative_part(rel_uri, pattern_set) abort$/;"	f
s:_parse_relative_ref	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_parse_relative_ref(relstr, pattern_set) abort$/;"	f
s:_parse_rgb_file	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_parse_rgb_file(file) abort$/;"	f
s:_parse_uri	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_parse_uri(str, ignore_rest, pattern_set) abort$/;"	f
s:_parser_config	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:_parser_config = {}$/;"	v
s:_parser_config	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:_parser_config._peb = '}' " pattern end bracket$/;"	v
s:_parser_config	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:_parser_config._pend = s:_parser_config._peb . s:_parser_config._psu " pattern end$/;"	v
s:_parser_config	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:_parser_config._ppr = '$' " pattern prefix$/;"	v
s:_parser_config	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:_parser_config._ps = s:_parser_config._ppr . s:_parser_config._psb " pattern start$/;"	v
s:_parser_config	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:_parser_config._psb = '{' " pattern start bracket$/;"	v
s:_parser_config	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:_parser_config._psu = '' " pattern suffix$/;"	v
s:_path2project_directory_git	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_git	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_git	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_others	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_others	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_others	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_svn	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_path2project_directory_svn	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_path2project_directory_svn	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_per2float	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_per2float(per, n) abort$/;"	f
s:_plugin_name	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	plugged/incsearch.vim/autoload/vital/_incsearch.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	plugged/vim-highlightedyank/autoload/vital/_highlightedyank.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	plugged/vital.vim/autoload/vital/_vital.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plus	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_plus(a, b) abort$/;"	f
s:_postdata	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_postdata(data) abort$/;"	f
s:_process_info	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^let s:_process_info = {}$/;"	v
s:_promise_catch	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_promise_catch(...) dict abort$/;"	f
s:_promise_finally	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_promise_finally(...) dict abort$/;"	f
s:_promise_then	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_promise_then(...) dict abort$/;"	f
s:_provide_binary_callable	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:_provide_binary_callable(x, y) abort$/;"	f
s:_provide_unary_callable	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:_provide_unary_callable(x) abort$/;"	f
s:_publish	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_publish(promise, ...) abort$/;"	f
s:_put_array	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_put_array(dict, keys, value) abort$/;"	f
s:_put_dict	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_put_dict(dict, keys, value) abort$/;"	f
s:_quit_pre	plugged/syntastic/plugin/syntastic.vim	/^let s:_quit_pre = []$/;"	v
s:_quote	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:_quote() abort$/;"	f
s:_quote	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_quote() abort$/;"	f
s:_quote_escape	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:_quote_escape(x) abort$/;"	f
s:_race	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_race(promises, resolve, reject) abort$/;"	f
s:_range_size	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_range_size(args, index) abort$/;"	f
s:_read	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:_read(pi, rname) abort$/;"	f
s:_read_format	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_read_format(datetime, descriptor, remain, skip_pattern, locale) abort$/;"	f
s:_readfile	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_readfile(file) abort$/;"	f
s:_redir	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_redir(cmd) abort$/;"	f
s:_redir	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_redir(cmd) abort$/;"	f
s:_redir	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:_redir(cmd) abort$/;"	f
s:_redraw	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
s:_redraw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
s:_regex	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_regex	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_registerHandler	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
s:_reject	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_reject(promise, ...) abort$/;"	f
s:_remove_dot_segments	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_remove_dot_segments(path) abort$/;"	f
s:_remove_shadowed_items	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
s:_renderer	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^function! s:_renderer(idx, tree) abort$/;"	f
s:_replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
s:_replace	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
s:_require_optional	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:_require_optional(...) abort$/;"	f
s:_require_optionals	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:_require_optionals(xs) abort$/;"	f
s:_reset	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
s:_reset	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_reset()$/;"	f
s:_reset	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
s:_reset	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_reset()$/;"	f
s:_resolve	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
s:_resolve	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_resolve(promise, ...) abort$/;"	f
s:_resolve	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
s:_resolve_relative	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_resolve_relative(obj, relobj) abort$/;"	f
s:_rgb2hsl	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_rgb2hsl(r, g, b) abort$/;"	f
s:_rmrf	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
s:_running_windows	plugged/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_runtime	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_runtime(path) abort$/;"	f
s:_runtime	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_runtime(path) abort$/;"	f
s:_s	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_safe_eval	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
s:_safe_eval	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
s:_search_headers	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
s:_searchforward_cmd	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:_searchforward_cmd() abort$/;"	f
s:_seed_from_string	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:_seed_from_string(seed, str) abort$/;"	f
s:_select_color	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:_select_color = {}$/;"	v
s:_self_vital_files	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_self_vital_files	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_self_vital_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_self_vital_files	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_self_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_self_vital_files	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_set_screen_column	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
s:_sfunc	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:_sfunc(name) abort$/;"	f
s:_sfuncname	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sha1circular_shift	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:_sha1circular_shift(bits, word) abort$/;"	f
s:_shellescape_robocopy	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:_shellescape_robocopy(path) abort$/;"	f
s:_should_match_cmdline	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
s:_should_match_cmdline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
s:_sid	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sid	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sid	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sid	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sid	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_sid(abspath, scriptnames) abort$/;"	f
s:_sid	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_skip	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_skip(input) abort$/;"	f
s:_skip_file	plugged/syntastic/plugin/syntastic.vim	/^function! s:_skip_file(buf) abort " {{{2$/;"	f
s:_skip_special_chars	plugged/vim-polyglot/indent/cython.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
s:_skip_special_chars	plugged/vim-polyglot/indent/python.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
s:_sort_num_func	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_sort_num_func(x, y) abort$/;"	f
s:_sort_num_func	plugged/vim-asterisk/autoload/asterisk.vim	/^    function! s:_sort_num_func(x, y) abort$/;"	f
s:_source	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:_source(path) abort$/;"	f
s:_source	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_source(path) abort$/;"	f
s:_source	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_source(path) abort$/;"	f
s:_source	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_source(path) abort$/;"	f
s:_source	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_source(path) abort$/;"	f
s:_source	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_source(path) abort$/;"	f
s:_source	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:_source(path) abort$/;"	f
s:_special_float	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_special_float(input) abort$/;"	f
s:_spellsuggest	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:_spellsuggest(word, ...) abort$/;"	f
s:_split_at_last_newline	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:_split_at_last_newline(str) abort$/;"	f
s:_split_by_displaywidth	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_split_by_displaywidth(body, x) abort$/;"	f
s:_split_by_displaywidth_once	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_split_by_displaywidth_once(body, x) abort$/;"	f
s:_split_by_wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
s:_split_by_wcswidth	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
s:_split_by_wcswidth_once	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
s:_split_by_wcswidth_once	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
s:_split_format	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_split_format(format) abort$/;"	f
s:_split_keystring	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
s:_split_keystring	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
s:_square	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/symlink.vim	/^function! s:_square(x) abort$/;"	f
s:_square	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/test.vim	/^function! s:_square(x) abort$/;"	f
s:_starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_starts_with(text, expr, lnum)$/;"	f
s:_str2bytes	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:_str2bytes(str) abort$/;"	f
s:_str2float	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_str2float = function(exists('*str2float') ? 'str2float' : 'str2nr')$/;"	v
s:_strdisplaywidthpart	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_strdisplaywidthpart(str, width) abort$/;"	f
s:_strdisplaywidthpart_reverse	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_strdisplaywidthpart_reverse(str, width) abort$/;"	f
s:_stringify	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_stringify(context) abort$/;"	f
s:_sublist	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_sublist(list, start, ...) abort$/;"	f
s:_subscribe	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_subscribe(parent, child, on_fulfilled, on_rejected) abort$/;"	f
s:_succ	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_succ(n) abort$/;"	f
s:_supercall	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_supercall(sub, Funcref, ...) abort "{{{$/;"	f
s:_table	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_table(input) abort$/;"	f
s:_take_freeze_intermediate	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_take_freeze_intermediate(stream, size) abort$/;"	f
s:_take_freeze_terminal	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_take_freeze_terminal(stream, size) abort$/;"	f
s:_tempname	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_tempname() abort$/;"	f
s:_term	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:_term(code, palette) abort$/;"	f
s:_throw	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
s:_throw	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:_throw(msg) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^function! s:_throw(msg) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:_throw(msg) abort$/;"	f
s:_throw	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_throw(message) abort$/;"	f
s:_throwFOO	plugged/vital.vim/test/_testdata/vital/testplugin/autoload/vital/__testplugin__/ErrorSelfmodule.vim	/^function! s:_throwFOO() abort$/;"	f
s:_throw_closed_stream_exception	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_throw_closed_stream_exception(...) abort dict$/;"	f
s:_timercall	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_timercall(id) abort "{{{$/;"	f
s:_to_s	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^function! s:_to_s(data) abort$/;"	f
s:_to_s	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^function! s:_to_s(data) abort$/;"	f
s:_to_string	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_to_string(expr) abort$/;"	f
s:_to_vim	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:_to_vim(result) abort$/;"	f
s:_token	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:_token(label,matched_text,col) abort$/;"	f
s:_translate	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
s:_translateElement	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
s:_translateFilter	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
s:_true	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_true() abort$/;"	f
s:_true	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_true() abort$/;"	f
s:_type_name	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_type_name(type) abort$/;"	f
s:_unapply	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_unapply(fs, xs) abort$/;"	f
s:_undefined	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
s:_undefined	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
s:_undefined	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
s:_unescape	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_unescape(text) abort$/;"	f
s:_unify_path	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:_unify_path(path) abort$/;"	f
s:_unify_path	plugged/vital.vim/autoload/vital/vital.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugged/vital.vim/autoload/vital/vital.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_uniq	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
s:_uniq	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_uniq	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
s:_uniq	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_uniq	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_uniq	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_uri_authority	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_authority(...) dict abort$/;"	f
s:_uri_canonicalize	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_canonicalize() dict abort$/;"	f
s:_uri_clone	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_clone() dict abort$/;"	f
s:_uri_default_port	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_default_port() dict abort$/;"	f
s:_uri_fragment	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_fragment(...) dict abort$/;"	f
s:_uri_host	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_host(...) dict abort$/;"	f
s:_uri_is_fragment	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_fragment(str) dict abort$/;"	f
s:_uri_is_host	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_host(str) dict abort$/;"	f
s:_uri_is_path	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_path(str) dict abort$/;"	f
s:_uri_is_path_abempty	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_path_abempty(str) dict abort$/;"	f
s:_uri_is_path_absolute	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_path_absolute(str) dict abort$/;"	f
s:_uri_is_path_noscheme	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_path_noscheme(str) dict abort$/;"	f
s:_uri_is_path_rootless	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_path_rootless(str) dict abort$/;"	f
s:_uri_is_port	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_port(str) dict abort$/;"	f
s:_uri_is_query	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_query(str) dict abort$/;"	f
s:_uri_is_scheme	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_scheme(str) dict abort$/;"	f
s:_uri_is_userinfo	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_is_userinfo(str) dict abort$/;"	f
s:_uri_new	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_new(str, ignore_rest, pattern_set) abort$/;"	f
s:_uri_new_sandbox	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_new_sandbox(uri, ignore_rest, pattern_set, retall, NothrowValue) abort$/;"	f
s:_uri_opaque	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_opaque(...) dict abort$/;"	f
s:_uri_path	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_path(...) dict abort$/;"	f
s:_uri_port	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_port(...) dict abort$/;"	f
s:_uri_query	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_query(...) dict abort$/;"	f
s:_uri_relative	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_relative(relstr) dict abort$/;"	f
s:_uri_scheme	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_scheme(...) dict abort$/;"	f
s:_uri_to_iri	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_to_iri(...) dict abort$/;"	f
s:_uri_to_string	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_to_string() dict abort$/;"	f
s:_uri_userinfo	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_uri_userinfo(...) dict abort$/;"	f
s:_validate_arg_assert	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_validate_arg_assert(args, asserts, prefix) abort$/;"	f
s:_validate_arg_types	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_validate_arg_types(args, types, prefix) abort$/;"	f
s:_validate_assert	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_validate_assert(value, funclist, msg, prefix) abort$/;"	f
s:_validate_type	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_validate_type(value, expected_type, prefix, ...) abort$/;"	f
s:_valign	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_valign(def, list) abort$/;"	f
s:_value	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:_value(input) abort$/;"	f
s:_verbosefile_pop	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
s:_verbosefile_pop	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
s:_verbosefile_push	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
s:_verbosefile_push	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
s:_vim_execute	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:_vim_execute(asts, pointer, tape) abort$/;"	f
s:_vim_parse	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:_vim_parse(tokens) abort$/;"	f
s:_virtual_tab2spacelen	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
s:_virtual_tab2spacelen	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
s:_vital_created	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Base32.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Cache.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Process/System.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/System/Process/Vimproc.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Vim/Search.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTPS.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/test/_testdata/vital/cyclic/autoload/vital/__latest__/Cyclic1.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/test/_testdata/vital/cyclic/autoload/vital/__latest__/Cyclic2.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vital.vim/test/_testdata/vital/datatest/autoload/vital/__latest__/DataTest.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Base32.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Process/System.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/System/Process/Vimproc.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Vim/Search.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTPS.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/test/_testdata/vital/cyclic/autoload/vital/__latest__/Cyclic1.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/test/_testdata/vital/cyclic/autoload/vital/__latest__/Cyclic2.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/test/_testdata/vital/datatest/autoload/vital/__latest__/DataTest.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vital.vim/test/_testdata/vital/testplugin/autoload/vital/__testplugin__/ErrorSelfmodule.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_warn_deprecated	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_warn_deprecated	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_warn_deprecated	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_wcwidth	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:_wcwidth	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:_wcwidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:_weekday_abbr	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_weekday_abbr(locale) abort$/;"	f
s:_weekday_full	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_weekday_full(locale) abort$/;"	f
s:_wid_base	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_wid_base = 'syntastic_' . s:_fuzz() . '_' . reltimestr(g:_SYNTASTIC_START) . '_'$/;"	v
s:_wid_pool	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_wid_pool = 0$/;"	v
s:_width	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:_with_locale	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:_with_locale(expr, locale, ...) abort$/;"	f
s:_worker	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^function! s:_worker(...) abort$/;"	f
s:_wrap	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:_wrap(text, width) abort$/;"	f
s:_zip_characteristics	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:_zip_characteristics(characteristics_list) abort$/;"	f
s:abort	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:abort()$/;"	f
s:abs_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
s:abspath	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:abspath(path) abort$/;"	f
s:access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:action_for	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:add	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:add(a,b) abort$/;"	f
s:add_char	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:add_char(c)$/;"	f
s:add_checkbox	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:add_checkbox(line, rx_list) abort$/;"	f
s:add_line	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/cancel.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/count.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/highlight.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/insert_register.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/jumplist.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/magic_option.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/module.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/nomagic.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/register.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/repetition.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/scroll.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:add_line(str)$/;"	f
s:add_line	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:add_line(str)$/;"	f
s:add_lines	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/cancel.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/count.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/fold.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/highlight.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/insert_register.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/jumplist.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/magic_option.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/module.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/nomagic.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/register.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/repetition.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/scroll.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:add_lines(lines)$/;"	f
s:add_methods	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:add_syntax	plugged/vim-polyglot/syntax/pgsql.vim	/^fun! s:add_syntax(s)$/;"	f
s:add_target_syntax_OFF	plugged/vimwiki/syntax/vimwiki.vim	/^function! s:add_target_syntax_OFF(target) abort$/;"	f
s:add_target_syntax_OFF	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:add_target_syntax_OFF(target, type) abort$/;"	f
s:add_target_syntax_ON	plugged/vimwiki/syntax/vimwiki.vim	/^function! s:add_target_syntax_ON(target, type) abort$/;"	f
s:add_target_syntax_ON	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:add_target_syntax_ON(target, type) abort$/;"	f
s:addr_other	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') || has('nvim-0.5.0') ? '-addr=other' : ''$/;"	v
s:addr_tabs	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:adjust_header	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
s:adjust_hunk_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
s:adjust_items_recursively	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_items_recursively(parent) abort$/;"	f
s:adjust_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_mrkr(item) abort$/;"	f
s:adjust_numbered_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_numbered_list(item, ignore_kind, recursive) abort$/;"	f
s:adjust_numbered_list_below	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_numbered_list_below(item, recursive) abort$/;"	f
s:adjust_screen	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
s:after_move	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:after_move(R) abort$/;"	f
s:ag_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, has_column)$/;"	f
s:ag_to_qf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, has_column)$/;"	f
s:alias_pattern	plugged/vim-polyglot/syntax/rst.vim	/^    let s:alias_pattern = ''$/;"	v
s:align_lists	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:all	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:all(promises) abort$/;"	f
s:all	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:all(callable, xs) abort$/;"	f
s:all_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:all_delims = s:plain_delims + s:bracketing_delims$/;"	v
s:all_novalue_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:all_novalue_options = [$/;"	v
s:all_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:all_options = copy(s:novalue_options)$/;"	v
s:all_options	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:all_options = s:safe_options + ['endofline', 'fileformat', 'fileencoding', 'bomb']$/;"	v
s:all_popups	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let s:all_popups = {}$/;"	v
s:all_tokens	plugged/vim-polyglot/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:all_value_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:all_value_options = {$/;"	v
s:allsteps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
s:almost_black	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:almost_black = [ '#1c1c1c', 234 ]$/;"	v
s:alpha_metaops	plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops = [$/;"	v
s:alpha_metaops_or	plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops_or = join(s:temp, "\\\\|")$/;"	v
s:am_pm_names	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:am_pm_names(...) abort$/;"	f
s:and	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:and	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:and	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:and	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:annot_file_list	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:annot_file_list = {}$/;"	v
s:annotationMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:annotationMatcher = '@[A-Za-z._]\\+\\s\\+'$/;"	v
s:anon_func_end	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_end = '\\<end\\%(\\s*[)}]\\)\\+'$/;"	v
s:anon_func_start	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_start = '\\S\\+\\s*[({].*\\<function\\s*(.*)\\s*$'$/;"	v
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:ant_cpo_save	plugged/vim-polyglot/syntax/ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:any	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:any	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:any	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:any	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:any	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:any(callable, xs) abort$/;"	f
s:append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:apply	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:apply(callable, ...) abort$/;"	f
s:apply	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:apply(either_func, ...) abort$/;"	f
s:apply	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:apply(f, ...) abort$/;"	f
s:aqua	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:aqua = [ '#00ffff', 14 ]$/;"	v
s:aqua	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:archs	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:archs = [$/;"	v
s:args_after	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let s:args_after = {$/;"	v
s:array_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:array_entry = '\\v^\\s*-\\s' " - foo$/;"	v
s:as_key_config	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
s:as_key_config	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
s:as_keymapping	plugged/incsearch.vim/plugin/incsearch.vim	/^function! s:as_keymapping(key) abort$/;"	f
s:as_keymapping	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:as_keymapping(key)$/;"	f
s:as_windo	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:as_windo(base)$/;"	f
s:ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_char	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! s:ask_char()$/;"	f
s:ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assert	plugged/calendar.vim/test/cipher.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/calendar.vim/test/day.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/calendar.vim/test/pixel.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/calendar.vim/test/week.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/autonohlsearch.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/cancel.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/count.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/default_behaviors.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/default_settings.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/error_warning_emulation.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/fold.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/history.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/incremental_next_prev.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/insert_register.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/jumplist.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/magic_option.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/module.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/n_and_N.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/nomagic.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/register.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/repetition.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/scroll.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/visual_behavior.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/incsearch.vim/test/visual_emulation.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/autocmd.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/popup.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/quickfix.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^function! s:assert(a1, a2, kind) abort  "{{{$/;"	f
s:assert	plugged/vital.vim/test/Color.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/ConcurrentProcess.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Data/Set.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Data/String.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Deprecated/Text/Sexp.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Hash/MD5.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Hash/SHA1.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Math.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Text/TOML.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Text/Table.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vital.vim/test/Validator/Args.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert.eq_with_default	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:assert.eq_with_default(command, default_command, pattern)$/;"	f
s:assert.equal_line	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_line(line)$/;"	f
s:assert.equal_matches	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_matches(pattern, ...)$/;"	f
s:assert.equal_pos_char	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_pos_char(char)$/;"	f
s:assert.equal_view	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_view(view)$/;"	f
s:assert.not_eq_with_default	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:assert.not_eq_with_default(command, default_command, pattern)$/;"	f
s:assert_blob_support	plugged/vital.vim/test/Validator/Args.vim	/^function! s:assert_blob_support() abort$/;"	f
s:assert_channel_support	plugged/vital.vim/test/Validator/Args.vim	/^function! s:assert_channel_support() abort$/;"	f
s:assert_job_support	plugged/vital.vim/test/Validator/Args.vim	/^function! s:assert_job_support() abort$/;"	f
s:assert_list_of_dicts	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_list_of_dicts(expected, actual)$/;"	f
s:assert_null_support	plugged/vital.vim/test/Validator/Args.vim	/^function! s:assert_null_support() abort$/;"	f
s:assert_signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_signs(expected, filename)$/;"	f
s:assign	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:assign(plug, key, buffer, ...) abort$/;"	f
s:assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assignment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+:?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:assignment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:attach_on_insert_leave	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! s:attach_on_insert_leave() abort$/;"	f
s:attr	plugged/vim-polyglot/syntax/vue.vim	/^function! s:attr(name, value)$/;"	f
s:attr_pattern	plugged/vim-polyglot/syntax/vue.vim	/^  let s:attr_pattern = has_key(s:language, 'attr_pattern') ? s:language.attr_pattern : s:attr('l/;"	v
s:attribute_highlight	plugged/vim-polyglot/syntax/ansible.vim	/^fun! s:attribute_highlight(attributes)$/;"	f
s:attributes	plugged/vim-polyglot/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/slim.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/slime.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:augroup	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:augroup(name) dict abort "{{{$/;"	f
s:auth_url	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:auth_url = 'https:\/\/accounts.google.com\/o\/oauth2\/auth'$/;"	v
s:auto_nohlsearch	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! s:auto_nohlsearch(nest) abort$/;"	f
s:autoload_import	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:autoload_import(plugin_name, module_name) abort$/;"	f
s:autoloadablize	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:autoloadablize(module_file, plugin_name, raw_module) abort$/;"	f
s:autoloadablize_data	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:autoloadablize_data(module_name, raw_module, plugin_name) abort$/;"	f
s:available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:available_module_names	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:available_module_names() abort$/;"	f
s:b32decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Base32.vim	/^function! s:b32decode(b32, map, is_padding, padcheck) abort$/;"	f
s:b32encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Base32.vim	/^function! s:b32encode(bytes, table, is_padding, pad) abort$/;"	f
s:b64decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/Base64.vim	/^function! s:b64decode(b64, map, is_padding, padcheck) abort$/;"	f
s:b64encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/Base64.vim	/^function! s:b64encode(bytes, table, is_padding, pad) abort$/;"	f
s:backend_args_map	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^let s:backend_args_map = {$/;"	v
s:backend_error_log_file	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^let s:backend_error_log_file = tempname()$/;"	v
s:background	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:background = ''$/;"	v
s:background	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:backslash_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:backspace	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:backspace(s)$/;"	f
s:backup_map	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:backup_map() abort$/;"	f
s:backup_map_find	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! s:backup_map_find() abort$/;"	f
s:backward_word	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:backward_word(str, ...)$/;"	f
s:bad_git_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:bad_git_dir = '\/$\\|^fugitive:'$/;"	v
s:bakregex	plugged/vim-polyglot/scripts/eregex.vim	/^let s:bakregex=''$/;"	v
s:bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bang_edits	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:bang_edits = {'split': 'Git', 'vsplit': 'vertical Git', 'tabedit': 'tab Git', 'pedit': 'Gi/;"	v
s:bar	autoload/plug.vim	/^function! s:bar()$/;"	f
s:bare_key_pattern	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^let s:bare_key_pattern = '\\%([A-Za-z0-9_-]\\+\\)'$/;"	v
s:base	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:base = {$/;"	v
s:base	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:base = {}$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:base = {}$/;"	v
s:base	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:base = resolve(expand('<sfile>:p:h:h:h'))$/;"	v
s:base	plugged/vim-visual-multi/autoload/vm/maps/all.vim	/^let s:base = {$/;"	v
s:base.__empty	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
s:base.__empty	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
s:base.__execute	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
s:base.__execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
s:base.__execute__	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
s:base.__execute__	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
s:base.__finish	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
s:base.__finish	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
s:base.__get_keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
s:base.__get_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
s:base.__init	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
s:base.__init	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
s:base.__init_variables	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
s:base.__init_variables	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
s:base.__input	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
s:base.__input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
s:base.__input_char	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
s:base.__input_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
s:base.__inputting	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
s:base.__inputting	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
s:base.__is_exit	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
s:base.__is_exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
s:base.__keymapping__	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
s:base.__keymapping__	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
s:base.__main	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
s:base.__main	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
s:base.__update	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
s:base.__update	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
s:base.add	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.add(name, group, pattern, ...)$/;"	f
s:base.as_windo	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.as_windo()$/;"	f
s:base.backward	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
s:base.backward	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.backward()$/;"	f
s:base.backward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
s:base.backward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.backward()$/;"	f
s:base.backward_word	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
s:base.backward_word	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
s:base.call	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
s:base.call	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
s:base.callevent	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
s:base.callevent	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
s:base.char	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
s:base.char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
s:base.clear	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.clear(name)$/;"	f
s:base.clear_all	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.clear_all()$/;"	f
s:base.cmap	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
s:base.cmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
s:base.cnoremap	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
s:base.cnoremap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
s:base.connect	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
s:base.connect	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
s:base.connect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
s:base.connect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
s:base.cunmap	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
s:base.cunmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
s:base.delete	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.delete(name)$/;"	f
s:base.delete_all	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.delete_all()$/;"	f
s:base.delete_by	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.delete_by(expr)$/;"	f
s:base.disable	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.disable(name)$/;"	f
s:base.disable_all	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.disable_all()$/;"	f
s:base.disable_keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
s:base.disable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
s:base.disconnect	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
s:base.disconnect	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
s:base.disconnect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
s:base.disconnect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
s:base.disconnect_by	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
s:base.disconnect_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
s:base.draw	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
s:base.draw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
s:base.enable	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.enable(name)$/;"	f
s:base.enable_all	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.enable_all()$/;"	f
s:base.enable_keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
s:base.enable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
s:base.enable_list	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.enable_list(...)$/;"	f
s:base.execute	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
s:base.execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
s:base.exit	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
s:base.exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
s:base.exit_code	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
s:base.exit_code	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
s:base.find_by	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
s:base.find_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
s:base.find_first_by	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
s:base.find_first_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
s:base.forward	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
s:base.forward	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.forward()$/;"	f
s:base.forward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
s:base.forward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.forward()$/;"	f
s:base.get	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
s:base.get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
s:base.get_hl_id	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.get_hl_id(name, ...)$/;"	f
s:base.get_module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
s:base.get_module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
s:base.get_prompt	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
s:base.get_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
s:base.get_slot	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
s:base.get_slot	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
s:base.get_suffix	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
s:base.get_suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
s:base.get_tap_key	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
s:base.get_tap_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
s:base.getchar	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
s:base.getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
s:base.getline	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
s:base.getline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
s:base.getpos	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
s:base.getpos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
s:base.highlight	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.highlight(name, group, pattern, ...)$/;"	f
s:base.hl_cursor_off	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
s:base.hl_cursor_off	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
s:base.hl_cursor_on	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
s:base.hl_cursor_on	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
s:base.hl_list	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.hl_list()$/;"	f
s:base.input	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.input(str)$/;"	f
s:base.input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.input(str)$/;"	f
s:base.input_key	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
s:base.input_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
s:base.input_key_stack	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
s:base.input_key_stack	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
s:base.input_key_stack_pop	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
s:base.input_key_stack_pop	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
s:base.input_key_stack_string	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
s:base.input_key_stack_string	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
s:base.insert	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
s:base.insert	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
s:base.is_added	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.is_added(name)$/;"	f
s:base.is_enable_keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
s:base.is_enable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
s:base.is_enabled	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.is_enabled(name, ...)$/;"	f
s:base.is_exit	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
s:base.is_exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
s:base.is_input	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
s:base.is_input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
s:base.keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
s:base.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
s:base.length	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.length()$/;"	f
s:base.length	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.length()$/;"	f
s:base.next	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.next()$/;"	f
s:base.next	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.next()$/;"	f
s:base.pos	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.pos()$/;"	f
s:base.pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos()$/;"	f
s:base.pos_char	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.pos_char()$/;"	f
s:base.pos_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos_char()$/;"	f
s:base.prev	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.prev()$/;"	f
s:base.prev	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.prev()$/;"	f
s:base.remove	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove(index)$/;"	f
s:base.remove	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove(index)$/;"	f
s:base.remove_next	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove_next()$/;"	f
s:base.remove_next	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_next()$/;"	f
s:base.remove_pos	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
s:base.remove_pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
s:base.remove_prev	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
s:base.remove_prev	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
s:base.set	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.set(item)$/;"	f
s:base.set	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set(item)$/;"	f
s:base.set_input_key_stack	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
s:base.set_input_key_stack	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
s:base.set_pos	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
s:base.set_pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
s:base.set_prompt	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
s:base.set_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
s:base.set_str	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
s:base.set_str	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
s:base.set_suffix	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
s:base.set_suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
s:base.setchar	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
s:base.setchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
s:base.setline	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
s:base.setline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
s:base.setpos	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
s:base.setpos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
s:base.slots	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.slots()$/;"	f
s:base.slots	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.slots()$/;"	f
s:base.sort_by	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
s:base.sort_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
s:base.start	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
s:base.start	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
s:base.str	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.str()$/;"	f
s:base.str	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.str()$/;"	f
s:base.tap_keyinput	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
s:base.tap_keyinput	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
s:base.to_list	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.to_list()$/;"	f
s:base.to_list_by	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.to_list_by(expr)$/;"	f
s:base.untap_keyinput	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
s:base.untap_keyinput	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
s:base.update	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.update(name)$/;"	f
s:base.update_all	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.update_all()$/;"	f
s:base.variables.modules.get_slot	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
s:base.variables.modules.get_slot	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
s:base0	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base0      = '#1B2229'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base0 = '#e6e1cf'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base0 = '#5C6773'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base0 = '#d9d7ce'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base00 = '#14191f'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base00 = '#FFFFFF'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base00 = '#272d38'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base01 = '#14191f'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base01 = '#FFFFFF'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base01 = '#272d38'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base02 = '#0f1419'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base02 = '#FAFAFA'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base02 = '#212733'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444', 238 ]$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base023 = '#0f1419'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base023 = '#FAFAFA'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base023 = '#212733'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535', 236 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base03 = '#e6b673'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base03 = '#E6B673'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base03 = '#ffc44c'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base1	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base1      = '#1c1f24'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base1 = '#e6e1cf'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base1 = '#5C6773'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base1 = '#d9d7ce'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base2	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base2      = '#202328'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base2 = '#3e4b59'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base2 = '#828C99'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base2 = '#607080'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base3      = '#23272e'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base3 = '#e6e1cf'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base3 = '#5C6773'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base3 = '#d9d7ce'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base4	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base4      = '#3f444a'$/;"	v
s:base5	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base5      = '#5B6268'$/;"	v
s:base6	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base6      = '#73797e'$/;"	v
s:base7	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base7      = '#9ca0a4'$/;"	v
s:base8	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base8      = '#b1b1b1'$/;"	v
s:base9	plugged/doom-one.vim/colors/doom-one.vim	/^let s:base9      = '#E6E6E6'$/;"	v
s:baseIndentExpr	plugged/vim-polyglot/indent/twig.vim	/^let s:baseIndentExpr=&indentexpr$/;"	v
s:base_dir	plugged/fzf/plugin/fzf.vim	/^  let s:base_dir = expand('<sfile>:h:h')$/;"	v
s:base_path	plugged/syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:basename	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:basename(path) abort$/;"	f
s:batchfile	autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:batchmode	plugged/vim-startify/autoload/startify.vim	/^let s:batchmode = ''$/;"	v
s:beep	plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
s:beflet	plugged/vim-polyglot/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:beflet	plugged/vim-polyglot/indent/sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:before_move	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:before_move() abort$/;"	f
s:beginBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:beginBlock = ['for', 'parfor', 'function', 'if', 'switch',$/;"	v
s:bg	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg             = '#282c34'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#282c34', 235 ]$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#fafafa', 255 ]$/;"	v
s:bg	plugged/vim-polyglot/syntax/tmux.vim	/^        let s:bg = (!s:i || s:i == 16 || (s:i > 231 && s:i < 235)) ? 15 : "none"$/;"	v
s:bg_1	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_1      = ['#252525', 0]$/;"	v
s:bg_1	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_1      = ['#184956', 0]$/;"	v
s:bg_1	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_1      = ['#ece3cc', 0]$/;"	v
s:bg_1	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_1      = ['#ebebeb', 0]$/;"	v
s:bg_2	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_2      = ['#3b3b3b', 8]$/;"	v
s:bg_2	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_2      = ['#2d5b69', 8]$/;"	v
s:bg_2	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_2      = ['#d5cdb6', 8]$/;"	v
s:bg_2	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_2      = ['#cdcdcd', 8]$/;"	v
s:bg_alt	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_alt         = '#21242b'$/;"	v
s:bg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:bg_color = calendar#color#normal_bg_color()$/;"	v
s:bg_current	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_current = s:bg$/;"	v
s:bg_highlight	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_highlight   = '#2E323C'$/;"	v
s:bg_highlighted	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_highlighted = '#4A4A45'$/;"	v
s:bg_other	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_other   = s:base1$/;"	v
s:bg_popup	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_popup       = '#3E4556'$/;"	v
s:bg_search	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_search = s:yellow$/;"	v
s:bg_selection	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_selection   = s:dark_blue$/;"	v
s:bg_statusline	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_statusline  = s:bg_popup$/;"	v
s:bg_visible	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_visible = s:bg$/;"	v
s:bg_visual	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_visual      = color#Lighten(s:base4, 0.3)$/;"	v
s:bg_widget	plugged/doom-one.vim/colors/doom-one.vim	/^let s:bg_widget      = s:bg$/;"	v
s:bimap	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:bimap(either, f, g) abort$/;"	f
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = substitute(preview_path, '\\', '\/', 'g')$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:binNMU	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:binNMU='binary-only=yes'$/;"	v
s:bin_dir	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:bin_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:bin_regex = '0b[01]\\%(_\\?[01]\\)*\\%(\\>\\|im\\>\\|\\ze[^01]\\)'$/;"	v
s:binary_exists	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:binary_exists(fname) abort$/;"	f
s:binary_search	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:binary_search	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:binary_search	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:binary_search	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:binary_search	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:binary_search(xs, target, callable) abort$/;"	f
s:bind	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:bind(either, karrow) abort$/;"	f
s:bind	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:bind(f, ...) abort$/;"	f
s:bind	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^function! s:bind(callable, this) abort$/;"	f
s:binding_close	plugged/vim-polyglot/indent/nix.vim	/^let s:binding_close = '\\%(\\<in\\>\\)'$/;"	v
s:binding_open	plugged/vim-polyglot/indent/nix.vim	/^let s:binding_open = '\\%(\\<let\\>\\)'$/;"	v
s:binop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←/;"	v
s:binop_chars_extra	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U/;"	v
s:bits	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^let s:bits = has('num64') ? 64 : 32$/;"	v
s:black	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:black(x) abort$/;"	f
s:black	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
s:black	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:black = [ '#000000', 0 ]$/;"	v
s:black	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:black	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black = [ '#000000', '0' ]$/;"	v
s:black2	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black2 = [ '#121212', '233' ]$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame = {}$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.append_lines = funcref('s:blame__append_lines')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.back = funcref('s:blame__back')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.error = funcref('s:blame__error')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.forward = funcref('s:blame__forward')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.open_popup = funcref('s:blame__open_popup')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.render = funcref('s:blame__render')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.reveal_diff = funcref('s:blame__reveal_diff')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.spawn_git = funcref('s:blame__spawn_git')$/;"	v
s:blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.start = funcref('s:blame__start')$/;"	v
s:blame__after_blame	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__after_blame(git) dict abort$/;"	f
s:blame__after_diff	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__after_diff(next_diff, git) dict abort$/;"	f
s:blame__after_log	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__after_log(git) dict abort$/;"	f
s:blame__append_lines	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__append_lines(lines) dict abort$/;"	f
s:blame__back	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__back() dict abort$/;"	f
s:blame__error	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__error(msg) dict abort$/;"	f
s:blame__forward	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__forward() dict abort$/;"	f
s:blame__open_popup	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__open_popup() dict abort$/;"	f
s:blame__render	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__render() dict abort$/;"	f
s:blame__reveal_diff	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__reveal_diff(include_all, word_diff) dict abort$/;"	f
s:blame__spawn_git	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__spawn_git(args, callback) dict abort$/;"	f
s:blame__start	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__start() dict abort$/;"	f
s:blank	plugged/vim-polyglot/indent/ansible.vim	/^let s:blank = '\\v^\\s*$' " line with only spaces$/;"	v
s:blink	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:blink(highlight, hi_group, duration) abort "{{{$/;"	f
s:blobdirs	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:block_close	plugged/vim-polyglot/indent/nix.vim	/^let s:block_close = '\\%(}\\|]\\)'$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_end	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:block_end = '\\v^\\s*}|]|\\)'$/;"	v
s:block_end	plugged/vim-polyglot/indent/sas.vim	/^let s:block_end = '\\v<%(end|endcomp|endlayout|endgraph)\\s*;'$/;"	v
s:block_open	plugged/vim-polyglot/indent/nix.vim	/^let s:block_open  = '\\%({\\|[\\)'$/;"	v
s:block_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:block_regex =$/;"	v
s:block_regex	plugged/vim-polyglot/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\/;"	v
s:block_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:block_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:block_rules	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules = {$/;"	v
s:block_rules	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules_multiple = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules_multiple = {$/;"	v
s:block_scalar_header	plugged/vim-polyglot/indent/yaml.vim	/^let s:block_scalar_header = '\\v[|>]%([+-]?[1-9]|[1-9]?[+-])?'$/;"	v
s:block_str	plugged/vim-polyglot/indent/sas.vim	/^let s:block_str = '\\v<%(do>%([^;]+<%(to|over|while)>[^;]+)=|%(compute|define\\s+%(column|footer/;"	v
s:blocks_graph_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:blocks_graph_at(linum) abort$/;"	f
s:blue	plugged/doom-one.vim/colors/doom-one.vim	/^let s:blue       = '#51afef'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#0000ff', 12 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:blue = '#36a3d9'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:blue      = ['#368aeb', 4]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:blue      = ['#4695f7', 4]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:blue      = ['#0072d4', 4]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:blue      = ['#0064e4', 4]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue = [ '#5f87af', '67' ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:blue2	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue2 = [ '#91aadf', '110' ]$/;"	v
s:bmenu_items	plugged/vim-polyglot/extras/menu.vim	/^let s:bmenu_items = {}$/;"	v
s:bmenu_wait	plugged/vim-polyglot/extras/menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:boolQuadGen	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:boolQuadGen(type, vars, deprecated)$/;"	f
s:booleans	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:booleans = {'expandtab': 1, 'endofline': 1, 'bomb': 1}$/;"	v
s:border_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^let s:border_layout = {$/;"	v
s:border_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^let s:border_layout.adjust_size = function('s:_border_layout_adjust_size')$/;"	v
s:border_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^let s:border_layout.apply = function('s:_border_layout_apply')$/;"	v
s:border_opt	plugged/fzf/plugin/fzf.vim	/^function! s:border_opt(window)$/;"	f
s:bracketBlocks	plugged/vim-polyglot/indent/julia.vim	/^let s:bracketBlocks = '\\<julia\\%(\\%(\\%(Printf\\)\\?Par\\|SqBra\\%(Idx\\)\\?\\|CurBra\\)Block/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_type	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f
s:bracket_type	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:bracket_type(char)$/;"	f
s:bracketed_paste	plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^let s:bracketed_paste =  {$/;"	v
s:bracketed_paste.on_enter	plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^function! s:bracketed_paste.on_enter(cmdline) abort$/;"	f
s:bracketed_paste.on_leave	plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^function! s:bracketed_paste.on_leave(cmdline) abort$/;"	f
s:bracketing_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:bracketing_delims = [$/;"	v
s:brblue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brblue    = ['#4f9cfe', 12]$/;"	v
s:brblue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brblue    = ['#58a3ff', 12]$/;"	v
s:brblue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brblue    = ['#006dce', 12]$/;"	v
s:brblue	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brblue    = ['#0054cf', 12]$/;"	v
s:brcyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brcyan    = ['#56d8c9', 14]$/;"	v
s:brcyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brcyan    = ['#53d6c7', 14]$/;"	v
s:brcyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brcyan    = ['#00978a', 14]$/;"	v
s:brcyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brcyan    = ['#009a8a', 14]$/;"	v
s:break	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:break	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:break	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:break	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:break	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:break(callable, xs) abort$/;"	f
s:brgreen	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brgreen   = ['#83c746', 10]$/;"	v
s:brgreen	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brgreen   = ['#84c747', 10]$/;"	v
s:brgreen	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brgreen   = ['#428b00', 10]$/;"	v
s:brgreen	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brgreen   = ['#008400', 10]$/;"	v
s:bright_blue	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_green	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_magenta	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:brmagenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brmagenta = ['#ff81ca', 13]$/;"	v
s:brmagenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brmagenta = ['#ff84cd', 13]$/;"	v
s:brmagenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brmagenta = ['#c44392', 13]$/;"	v
s:brmagenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brmagenta = ['#c7008b', 13]$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:browsefilter = 'All Files (*.*)\\t*.*\\n'$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browser_open_command	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:browser_open_command() abort$/;"	f
s:brred	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brred     = ['#ff5e56', 9]$/;"	v
s:brred	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brred     = ['#ff665c', 9]$/;"	v
s:brred	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brred     = ['#cc1729', 9]$/;"	v
s:brred	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brred     = ['#bf0000', 9]$/;"	v
s:bryellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bryellow  = ['#efc541', 11]$/;"	v
s:bryellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bryellow  = ['#ebc13d', 11]$/;"	v
s:bryellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bryellow  = ['#a78300', 11]$/;"	v
s:bryellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bryellow  = ['#af8500', 11]$/;"	v
s:bs_del	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:bs_del(cmd) abort$/;"	f
s:bstartp	plugged/vim-polyglot/autoload/pony.vim	/^let s:bstartp = '\\v<%(ifdef|if|then|elseif|else|(match)|while|for|in|do|try|with|recover|repeat/;"	v
s:bsub	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
s:btags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buffer	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:buffer = []$/;"	v
s:buffer	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:buffer = []$/;"	v
s:buffer_enter	plugged/vim-visual-multi/autoload/vm.vim	/^fun! s:buffer_enter() abort$/;"	f
s:buffer_leave	plugged/vim-visual-multi/autoload/vm.vim	/^fun! s:buffer_leave() abort$/;"	f
s:buffer_line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
s:buffer_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_type	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:buflisted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:bufnr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:bufnr(expr)$/;"	f
s:bufnr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:bufnr(nr)$/;"	f
s:bufnr	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:bufopen	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:build	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:build(callable, ...) abort$/;"	f
s:buildConfigKeys	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:buildConfigKeys()$/;"	f
s:build_buffer_maps	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:build_buffer_maps() abort$/;"	f
s:build_command	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
s:build_http_header	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:build_http_header(cookies) abort$/;"	f
s:build_line_from_query_with_placeholders	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:build_line_from_query_with_placeholders(q, xs) abort$/;"	f
s:build_menu	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:build_menu(topmenu) abort$/;"	f
s:build_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
s:build_permanent_maps	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:build_permanent_maps() abort$/;"	f
s:build_table_menu	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:build_table_menu(topmenu) abort$/;"	f
s:build_vital_data	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:build_vital_data(to, name) abort$/;"	f
s:builtin_modules	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:builtin_modules(rtp_dir) abort$/;"	f
s:bulk_input_char	plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^let s:bulk_input_char = {$/;"	v
s:bulk_input_char.on_char_pre	plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^function! s:bulk_input_char.on_char_pre(cmdline) abort$/;"	f
s:bvars	plugged/vim-polyglot/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:byte_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:c	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:c = expand('~\/.cache\/calendar.vim\/')$/;"	v
s:c	plugged/vim-polyglot/syntax/gitrebase.vim	/^let s:c = escape((matchstr(getline('$'), '^[#;@!$%^&|:]\\S\\@!') . '#')[0], '^$.*[]~\\"\/')$/;"	v
s:c0	plugged/vim-indent-object/plugin/indent-object.vim	/^let s:c0 = -1$/;"	v
s:c1	plugged/vim-indent-object/plugin/indent-object.vim	/^let s:c1 = -1$/;"	v
s:c_flag	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:c_flow_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_flow_indicator = '[,[\\]{}]'$/;"	v
s:c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_indicator      = '[\\-?:,[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_named_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_named_tag_handle     = '\\v\\!'.s:ns_word_char.'+\\!'$/;"	v
s:c_named_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_non_specific_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_non_specific_tag = '\\v\\!'$/;"	v
s:c_non_specific_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_ns_alias_node	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_char = '\\v%([\\n\\r\\uFEFF \\t,[\\]{}]@!\\p)'$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = '\\%([\\n\\r\\uFEFF \\t,[\\]{}]\\@!\\p\\)'$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:c_ns_anchor_char)$/;"	v
s:c_ns_anchor_name	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'+'$/;"	v
s:c_ns_anchor_name	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_property	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_property =  '\\v\\&'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_property	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_shorthand_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_shorthand_tag = '\\v'.s:c_tag_handle . s:ns_tag_char.'+'$/;"	v
s:c_ns_shorthand_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_ns_tag_property	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_tag_property = '\\v'.s:c_verbatim_tag.$/;"	v
s:c_ns_tag_property	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_primary_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_primary_tag_handle   = '\\v\\!'$/;"	v
s:c_primary_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_secondary_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_secondary_tag_handle = '\\v\\!\\!'$/;"	v
s:c_secondary_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_tag_handle = '\\v%('.s:c_named_tag_handle.$/;"	v
s:c_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_verbatim_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_verbatim_tag = '\\v\\!\\<'.s:ns_uri_char.'+\\>'$/;"	v
s:c_verbatim_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:cache = calendar#cache#new('countcache')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:cache = calendar#cache#new('local')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:cache = calendar#cache#new('google')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:cache = calendar#cache#new('google')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:cache = calendar#cache#new('google')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/string.vim	/^let s:cache = calendar#countcache#new('string.vim')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:cache = calendar#cache#new('local')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/timestamp.vim	/^let s:cache = calendar#cache#new('timestamp')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/webapi.vim	/^let s:cache = calendar#cache#new('download')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/week.vim	/^let s:cache = {}$/;"	v
s:cache	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^let s:cache = {$/;"	v
s:cache	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^let s:cache = {$/;"	v
s:cache	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^let s:cache = {$/;"	v
s:cache	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^let s:cache = {$/;"	v
s:cache	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^let s:cache = {$/;"	v
s:cache	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^let s:cache = {$/;"	v
s:cache.cache_key	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.cache_key(obj) abort$/;"	f
s:cache.cache_key	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.cache_key(obj) abort$/;"	f
s:cache.clear	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.clear() abort$/;"	f
s:cache.clear	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:cache.clear() abort$/;"	f
s:cache.clear	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.clear() abort$/;"	f
s:cache.clear	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:cache.clear() abort$/;"	f
s:cache.clear	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.clear() abort$/;"	f
s:cache.dump	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.dump() abort$/;"	f
s:cache.get	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.get(name, ...) abort$/;"	f
s:cache.get	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:cache.get(name, ...) abort$/;"	f
s:cache.get	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.get(name, ...) abort$/;"	f
s:cache.get	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:cache.get(name, ...) abort$/;"	f
s:cache.get	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.get(name, ...) abort$/;"	f
s:cache.get_cache_filename	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.get_cache_filename(name) abort$/;"	f
s:cache.has	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.has(name) abort$/;"	f
s:cache.has	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:cache.has(name) abort$/;"	f
s:cache.has	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.has(name) abort$/;"	f
s:cache.has	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:cache.has(name) abort$/;"	f
s:cache.has	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.has(name) abort$/;"	f
s:cache.keys	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.keys() abort$/;"	f
s:cache.keys	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:cache.keys() abort$/;"	f
s:cache.keys	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.keys() abort$/;"	f
s:cache.keys	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:cache.keys() abort$/;"	f
s:cache.keys	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.keys() abort$/;"	f
s:cache.load	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.load() abort$/;"	f
s:cache.on_changed	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.on_changed() abort$/;"	f
s:cache.remove	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.remove(name) abort$/;"	f
s:cache.remove	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:cache.remove(name) abort$/;"	f
s:cache.remove	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.remove(name) abort$/;"	f
s:cache.remove	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:cache.remove(name) abort$/;"	f
s:cache.remove	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.remove(name) abort$/;"	f
s:cache.set	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:cache.set(name, value) abort$/;"	f
s:cache.set	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:cache.set(name, value) abort$/;"	f
s:cache.set	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:cache.set(name, value) abort$/;"	f
s:cache.set	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:cache.set(name, value) abort$/;"	f
s:cache.set	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:cache.set(name, value) abort$/;"	f
s:cache_command	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_command	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_directory	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:cache_directory() abort$/;"	f
s:cache_sid	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugged/vital.vim/autoload/vital/vital.vim	/^let s:cache_sid = {}$/;"	v
s:caches	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:caches = []$/;"	v
s:calc_size	plugged/fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
s:calendar	plugged/calendar.vim/autoload/calendar.vim	/^let s:calendar = {}$/;"	v
s:calendar	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:calendar() abort$/;"	f
s:calendar_candidates	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:calendar_candidates() abort$/;"	f
s:calendars	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:calendars = filter(map(split(globpath(&rtp, 'autoload\/calendar\/day\/**.vim'), '\\n'),$/;"	v
s:call	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
s:call	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
s:call	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:call(method, params, cont)$/;"	f
s:call	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^function! s:call(fn, ...) abort$/;"	f
s:call	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:call(callable, ...) abort$/;"	f
s:call	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^function! s:call(callable, args, ...) abort$/;"	f
s:call_motion	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:call_motion(...) abort$/;"	f
s:callback	plugged/fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
s:callback_datalen	plugged/calendar.vim/autoload/calendar/webapi.vim	/^let s:callback_datalen = {}$/;"	v
s:callback_showSignature	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_showSignature(result)$/;"	f
s:callback_showTooltip	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_showTooltip(result)$/;"	f
s:callbacks	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:callbacks = {}$/;"	v
s:caller_win	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^let s:caller_win = {$/;"	v
s:can_diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:can_preserve_syntax	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:can_preserve_syntax = s:has_patch(7, 4, 792)$/;"	v
s:cancel_highlight	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:cancel_highlight(id, event) abort  "{{{$/;"	f
s:cancelled	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:cancelled = 0$/;"	v
s:canonicalize	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTP.vim	/^function! s:canonicalize(uriobj) abort$/;"	f
s:canonicalize	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTPS.vim	/^function! s:canonicalize(uriobj) abort$/;"	f
s:capture	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:capture(cmd)$/;"	f
s:capture	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
s:capture	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
s:capture	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
s:capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
s:capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
s:capture	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
s:capture	plugged/vital.vim/autoload/vital/__vital__/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
s:capture_list	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
s:capture_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
s:cd_cmd	plugged/vim-startify/autoload/startify.vim	/^function! s:cd_cmd() abort$/;"	f
s:cd_to_vcs_root	plugged/vim-startify/autoload/startify.vim	/^function! s:cd_to_vcs_root(path) abort$/;"	f
s:cell_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:cell_splitter() abort$/;"	f
s:cexpr	plugged/vim-polyglot/autoload/dart.vim	/^function! s:cexpr(errorformat, lines, reason) abort$/;"	f
s:cfend	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfend = '\\v<end>'$/;"	v
s:cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap = {}$/;"	v
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap.rhs = "substitute(&l:inex =~# '\\\\<v:fname\\\\>' && len(expand('<cfile>')) ? e/;"	v
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:cfilemap = v:version >= 704 ? maparg('<Plug><cfile>', 'c', 0, 1) : {}$/;"	v
s:cfmiddle	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfmiddle = '\\v<%(then|elseif|else|until|do|in|elseiftype)>|\\|'$/;"	v
s:cfstart	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfstart = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype)>'$/;"	v
s:ch_braces	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_braces=3$/;"	v
s:ch_brackets	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_brackets=2$/;"	v
s:ch_parentheses	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses=5$/;"	v
s:ch_parentheses_option	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses_option=4$/;"	v
s:ch_posix_charclass	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_posix_charclass=1$/;"	v
s:ch_with_backslash	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_with_backslash=0$/;"	v
s:chain	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:chain(promise_factories) abort$/;"	f
s:chained_func_call	plugged/vim-polyglot/indent/lua.vim	/^let s:chained_func_call = "^\\\\v\\\\s*[:.]\\\\w+[({\\"']"$/;"	v
s:change_at_cursors	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^fun! s:change_at_cursors(M, reg, n) abort$/;"	f
s:change_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:change_cb(from_line, to_line, new_rate) abort$/;"	f
s:change_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:change_level(from_line, to_line, direction, plus_children) abort$/;"	f
s:changesurround	plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
s:channel_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:char_bottom_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_left  = ['*', '╰'][g:startify_fortune_use_unicode]$/;"	v
s:char_bottom_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_right = ['*', '╯'][g:startify_fortune_use_unicode]$/;"	v
s:char_range	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:char_range	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:char_range	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:char_range	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:char_sides	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_sides        = ['|', '│'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_bottom	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_bottom   = ['-', '─'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_left     = ['*', '╭'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_right    = ['*', '╮'][g:startify_fortune_use_unicode]$/;"	v
s:chars	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:chars(str) abort$/;"	f
s:check_file	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . '/;"	v
s:check_floating_window	plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_floating_window() abort$/;"	f
s:check_for_string	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f
s:check_for_string	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:check_for_string()$/;"	f
s:check_git_binary	plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_git_binary() abort$/;"	f
s:check_job	plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_job() abort$/;"	f
s:check_old_cache	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
s:check_requirements	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
s:check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:check_system	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:check_system() abort$/;"	f
s:check_user_options	plugged/vim-startify/autoload/startify.vim	/^function! s:check_user_options(path) abort$/;"	f
s:check_users_value	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:check_users_value(key, users_value, value_infos, comes_from_global_variable) abort$/;"	f
s:check_vim_version	plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_vim_version() abort$/;"	f
s:check_warnings	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:check_warnings() abort$/;"	f
s:checked	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
s:checked	plugged/fzf/plugin/fzf.vim	/^let s:checked = {}$/;"	v
s:checked_ctags	plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:checked_ctags = 0$/;"	v
s:checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chomp	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:chomp	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
s:chomp	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
s:choose	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:choose(word) abort$/;"	f
s:chop	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
s:chop	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
s:chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:cipher	plugged/calendar.vim/autoload/calendar/cipher.vim	/^function! s:cipher(str, num) abort$/;"	f
s:clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:clean_url	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:clean_url(url) abort$/;"	f
s:cleanup_cmdline	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:cleanup_cmdline() abort$/;"	f
s:clear	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
s:clear	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clear	plugged/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
s:clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
s:clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clear	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
s:clear	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clear	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
s:clear	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clearQfList	plugged/vim-polyglot/autoload/dart.vim	/^function! s:clearQfList(reason) abort$/;"	f
s:clear_autocmds	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:clear_autocmds() abort "{{{$/;"	f
s:clear_dummy_cursor	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:clear_dummy_cursor(dummycursor) abort  "{{{$/;"	f
s:clearpath	plugged/calendar.vim/autoload/calendar/cache.vim	/^let s:clearpath = []$/;"	v
s:cli	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:cli = vital#incsearch#import('Over.Commandline').make_default('\/')$/;"	v
s:cli	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:cli = {$/;"	v
s:cli.__keymapping__	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:cli.__keymapping__() abort$/;"	f
s:cli._build_search_cmd	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._build_search_cmd(pattern, ...) abort$/;"	f
s:cli._call_execute_event	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._call_execute_event(...) abort$/;"	f
s:cli._combine_pattern	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._combine_pattern(pattern, offset) abort$/;"	f
s:cli._convert	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._convert(pattern) abort$/;"	f
s:cli._exit_incsearch	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._exit_incsearch(...) abort$/;"	f
s:cli._generate_command	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._generate_command(input) abort$/;"	f
s:cli._parse_pattern	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._parse_pattern() abort$/;"	f
s:client	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:client() abort$/;"	f
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients = {}$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl = {}$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode = {}$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[11] = 'FTP weird PASS reply. Curl couldn''t parse the reply sent to t/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[13] = 'FTP weird PASV reply, Curl couldn''t parse the reply sent to t/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[14] = 'FTP weird 227 format. Curl couldn''t parse the 227-line the se/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[15] = 'FTP can''t get host. Couldn''t resolve the host IP we got in t/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[17] = 'FTP couldn''t set binary. Couldn''t change transfer method to /;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[18] = 'Partial file. Only a part of the file was transferred.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[19] = 'FTP couldn''t download\/access the given file, the RETR (or si/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[1] = 'Unsupported protocol. This build of curl has no support for thi/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[21] = 'FTP quote error. A quote command returned error from the serve/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[22] = 'HTTP page not retrieved. The requested url was not found or re/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[23] = 'Write error. Curl couldn''t write data to a local filesystem o/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[25] = 'FTP couldn''t STOR file. The server denied the STOR operation,/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[26] = 'Read error. Various reading problems.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[27] = 'Out of memory. A memory allocation request failed.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[28] = 'Operation timeout. The specified time-out period was reached a/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[2] = 'Failed to initialize.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[30] = 'FTP PORT failed. The PORT command failed. Not all FTP servers /;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[31] = 'FTP couldn''t use REST. The REST command failed. This command /;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[33] = 'HTTP range error. The range "command" didn''t work.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[34] = 'HTTP post error. Internal post-request generation error.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[35] = 'SSL connect error. The SSL handshaking failed.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[36] = 'FTP bad download resume. Couldn''t continue an earlier aborted/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[37] = 'FILE couldn''t read file. Failed to open the file. Permissions/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[38] = 'LDAP cannot bind. LDAP bind operation failed.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[39] = 'LDAP search failed.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[3] = 'URL malformed. The syntax was not correct.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[41] = 'Function not found. A required LDAP function was not found.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[42] = 'Aborted by callback. An application told curl to abort the ope/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[43] = 'Internal error. A function was called with a bad parameter.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[45] = 'Interface error. A specified outgoing interface could not be u/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[47] = 'Too many redirects. When following redirects, curl hit the max/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[48] = 'Unknown option specified to libcurl. This indicates that you p/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[49] = 'Malformed telnet option.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[4] = 'A feature or option that was needed to perform the desired requ/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[51] = 'The peer''s SSL certificate or SSH MD5 fingerprint was not OK./;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[52] = 'The server didn''t reply anything, which here is considered an/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[53] = 'SSL crypto engine not found.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[54] = 'Cannot set SSL crypto engine as default.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[55] = 'Failed sending network data.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[56] = 'Failure in receiving network data.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[58] = 'Problem with the local certificate.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[59] = 'Couldn''t use specified SSL cipher.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[5] = 'Couldn''t resolve proxy. The given proxy host could not be reso/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[60] = 'Peer certificate cannot be authenticated with known CA certifi/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[61] = 'Unrecognized transfer encoding.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[62] = 'Invalid LDAP URL.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[63] = 'Maximum file size exceeded.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[64] = 'Requested FTP SSL level failed.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[65] = 'Sending the data requires a rewind that failed.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[66] = 'Failed to initialise SSL Engine.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[67] = 'The user name, password, or similar was not accepted and curl /;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[68] = 'File not found on TFTP server.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[69] = 'Permission problem on TFTP server.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[6] = 'Couldn''t resolve host. The given remote host was not resolved./;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[70] = 'Out of disk space on TFTP server.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[71] = 'Illegal TFTP operation.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[72] = 'Unknown TFTP transfer ID.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[73] = 'File already exists (TFTP).'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[74] = 'No such user (TFTP).'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[75] = 'Character conversion failed.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[76] = 'Character conversion functions required.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[77] = 'Problem with reading the SSL CA cert (path? access rights?).'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[78] = 'The resource referenced in the URL does not exist.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[79] = 'An unspecified error occurred during the SSH session.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[7] = 'Failed to connect to host.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[80] = 'Failed to shut down the SSL connection.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[82] = 'Could not load CRL file, missing or wrong format (added in 7.1/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[83] = 'Issuer check failed (added in 7.19.0).'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[84] = 'The FTP PRET command failed'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[85] = 'RTSP: mismatch of CSeq numbers'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[86] = 'RTSP: mismatch of Session Identifiers'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[87] = 'unable to parse FTP file list'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[88] = 'FTP chunk callback reported error'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[89] = 'No connection available, the session will be queued'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[8] = 'FTP weird server reply. The server sent data curl couldn''t par/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[90] = 'SSL public key does not matched pinned public key'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.curl.errcode[9] = 'FTP access denied. The server denied login or denied access to /;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.python2 = {}$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.python3 = {}$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget = {}$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode = {}$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[1] = 'Generic error code.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[2] = 'Parse error---for instance, when parsing command-line options, /;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[3] = 'File I\/O error.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[4] = 'Network failure.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[5] = 'SSL verification failure.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[6] = 'Username\/password authentication failure.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[7] = 'Protocol errors.'$/;"	v
s:clients	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:clients.wget.errcode[8] = 'Server issued an error response.'$/;"	v
s:clients.curl._command	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.curl._command(settings) abort$/;"	f
s:clients.curl.available	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.curl.available(settings) abort$/;"	f
s:clients.curl.request	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.curl.request(settings) abort$/;"	f
s:clients.python2.available	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.python2.available(settings) abort$/;"	f
s:clients.python2.request	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.python2.request(settings) abort$/;"	f
s:clients.python3.available	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.python3.available(settings) abort$/;"	f
s:clients.python3.request	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.python3.request(settings) abort$/;"	f
s:clients.wget._command	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.wget._command(settings) abort$/;"	f
s:clients.wget.available	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.wget.available(settings) abort$/;"	f
s:clients.wget.request	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:clients.wget.request(settings) abort$/;"	f
s:clock	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^let s:clock = {$/;"	v
s:clock.elapsed	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.elapsed() dict abort "{{{$/;"	f
s:clock.pause	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.pause() dict abort "{{{$/;"	f
s:clock.start	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.start() dict abort  "{{{$/;"	f
s:clock.stop	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.stop() dict abort  "{{{$/;"	f
s:clock_12hour	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:clock_12hour() abort$/;"	f
s:clojure_check_for_string_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f
s:clojure_indent_pos	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f
s:clojure_is_method_special_case_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f
s:clojure_syntax_keywords	plugged/vim-polyglot/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
s:clone_marker_from_to	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:clone_marker_from_to(from, to) abort$/;"	f
s:clone_pattern_set	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:clone_pattern_set(pattern_set) abort$/;"	f
s:close	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:close(nr, close_cmd)$/;"	f
s:close	plugged/vim-startify/autoload/startify.vim	/^function! s:close() abort$/;"	f
s:closeBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:closeBlock = s:midBlock + s:endBlock$/;"	v
s:close_pane	autoload/plug.vim	/^function! s:close_pane()$/;"	f
s:close_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:close_patt = '\\C\\%(\\<\\%(end\\|until\\)\\>\\|)\\|}\\)'$/;"	v
s:close_popup_on_escape	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:close_popup_on_escape(winid, key)$/;"	f
s:close_tag_def_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_def_list(deflist, ldest) abort$/;"	f
s:close_tag_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_list(lists, ldest) abort$/;"	f
s:close_tag_math	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_math(math, ldest) abort$/;"	f
s:close_tag_para	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_para(para, ldest) abort$/;"	f
s:close_tag_pre	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_pre(pre, ldest) abort$/;"	f
s:close_tag_quote	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_quote(quote, ldest) abort$/;"	f
s:close_tag_row	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:close_tag_row(row, header, ldest, header_ids) abort$/;"	f
s:close_tag_table	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_table(table, ldest, header_ids) abort$/;"	f
s:close_window	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:close_window(expr, ...)$/;"	f
s:close_window_by	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:close_window_by(expr, ...)$/;"	f
s:closematch	plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
s:closures	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^let s:closures = {}$/;"	v
s:cmd	plugged/fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
s:cmd	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:cmd = join(['mix', 'run', '--no-start', '--no-compile', shellescape(s:path.'\/get_repos.ex/;"	v
s:cmd_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:cmdheight	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdheight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdheight.get	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
s:cmdheight.get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
s:cmdheight.restore	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
s:cmdheight.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
s:cmdheight.save	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
s:cmdheight.save	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
s:cmdline	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:cmdline = s:V.import('Over.Commandline.Base')$/;"	v
s:col_count	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:col_count(lnum) abort$/;"	f
s:collect	plugged/fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
s:collect_headers	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:collect_headers() abort$/;"	f
s:colorcolumn	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:colorcolumn = exists('&colorcolumn')$/;"	v
s:colors_name	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:colors_name = ''$/;"	v
s:columns	plugged/lightline.vim/autoload/lightline.vim	/^let s:columns = -1$/;"	v
s:combinations	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:combinations	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:combinations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:combinations	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:comma_first	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_first	plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:comma_last	plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:command	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:command(url, method, header, postfile, output) abort$/;"	f
s:command	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
s:command	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
s:command_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:commands	plugged/vim-polyglot/syntax/wget.vim	/^let s:commands = map([$/;"	v
s:comment	plugged/vim-polyglot/indent/ansible.vim	/^let s:comment = '\\v^\\s*#' " # comment$/;"	v
s:comment	plugged/vim-polyglot/syntax/gitcommit.vim	/^  let s:comment .= ' -\\{24,\\} >8 -\\{24,\\}$'$/;"	v
s:comment	plugged/vim-polyglot/syntax/gitcommit.vim	/^let s:comment = escape((matchstr(getline(s:l), '^[#;@!$%^&|:]\\S\\@!') . '#')[0], '^$.*[]~\\"\/'/;"	v
s:comment_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:comment_fg_color = calendar#color#comment_fg_color()$/;"	v
s:comment_pattern	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^let s:comment_pattern = '\\v[#;].*$'$/;"	v
s:comment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:comment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:comments	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:comments = escape(&comments, ' \\')$/;"	v
s:comments	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:comments = ''$/;"	v
s:commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(range, buffer_local, args)$/;"	f
s:commits_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:common_head	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
s:common_head	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
s:common_prefix	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_prefix(a, b)$/;"	f
s:common_sink	plugged/fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
s:common_suffix	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_suffix(a, b, start)$/;"	f
s:commondirs	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compare	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:compare(a, b) abort$/;"	f
s:compare	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:compare(a, b) abort$/;"	f
s:compare	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:compare(a,b) abort$/;"	f
s:compare	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:compare(d1, d2) abort$/;"	f
s:compareReverseFtime	plugged/vim-polyglot/ftplugin/raku.vim	/^func s:compareReverseFtime(a, b)$/;"	f
s:compare_binary_versions	plugged/fzf/plugin/fzf.vim	/^function! s:compare_binary_versions(a, b)$/;"	f
s:compare_by_index	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_index(foo, bar)$/;"	f
s:compare_by_key_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_key_len(foo, bar)$/;"	f
s:compare_by_val_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_val_len(foo, bar)$/;"	f
s:compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:compare_pos	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:compare_pos(x, y) abort$/;"	f
s:compare_pos	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:compare_pos(x, y) abort$/;"	f
s:compare_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:compare_pos(pos1, pos2)$/;"	f
s:compare_versions	plugged/fzf/plugin/fzf.vim	/^function! s:compare_versions(a, b)$/;"	f
s:compensate_for_pum	plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum() abort$/;"	f
s:compile	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compile(projectPath, cont)$/;"	f
s:compilerLocation	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compilerLocation(cont)$/;"	f
s:complete_insert	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:compose	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:compose(callables) abort$/;"	f
s:compute_old_url_r	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! s:compute_old_url_r(wiki_nr, dir_rel_fsource, old_url) abort$/;"	f
s:concat	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:concat	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:concat	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:concat	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:concat	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:concat(streams) abort$/;"	f
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:conceal	plugged/vimwiki/syntax/vimwiki.vim	/^let s:conceal = exists('+conceallevel') ? ' conceal' : ''$/;"	v
s:concealcode	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealcode = ' concealends'$/;"	v
s:concealcode	plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealcode = ''$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:conditional_directive_rx	plugged/vim-polyglot/indent/make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:conditional_directive_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:config	plugged/incsearch-easymotion.vim/plugin/incsearch/easymotion.vim	/^function! s:config(...) abort$/;"	f
s:config	plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:config = {$/;"	v
s:config	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:config = {$/;"	v
s:config	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:config	plugged/vim-polyglot/autoload/unison.vim	/^function! s:config(name, default) abort$/;"	f
s:config_Get	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_Get(name, ...) dict abort$/;"	f
s:config_GetAll	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_GetAll(name) dict abort$/;"	f
s:config_GetRegexp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_GetRegexp(pattern) dict abort$/;"	f
s:config_easyfuzzymotion	vimrc	/^function! s:config_easyfuzzymotion(...) abort$/;"	f
s:config_fuzzy	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^function! s:config_fuzzy(...) abort$/;"	f
s:config_fuzzyspell	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^function! s:config_fuzzyspell(...) abort$/;"	f
s:config_fuzzyword	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^function! s:config_fuzzyword(...) abort$/;"	f
s:config_keys	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys = []$/;"	v
s:config_keys_camel	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys_camel =$/;"	v
s:config_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config_prototype = {}$/;"	v
s:conj	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:conj	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:conj	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:conj	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:cons	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:cons	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:cons	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:cons	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 10, 16)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 12, 25)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/british.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1752, 9, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1916, 4, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1752, 9, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/default.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1918, 2, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/france.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 12, 20)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 1, 11)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1610, 9, 2)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1923, 3, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:constructor = calendar#constructor#day#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 1, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1587, 11, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1873, 1, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:constructor = calendar#constructor#day#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1918, 2, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1927, 1, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/us.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1752, 9, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:constructor = calendar#constructor#view_textbox#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:constructor = calendar#constructor#view_textbox#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:constructor = calendar#constructor#view_textbox#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/year.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:constructor.new(y, m, d) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:constructor.new(y, m, d) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:constructor.new(y, m) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:constructor.new(source) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:constructor.new(source) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:constructor.new(source) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:constructor.new(source) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:constructor.new(source) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:constructor.new(source) dict abort$/;"	f
s:constructor.new	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:constructor.new(y) dict abort$/;"	f
s:constructor.new_mjd	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:constructor.new_mjd(mjd) dict abort$/;"	f
s:constructor.new_mjd	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:constructor.new_mjd(mjd) dict abort$/;"	f
s:constructor.today	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:constructor.today() dict abort$/;"	f
s:consume	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:consume(label, varname) abort$/;"	f
s:consume_all_blocking	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:consume_all_blocking(label, varname, timeout_sec) abort$/;"	f
s:consumed	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:consumed = 0$/;"	v
s:contained	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:contained = []$/;"	v
s:contains	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:contains(path, base) abort$/;"	f
s:contains_multibyte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
s:contains_multibyte	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
s:continuable_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	plugged/vim-polyglot/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:l/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^/;"	v
s:continuation_rx	plugged/vim-polyglot/indent/make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continuation_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:continued_rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:control_chars	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^let s:control_chars = {$/;"	v
s:convert	plugged/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
s:convert	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
s:convertMigemo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
s:convertRegep	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
s:convertSmartcase	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
s:convertSmartsign	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartsign(chars) "{{{$/;"	f
s:convert_2_word_pattern_4_visual	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:convert_2_word_pattern_4_visual(pattern, config) abort$/;"	f
s:convert_file	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:convert_file(path_html, wikifile) abort$/;"	f
s:convert_t_regexp	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convert_t_regexp(re, direction) "{{{$/;"	f
s:copy	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:copy(src, dest) abort$/;"	f
s:copy	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:copy(from, to) abort$/;"	f
s:copy_dir	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:copy_dir(src, dest) abort$/;"	f
s:copy_dir_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:copy_dir_exe() abort$/;"	f
s:copy_dir_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:copy_dir_exe(src, dest) abort$/;"	f
s:copy_dir_vim	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:copy_dir_vim(src, dest) abort$/;"	f
s:copy_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:copy_exe() abort$/;"	f
s:copy_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:copy_exe(src, dest) abort$/;"	f
s:copy_vim	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:copy_vim(src, dest) abort$/;"	f
s:count	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:count = 0$/;"	v
s:count	plugged/vim-polyglot/indent/bst.vim	/^function! s:count(string,char)$/;"	f
s:count	plugged/vim-polyglot/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
s:count	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:count(f, xs) abort$/;"	f
s:count_braces	plugged/vim-polyglot/indent/css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_char	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:count_char(from, to) abort$/;"	f
s:count_chars	plugged/vim-polyglot/indent/scss.vim	/^function s:count_chars(lnum, count_open, chars)$/;"	f
s:count_headers_level_less_equal	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:count_headers_level_less_equal(headers, maxlevel) abort$/;"	f
s:count_pattern	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:count_pattern(pattern, ...) abort$/;"	f
s:count_separators_down	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:count_separators_down(lnum) abort$/;"	f
s:count_separators_up	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:count_separators_up(lnum) abort$/;"	f
s:counter	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:counter = 0$/;"	v
s:countermeasure	plugged/vim-polyglot/scripts/eregex.vim	/^let s:countermeasure=1$/;"	v
s:countonly	plugged/vim-polyglot/indent/html.vim	/^let s:countonly = 0$/;"	v
s:cow	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:cow = [$/;"	v
s:cpath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
s:cpo	plugged/vim-polyglot/ftplugin/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	plugged/vim-polyglot/syntax/debsources.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	plugged/vim-polyglot/syntax/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo_orig	plugged/vim-polyglot/ftplugin/zig.vim	/^let s:cpo_orig = &cpo$/;"	v
s:cpo_orig	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:cpo_orig=&cpoptions$/;"	v
s:cpo_sav	plugged/vim-polyglot/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/fennel.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/mp.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/puppet.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/after/indent/tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/go/config.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/hcl.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/nim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ocaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/powershell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/puppet-lint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/sbt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/sml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/extras/filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/extras/menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/abap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/basic.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cfg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/csv.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/fennel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hamster.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/handlebars.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hcl.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/kwt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/modula2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/modula3.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pascal.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/postscr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rrst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/spec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/systemd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/systemverilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/applescript.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/gohtmltmpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/graphql.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/hcl.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/nix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/raku.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/sdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/solidity.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/swift.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/systemverilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/vlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/8th.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/abel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/aptconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/art.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/asn.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/autodoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/basic.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/bib.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/blank.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cabal-2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cf.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/clean.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cmod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/csc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/csv.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cupl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/d.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ddoc.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/debcopyright.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/desktop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dnsmasq.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/forth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fortran.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fstab.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gdb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gsp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hcl.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hollywood.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/jam.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/javacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/julia.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/juliadoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/log.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/logtalk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lout.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lpc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/make.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/meson.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/monk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/msidl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/natural.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ninja.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nroff.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/opl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pike.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/reva.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sisu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/spup.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/st.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/texinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tsalt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/viminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/wast.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/wget.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xpm2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/zig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	plugged/vim-polyglot/ftplugin/ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cpoptions_save	plugged/vim-polyglot/ftplugin/qml.vim	/^let s:cpoptions_save = &cpoptions$/;"	v
s:cposet	plugged/vim-polyglot/ftplugin/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	plugged/vim-polyglot/indent/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cr_on_empty_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:cr_on_empty_line(lnum, behavior) abort$/;"	f
s:cr_on_empty_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:cr_on_empty_list_item(lnum, behavior) abort$/;"	f
s:cr_on_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:cr_on_list_item(lnum, insert_new_marker, not_at_eol) abort$/;"	f
s:create	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:create(targets, keys) abort$/;"	f
s:createElement	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:createElement(name) abort$/;"	f
s:create_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:create_cb(item, start_rate) abort$/;"	f
s:create_cursors	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:create_cursors(start, end) abort$/;"	f
s:create_default_CSS	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:create_default_CSS(path) abort$/;"	f
s:create_empty_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:create_empty_row(cols) abort$/;"	f
s:create_h1	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:create_h1(fname) abort$/;"	f
s:create_last_session_link	plugged/vim-startify/autoload/startify.vim	/^function! s:create_last_session_link(session_path)$/;"	f
s:create_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:create_marker(lnum) abort$/;"	f
s:create_popup	plugged/fzf/plugin/fzf.vim	/^  function s:create_popup(hl, opts) abort$/;"	f
s:create_popup	plugged/fzf/plugin/fzf.vim	/^  function! s:create_popup(hl, opts) abort$/;"	f
s:create_row_sep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:create_row_sep(cols) abort$/;"	f
s:create_temporary_wiki	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:create_temporary_wiki() abort$/;"	f
s:create_win2pos2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:create_win2pos2hint(hint_dict) abort$/;"	f
s:credentials	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:credentials() abort$/;"	f
s:crockford_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^let s:crockford_decode_map = {$/;"	v
s:crockford_encode_table	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^let s:crockford_encode_table = [$/;"	v
s:csi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:csv_numeric_sort	plugged/vim-polyglot/autoload/csv.vim	/^let s:csv_numeric_sort = v:version > 704 || v:version == 704 && has("patch951")$/;"	v
s:ctagmap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:ctagmap = {}$/;"	v
s:ctagmap	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:ctagmap = v:version >= 704 ? maparg('<Plug><ctag>', 'c', 0, 1) : {}$/;"	v
s:ctags_is_uctags	plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:ctags_is_uctags = 0$/;"	v
s:ctags_options_dir	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^let s:ctags_options_dir = expand('<sfile>:p:h:h:h') . '\/ctags\/'$/;"	v
s:ctags_type	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^  let s:ctags_type = 0$/;"	v
s:cuicolor	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:cur_char_bytes	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:cur_char_bytes()$/;"	f
s:cur_column	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:cur_column() abort$/;"	f
s:cur_file	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:cur_file = ''$/;"	v
s:curl_arguments	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:curl_arguments(path, ...) abort$/;"	f
s:curl_path	plugged/vim-polyglot/autoload/unison.vim	/^function! s:curl_path() abort$/;"	f
s:currentQueryObject	plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:currentQueryObject()$/;"	f
s:currentQueryObject	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:currentQueryObject()$/;"	f
s:current_char	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_char()$/;"	f
s:current_char	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_char()$/;"	f
s:current_dir	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_file	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:current_file = ''$/;"	v
s:current_function_id	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^let s:current_function_id = 0$/;"	v
s:current_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:current_header(headers, line_number) abort$/;"	f
s:current_highlight	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:current_highlight = highlightedyank#highlight#new('None', [0, 1, 1, 0],$/;"	v
s:current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
s:current_major_version	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^let s:current_major_version = 0$/;"	v
s:current_mode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^let s:current_mode = ''$/;"	v
s:current_query	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^let s:current_query = ''$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/mdx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/rescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/syntax/mint.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vimwiki/syntax/vimwiki.vim	/^let s:current_syntax = vimwiki#vars#get_wikilocal('syntax')$/;"	v
s:current_word	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_word()$/;"	f
s:current_word	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_word()$/;"	f
s:curry	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^function! s:curry(callable, v) abort$/;"	f
s:cursor_in_two_hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:cursor_in_two_hunks()$/;"	f
s:cursor_moved	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cursor_moved(...)$/;"	f
s:cursor_moved	plugged/vim-visual-multi/autoload/vm.vim	/^fun! s:cursor_moved() abort$/;"	f
s:curswant	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:curswant() abort$/;"	f
s:cword_pattern	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:cword_pattern(cword, config) abort$/;"	f
s:cyan	plugged/doom-one.vim/colors/doom-one.vim	/^let s:cyan       = '#46D9FF'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:cyan      = ['#3fc5b7', 6]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:cyan      = ['#41c7b9', 6]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:cyan      = ['#009c8f', 6]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:cyan      = ['#00ad9c', 6]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:cycle(count) abort$/;"	f
s:cycle_until_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cycle_until_end()$/;"	f
s:cyclic_view	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:cyclic_view() abort$/;"	f
s:d	plugged/vim-polyglot/syntax/julia.vim	/^  function! s:d(x)$/;"	f
s:darkGray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:dark_blue	plugged/doom-one.vim/colors/doom-one.vim	/^let s:dark_blue  = '#2257A0'$/;"	v
s:dark_cyan	plugged/doom-one.vim/colors/doom-one.vim	/^let s:dark_cyan  = '#5699AF'$/;"	v
s:darker_grey	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:darker_grey  = [ '#262626', 235 ]$/;"	v
s:datafile	plugged/vital.vim/test/_testdata/vital/datatest/autoload/vital/__latest__/DataTest.vim	/^let s:datafile = expand('<sfile>:h') . '\/DataTest.txt'$/;"	v
s:date_endian	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_endian() abort$/;"	f
s:date_full_month_name	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_full_month_name() abort$/;"	f
s:date_month_name	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_month_name() abort$/;"	f
s:date_separator	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_separator() abort$/;"	f
s:datetime_cache	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:datetime_cache = {}$/;"	v
s:days	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:days = { '1': 31, '2': 28, '3': 31, '4': 30, '5': 31, '6': 30, '7': 31, '8': 31, '9': 30, /;"	v
s:debug	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:debug() abort$/;"	f
s:debug	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:debug(str)$/;"	f
s:debug	plugged/vim-polyglot/autoload/svelte.vim	/^let s:debug = exists("g:vim_svelte_plugin_debug")$/;"	v
s:debug	plugged/vim-polyglot/indent/svelte.vim	/^let s:debug = svelte#GetConfig('debug', 0)$/;"	v
s:debug	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:debug(...) abort$/;"	f
s:debug_mode_to	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:debug_mode_to(to) abort$/;"	f
s:decIndent	plugged/vim-polyglot/indent/plantuml.vim	/^let s:decIndent = '^\\s*\\%(end\\|else\\|}\\)'$/;"	v
s:dec_num	plugged/vim-polyglot/syntax/nim.vim	/^  let s:dec_num = '\\d%(_?\\d)*'$/;"	v
s:dec_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:dec_regex = '\\d\\%(_\\?\\d\\)*\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:decimalpos	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:decimalpos(expr) abort$/;"	f
s:decode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^function! s:decode(data) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
s:decode	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:decode(str, ...) abort$/;"	f
s:decodeEntityReference	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^function! s:decodeEntityReference(str) abort$/;"	f
s:decodeEntityReference	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:decodeEntityReference(str) abort$/;"	f
s:decodeURI	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:decodeURI(str) abort$/;"	f
s:decodeURI	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:decodeURI(str) abort$/;"	f
s:decode_json	plugged/vim-polyglot/autoload/crystal_lang.vim	/^  function! s:decode_json(text) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decoderaw	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^function! s:decoderaw(data) abort$/;"	f
s:decrease	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:decrease(...)$/;"	f
s:decrease_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:decrease_level(item) abort$/;"	f
s:deepextend	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
s:deepextend	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
s:defArgMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defMatcher = '\\%(' . s:modifierMatcher . '\\)*\\<def\\>'$/;"	v
s:def_comment	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
s:def_keyword	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
s:def_keywords	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
s:def_match	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
s:def_region	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
s:default	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:default = {$/;"	v
s:default	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:default(...)$/;"	f
s:default_CSS_full_name	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:default_CSS_full_name(path) abort$/;"	f
s:default_action	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_action	plugged/fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_border_style	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^let s:default_border_style = {$/;"	v
s:default_cell_style	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^let s:default_cell_style = {$/;"	v
s:default_column_style	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^let s:default_column_style = {$/;"	v
s:default_config	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:default_config() abort$/;"	f
s:default_config	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:default_config() abort$/;"	f
s:default_config	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^let s:default_config = {$/;"	v
s:default_context	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:default_context = { 'conf': '', 'ctx': {} }$/;"	v
s:default_highlight	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:default_highlight = {$/;"	v
s:default_highlight	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^function! s:default_highlight() abort$/;"	f
s:default_includes	plugged/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_keymappings	plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:default_keymappings = {$/;"	v
s:default_layout	plugged/fzf/plugin/fzf.vim	/^function! s:default_layout()$/;"	f
s:default_mapping	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^let s:default_mapping = {$/;"	v
s:default_mapping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^    function! s:default_mapping(motions, do_mapping) "{{{$/;"	f
s:default_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:default_mappings = {$/;"	v
s:default_metalinter	plugged/vim-polyglot/autoload/go/config.vim	/^let s:default_metalinter = 'staticcheck'$/;"	v
s:default_port	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTP.vim	/^function! s:default_port(uriobj) abort$/;"	f
s:default_port	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTPS.vim	/^function! s:default_port(uriobj) abort$/;"	f
s:default_register	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:default_register() abort  "{{{$/;"	f
s:default_register	plugged/vim-repeat/autoload/repeat.vim	/^function! s:default_register()$/;"	f
s:default_section	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^let s:default_section = '_'$/;"	v
s:default_shiftwidth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let s:default_shiftwidth = &shiftwidth$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax = g:vimwiki_syntax_variables['default']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.bold_match = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*__Text__\\*'.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.bold_search = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*\\zs\\%([^*`[:space:]][^/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.bullet_types = ['-', '*', '#']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_bold = '*'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_bolditalic = '\\*_'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_code = '`'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_deltext = '\\~\\~'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_eqin = '\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_italic = '_'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_italicbold = '_\\*'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_subscript = ',,'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_superscript = '^'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.header_match = '^\\s*\\(=\\{1,6}\\)=\\@!\\s*__Header__\\s*\\1=\\@!\\s*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.header_search = '^\\s*\\(=\\{1,6}\\)\\([^=].*[^=]\\)\\1\\s*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.list_markers = ['-', '1.', '*', 'I)', 'a)']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.number_types = ['1)', '1.', 'i)', 'I)', 'a)', 'A)']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.recurring_bullets = 0$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxBoldItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxCode = '`[^`]\\+`'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxComment = '^\\s*%%.*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxDelText = '\\~\\~[^~`]\\+\\~\\~'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxEqIn = '\\$[^$`]\\+\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxH = '='$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxHR = '^-----*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxItalicBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxListDefine = '::\\(\\s\\|$\\)'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxMathEnd = '}}\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxMathStart = '{{\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxPreEnd = '}}}'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxPreStart = '{{{'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxSubScript = ',,[^,`]\\+,,'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxSuperScript = '\\^[^^`]\\+\\^'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxTableSep = '|'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxTags = '\\%(^\\|\\s\\)\\@<=:\\%([^:''[:space:]]\\+:\\)\\+\\%(\\s\\|$\\)\\/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.symH = 1$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.tag_match =  '\\(^\\|\\s\\):\\([^:''[:space:]]\\+:\\)*__Tag__:'.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.tag_search = '\\(^\\|\\s\\)\\zs:\\([^:''[:space:]]\\+:\\)\\+\\ze\\(\\s\\|$\\/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.wikilink = '\\[\\[\\zs[^\\\\\\]|]\\+\\ze\\%(|[^\\\\\\]]\\+\\)\\?\\]\\]'$/;"	v
s:default_table_style	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^let s:default_table_style = {$/;"	v
s:defaults	plugged/fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
s:define	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:define(cmd_name,...) abort$/;"	f
s:define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:define_sign_line_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
s:define_sign_linenr_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_linenr_highlights() abort$/;"	f
s:define_sign_text	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
s:defs	plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:deindent_current_line_keywords	plugged/vim-polyglot/indent/mermaid.vim	/^let s:deindent_current_line_keywords = [$/;"	v
s:delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:delete(s)$/;"	f
s:delete	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
s:delete_at_cursors	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^fun! s:delete_at_cursors(M, reg, n) abort$/;"	f
s:delete_augroup	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:delete_augroup(name) abort "{{{$/;"	f
s:delete_html_files	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:delete_html_files(path) abort$/;"	f
s:delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:deletefile	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
s:delimitMate_extra_excluded_regions	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
s:delimiter	plugged/vim-polyglot/syntax/ruby.vim	/^    let s:delimiter = '\\' . s:delimiter$/;"	v
s:delimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let s:delimiters = {'left': '#'}$/;"	v
s:delta	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:delta(...) abort$/;"	f
s:desktop_enable_kde	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:false$/;"	v
s:desktop_enable_kde	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:true$/;"	v
s:desktop_enable_nonstd	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:false$/;"	v
s:desktop_enable_nonstd	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:true$/;"	v
s:detect_func	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:detect_func = 'shebang#Detect'$/;"	v
s:detect_indent	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:detect_indent() abort$/;"	f
s:diary_index	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:diary_index(...) abort$/;"	f
s:diary_path	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:diary_path(...) abort$/;"	f
s:dictfunction	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:dictfunction(dictfunc, dict) abort$/;"	f
s:dictionary_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:dictionary_entry = '\\v^\\s*[^:-]+:\\s*$' " with_items:$/;"	v
s:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:did_indent	plugged/vim-polyglot/after/indent/tsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:did_indent	plugged/vim-polyglot/indent/typescriptreact.vim	/^  let s:did_indent=b:did_indent$/;"	v
s:did_setup_color_schemes	plugged/vim-polyglot/extras/menu.vim	/^let s:did_setup_color_schemes = 0$/;"	v
s:did_setup_compilers	plugged/vim-polyglot/extras/menu.vim	/^let s:did_setup_compilers = 0$/;"	v
s:did_setup_keymaps	plugged/vim-polyglot/extras/menu.vim	/^  let s:did_setup_keymaps = 0$/;"	v
s:diff	autoload/plug.vim	/^function! s:diff()$/;"	f
s:diff	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:diff(rline, aline, rlinenr, alinenr, rprefix, aprefix, regions, whole_line)$/;"	f
s:diff_add_bg0	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_add_bg0 = color#Mix('#506d5b', s:bg, 0.4)$/;"	v
s:diff_add_bg1	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_add_bg1 = color#Mix('#acf2bd', s:bg, 0.6)$/;"	v
s:diff_add_bg2	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_add_bg2 = color#Mix('#acf2bd', s:bg, 0.8)$/;"	v
s:diff_add_fg	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_add_fg  = s:green$/;"	v
s:diff_add_fg0	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_add_fg0 = color#Mix(s:green,   s:fg, 0.4)$/;"	v
s:diff_info_bg0	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_info_bg0 = color#Mix('#D8EEFD', s:bg, 0.6)$/;"	v
s:diff_info_bg1	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_info_bg1 = color#Mix('#D8EEFD', s:bg, 0.8)$/;"	v
s:diff_info_fg	plugged/doom-one.vim/colors/doom-one.vim	/^let s:diff_info_fg  = s:blue$/;"	v
s:diff_restore	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffcomplete	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A, L, P) abort$/;"	f
s:diffidx	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
s:diffidx	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
s:diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:digest	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^function! s:digest(data) abort$/;"	f
s:digest	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:digest(data) abort$/;"	f
s:digest_raw	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^function! s:digest_raw(bytes) abort$/;"	f
s:digest_raw	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:digest_raw(bytes) abort$/;"	f
s:digraph	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:digraph() abort$/;"	f
s:dim_0	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:dim_0     = ['#777777', 7]$/;"	v
s:dim_0	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:dim_0     = ['#72898f', 7]$/;"	v
s:dim_0	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:dim_0     = ['#909995', 7]$/;"	v
s:dim_0	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:dim_0     = ['#878787', 7]$/;"	v
s:dir	plugged/calendar.vim/autoload/calendar/pixel.vim	/^let s:dir = expand('<sfile>:p:h') . '\/pixel\/'$/;"	v
s:dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
s:dir_for_worktree	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasS/;"	v
s:dirname	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:dirname(path) abort$/;"	f
s:dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:disable_colors	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:disable_colors = []$/;"	v
s:disabled_deoplete	plugged/vim-visual-multi/autoload/vm/comp.vim	/^let s:disabled_deoplete = 0$/;"	v
s:disabled_ncm2	plugged/vim-visual-multi/autoload/vm/comp.vim	/^let s:disabled_ncm2     = 0$/;"	v
s:display_by_path	plugged/vim-startify/autoload/startify.vim	/^function! s:display_by_path(path_prefix, path_format, use_env) abort$/;"	f
s:div	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:div(x, y) abort$/;"	f
s:div	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:div(x, y) abort$/;"	f
s:div	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:div(x, y) abort$/;"	f
s:div	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:div(x, y) abort$/;"	f
s:div	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:div(x, y) abort$/;"	f
s:div	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:div(x, y) abort$/;"	f
s:div	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:div(a,b) abort$/;"	f
s:div_mod	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:div_mod(a,b) abort$/;"	f
s:do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:do_handle_pattern_match_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_pattern_match_block(relative_line, context)$/;"	f
s:do_reindent	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:do_reindent() abort$/;"	f
s:doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:doautocmd	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:doautocmd(expr, ...) abort$/;"	f
s:doautocmd_user	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
s:doautocmd_user	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
s:dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:documentationSymbol	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:documentationSymbol(xmlSig, assembly, cont)$/;"	f
s:dodigits	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:dodigits(digits)$/;"	f
s:doesOrderConnect	plugged/vim-polyglot/indent/applescript.vim	/^func! s:doesOrderConnect(text)$/;"	f
s:done	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:done = -1$/;"	v
s:done	plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:doobject	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:doobject(string)$/;"	f
s:dopopd	plugged/fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
s:dos_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dos_shell()$/;"	f
s:dosurround	plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
s:dot_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:double	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^let s:double = { c -> index(split('iafFtTg', '\\zs'), c) >= 0 }$/;"	v
s:double	plugged/vim-visual-multi/autoload/vm/operators.vim	/^let s:double = { c -> index(split('iafFtTg', '\\zs'), c) >= 0              }$/;"	v
s:double	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/symlink.vim	/^function! s:double(x) abort$/;"	f
s:double	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/test.vim	/^function! s:double(x) abort$/;"	f
s:doubleArrow	plugged/vim-polyglot/after/syntax/idris.vim	/^let s:doubleArrow = 1$/;"	v
s:doubleArrow	plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:doubleArrow = 1$/;"	v
s:dprint	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
s:draw_box	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:draw_box(lines) abort$/;"	f
s:drawn_lines	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^let s:drawn_lines = 0$/;"	v
s:drop	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:drop(n, xs) abort$/;"	f
s:drop_while	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
s:drop_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
s:drop_while	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
s:drop_while	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:drop_while(callable, xs) abort$/;"	f
s:dstring	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
s:dstring	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
s:dtd_cpo_save	plugged/vim-polyglot/syntax/dtd.vim	/^let s:dtd_cpo_save = &cpo$/;"	v
s:dump	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:dump(filename, obj) abort$/;"	f
s:dump	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^function! s:dump(records) abort$/;"	f
s:dump	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^function! s:dump(data) abort$/;"	f
s:dump_file	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^function! s:dump_file(records, file, ...) abort$/;"	f
s:dump_file	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^function! s:dump_file(data, file, ...) abort$/;"	f
s:dump_record	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^function! s:dump_record(record) abort$/;"	f
s:echo	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
s:echo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
s:echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:echo(str) abort$/;"	f
s:echo	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:echo(o, ...) abort$/;"	f
s:echo	plugged/vital.vim/autoload/vital/__vital__/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
s:echo_error	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:echo_error(msg, ...) abort$/;"	f
s:echomsg	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
s:echomsg	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
s:echomsg	plugged/vital.vim/autoload/vital/__vital__/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
s:echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:echorizer = {$/;"	v
s:echorizer.eat	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.eat() abort$/;"	f
s:echorizer.echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo() abort$/;"	f
s:echorizer.echo_ansi	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo_ansi(code) abort$/;"	f
s:ecr_close	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_close = '%>'$/;"	v
s:ecr_comment_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_comment_open = '<%%\\@!-\\=#'$/;"	v
s:ecr_control_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_control_open = '<%%\\@!-\\=[=#]\\@!'$/;"	v
s:ecr_dedent_regex	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_dedent_regex =$/;"	v
s:ecr_indent_regex	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_indent_regex =$/;"	v
s:ecr_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_open = '<%%\\@!'$/;"	v
s:ecrystal_extensions	plugged/vim-polyglot/autoload/ecrystal.vim	/^let s:ecrystal_extensions = {$/;"	v
s:ed	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:edit_content	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
s:edit_content	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
s:edit_content	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
s:edit_jobs	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:edit_jobs = {}$/;"	v
s:editorconfig_bomb	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:editorconfig_bomb = {$/;"	v
s:editorconfig_cache	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:editorconfig_cache = {}$/;"	v
s:editorconfig_fileformat	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:editorconfig_fileformat = {$/;"	v
s:eglobal_working	plugged/vim-polyglot/scripts/eregex.vim	/^let s:eglobal_working=0$/;"	v
s:ell_len	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:ell_len = strlen(s:ellipsis)$/;"	v
s:ellipsis	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:ellipsis = (&encoding ==? 'utf-8') ? "\\u2026" : '...'$/;"	v
s:emacs	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emacs	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emacs.keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
s:emacs.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
s:emacs_like	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:emacs_like = s:KeyMapping.make_emacs()$/;"	v
s:emacs_like._condition	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:emacs_like._condition() abort$/;"	f
s:empty	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:empty(o) abort$/;"	f
s:empty	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:empty() abort$/;"	f
s:empty_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:empty_item() abort$/;"	f
s:empty_line	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:empty_line = '\\v^\\s*$'$/;"	v
s:empty_tag	plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tag = '\\v\\C\\<'.s:empty_tagname.'[^\/]*\\>' $/;"	v
s:empty_tag_end	plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tag_end = '\\v^\\s*[^\\<\\>\\\/]*\\>\\s*' $/;"	v
s:empty_tag_start	plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tag_start = '\\v\\<'.s:empty_tagname.'[^\\>]*$' $/;"	v
s:empty_tagname	plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tagname = '(area|base|br|col|embed|hr|input|img|keygen|link|meta|param|source|track|/;"	v
s:emulate_search_error	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:emulate_search_error(direction, ...) abort$/;"	f
s:emulate_search_warning	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:emulate_search_warning(direction, from, to) abort$/;"	f
s:enable	plugged/vim-polyglot/scripts/eregex.vim	/^let s:enable = 0$/;"	v
s:enable_staging_from_hunk_preview_window	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:enable_staging_from_hunk_preview_window()$/;"	f
s:enable_tagged_jsx	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:enable_tagged_jsx = !empty(s:tags)$/;"	v
s:enc_to_cp	plugged/fzf/plugin/fzf.vim	/^  function! s:enc_to_cp(str)$/;"	f
s:encode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:encode(val, ...) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^function! s:encode(data) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^function! s:encode(val, ...) abort$/;"	f
s:encode	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:encode(str, ...) abort$/;"	f
s:encodeEntityReference	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^function! s:encodeEntityReference(str) abort$/;"	f
s:encodeEntityReference	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:encodeEntityReference(str) abort$/;"	f
s:encodeURI	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:encodeURI(items) abort$/;"	f
s:encodeURIComponent	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:encodeURIComponent(items) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebin	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^function! s:encodebin(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^function! s:encodebytes(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^function! s:encodebytes(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^function! s:encodebytes(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^function! s:encodebytes(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^function! s:encodebytes(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^function! s:encodebytes(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^function! s:encodebytes(data) abort$/;"	f
s:encodebytes	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^function! s:encodebytes(data) abort$/;"	f
s:endBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:endBlock = ['end', 'endfor', 'endparfor', 'endfunction', 'endif',$/;"	v
s:end_conditional_directive_rx	plugged/vim-polyglot/indent/make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_conditional_directive_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_end_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_middle_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_skip_expr = function('s:EndSkipExpr')$/;"	v
s:end_start_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:end_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:end_tag = '\\%(<\\_s*\/\\_s*\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\_s*>\\|\/\\_s*>\\)'$/;"	v
s:endian_convert	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:endian_convert(bytes) abort$/;"	f
s:ends_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
s:ends_with	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
s:ends_with_backslash	plugged/vim-polyglot/indent/tcl.vim	/^function s:ends_with_backslash(lnum)$/;"	f
s:endtag	plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
s:endtags	plugged/vim-polyglot/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:english_message	plugged/calendar.vim/autoload/calendar/message/default.vim	/^let s:english_message = deepcopy(calendar#message#en#get())$/;"	v
s:entries	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:entries(path) abort$/;"	f
s:enumeration_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:enumeration_pattern = '^\\s*\\%(\\d\\+\\|#\\)\\.\\s\\+'$/;"	v
s:environment	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:environment	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:environment	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:environment.restore	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
s:environment.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
s:environment.restore	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
s:eol	plugged/vim-polyglot/indent/mp.vim	/^let s:eol = '\\s*\\%($\\|%\\)'$/;"	v
s:eol	plugged/vim-polyglot/syntax/julia.vim	/^let s:eol = '\\s*\\%(\\%(\\%(#=\\%(=#\\@!\\|[^=]\\|\\n\\)\\{-}=#\\)\\s*\\)\\+\\)\\?\\%(#=\\@!.*\\/;"	v
s:eol	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! s:eol(r)$/;"	f
s:equal_set	plugged/vital.vim/test/Data/Set.vim	/^function! s:equal_set(set, expect, ...) abort$/;"	f
s:eregex_replacement	plugged/vim-polyglot/scripts/eregex.vim	/^    let s:eregex_replacement=eregex_replacement$/;"	v
s:eregex_replacement	plugged/vim-polyglot/scripts/eregex.vim	/^let s:eregex_replacement=0$/;"	v
s:erlang_fun_begin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_begin = '^\\a\\w*(.*$'$/;"	v
s:erlang_fun_end	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_end   = '^[^%]*\\.\\s*\\(%.*\\)\\?$'$/;"	v
s:err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:errmsg_oldvim	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^    const s:errmsg_oldvim = "Vim >= 8.2.2725 required for auto-formatting"$/;"	C
s:error	plugged/fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
s:error	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
s:error	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
s:error	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:error	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
s:error	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
s:error	plugged/vim-polyglot/autoload/dart.vim	/^function! s:error(text) abort$/;"	f
s:error	plugged/vital.vim/autoload/vital/__vital__/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
s:error_handler	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^let s:error_handler = v:null$/;"	v
s:error_message	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:error_message(msg) abort$/;"	f
s:errored	plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:escape(str) abort$/;"	f
s:escape	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape	plugged/fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
s:escape	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:escape(chars)$/;"	f
s:escape	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:escape(str) abort$/;"	f
s:escape_file_searching	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
s:escape_file_searching	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
s:escape_html_attribute	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:escape_html_attribute(string) abort$/;"	f
s:escape_in_rec	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:escape_in_rec = '\\]^-\/?'$/;"	v
s:escape_pattern	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_regex	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:escape_regex(pattern)$/;"	f
s:escape_regexp_char	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:escape_regexp_char(char) "{{{$/;"	f
s:escape_special_key	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
s:escape_special_key	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
s:escape_unbalanced_left_r	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:escape_unbalanced_left_r(pattern) abort$/;"	f
s:escaped_backslash	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:escaped_backslash = '\\m\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*'$/;"	v
s:escaped_backslash	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:escaped_backslash     = '\\m\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*'$/;"	v
s:escaped_backslash	plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:escaped_backslash = '\\m\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\zs'$/;"	v
s:escapesConditionals	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:escapesConditionals(baseName, sequence, padding, conditional)$/;"	f
s:escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:eval	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:eval_expr	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:eval_expr(expr, ...) abort$/;"	f
s:evaluate_expand	plugged/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
s:evaluate_opts	plugged/fzf/plugin/fzf.vim	/^function! s:evaluate_opts(options)$/;"	f
s:event_cache	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:event_cache = s:cache.new('event')$/;"	v
s:event_cache	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:event_cache = s:cache.new('event')$/;"	v
s:event_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:event_download = {}$/;"	v
s:event_start_time	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:event_start_time() abort$/;"	f
s:event_start_time_minwidth	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:event_start_time_minwidth() abort$/;"	f
s:events_sorter	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:events_sorter(x, y) abort$/;"	f
s:excmds	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:exec_code	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:exec_code(code, ...) abort$/;"	f
s:exec_file	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:exec_file(path, ...) abort$/;"	f
s:exec_paths	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:executable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executables	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:execute	plugged/fzf/plugin/fzf.vim	/^function! s:execute(dict, command, use_height, temps) abort$/;"	f
s:execute	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:execute(expr, execute)$/;"	f
s:execute	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:execute(nr, expr)$/;"	f
s:execute	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^function! s:execute(args, ...) abort$/;"	f
s:execute	plugged/vital.vim/autoload/vital/__vital__/System/Process/Mock.vim	/^function! s:execute(args, options) abort$/;"	f
s:execute	plugged/vital.vim/autoload/vital/__vital__/System/Process/System.vim	/^function! s:execute(args, options) abort$/;"	f
s:execute	plugged/vital.vim/autoload/vital/__vital__/System/Process/Vimproc.vim	/^function! s:execute(args, options) abort$/;"	f
s:execute_abbr_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:execute_abbr_command(mode, dict, lhs, rhs) abort$/;"	f
s:execute_map_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:execute_map_command(mode, dict, lhs, rhs) abort$/;"	f
s:execute_term	plugged/fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
s:execute_tmux	plugged/fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
s:execute_unmap_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:execute_unmap_command(mode, dict, lhs) abort$/;"	f
s:existing_mkd_refs	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:existing_mkd_refs() abort$/;"	f
s:exists	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:exists(nr)$/;"	f
s:exists	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:exists(o) abort$/;"	f
s:exists	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:exists(handle) abort$/;"	f
s:exists	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	plugged/vital.vim/test/_testdata/vital/datatest/autoload/vital/__latest__/DataTest.vim	/^function! s:exists() abort$/;"	f
s:exists_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
s:exit_handler	plugged/fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
s:exp	plugged/vim-polyglot/syntax/nim.vim	/^  let s:exp = '%([eE][+-]?'.s:dec_num.')'$/;"	v
s:expand	plugged/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
s:expand	plugged/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
s:expand	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:expand	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:expand(path) abort$/;"	f
s:expand_home	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:expand_home(path) abort$/;"	f
s:expand_homedir	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:expand_homedir(path) abort$/;"	f
s:expand_modules	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:expand_modules(V, entry, all) abort$/;"	f
s:export	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:export(cookie) abort$/;"	f
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|BlockingIOError|ChildProcessError|ConnectionError|BrokenPipeError|Conn/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|StandardError'$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:exs_re = 'BaseException|Exception|ArithmeticError|LookupError|EnvironmentError|Asserti/;"	v
s:extend	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
s:extend	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
s:extend	plugged/vim-polyglot/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:extend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:extended_complements	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_complements=0$/;"	v
s:extended_dots	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_dots=0$/;"	v
s:extended_spaces	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_spaces=0$/;"	v
s:extfname	plugged/vim-polyglot/after/syntax/tex.vim	/^let s:extfname=expand("%:e")$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris.vim	/^            let s:extraConceal = 0$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris.vim	/^let s:extraConceal = 1$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris2.vim	/^            let s:extraConceal = 0$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:extraConceal = 1$/;"	v
s:extract_identifier	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:extract_identifier(word) abort$/;"	f
s:extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:extract_time_sec	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:extract_time_sec(summary) abort$/;"	f
s:extract_time_sec	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:extract_time_sec(summary) abort$/;"	f
s:extractafter	plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
s:extractbefore	plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
s:f	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:f = {}$/;"	v
s:f1Help	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:f1Help(filePath, line, character, cont)$/;"	f
s:facade	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:facade = {}$/;"	v
s:facade	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:facade.adjust_size = function('s:_facade_adjust_size')$/;"	v
s:facade	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:facade.apply = function('s:_facade_apply')$/;"	v
s:fail	plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:falcon_deindent_keywords	plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_deindent_keywords = '^\\s*\\(case\\|catch\\|default\\|elif\\|else\\|end\\)'$/;"	v
s:falcon_indent_keywords	plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_indent_keywords = '^\\s*\\(case\\|catch\\|class\\|enum\\|default\\|elif\\|else' .$/;"	v
s:fb	plugged/vim-polyglot/syntax/ledger.vim	/^let s:fb = get(g:, 'ledger_fold_blanks', 0)$/;"	v
s:fennel_check_for_string_worker	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_check_for_string_worker()$/;"	f
s:fennel_indent_pos	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_indent_pos()$/;"	f
s:fg	plugged/doom-one.vim/colors/doom-one.vim	/^let s:fg           = '#bbc2cf'$/;"	v
s:fg	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#494b53', 238 ]$/;"	v
s:fg	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#abb2bf', 145 ]$/;"	v
s:fg_alt	plugged/doom-one.vim/colors/doom-one.vim	/^let s:fg_alt       = '#5B6268'$/;"	v
s:fg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:fg_color = calendar#color#normal_fg_color()$/;"	v
s:fg_conceal	plugged/doom-one.vim/colors/doom-one.vim	/^let s:fg_conceal   = s:base4$/;"	v
s:fg_highlight	plugged/doom-one.vim/colors/doom-one.vim	/^let s:fg_highlight = color#Lighten(s:fg, 0.2)$/;"	v
s:fg_linenr	plugged/doom-one.vim/colors/doom-one.vim	/^let s:fg_linenr    = color#Mix(s:base4, s:base5, 0.3)$/;"	v
s:fg_subtle	plugged/doom-one.vim/colors/doom-one.vim	/^let s:fg_subtle    = s:base7$/;"	v
s:fg_widget	plugged/doom-one.vim/colors/doom-one.vim	/^let s:fg_widget    = s:fg$/;"	v
s:fib	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:fib(n) abort$/;"	f
s:file2module_name	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:file2module_name(file) abort$/;"	f
s:file_commit_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_exists	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:file_exists(fname) abort$/;"	f
s:file_name	plugged/vim-polyglot/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:file_options	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:file_readlines	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:file_readlines(fname) abort$/;"	f
s:file_source	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:filename	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
s:filename	plugged/vim-polyglot/after/ftplugin/requirements.vim	/^    let s:filename = expand("%:p")$/;"	v
s:filename_case_checks	plugged/vim-polyglot/tests/native.vim	/^let s:filename_case_checks = {$/;"	v
s:filename_checks	plugged/vim-polyglot/tests/native.vim	/^let s:filename_checks = {$/;"	v
s:filereadable	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
s:fileset	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:fileset = []$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let s:filetype_dict[key] = val$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {}$/;"	v
s:fill_quickfix	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
s:filter	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:filter(xs, f) abort$/;"	f
s:filter	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:filter(xs, f) abort$/;"	f
s:filter_module_funcs	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:filter_module_funcs(raw_module) abort$/;"	f
s:filter_oldfiles	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles(path_prefix, path_format, use_env) abort$/;"	f
s:filter_oldfiles_unsafe	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles_unsafe(path_prefix, path_format, use_env) abort$/;"	f
s:filter_regions	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! s:filter_regions(fill) abort$/;"	f
s:find	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:find	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:find(expr)$/;"	f
s:find	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:find	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:find	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:find	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:find(xs, default, callable) abort$/;"	f
s:find	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:find(handle) abort$/;"	f
s:findMotion	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
s:find_autoload_file	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:find_autoload_file(name) abort$/;"	f
s:find_block	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:find_block(current_mode)$/;"	f
s:find_by	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:find_by(expr)$/;"	f
s:find_completion_start	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_completion_start() abort$/;"	f
s:find_current_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
s:find_dotgit	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! s:find_dotgit(from) abort$/;"	f
s:find_following_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_following_block(linum) abort$/;"	f
s:find_index	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_index	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_index	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:find_index(xs, callable, ...) abort$/;"	f
s:find_indices	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_indices	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_indices	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_indices	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_indices	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:find_indices(xs, callable, ...) abort$/;"	f
s:find_last_index	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_last_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_last_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_last_index	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_last_index	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:find_last_index(xs, callable, ...) abort$/;"	f
s:find_last_pos	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:find_last_pos(lnum, text, match)$/;"	f
s:find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_open_window	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:find_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
s:find_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
s:find_pred_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_pred_block(linum) abort$/;"	f
s:find_root_by	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by(search_dir, d) abort$/;"	f
s:find_root_by_spec_and_src	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by_spec_and_src(d) abort$/;"	f
s:find_start_of_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
s:find_start_of_block	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
s:find_start_of_multiline_statement	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
s:find_start_of_multiline_statement	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
s:findall	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:findall(text, rx) abort$/;"	f
s:finddef	plugged/vital.vim/autoload/vital/__vital__/Vim/Search.vim	/^function! s:finddef(str) abort$/;"	f
s:finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:finish_reconciling	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:finish_reconciling() abort$/;"	f
s:first	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:first(xs, default) abort$/;"	f
s:first	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:first(xs) abort$/;"	f
s:first_char	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:first_char(string) abort$/;"	f
s:first_day	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:first_day() abort$/;"	f
s:first_line	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:first_line	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:first_line       = { -> line('.') == 1 }$/;"	v
s:first_sign_id	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:first_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fix_beginfigs	plugged/vim-polyglot/ftplugin/mp.vim	/^  function! s:fix_beginfigs()$/;"	f
s:fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
s:fix_pos	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:fix_pos(r) abort$/;"	f
s:fix_regions_text	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! s:fix_regions_text(replacement) abort$/;"	f
s:fixed_column	plugged/vim-startify/autoload/startify.vim	/^let s:fixed_column = g:startify_padding_left + 2$/;"	v
s:fixindent	plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
s:flag	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:flat_map	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:flat_map(either, f) abort$/;"	f
s:flat_map	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:flat_map(f, x) abort$/;"	f
s:flatten	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:flatten	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:flatten(list)$/;"	f
s:flatten	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:flatten(list)$/;"	f
s:flatten	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:flatten	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:flatten	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:flatten	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:flatten(x, ...) abort$/;"	f
s:float_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex = '\\%(' . s:float_regex3$/;"	v
s:float_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex1 = '\\.\\d\\%(_\\?\\d\\)*\\%([eEf][-+]\\?\\d\\+\\)\\?\\%(\\>\\|im\\>\\|\\ze\\D/;"	v
s:float_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex2 = '\\d\\%(_\\?\\d\\)*\\.\\%(\\d\\%(_\\?\\d\\)*\\)\\?\\%([eEf][-+]\\?\\d\\+\\)/;"	v
s:float_regex3	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex3 = '\\d\\%(_\\?\\d\\)*[eEf][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:float_suf = '%(''%(%(f|F)%(32|64|128)?|d|D))'$/;"	v
s:floating_window_available	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:floating_window_available = has('nvim') && exists('*nvim_win_set_config')$/;"	v
s:flow_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/FlowLayout.vim	/^let s:flow_layout = {}$/;"	v
s:flow_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/FlowLayout.vim	/^let s:flow_layout.adjust_size = function('s:_flow_layout_adjust_size')$/;"	v
s:flow_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/FlowLayout.vim	/^let s:flow_layout.apply = function('s:_flow_layout_apply')$/;"	v
s:fmt_cell	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_cell(cell, max_len, align) abort$/;"	f
s:fmt_cell_sep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_cell_sep(max_len, align) abort$/;"	f
s:fmt_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fmt_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_row(cells, max_lens, aligns, col1, col2) abort$/;"	f
s:fmt_sep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_sep(max_lens, aligns, col1, col2) abort$/;"	f
s:fname_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:fnameescape	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnmatch_replacements	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:fnmatch_replacements = {$/;"	v
s:focus_was_lost	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let s:focus_was_lost = 0$/;"	v
s:fold_arg	plugged/vim-polyglot/syntax/crystal.vim	/^let s:fold_arg      = s:foldable('string') ? ' fold' : ''$/;"	v
s:fold_arg	plugged/vim-polyglot/syntax/ruby.vim	/^let s:fold_arg	    = s:foldable('string')		? ' fold'   : ''$/;"	v
s:foldable	plugged/vim-polyglot/syntax/crystal.vim	/^function! s:foldable(...) abort$/;"	f
s:foldable	plugged/vim-polyglot/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
s:foldable_groups	plugged/vim-polyglot/syntax/crystal.vim	/^let s:foldable_groups = split($/;"	v
s:foldable_groups	plugged/vim-polyglot/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:folded	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:folded()$/;"	f
s:folded_assignment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+:?]\\=='$/;"	v
s:folded_assignment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:foldl	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
s:foldl	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
s:foldl	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
s:foldl	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:foldl(callable, x, xs) abort$/;"	f
s:foldl1	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldl1	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldl1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldl1	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldl1	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:foldl1(callable, xs) abort$/;"	f
s:foldr	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
s:foldr	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
s:foldr	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
s:foldr	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:foldr(callable, x, xs) abort$/;"	f
s:foldr1	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:foldr1	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:foldr1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:foldr1	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:foldr1	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:foldr1(callable, xs) abort$/;"	f
s:foreground	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:format_cmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_for_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
s:format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_info	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:format_info = {$/;"	v
s:format_mark	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:format_time	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:format_time(time) abort$/;"	f
s:format_time_end	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:format_time_end(time) abort$/;"	f
s:format_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:forward	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^let s:forward = { c -> index(split('weWE%', '\\zs'), c) >= 0 }$/;"	v
s:frame	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame() abort$/;"	f
s:frame_default	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_default() abort$/;"	f
s:frame_space	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_space() abort$/;"	f
s:frame_unicode	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode() abort$/;"	f
s:frame_unicode_bold	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode_bold() abort$/;"	f
s:frame_unicode_double	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode_double() abort$/;"	f
s:frame_unicode_round	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode_round() abort$/;"	f
s:from_blob	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:from_blob(blob) abort$/;"	f
s:from_command	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:from_command(command, ...) abort$/;"	f
s:from_date	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:from_date(...) abort$/;"	f
s:from_dict	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:from_dict(dict) abort$/;"	f
s:from_expr	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:from_expr(expr, ...) abort$/;"	f
s:from_format	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:from_format(string, format, ...) abort$/;"	f
s:from_funcname	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:from_funcname(funcname, ...) abort$/;"	f
s:from_funcref	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:from_funcref(function, ...) abort$/;"	f
s:from_hexstring	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:from_hexstring(hexstr) abort$/;"	f
s:from_int	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:from_int(value, bits) abort$/;"	f
s:from_julian_day	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:from_julian_day(jd, ...) abort$/;"	f
s:from_left	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:from_left(default, either) abort$/;"	f
s:from_list	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:from_list(list) abort$/;"	f
s:from_list	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:from_list(list) abort$/;"	f
s:from_list	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:from_list(list) abort$/;"	f
s:from_list	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:from_list(list) abort$/;"	f
s:from_method	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:from_method(obj, method) abort$/;"	f
s:from_num	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:from_num(n) abort$/;"	f
s:from_operator	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:from_operator(op) abort$/;"	f
s:from_right	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:from_right(default, either) abort$/;"	f
s:from_slash	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:from_slash(path) abort$/;"	f
s:from_string	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:from_string(str) abort$/;"	f
s:from_string	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:from_string(str) abort$/;"	f
s:from_unix_time	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:from_unix_time(unix_time, ...) abort$/;"	f
s:frozenset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:frozenset(...) abort$/;"	f
s:frozenset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:frozenset = deepcopy(s:_base_set)$/;"	v
s:frozenset	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:frozenset(...) abort$/;"	f
s:frozenset	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:frozenset = deepcopy(s:_base_set)$/;"	v
s:fsdn	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:fsdn(signature, cont)$/;"	f
s:fsi_buffer	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_buffer = -1$/;"	v
s:fsi_height	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_height = 0$/;"	v
s:fsi_job	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_job    = -1$/;"	v
s:fsi_width	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_width  = 0$/;"	v
s:ft	plugged/vim-polyglot/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:ft	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = s:type$/;"	v
s:ft	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = substitute(s:type, '.*=', '', '')$/;"	v
s:ft_pascal_comments	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_pascal_comments = '^\\s*\\%({\\|(\\*\\|\/\/\\)'$/;"	v
s:ft_pascal_keywords	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_pascal_keywords = '^\\s*\\%(program\\|unit\\|library\\|uses\\|begin\\|procedure\\|funct/;"	v
s:ft_rules_udev_rules_pattern	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin_sql_objects	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:ftplugin_sql_objects =$/;"	v
s:fuchsia	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:fuchsia = [ '#ff00ff', 13 ]$/;"	v
s:func	plugged/lightline.vim/autoload/lightline.vim	/^function! s:func(name) abort$/;"	f
s:funcNameMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:func_type	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^let s:func_type = type(function('type'))$/;"	v
s:funcmanage	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:funcmanage() abort$/;"	f
s:funcmanage	plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:funcmanage = {}$/;"	v
s:funcs	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:funcs =  keys(filter(copy(s:global), "type(v:val) == type(function('tr'))"))$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^            let s:funcs_re .= '|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '\\=@!'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|apply|basestring|buffer|cmp|coerce|execfile|file|intern|long|raw_inp/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|ascii|breakpoint|exec|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = '__import__|abs|all|any|bin|callable|chr|classmethod|compile|complex|delatt/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = 'syn match pythonBuiltinFunc ''\\v\\.@<!\\zs<%(' . s:funcs_re . ')>'$/;"	v
s:function	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:function	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:function_range_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:function_range_at(linum) abort$/;"	f
s:functions	plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:functions = [$/;"	v
s:fuzzy	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:fuzzy(pattern) abort$/;"	f
s:fuzzyspell	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:fuzzyspell(pattern) abort$/;"	f
s:fuzzyword	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:fuzzyword(pattern) abort$/;"	f
s:fzf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_call	plugged/fzf/plugin/fzf.vim	/^  function! s:fzf_call(fn, ...)$/;"	f
s:fzf_expand	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_expand(fmt)$/;"	f
s:fzf_fnamemodify	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_fnamemodify(fname, mods)$/;"	f
s:fzf_getcwd	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_getcwd()$/;"	f
s:fzf_go	plugged/fzf/plugin/fzf.vim	/^let s:fzf_go = s:base_dir.'\/bin\/fzf'$/;"	v
s:fzf_restore_colors	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_tempname	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tempname()$/;"	f
s:fzf_tmux	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
s:fzf_tmux	plugged/fzf/plugin/fzf.vim	/^let s:fzf_tmux = s:base_dir.'\/bin\/fzf-tmux'$/;"	v
s:fzf_vim_term	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:gap_between_regions	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^let s:gap_between_regions = 5$/;"	v
s:gather_poses	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_poses(pattern) abort$/;"	f
s:gather_visible_matched_poses	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_visible_matched_poses(pattern, direction, allow_cursor_pos_match) abort$/;"	f
s:gcd	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:gcd(list) abort$/;"	f
s:genFunctions	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:genFunctions(functions)$/;"	f
s:generate	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:generate(f) abort$/;"	f
s:generate_echo_cmd	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:generate_echo_cmd(message) abort$/;"	f
s:generate_error_cmd	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:generate_error_cmd(is_visual) abort$/;"	f
s:generate_restore_cmd	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:generate_restore_cmd() abort$/;"	f
s:generate_set_search_cmd	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:generate_set_search_cmd(pattern, mode, config) abort$/;"	f
s:generate_suffix_groups	plugged/vim-polyglot/syntax/hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
s:generator	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:generator(dict) abort$/;"	f
s:get	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
s:get	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
s:get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
s:get	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
s:get	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get(name, default) abort  "{{{$/;"	f
s:get	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:get(id) abort "{{{$/;"	f
s:get	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:get(name, default) abort  "{{{$/;"	f
s:get	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:get(o) abort$/;"	f
s:get	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:get(url, ...) abort$/;"	f
s:getAuthor	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
s:getField	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
s:getHLStack	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getHLStack(line, col)$/;"	f
s:getIncIndent	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:getIncIndent() abort$/;"	f
s:getNesting	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getNesting(hlstack)$/;"	f
s:getPromptMessage	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
s:get_256color	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_256color(colors) abort$/;"	f
s:get_a_neighbor_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_a_neighbor_item(item) abort$/;"	f
s:get_a_neighbor_item_in_column	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_a_neighbor_item_in_column(lnum, column) abort$/;"	f
s:get_abbr_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:get_abbr_command(...) abort$/;"	f
s:get_agenda_events	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:get_agenda_events() abort$/;"	f
s:get_aligned_rows	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_aligned_rows(lnum, col1, col2, depth) abort$/;"	f
s:get_all_headers	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_all_headers(fl, maxlevel) abort$/;"	f
s:get_all_modes	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:get_all_modes() abort$/;"	f
s:get_all_modes_list	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:get_all_modes_list() abort$/;"	f
s:get_all_modules	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:get_all_modules(module_names, to) abort$/;"	f
s:get_another_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:get_another_header(headers, current_index, direction, operation) abort$/;"	f
s:get_any_item_of_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_any_item_of_level(cur_ln, cur_lvl, org_lvl) abort$/;"	f
s:get_background_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
s:get_base_indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:get_base_indent(lnum, text)$/;"	f
s:get_blockwidth	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_blockwidth(start, end, type) abort "{{{$/;"	f
s:get_cell_aligns	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_cell_aligns(lnum, ...) abort$/;"	f
s:get_cell_aligns_fast	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_cell_aligns_fast(rows) abort$/;"	f
s:get_cell_max_lens	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_cell_max_lens(lnum, ...) abort$/;"	f
s:get_changes	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:get_changes() abort$/;"	f
s:get_cmdline	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
s:get_cmdline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
s:get_cmdline_cword	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
s:get_cmdline_cword	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
s:get_col_in_visual	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:get_col_in_visual(pos) abort$/;"	f
s:get_color	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color	plugged/fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_complete_buffer	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_complete_buffer()$/;"	f
s:get_corresponding_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_corresponding_item(lnum) abort$/;"	f
s:get_dependence	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:get_dependence(module_name, module) abort$/;"	f
s:get_echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:get_echorizer(str) abort$/;"	f
s:get_error_handler	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^function! s:get_error_handler() abort$/;"	f
s:get_escaped_group_char	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:get_escaped_group_char(dict, char) "{{{$/;"	f
s:get_first_child	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_first_child(item) abort$/;"	f
s:get_first_header	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_first_header(fl) abort$/;"	f
s:get_first_item_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_first_item_in_list(item, ignore_kind) abort$/;"	f
s:get_foreground_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_colors(group) abort$/;"	f
s:get_foreground_fallback_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_fallback_colors(type)$/;"	f
s:get_fsi_command	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_fsi_command()$/;"	f
s:get_func_identifiers	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_func_identifiers(line) abort$/;"	f
s:get_git_root	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
s:get_global_pos	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:get_global_pos() abort$/;"	f
s:get_hi_str	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_hi_str(color, place) abort$/;"	f
s:get_hit_enter_max_length	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
s:get_hit_enter_max_length	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
s:get_hit_enter_max_length	plugged/vital.vim/autoload/vital/__vital__/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
s:get_hl	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_hl(group, what, mode) abort$/;"	f
s:get_html_template	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:get_html_template(template) abort$/;"	f
s:get_identifiers	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_identifiers(line) abort$/;"	f
s:get_idx_list_markers	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_idx_list_markers(item) abort$/;"	f
s:get_indent	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! s:get_indent() abort$/;"	f
s:get_indent	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_indent(lnum, depth) abort$/;"	f
s:get_indentexpr	plugged/vim-polyglot/indent/vue.vim	/^function! s:get_indentexpr(language)$/;"	f
s:get_index_as_string	plugged/vim-startify/autoload/startify.vim	/^function! s:get_index_as_string() abort$/;"	f
s:get_input	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:get_input(cli) abort$/;"	f
s:get_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_item(lnum) abort$/;"	f
s:get_item_of_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_item_of_level(cur_ln, cur_lvl, org_lvl, org_regex) abort$/;"	f
s:get_lang	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^function! s:get_lang() abort$/;"	f
s:get_last_item_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_last_item_in_list(item, ignore_kind) abort$/;"	f
s:get_last_line_of_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_last_line_of_item(item) abort$/;"	f
s:get_last_line_of_item_incl_children	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_last_line_of_item_incl_children(item) abort$/;"	f
s:get_last_selected	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
s:get_last_selected	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
s:get_last_selected	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
s:get_last_status	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:get_last_status() abort$/;"	f
s:get_last_status	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^function! s:get_last_status() abort$/;"	f
s:get_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_level(lnum) abort$/;"	f
s:get_line_trimmed	plugged/vim-polyglot/indent/reason.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
s:get_line_trimmed	plugged/vim-polyglot/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
s:get_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:get_links(wikifile, idx) abort$/;"	f
s:get_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:get_lists() abort$/;"	f
s:get_major_version	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:get_major_version() abort$/;"	f
s:get_map_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:get_map_command(...) abort$/;"	f
s:get_max_col	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:get_max_col(expr) abort$/;"	f
s:get_max_workers	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^function! s:get_max_workers() abort$/;"	f
s:get_min_header_level	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_min_header_level(headers) abort$/;"	f
s:get_module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:get_module(...)$/;"	f
s:get_module	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:get_module(module_name) abort$/;"	f
s:get_month_name	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_month_name(month) abort$/;"	f
s:get_multi_col	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:get_multi_col(pos) abort$/;"	f
s:get_next	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:get_next() abort$/;"	f
s:get_next_child_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_child_item(parent, child) abort$/;"	f
s:get_next_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_line(lnum, ...) abort$/;"	f
s:get_next_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_list_item(item, ignore_kind) abort$/;"	f
s:get_next_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_mrkr(item) abort$/;"	f
s:get_or	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:get_or(o, alt) abort$/;"	f
s:get_order_blockwise	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_order_blockwise(start, end, blockwidth) abort "{{{$/;"	f
s:get_order_charwise	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_order_charwise(start, end) abort  "{{{$/;"	f
s:get_order_linewise	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_order_linewise(start, end) abort  "{{{$/;"	f
s:get_paragraph_start	plugged/vim-polyglot/indent/rst.vim	/^function! s:get_paragraph_start()$/;"	f
s:get_parent	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_parent(item) abort$/;"	f
s:get_pid	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:get_pid() abort "{{{$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/cancel.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/count.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/highlight.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/insert_register.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/jumplist.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/magic_option.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/module.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/nomagic.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/register.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/repetition.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/scroll.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:get_pos_char(...) abort$/;"	f
s:get_pos_in_cword	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:get_pos_in_cword(cword, ...) abort$/;"	f
s:get_pos_with_default	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:get_pos_with_default(command, default_command, pattern)$/;"	f
s:get_position_links	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_position_links(link) abort$/;"	f
s:get_prev	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:get_prev() abort$/;"	f
s:get_prev_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_prev_line(lnum) abort$/;"	f
s:get_prev_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_prev_list_item(item, ignore_kind) abort$/;"	f
s:get_prev_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_prev_mrkr(item) abort$/;"	f
s:get_random_offset	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:get_random_offset(max) abort$/;"	f
s:get_rate	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_rate(item) abort$/;"	f
s:get_region	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region(regtype, regcontents) abort "{{{$/;"	f
s:get_region	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:get_region(curpos, count, input) abort  "{{{$/;"	f
s:get_region	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:get_region(next) abort$/;"	f
s:get_region	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! s:get_region(add_pattern) abort$/;"	f
s:get_region_block	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region_block(regcontents) abort "{{{$/;"	f
s:get_region_char	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region_char(regcontents) abort "{{{$/;"	f
s:get_region_line	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region_line(regcontents) abort "{{{$/;"	f
s:get_rows	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_rows(lnum, ...) abort$/;"	f
s:get_save_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:get_save_pos(...)$/;"	f
s:get_selected_text	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
s:get_selected_text	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:get_selected_text(...) abort$/;"	f
s:get_selected_text	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
s:get_selected_text	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
s:get_shiftwidth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:get_shiftwidth(indents) abort$/;"	f
s:get_smartsign_table	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:get_smartsign_table(...) abort$/;"	f
s:get_tag	plugged/vim-polyglot/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
s:get_timeevts	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:get_timeevts(events, blockmin) abort$/;"	f
s:get_transaction_extents	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:get_transaction_extents(lnum) abort$/;"	f
s:get_unabbr_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:get_unabbr_command(...) abort$/;"	f
s:get_unmap_command	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:get_unmap_command(...) abort$/;"	f
s:get_unsafe	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:get_unsafe(o) abort$/;"	f
s:get_url	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:get_url() abort$/;"	f
s:get_version	plugged/fzf/plugin/fzf.vim	/^function s:get_version(bin)$/;"	f
s:get_version	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:get_version() abort$/;"	f
s:get_visual_selection	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_visual_selection()$/;"	f
s:get_wiki_buffers	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:get_wiki_buffers() abort$/;"	f
s:get_wikifile_url	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:get_wikifile_url(wikifile) abort$/;"	f
s:getbufvar	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:getbufvar(...) abort$/;"	f
s:getbufvar	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:getbufvar(expr, varname, ...) abort$/;"	f
s:getchar	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Input.vim	/^function! s:getchar(...)$/;"	f
s:getchar	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^function! s:getchar(...)$/;"	f
s:getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar	plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
s:getchar	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar_safe	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:getchar_safe	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:getchar_safe	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:getcoord	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:getcoord(expr) abort$/;"	f
s:getdata	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:getdata(id) abort$/;"	f
s:getdata	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! s:getdata(id) abort$/;"	f
s:getfilename	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
s:getline	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:getline()$/;"	f
s:getmapchars	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:getmapchars(function)$/;"	f
s:getpos	plugged/fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
s:getvar	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:getvar(nr, varname, ...)$/;"	f
s:getwinvar	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:getwinvar(uniq_winnr, varname, ...)$/;"	f
s:getwinvar	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:getwinvar(...) abort$/;"	f
s:getwinvar	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:getwinvar(expr, varname, ...) abort$/;"	f
s:gh_danger_bg0	plugged/doom-one.vim/colors/doom-one.vim	/^let s:gh_danger_bg0 = color#Mix('#FBB0B9', s:bg, 0.6)$/;"	v
s:gh_danger_bg1	plugged/doom-one.vim/colors/doom-one.vim	/^let s:gh_danger_bg1 = color#Mix('#FBB0B9', s:bg, 0.8)$/;"	v
s:gh_danger_bg2	plugged/doom-one.vim/colors/doom-one.vim	/^let s:gh_danger_bg2 = color#Mix('#FBB0B9', s:bg, 0.9)$/;"	v
s:gh_danger_fg	plugged/doom-one.vim/colors/doom-one.vim	/^let s:gh_danger_fg  = s:red$/;"	v
s:gh_danger_fg0	plugged/doom-one.vim/colors/doom-one.vim	/^let s:gh_danger_fg0 = color#Mix(s:red,     s:fg, 0.6)$/;"	v
s:git	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    let s:git.finalize_vim = funcref('s:git__finalize_vim')$/;"	v
s:git	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^let s:git = {}$/;"	v
s:git	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^let s:git.spawn = funcref('s:git__spawn')$/;"	v
s:git	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:git(cmd) abort$/;"	f
s:git__finalize_vim	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:git__finalize_vim(ch) dict abort$/;"	f
s:git__spawn	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! s:git__spawn(args, on_exit) dict abort$/;"	f
s:git_checkout	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:git_checkout(hash) abort$/;"	f
s:git_cmd_failure	plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:git_cmd_failure(git) abort$/;"	f
s:git_diff	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff(...)$/;"	f
s:git_diff_staged	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged(...)$/;"	f
s:git_dir	autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
s:git_dir	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:git_dir() abort$/;"	f
s:git_hash	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:git_hash(rev) abort$/;"	f
s:git_local_branch	autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
s:git_origin_branch	autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
s:git_origin_url	autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
s:git_revision	autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
s:git_supports_command_line_config_override	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
s:git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
s:git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:git_versions	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:gitdiffcached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang, ...) abort$/;"	f
s:given_range	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:given_range(line1, line2)$/;"	f
s:glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
s:glob	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
s:glob	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:glob(expr) abort$/;"	f
s:glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:global	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:global = deepcopy(s:base)$/;"	v
s:global_variable_list	plugged/vim-polyglot/autoload/rust/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:globpath	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
s:globpath	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
s:globpath	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
s:globs	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:globs = {$/;"	v
s:globsubs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:glow	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:glow(highlight, hi_group, duration) abort "{{{$/;"	f
s:glsl_extensions	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:go	plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
s:gold	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gold = [ '#f0d50c', '220' ]$/;"	v
s:google_calendar	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:google_calendar() abort$/;"	f
s:google_client	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:google_client() abort$/;"	f
s:google_task	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:google_task() abort$/;"	f
s:got_fmt_error	plugged/vim-polyglot/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:got_out_of_cmdwindow	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:got_out_of_cmdwindow() abort "{{{$/;"	f
s:goto_col	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:goto_col(pos, min_spaces) abort$/;"	f
s:goto_definition	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:goto_definition() abort$/;"	f
s:goto_original_window	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:goto_original_window()$/;"	f
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:gray = [ '#808080', 8]$/;"	v
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray = [ '#262626', '235' ]$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#494b53', 238 ]$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#5c6370', 241 ]$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#2c323d', 235 ]$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#f0f0f0', 255 ]$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray2 = [ '#3a3a3a', '237' ]$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#3e4452', 240 ]$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#d0d0d0', 250 ]$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray3 = [ '#4e4e4e', '239' ]$/;"	v
s:gray4	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray4 = [ '#626262', '241' ]$/;"	v
s:green	plugged/doom-one.vim/colors/doom-one.vim	/^let s:green      = '#98be65'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:green        = [ '#5f875f',  65 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:green = '#b8cc52'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:green = '#86B300'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:green = '#bbe67e'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green = [ '#98c379', 35 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:green     = ['#70b433', 2]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:green     = ['#75b938', 2]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:green     = ['#489100', 2]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:green     = ['#1d9700', 2]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:green = [ '#57ba37', '71' ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:green_alt	plugged/doom-one.vim/colors/doom-one.vim	/^let s:green_alt  = '#799033'$/;"	v
s:grep_combine_flags	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:grep_combine_flags = '[aiIrhHEGPFnlLzocpWq]\\{-\\}'$/;"	v
s:grep_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
s:grey	plugged/doom-one.vim/colors/doom-one.vim	/^let s:grey       = s:base4$/;"	v
s:grid_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^let s:grid_layout = {}$/;"	v
s:grid_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^let s:grid_layout.adjust_size = function('s:_grid_layout_adjust_size')$/;"	v
s:grid_layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^let s:grid_layout.apply = function('s:_grid_layout_apply')$/;"	v
s:group	plugged/vim-polyglot/syntax/ruby.vim	/^  let s:group = 'ruby' . s:names[s:delimiter] . 'Escape'$/;"	v
s:group_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_by	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_by	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:group_by(xs, callable) abort$/;"	f
s:group_links	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:group_links(links) abort$/;"	f
s:group_list	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
s:group_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
s:grouping_algorithms	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:gsub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:guard	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:guard	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:guard	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:guard.restore	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
s:guard.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
s:guard.restore	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
s:guess	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:guess(lines) abort$/;"	f
s:guess_kind_of_numbered_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:guess_kind_of_numbered_item(item) abort$/;"	f
s:guicolor	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^    let s:h.ids[s:group] = []$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h = {}$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h.ids = {}$/;"	v
s:handleEmpty	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
s:handle_double_hunk	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:handle_double_hunk(modified_lines)$/;"	f
s:handle_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:handle_with(start_lnum, start_col, context)$/;"	f
s:handlers	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:handlers = {$/;"	v
s:has	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:has(o, type) abort$/;"	f
s:has_abs_path	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:has_abs_path(fname) abort$/;"	f
s:has_any	plugged/fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
s:has_common_items	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_common_items	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_common_items	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_common_items	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_fresh_changes	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
s:has_highlighting	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_index	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_index	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_init_indent	plugged/vim-polyglot/indent/svelte.vim	/^let s:has_init_indent = svelte#GetConfig('has_init_indent', 1)$/;"	v
s:has_keeppattern	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:has_keeppattern = v:version > 704 || v:version == 704 && has('patch083')$/;"	v
s:has_lua	plugged/vital.vim/test/Deprecated/Text/Sexp.vim	/^let s:has_lua = has('lua') && exists('*luaeval')$/;"	v
s:has_maven	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:has_patch	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:has_patch(major, minor, patch) abort$/;"	f
s:has_service_field	plugged/vim-polyglot/syntax/pamconf.vim	/^let s:has_service_field = exists("b:pamconf_has_service_field")$/;"	v
s:has_version	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:has_version(version) abort$/;"	f
s:has_vimproc	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
s:has_vimproc	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:has_vimproc() abort$/;"	f
s:has_vimproc	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^function! s:has_vimproc() abort$/;"	f
s:has_webapi	plugged/vim-polyglot/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
s:hash	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:hash(str) abort$/;"	f
s:hash	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:hash(str) abort$/;"	f
s:hash	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:hash(cache_dir, str) abort$/;"	f
s:hash_colors	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:hcl_align_save	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let s:hcl_align_save = get(g:, 'hcl_align', 0)$/;"	v
s:hcl_fold_sections_save	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let s:hcl_fold_sections_save = get(g:, 'hcl_fold_sections', 0)$/;"	v
s:head_cache	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:head_cache = {}$/;"	v
s:headersRegexp	plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:headersRegexp = '\\v^(#|.+\\n(\\=+|-+)$)'$/;"	v
s:helptag_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:hex_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^  let s:hex_decode_map[s:hex_encode_table[i]] = i$/;"	v
s:hex_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^let s:hex_decode_map = {}$/;"	v
s:hex_encode_table	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^let s:hex_encode_table = [$/;"	v
s:hex_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:hex_regex = '0x\\x\\%(_\\?\\x\\)*\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:hexfloat_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex1 = '0x\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?[pP][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\/;"	v
s:hexfloat_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex2 = '0x\\x\\%(_\\?\\x\\)*\\%\\(\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?\\)\\?[pP][-/;"	v
s:hi	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:hi = vital#incsearch#import('Coaster.Highlight').make()$/;"	v
s:hi	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:hi = g:incsearch#highlight#_hi$/;"	v
s:hi	plugged/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
s:hi	plugged/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
s:hi	plugged/vim-polyglot/syntax/go.vim	/^function! s:hi()$/;"	f
s:hide_endofbuffer_markers	plugged/vim-startify/autoload/startify.vim	/^function! s:hide_endofbuffer_markers()$/;"	f
s:highlight	plugged/doom-one.vim/colors/doom-one.vim	/^let s:highlight       = s:blue$/;"	v
s:highlight	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:highlight(operator, regtype, regcontents, marks) abort "{{{$/;"	f
s:highlight	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:highlight = {$/;"	v
s:highlight	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:highlight = {$/;"	v
s:highlight._quench_by_CmdWinLeave	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight._quench_by_CmdWinLeave() abort "{{{$/;"	f
s:highlight._quench_now	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight._quench_now() abort "{{{$/;"	f
s:highlight.add	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.add(...) dict abort "{{{$/;"	f
s:highlight.delete	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.delete() dict abort "{{{$/;"	f
s:highlight.empty	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.empty() abort "{{{$/;"	f
s:highlight.is_in_highlight_window	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.is_in_highlight_window() abort "{{{$/;"	f
s:highlight.persist	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.persist() dict abort  "{{{$/;"	f
s:highlight.quench	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.quench() dict abort "{{{$/;"	f
s:highlight.quench_timer	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.quench_timer(time) dict abort "{{{$/;"	f
s:highlight.show	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.show(...) dict abort "{{{$/;"	f
s:highlight.switch	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.switch() abort "{{{$/;"	f
s:highlight_close_tag	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:highlight_close_tag = get(g:, 'vim_jsx_pretty_highlight_close_tag', 0)$/;"	v
s:highlight_color	plugged/doom-one.vim/colors/doom-one.vim	/^let s:highlight_color = s:base0$/;"	v
s:highlight_existing_links	plugged/vimwiki/syntax/vimwiki.vim	/^function! s:highlight_existing_links() abort$/;"	f
s:highlight_existing_links	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:highlight_existing_links() abort$/;"	f
s:highlight_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:highlight_name_for_change	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
s:highlight_order_blockwise	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight_order_blockwise(region) abort "{{{$/;"	f
s:highlight_order_charwise	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight_order_charwise(region) abort  "{{{$/;"	f
s:highlight_order_linewise	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight_order_linewise(region) abort  "{{{$/;"	f
s:highlight_svelte_attr	plugged/vim-polyglot/syntax/svelte-html.vim	/^let s:highlight_svelte_attr = svelte#GetConfig('highlight_svelte_attr', 0)$/;"	v
s:highlight_yanked_region	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:highlight_yanked_region(region) abort "{{{$/;"	f
s:history	plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history = { '_index': 0, '_history': [] }$/;"	v
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history._load = funcref('s:history__load')$/;"	v
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.back = funcref('s:history__back')$/;"	v
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.forward = funcref('s:history__forward')$/;"	v
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.history_no = funcref('s:history__history_no')$/;"	v
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.push = funcref('s:history__push')$/;"	v
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.save = funcref('s:history__save')$/;"	v
s:history	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.set_diff = funcref('s:history__set_diff')$/;"	v
s:history__back	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__back() dict abort$/;"	f
s:history__forward	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__forward() dict abort$/;"	f
s:history__history_no	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__history_no() dict abort$/;"	f
s:history__load	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__load(index) dict abort$/;"	f
s:history__push	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__push() dict abort$/;"	f
s:history__save	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__save() dict abort$/;"	f
s:history__set_diff	plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__set_diff(diff) dict abort$/;"	f
s:history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:hog_keyword_match	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:hog_keyword_match = '\\c^\\s*\\<\\(preprocessor\\\\|config\\\\|output\\\\|include\\\\|ipva/;"	v
s:hooks	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:hooks_camel	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:horizontal	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:horizontal       = {   -> index(['h', 'l'],               s:v.motion) >= 0 }$/;"	v
s:hover	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:hover()$/;"	f
s:hsl	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:hsl(h, s, l) abort$/;"	f
s:html_indent	plugged/vim-polyglot/indent/vue.vim	/^let s:html_indent = s:get_indentexpr('html')$/;"	v
s:html_insert_contents	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:html_insert_contents(html_lines, content) abort$/;"	f
s:html_tags	plugged/vimwiki/syntax/vimwiki.vim	/^  let s:html_tags = join(split(vimwiki#vars#get_global('valid_html_tags'), '\\s*,\\s*'), '\\|')$/;"	v
s:htmlindent	plugged/vim-polyglot/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:hunk_op	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op, ...)$/;"	f
s:hunk_re	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:i	plugged/calendar.vim/autoload/calendar/argument.vim	/^    let s:i = index(s:novalue_options, '-' . s:k)$/;"	v
s:i	plugged/calendar.vim/autoload/calendar/argument.vim	/^    let s:i = index(s:novalue_options, s:k)$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	plugged/vim-polyglot/syntax/help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:i	plugged/vim-polyglot/syntax/plantuml.vim	/^  let s:i = s:i + 1$/;"	v
s:i	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:i = 1$/;"	v
s:i	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/symlink.vim	/^let s:i = 1$/;"	v
s:i	plugged/vital.vim/test/_testdata/Vim/ScriptLocal/test.vim	/^let s:i = 1$/;"	v
s:ia	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^let s:ia = { c -> index(['i', 'a'], c[:0]) >= 0 }$/;"	v
s:iconv	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:iconv	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:iconv	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:iconv	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:id	plugged/calendar.vim/autoload/calendar/util.vim	/^let s:id = 0$/;"	v
s:id	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^let s:id = -1$/;"	v
s:id_charsH	plugged/vim-polyglot/syntax/julia.vim	/^let s:id_charsH = '\\%([A-Za-z_\\UA2-\\UA6\\UA9\\UAA\\UAE\\UB0\\UB5\\UBA]\\|[^\\U00-\\UBF]\\)'$/;"	v
s:id_charsW	plugged/vim-polyglot/syntax/julia.vim	/^let s:id_charsW = '\\%([0-9A-Za-z_!\\UA2-\\UA6\\UA9\\UAA\\UAE-\\UB0\\UB2-\\UB5\\UB8-\\UBA\\UBC-\\/;"	v
s:id_data	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:id_data = {}$/;"	v
s:id_data	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:id_data = {}$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idregex	plugged/vim-polyglot/autoload/julia.vim	/^let s:idregex = '[^' . s:nonidS_chars . '0-9!' . s:uniop_chars . s:binop_chars . '][^' . s:nonid/;"	v
s:idregex	plugged/vim-polyglot/syntax/julia.vim	/^let s:idregex = '\\%(' . s:id_charsH . s:id_charsW . '*\\)'$/;"	v
s:if	plugged/vim-polyglot/ftplugin/fish.vim	/^    let s:if = '%(else\\s\\+)\\@15<!if'$/;"	v
s:if	plugged/vim-polyglot/ftplugin/fish.vim	/^    let s:if = '%(else\\s\\+)\\@<!if'$/;"	v
s:ignorecase	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ignorecase=0$/;"	v
s:ignored_region	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f
s:ignored_region	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:ignored_region()$/;"	f
s:import	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:import(data) abort$/;"	f
s:import	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:imports	plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:in_comm	plugged/vim-polyglot/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:in_cpp_family	plugged/vim-polyglot/syntax/c.vim	/^let s:in_cpp_family = exists("b:filetype_in_cpp_family")$/;"	v
s:in_embedded_view	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:in_embedded_view()$/;"	f
s:in_hunk_preview_window	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:in_hunk_preview_window()$/;"	f
s:inc	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:inc = {$/;"	v
s:inc.on_char	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_char(cmdline) abort$/;"	f
s:inc.on_char_pre	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_char_pre(cmdline) abort$/;"	f
s:inc.on_enter	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_enter(cmdline) abort$/;"	f
s:inc.on_leave	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_leave(cmdline) abort$/;"	f
s:inc.priority	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.priority(event) abort$/;"	f
s:inc_highlight	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
s:incl_match_arg	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:incl_match_arg(nn_index) abort$/;"	f
s:include	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:include = &l:include$/;"	v
s:include	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:include = &l:include$/;"	v
s:incompleteFont	plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:incompleteFont	plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:increase	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:increase(...)$/;"	f
s:increase_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increase_level(item) abort$/;"	f
s:increment_1	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_1(value) abort$/;"	f
s:increment_A	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_A(value) abort$/;"	f
s:increment_I	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_I(value) abort$/;"	f
s:increment_a	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_a(value) abort$/;"	f
s:increment_i	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_i(value) abort$/;"	f
s:incsearch_exit	plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^let s:incsearch_exit = {$/;"	v
s:incsearch_exit.on_char_pre	plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^function! s:incsearch_exit.on_char_pre(cmdline) abort$/;"	f
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indentGuard	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentGuard(pos, prevline)$/;"	f
s:indentMatching	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentMatching(char)$/;"	f
s:indent_access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_like_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_block(lnum)$/;"	f
s:indent_like_block	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
s:indent_like_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
s:indent_like_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
s:indent_like_previous_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
s:indent_like_previous_line	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
s:indent_line_by	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:indent_line_by(lnum, indent_by) abort$/;"	f
s:indent_multiline	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:indent_multiline(prev_item, lnum) abort$/;"	f
s:indent_next_line_keywords	plugged/vim-polyglot/indent/mermaid.vim	/^let s:indent_next_line_keywords = [$/;"	v
s:indent_tags	plugged/vim-polyglot/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_to_innermost_parentheses	plugged/vim-polyglot/indent/dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
s:index	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
s:index	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
s:indexes	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:inherit	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:inherit(sub, super, ...) abort "{{{$/;"	f
s:init	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:init(whole, type, extend_mode) abort$/;"	f
s:init	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^fun! s:init() abort$/;"	f
s:init	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! s:init() abort$/;"	f
s:init	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:init() abort$/;"	f
s:init_env	plugged/vim-startify/autoload/startify.vim	/^function! s:init_env()$/;"	f
s:init_hl	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! s:init_hl() abort$/;"	f
s:initial_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:initial_download = {}$/;"	v
s:inject_snippet	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:input	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
s:input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
s:input_helper	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_helper	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_helper	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_long	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^let s:input_long  = 2 " input data too long$/;"	v
s:input_safe	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:input_safe	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:input_safe	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:inputreplacement	plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
s:inputtarget	plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
s:insert	plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
s:inside	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^let s:inside = { c -> c[:0] == 'i' && index(split('bBt[](){}"''`<>', '\\zs') + vm#comp#iobj(), c/;"	v
s:insidePlantUMLTags	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:insidePlantUMLTags(lnum) abort$/;"	f
s:install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:install_module_files	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:install_module_files(module_files, plugin_name, to) abort$/;"	f
s:instance	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance._colnum = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.colnum = 1$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.diffs = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.len = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.letters = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.offsetx_start = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.prevscale = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.smaller = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.str = ''$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.syntax = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.winheight = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.winwidth = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.__key = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._current_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._current_group_id = ''$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._key = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._next_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._nocontents = 1$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._prev_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._prevprev_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._select_title = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._texts = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.length = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.noindex = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.select = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.syntax = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:instance._action	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance._action(action) dict abort$/;"	f
s:instance.action	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.action(action) dict abort$/;"	f
s:instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.action(action) dict abort$/;"	f
s:instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.action(action) dict abort$/;"	f
s:instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.action(action) dict abort$/;"	f
s:instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.action(action) dict abort$/;"	f
s:instance.add	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.add(diff) dict abort$/;"	f
s:instance.add	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.add(diff) dict abort$/;"	f
s:instance.add	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.add(diff) dict abort$/;"	f
s:instance.add_month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.add_month(diff) dict abort$/;"	f
s:instance.add_year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.add_year(diff) dict abort$/;"	f
s:instance.cache_key	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.cache_key() dict abort$/;"	f
s:instance.changed	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.changed() dict abort$/;"	f
s:instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.contents() dict abort$/;"	f
s:instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.contents() dict abort$/;"	f
s:instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.contents() dict abort$/;"	f
s:instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.contents() dict abort$/;"	f
s:instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.contents() dict abort$/;"	f
s:instance.current_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.current_contents() dict abort$/;"	f
s:instance.current_group_id	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.current_group_id() dict abort$/;"	f
s:instance.day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.day() dict abort$/;"	f
s:instance.day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.day() dict abort$/;"	f
s:instance.days	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.days() dict abort$/;"	f
s:instance.days	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.days() dict abort$/;"	f
s:instance.display_point	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.display_point() dict abort$/;"	f
s:instance.display_point	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.display_point() dict abort$/;"	f
s:instance.eq	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq(day) dict abort$/;"	f
s:instance.eq	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.eq(month) dict abort$/;"	f
s:instance.eq	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.eq(year) dict abort$/;"	f
s:instance.eq_month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq_month(day) dict abort$/;"	f
s:instance.eq_month	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.eq_month(month) dict abort$/;"	f
s:instance.eq_week	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq_week(day) dict abort$/;"	f
s:instance.eq_year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq_year(day) dict abort$/;"	f
s:instance.eq_year	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.eq_year(month) dict abort$/;"	f
s:instance.gather	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.gather(...) dict abort$/;"	f
s:instance.gen_syn	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.gen_syn(chr, offsetx, offsety, syn) dict abort$/;"	f
s:instance.get_calendar	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.get_calendar() dict abort$/;"	f
s:instance.get_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.get_contents() dict abort$/;"	f
s:instance.get_day	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.get_day() dict abort$/;"	f
s:instance.get_day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_day() dict abort$/;"	f
s:instance.get_day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_day() dict abort$/;"	f
s:instance.get_days	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_days() dict abort$/;"	f
s:instance.get_index	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.get_index() dict abort$/;"	f
s:instance.get_key	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.get_key() dict abort$/;"	f
s:instance.get_left	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.get_left() dict abort$/;"	f
s:instance.get_min_day	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.get_min_day() dict abort$/;"	f
s:instance.get_min_max_hour	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.get_min_max_hour() dict abort$/;"	f
s:instance.get_month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.get_month() dict abort$/;"	f
s:instance.get_month	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_month() dict abort$/;"	f
s:instance.get_month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_month() dict abort$/;"	f
s:instance.get_months	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.get_months() dict abort$/;"	f
s:instance.get_months	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_months() dict abort$/;"	f
s:instance.get_scale	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.get_scale(...) dict abort$/;"	f
s:instance.get_top	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.get_top() dict abort$/;"	f
s:instance.get_y	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_y() dict abort$/;"	f
s:instance.get_year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.get_year() dict abort$/;"	f
s:instance.get_year	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_year() dict abort$/;"	f
s:instance.get_year	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_year() dict abort$/;"	f
s:instance.get_ym	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_ym() dict abort$/;"	f
s:instance.get_ym_string	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_ym_string() dict abort$/;"	f
s:instance.get_ymd	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.get_ymd() dict abort$/;"	f
s:instance.head_day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.head_day() dict abort$/;"	f
s:instance.head_day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.head_day() dict abort$/;"	f
s:instance.head_month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.head_month() dict abort$/;"	f
s:instance.height	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.height() dict abort$/;"	f
s:instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.height() dict abort$/;"	f
s:instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.height() dict abort$/;"	f
s:instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.height() dict abort$/;"	f
s:instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.height() dict abort$/;"	f
s:instance.is_absolute	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_absolute() dict abort$/;"	f
s:instance.is_bottom	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_bottom() dict abort$/;"	f
s:instance.is_center	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_center() dict abort$/;"	f
s:instance.is_friday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_friday() dict abort$/;"	f
s:instance.is_full	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.is_full() dict abort$/;"	f
s:instance.is_gregorian	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.is_gregorian() dict abort$/;"	f
s:instance.is_monday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_monday() dict abort$/;"	f
s:instance.is_right	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_right() dict abort$/;"	f
s:instance.is_saturday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_saturday() dict abort$/;"	f
s:instance.is_selected	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_selected() dict abort$/;"	f
s:instance.is_sunday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_sunday() dict abort$/;"	f
s:instance.is_thursday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_thursday() dict abort$/;"	f
s:instance.is_tuesday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_tuesday() dict abort$/;"	f
s:instance.is_valid	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_valid() dict abort$/;"	f
s:instance.is_valid	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.is_valid() dict abort$/;"	f
s:instance.is_valid	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.is_valid() dict abort$/;"	f
s:instance.is_vcenter	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_vcenter() dict abort$/;"	f
s:instance.is_visible	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_visible() dict abort$/;"	f
s:instance.is_wednesday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_wednesday() dict abort$/;"	f
s:instance.last_day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.last_day() dict abort$/;"	f
s:instance.last_day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.last_day() dict abort$/;"	f
s:instance.last_month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.last_month() dict abort$/;"	f
s:instance.left	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.left() dict abort$/;"	f
s:instance.maxheight	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.maxheight() dict abort$/;"	f
s:instance.maxwidth	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.maxwidth() dict abort$/;"	f
s:instance.min_max_hour	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.min_max_hour() dict abort$/;"	f
s:instance.min_max_index	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.min_max_index(length) dict abort$/;"	f
s:instance.month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.month() dict abort$/;"	f
s:instance.month	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.month() dict abort$/;"	f
s:instance.month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.month() dict abort$/;"	f
s:instance.move_select	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.move_select(diff) dict abort$/;"	f
s:instance.new	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.new(y, m, d) dict abort$/;"	f
s:instance.new	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.new(y, m) dict abort$/;"	f
s:instance.new	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.new(y) dict abort$/;"	f
s:instance.new_mjd	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.new_mjd(mjd) dict abort$/;"	f
s:instance.next_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.next_contents() dict abort$/;"	f
s:instance.on_resize	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.on_resize() dict abort$/;"	f
s:instance.on_resize	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.on_resize() dict abort$/;"	f
s:instance.on_resize	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.on_resize() dict abort$/;"	f
s:instance.on_top	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.on_top() dict abort$/;"	f
s:instance.oneday	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.oneday(day, events) dict abort$/;"	f
s:instance.prev_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.prev_contents() dict abort$/;"	f
s:instance.prevprev_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.prevprev_contents() dict abort$/;"	f
s:instance.restore	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
s:instance.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
s:instance.restore	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
s:instance.select_index	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.select_index() dict abort$/;"	f
s:instance.set_contents	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.set_contents() dict abort$/;"	f
s:instance.set_contents	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.set_contents() dict abort$/;"	f
s:instance.set_contents	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.set_contents() dict abort$/;"	f
s:instance.set_day_name	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.set_day_name() dict abort$/;"	f
s:instance.set_day_name	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.set_day_name() dict abort$/;"	f
s:instance.set_index	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_index(index) dict abort$/;"	f
s:instance.set_min_max_hour	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.set_min_max_hour(hours) dict abort$/;"	f
s:instance.set_selected	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_selected(selected) dict abort$/;"	f
s:instance.set_size	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_size() dict abort$/;"	f
s:instance.set_visible	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_visible(value) dict abort$/;"	f
s:instance.sizex	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.sizex() dict abort$/;"	f
s:instance.sizey	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.sizey() dict abort$/;"	f
s:instance.sub	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.sub(day) dict abort$/;"	f
s:instance.sub	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.sub(month) dict abort$/;"	f
s:instance.sub	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.sub(year) dict abort$/;"	f
s:instance.timerange	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.timerange() dict abort$/;"	f
s:instance.timerange	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.timerange() dict abort$/;"	f
s:instance.today	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.today() dict abort$/;"	f
s:instance.top	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.top() dict abort$/;"	f
s:instance.updated	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.updated() dict abort$/;"	f
s:instance.updated	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.updated() dict abort$/;"	f
s:instance.week	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.week() dict abort$/;"	f
s:instance.width	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.width() dict abort$/;"	f
s:instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.width() dict abort$/;"	f
s:instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.width() dict abort$/;"	f
s:instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.width() dict abort$/;"	f
s:instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.width() dict abort$/;"	f
s:instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.width() dict abort$/;"	f
s:instance.yank	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.yank() dict abort$/;"	f
s:instance.year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.year() dict abort$/;"	f
s:int_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:int_regex = '\\%(' . s:hex_regex$/;"	v
s:int_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:int_suf = '%(''%(%(i|I|u|U)%(8|16|32|64)|u|U))'$/;"	v
s:interp_dollar	plugged/vim-polyglot/syntax/julia.vim	/^let s:interp_dollar = '\\([' . s:nonidS_chars . s:op_chars_wc . '!]\\|^\\)\\@'.s:d(1).'<=\\$'$/;"	v
s:interpolate	plugged/doom-one.vim/autoload/color.vim	/^function! s:interpolate (start, end, amount)$/;"	f
s:interpolate	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^function! s:interpolate(string, ...) abort$/;"	f
s:interpreters	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:interpreters = {$/;"	v
s:intersect	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:intersect	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:intersect	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:intersect	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:invert	plugged/vim-polyglot/scripts/eregex.vim	/^let s:invert=0$/;"	v
s:isInBlock	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isInBlock(hlstack)$/;"	f
s:isSYN	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isSYN(grp, line, col)$/;"	f
s:is_absolute	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:is_absolute(path) abort$/;"	f
s:is_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
s:is_ahead	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
s:is_ahead	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
s:is_ahead	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
s:is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:is_available() abort$/;"	f
s:is_available	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:is_available() abort$/;"	f
s:is_available	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:is_available() abort$/;"	f
s:is_available	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:is_available() abort$/;"	f
s:is_available	plugged/vital.vim/autoload/vital/__vital__/System/Process/Mock.vim	/^function! s:is_available() abort$/;"	f
s:is_available	plugged/vital.vim/autoload/vital/__vital__/System/Process/System.vim	/^function! s:is_available() abort$/;"	f
s:is_available	plugged/vital.vim/autoload/vital/__vital__/System/Process/Vimproc.vim	/^function! s:is_available() abort$/;"	f
s:is_binding_supported	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:is_binding_supported() abort$/;"	f
s:is_busy	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:is_busy(label) abort$/;"	f
s:is_callable	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:is_callable(expr) abort$/;"	f
s:is_camel_case	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:is_camel_case(str) abort$/;"	f
s:is_case_tolerant	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:is_case_tolerant() abort$/;"	f
s:is_case_tolerant	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_closed	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:is_closed(item) abort$/;"	f
s:is_closing_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_closing_tag(syntax)$/;"	f
s:is_closure	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:is_closure(expr) abort$/;"	f
s:is_cmdwin	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
s:is_cmdwin	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
s:is_cmdwin	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
s:is_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_comment(syntax)$/;"	f
s:is_comparable	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^function! s:is_comparable(value1, value2) abort$/;"	f
s:is_concealed	plugged/vim-polyglot/indent/cython.vim	/^    function! s:is_concealed(line, col)$/;"	f
s:is_concealed	plugged/vim-polyglot/indent/python.vim	/^    function! s:is_concealed(line, col)$/;"	f
s:is_cterm	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_cterm = !s:is_gui$/;"	v
s:is_cygwin	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dark	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_dark = -1$/;"	v
s:is_dark	plugged/calendar.vim/syntax/calendar.vim	/^let s:is_dark = calendar#color#is_dark()$/;"	v
s:is_dark_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:is_dark_color(rgb) abort$/;"	f
s:is_dedented_already	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_dedented_already(current, base)$/;"	f
s:is_dedented_already	plugged/vim-polyglot/indent/python.vim	/^function! s:is_dedented_already(current, base)$/;"	f
s:is_dict	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_dict	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_dict	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_done	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:is_done(label, rname) abort$/;"	f
s:is_either	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:is_either(x) abort$/;"	f
s:is_empty	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:is_empty(xs) abort$/;"	f
s:is_enabled	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:is_enabled() abort$/;"	f
s:is_exclusive	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:is_exclusive() abort$/;"	f
s:is_extended	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:is_extended() abort "{{{$/;"	f
s:is_file_buffer	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
s:is_first_column	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_first_column(lnum, cnum) abort$/;"	f
s:is_float	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_float	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_float	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_floating	plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:is_floating(winId) abort$/;"	f
s:is_funcref	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_funcref	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_funcref	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_gui	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_gui = has('gui_running') || (has('termguicolors') && &termguicolors)$/;"	v
s:is_gui	plugged/calendar.vim/syntax/calendar.vim	/^let s:is_gui = has('gui_running') || (has('termguicolors') && &termguicolors)$/;"	v
s:is_head_of_cword	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:is_head_of_cword(cword) abort$/;"	f
s:is_highlighted	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^function! s:is_highlighted(lnum) abort$/;"	f
s:is_html_uptodate	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:is_html_uptodate(wikifile) abort$/;"	f
s:is_ignore_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^let s:is_ignore_symbol = {c -> c == '-'}$/;"	v
s:is_ignore_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^let s:is_ignore_symbol = {c -> 0}$/;"	v
s:is_ignore_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^let s:is_ignore_symbol = {c -> 0}$/;"	v
s:is_ignore_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^let s:is_ignore_symbol = {c -> 0}$/;"	v
s:is_ignore_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^let s:is_ignore_symbol = {c -> 0}$/;"	v
s:is_img_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:is_img_link(lnk) abort$/;"	f
s:is_in_cmdline_window	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:is_in_cmdline_window() abort "{{{$/;"	f
s:is_in_cmdline_window	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:is_in_cmdline_window() abort$/;"	f
s:is_in_fold	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:is_in_fold(lnum) abort$/;"	f
s:is_in_skiplist	plugged/vim-startify/autoload/startify.vim	/^function! s:is_in_skiplist(arg) abort$/;"	f
s:is_infinity	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^  function! s:is_infinity(Value) abort$/;"	f
s:is_input_waiting	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
s:is_input_waiting	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
s:is_jsx_backticks	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_backticks(syntax)$/;"	f
s:is_jsx_brace	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_brace(syntax)$/;"	f
s:is_jsx_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_comment(syntax)$/;"	f
s:is_jsx_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_element(syntax)$/;"	f
s:is_jsx_expression	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_expression(syntax)$/;"	f
s:is_jsx_region	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_region(syntax)$/;"	f
s:is_last_column	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_last_column(lnum, cnum) abort$/;"	f
s:is_leap_year	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:is_leap_year(year) abort$/;"	f
s:is_left	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:is_left(either) abort$/;"	f
s:is_light_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:is_light_color(rgb) abort$/;"	f
s:is_list	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_list	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_list	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_mac	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_method_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f
s:is_mode_char	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:is_mode_char(char) abort$/;"	f
s:is_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
s:is_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
s:is_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
s:is_module_name	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:is_module_name(str) abort$/;"	f
s:is_number	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_number	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_number	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_numeric	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_numeric	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:is_numeric(value) abort$/;"	f
s:is_numeric	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_numeric	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_numeric	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^function! s:is_numeric(value) abort$/;"	f
s:is_opening_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_opening_tag(syntax)$/;"	f
s:is_optional	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:is_optional(v) abort$/;"	f
s:is_padding	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^let s:is_padding = 0$/;"	v
s:is_padding	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^let s:is_padding = 1$/;"	v
s:is_padding	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^let s:is_padding = 1$/;"	v
s:is_padding	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^let s:is_padding = 1$/;"	v
s:is_padding	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^let s:is_padding = 0$/;"	v
s:is_padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^let s:is_padding_symbol = {c -> 0}$/;"	v
s:is_padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^let s:is_padding_symbol = {c -> c == s:padding_symbol}$/;"	v
s:is_padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^let s:is_padding_symbol = {c -> c == s:padding_symbol}$/;"	v
s:is_padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^let s:is_padding_symbol = {c -> c == s:padding_symbol}$/;"	v
s:is_padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^let s:is_padding_symbol = {c -> 0}$/;"	v
s:is_paren	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_paren()$/;"	f
s:is_paren	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:is_paren()$/;"	f
s:is_parent_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_parent_element(pos, element_count)$/;"	f
s:is_pos_less_equal	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:is_pos_less_equal(x, y) abort$/;"	f
s:is_pos_less_equal	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:is_pos_less_equal(x, y) " x <= y$/;"	f
s:is_pos_more_equal	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:is_pos_more_equal(x, y) abort$/;"	f
s:is_powershell	autoload/plug.vim	/^function! s:is_powershell(shell)$/;"	f
s:is_predicate	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:is_predicate(value) abort$/;"	f
s:is_predicate	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^function! s:is_predicate(value) abort$/;"	f
s:is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_promise	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:is_promise(maybe_promise) abort$/;"	f
s:is_python2_enabled	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:is_python2_enabled() abort$/;"	f
s:is_python3_enabled	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:is_python3_enabled() abort$/;"	f
s:is_python_string	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
s:is_python_string	plugged/vim-polyglot/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
s:is_r	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:is_r             = { -> g:Vm.buffer && !empty(s:G.region_at_pos()) }$/;"	v
s:is_reader_conditional_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f
s:is_relative	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:is_relative(path) abort$/;"	f
s:is_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
s:is_right	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:is_right(either) abort$/;"	f
s:is_root_directory	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:is_root_directory(path) abort$/;"	f
s:is_section_delim	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:is_section_delim(line, func_delim) abort$/;"	f
s:is_separator	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_separator(line) abort$/;"	f
s:is_separator_tail	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_separator_tail(line) abort$/;"	f
s:is_special	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:is_special(value) abort$/;"	f
s:is_special	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^function! s:is_special(value) abort$/;"	f
s:is_string	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_string	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_string	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_string_comment	plugged/vim-polyglot/indent/reason.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
s:is_string_comment	plugged/vim-polyglot/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
s:is_string_or_comment	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:is_string_or_comment(line, col)$/;"	f
s:is_supported	plugged/vital.vim/autoload/vital/__vital__/System/Process/Mock.vim	/^function! s:is_supported(options) abort$/;"	f
s:is_supported	plugged/vital.vim/autoload/vital/__vital__/System/Process/System.vim	/^function! s:is_supported(options) abort$/;"	f
s:is_supported	plugged/vital.vim/autoload/vital/__vital__/System/Process/Vimproc.vim	/^function! s:is_supported(options) abort$/;"	f
s:is_table	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_table(line) abort$/;"	f
s:is_unix	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_uri	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:is_uri(str) abort$/;"	f
s:is_visual	plugged/incsearch-easymotion.vim/autoload/incsearch/over/modules/EasyMotion.vim	/^function! s:is_visual(mode) abort$/;"	f
s:is_visual	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:is_visual(mode) abort$/;"	f
s:is_visual	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:is_visual(mode) abort$/;"	f
s:is_vital_vim	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	plugged/vital.vim/autoload/vital/vital.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_web_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:is_web_link(lnk) abort$/;"	f
s:is_wiki_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:is_wiki_link(link_infos) abort$/;"	f
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^let s:is_win = has('win32') || system('uname') =~# '\\%(MSYS\\|MINGW\\)'$/;"	v
s:is_win32cui	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_win32cui = has('win32') && !s:is_gui$/;"	v
s:is_win32cui	plugged/calendar.vim/syntax/calendar.vim	/^let s:is_win32cui = has('win32') && !s:is_gui$/;"	v
s:is_windows	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^let s:is_windows = has('win32') " This means any versions of windows https:\/\/github.com\/vim-j/;"	v
s:is_windows	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^let s:is_windows = has('win32') " This means any versions of windows https:\/\/github.com\/vim-j/;"	v
s:is_windows	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^let s:is_windows = has('win32') " This means any versions of windows https:\/\/github.com\/vim-j/;"	v
s:is_windows	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^let s:is_windows = has('win32')$/;"	v
s:is_wsl_bash	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_wsl_bash = s:is_win && (exepath('bash') =~? 'Windows[\/\\\\]system32[\/\\\\]bash.exe$')$/;"	v
s:isabsolute	autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
s:iskeyword_save	plugged/vim-polyglot/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:item_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:itemization_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:itemization_pattern = '^\\s*[-*+]\\s'$/;"	v
s:iterate	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:iterate(init, f) abort$/;"	f
s:iterate	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:iterate(init, f) abort$/;"	f
s:job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_id	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:job_id = -1$/;"	v
s:job_id	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_id(job)$/;"	f
s:job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:jobs	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:jobs = {}$/;"	v
s:join	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:join(nested_either) abort$/;"	f
s:join	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:join(...) abort$/;"	f
s:join_posix_lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
s:join_posix_lines	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
s:jq_path	plugged/vim-polyglot/autoload/unison.vim	/^function! s:jq_path() abort$/;"	f
s:js_keywords	plugged/vim-polyglot/indent/solidity.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:js_keywords	plugged/vim-polyglot/indent/typescript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:jsx_cpo	plugged/vim-polyglot/after/syntax/jsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:jsx_cpo	plugged/vim-polyglot/after/syntax/tsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:jsx_indent_backticks	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_backticks(lnum)$/;"	f
s:jsx_indent_closing_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_closing_tag(lnum)$/;"	f
s:jsx_indent_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_comment(lnum)$/;"	f
s:jsx_indent_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_element(lnum)$/;"	f
s:jsx_indent_trail_punct	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_trail_punct(lnum)$/;"	f
s:julia_blocks_functions	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:julia_blocks_functions = {$/;"	v
s:julia_highlight_operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_highlight_operators = get(g:, "julia_highlight_operators", 1)$/;"	v
s:julia_spellcheck_comments	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_comments = get(g:, "julia_spellcheck_comments", 1)$/;"	v
s:julia_spellcheck_docstrings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_docstrings = get(g:, "julia_spellcheck_docstrings", 1)$/;"	v
s:julia_spellcheck_strings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_strings = get(g:, "julia_spellcheck_strings", 0)$/;"	v
s:jump	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:jump	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:jump(nr)$/;"	f
s:jump	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
s:jump	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:jump(handle) abort$/;"	f
s:jump_to_anchor	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:jump_to_anchor(anchor) abort$/;"	f
s:jump_to_identifier_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:jump_to_identifier_at(linum, ident) abort$/;"	f
s:jump_to_impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:jump_to_impl(impl) abort$/;"	f
s:jump_window	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:jump_window(expr)$/;"	f
s:just_inserted_rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:just_inserted_rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:justify_equal_spacing	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
s:justify_equal_spacing	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
s:kbd_create_new_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_create_new_row(cols, goto_first) abort$/;"	f
s:kbd_goto_next_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_next_col(jumpdown) abort$/;"	f
s:kbd_goto_next_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_next_row() abort$/;"	f
s:kbd_goto_prev_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_prev_col(jumpup) abort$/;"	f
s:kbd_goto_prev_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_prev_row() abort$/;"	f
s:keep_line	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:keep_line(r, ln) abort$/;"	f
s:keep_vertical_col	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:keep_vertical_col(r) abort$/;"	f
s:keepcpo	plugged/clrzr/autoload/clrzr.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/after/compiler/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/after/indent/jsx.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/after/indent/tsx.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/after/syntax/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/autoload/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/compiler/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/pyrex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/css.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/gdscript3.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/hamster.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/mp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/pgsql.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/scss.vim	/^let s:keepcpo= &cpoptions$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/svg.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/xinetd.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/autoit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/datascript.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/dot.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/fvwm.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/lsl.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/ocaml.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/po.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/raku.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/sil.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/taskdata.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/taskedit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keeppattern	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:keeppattern = (s:has_keeppattern ? 'keeppattern' : '')$/;"	v
s:kernels	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:kernels = ['linux', 'hurd', 'kfreebsd', 'knetbsd', 'kopensolaris', 'netbsd']$/;"	v
s:key_mapping	plugged/incsearch.vim/plugin/incsearch.vim	/^function! s:key_mapping(lhs, rhs, noremap) abort$/;"	f
s:key_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:key_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:key_value = '\\v^\\s*[^:-]+:\\s*\\S' " apt: name=package$/;"	v
s:keymap	plugged/incsearch.vim/autoload/incsearch/config.vim	/^function! s:keymap() abort$/;"	f
s:keymap	plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  function! s:keymap() abort$/;"	f
s:keyseq	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^    let s:keyseq = printf(s:test.keyseq, s:register.keyseq)$/;"	v
s:keyword	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:keyword(expr)$/;"	f
s:keywords	plugged/vim-polyglot/syntax/raku.vim	/^let s:keywords = {$/;"	v
s:known_extensions	plugged/vimwiki/plugin/vimwiki.vim	/^let s:known_extensions = s:vimwiki_get_known_extensions()$/;"	v
s:l	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let s:l = search('\\C\\m^[#;@!$%^&|:] -\\{24,\\} >8 -\\{24,\\}$', 'cnW', '', 100)$/;"	v
s:l	plugged/vim-polyglot/syntax/gitcommit.vim	/^  let s:l = line('$')$/;"	v
s:l	plugged/vim-polyglot/syntax/gitcommit.vim	/^let s:l = search('^[#;@!$%^&|:] -\\{24,\\} >8 -\\{24,\\}$', 'cnW', '', 100)$/;"	v
s:l0	plugged/vim-indent-object/plugin/indent-object.vim	/^let s:l0 = -1$/;"	v
s:l1	plugged/vim-indent-object/plugin/indent-object.vim	/^let s:l1 = -1$/;"	v
s:l_O	plugged/vimwiki/ftplugin/vimwiki.vim	/^    let s:l_O = matchstr(&langmap, '\\C,\\zs.\\zeO,')$/;"	v
s:l_o	plugged/vimwiki/ftplugin/vimwiki.vim	/^    let s:l_o = matchstr(&langmap, '\\C,\\zs.\\zeo,')$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = ""$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = v:lang$/;"	v
s:language	plugged/vim-polyglot/indent/vue.vim	/^    let s:language.indentexpr = s:get_indentexpr(s:language.name)$/;"	v
s:languages	plugged/vim-polyglot/indent/vue.vim	/^let s:languages = [$/;"	v
s:languages	plugged/vim-polyglot/syntax/vue.vim	/^let s:languages = [$/;"	v
s:last	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:last(xs) abort$/;"	f
s:last_changedtick	plugged/vim-polyglot/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_line	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:last_line        = { -> line('.') == line('$') }$/;"	v
s:last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_time	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:launcher	plugged/fzf/plugin/fzf.vim	/^  let s:launcher = '%s'$/;"	v
s:launcher	plugged/fzf/plugin/fzf.vim	/^  let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout = {$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout.apply = function('s:_layout_apply')$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout.buffer = function('s:_layout_buffer')$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout.buffers = function('s:_layout_buffers')$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout.bufopen = function('s:_layout_bufopen')$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout.prepare = function('s:_layout_prepare')$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout.walias = function('s:_layout_walias')$/;"	v
s:layout	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:layout.winnr = function('s:_layout_winnr')$/;"	v
s:layout_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:layout_keys	plugged/fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'tmux', 'up', 'down', 'left', 'right']$/;"	v
s:lazy	autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:lazy_config	plugged/incsearch.vim/autoload/incsearch/config.vim	/^function! s:lazy_config() abort$/;"	f
s:lb1	plugged/vim-polyglot/syntax/ledger.vim	/^let s:lb1 = '\\@1<='$/;"	v
s:lcm	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:lcm(list) abort$/;"	f
s:lcs	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:lcs(s1, s2)$/;"	f
s:leading_operator_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*\\%(&\\=\\.\\)'$/;"	v
s:ledgerAmount_contains	plugged/vim-polyglot/syntax/ledger.vim	/^    let s:ledgerAmount_contains .= '@NoSpell'$/;"	v
s:ledgerAmount_contains	plugged/vim-polyglot/syntax/ledger.vim	/^let s:ledgerAmount_contains = ''$/;"	v
s:ledger_cmd	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:ledger_cmd(file, args) abort$/;"	f
s:left	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:left(s)$/;"	f
s:left	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:left(x) abort$/;"	f
s:leftmouse	plugged/vim-startify/autoload/startify.vim	/^  function! s:leftmouse()$/;"	f
s:leftpad	plugged/vim-startify/autoload/startify.vim	/^let s:leftpad = repeat(' ', g:startify_padding_left)$/;"	v
s:length	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:length(str)$/;"	f
s:length	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:length(str)$/;"	f
s:length_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|/;"	v
s:letlim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	plugged/vim-polyglot/indent/sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:letpat	plugged/vim-polyglot/indent/sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:levelRegexpDict	plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:levelRegexpDict = {$/;"	v
s:levenshtein_distance	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
s:levenshtein_distance	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
s:lex	plugged/vim-polyglot/indent/dtd.vim	/^function s:lex(input, start, ...)$/;"	f
s:lex1	plugged/vim-polyglot/indent/dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
s:lexer	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:lexer(patterns) abort$/;"	f
s:lhs_key_list	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
s:lhs_key_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
s:lightGray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:lighter_grey	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:lighter_grey = [ '#bcbcbc', 250 ]$/;"	v
s:like_uri	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:like_uri(str) abort$/;"	f
s:likely	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:likely(str) abort$/;"	f
s:lim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	plugged/vim-polyglot/indent/sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lime	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:lime = [ '#00ff00', 10 ]$/;"	v
s:line	plugged/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
s:lineLens	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:lineLens(projectPath, cont)$/;"	f
s:line_adjustment_for_current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
s:line_comment_chars	plugged/vim-polyglot/syntax/ledger.vim	/^let s:line_comment_chars = b:is_hledger ? ';*#' : ';|*#%'$/;"	v
s:line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:line_has_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:line_has_marker(lnum) abort$/;"	f
s:line_term	plugged/vim-polyglot/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	plugged/vim-polyglot/indent/solidity.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	plugged/vim-polyglot/indent/typescript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:linechars	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:lines(str) abort$/;"	f
s:lines	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:lines = join(getline(1, 5) + [getline('$')], "\\n")$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/jst.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/ragel.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:lines(str) abort$/;"	f
s:lines	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:lines(str) abort$/;"	f
s:linkify_image	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:linkify_image(src, descr, verbatim_str) abort$/;"	f
s:linkify_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:linkify_link(src, descr) abort$/;"	f
s:links_to	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
s:links_to	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
s:linux_handler	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! s:linux_handler(url) abort$/;"	f
s:listSyntax	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:listSyntax(syntaxKeyword) abort$/;"	f
s:liststartregex	plugged/vim-polyglot/indent/yaml.vim	/^let s:liststartregex='\\v^\\s*%(\\-%(\\ |$))'$/;"	v
s:lmax	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	plugged/vim-polyglot/indent/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	plugged/vim-polyglot/indent/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	plugged/vim-polyglot/syntax/fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	plugged/vim-polyglot/indent/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	plugged/vim-polyglot/indent/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	plugged/vim-polyglot/syntax/fortran.vim	/^    let s:ln=1$/;"	v
s:load	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:load(...) abort dict$/;"	f
s:load	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:load(...) abort dict$/;"	f
s:load	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
s:load	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:load(...) abort dict$/;"	f
s:load	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:load(...) abort dict$/;"	f
s:load	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:load(arg)$/;"	f
s:load	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:load(...) abort dict$/;"	f
s:load	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:load(filename, ...) abort$/;"	f
s:load	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:load(...) abort dict$/;"	f
s:load_full_syntax	plugged/vim-polyglot/syntax/svelte.vim	/^let s:load_full_syntax = svelte#GetConfig('load_full_syntax', 0)$/;"	v
s:load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:load_smart_dict	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
s:load_tags_metadata	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:load_tags_metadata() abort$/;"	f
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:loaded = s:FALSE$/;"	v
s:loaded	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugged/vital.vim/autoload/vital/vital.vim	/^let s:loaded = {}$/;"	v
s:loaded_generator_modules	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^let s:loaded_generator_modules = {}$/;"	v
s:loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:loader_files	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:loader_files(plugin_name, to) abort$/;"	f
s:locale	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:locale() abort$/;"	f
s:localfunc	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^function! s:localfunc(funcname, sid) abort$/;"	f
s:lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:log_clear	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:log_clear(label) abort$/;"	f
s:log_diff_context	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:log_diff_context = '{"filename": fugitive#Find(v:val . from, a:dir), "lnum": get(offsets, /;"	v
s:log_dump	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:log_dump(label) abort$/;"	f
s:log_file	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:lshift	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:lshift(a, n) abort$/;"	f
s:lshift32	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^  function! s:lshift32(a, n) abort$/;"	f
s:lua_namespace	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.vim	/^function! s:lua_namespace() abort$/;"	f
s:luafile_of	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.vim	/^function! s:luafile_of(sfile) abort$/;"	f
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:macro_end	plugged/vim-polyglot/indent/sas.vim	/^let s:macro_end = '\\v%(^|;)\\s*\\%mend\\s*;'$/;"	v
s:macro_regex	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:macro_regex = '\\%(@\\%([#(]\\@!\\S\\)\\+\\|\\<\\%(local\\|global\\)\\)\\s\\+'$/;"	v
s:macro_str	plugged/vim-polyglot/indent/sas.vim	/^let s:macro_str = '\\v%(^|;)\\s*\\%macro>'$/;"	v
s:macunix_handler	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! s:macunix_handler(url) abort$/;"	f
s:magenta	plugged/doom-one.vim/colors/doom-one.vim	/^let s:magenta    = '#c678dd'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:magenta = '#ffee99'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:magenta = '#A37ACC'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:magenta = '#d4bfff'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:magenta   = ['#eb6eb7', 5]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:magenta   = ['#f275be', 5]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:magenta   = ['#ca4898', 5]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:magenta   = ['#dd0f9d', 5]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:mainfont	plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:mainfont	plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:maj	plugged/vim-polyglot/scripts/eregex.vim	/^let s:maj=matchstr(s:tmp, '\\d\\+') * 100$/;"	v
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^function! s:make(...)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:make(...)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:make()$/;"	f
s:make	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:make(...)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:make()$/;"	f
s:make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:make(...)$/;"	f
s:make	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
s:make_default	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_default(...)$/;"	f
s:make_emacs	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
s:make_emacs	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
s:make_header_args	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:make_header_args(headdata, option, quote) abort$/;"	f
s:make_index	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
s:make_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
s:make_index	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
s:make_module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_module(...)$/;"	f
s:make_plain	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
s:make_plain	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
s:make_search	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:make_search(...)$/;"	f
s:make_seed	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:make_seed() abort$/;"	f
s:make_sentence	vimrc	/^function! s:make_sentence(lines)$/;"	f
s:make_special_chars	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
s:make_special_chars	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
s:make_standard	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_standard(...)$/;"	f
s:make_standard_search	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_standard_search(...)$/;"	f
s:make_standard_search_back	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_standard_search_back(...)$/;"	f
s:make_tag	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:make_tag(line, regexp, func, ...) abort$/;"	f
s:make_uniq_nr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:make_uniq_nr()$/;"	f
s:make_uniq_nr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:make_uniq_nr()$/;"	f
s:make_vim_cmdline_mapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
s:make_vim_cmdline_mapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
s:map	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
s:map	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:map(either, f) abort$/;"	f
s:map	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:map(xs, f) abort$/;"	f
s:map	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:map(xs, f) abort$/;"	f
s:map	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:map(xs, callable) abort$/;"	f
s:map	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:map(x, f) abort$/;"	f
s:map_accum	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_accum	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_accum	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_accum	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:map_accum(binary_f, xs, init) abort$/;"	f
s:map_accum	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:map_accum(callable, xs, init) abort$/;"	f
s:map_aux	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_aux(function)$/;"	f
s:map_left	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:map_left(either, f) abort$/;"	f
s:map_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_move(function, toend, backwards)$/;"	f
s:map_prefix	plugged/vimwiki/plugin/vimwiki.vim	/^let s:map_prefix = vimwiki#vars#get_global('map_prefix')$/;"	v
s:map_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_select(function)$/;"	f
s:map_single_mode	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:map_single_mode(stop) abort$/;"	f
s:mapkeyregex	plugged/vim-polyglot/indent/yaml.vim	/^let s:mapkeyregex='\\v^\\s*\\#@!\\S@=%(\\''%([^'']|\\''\\'')*\\'''.$/;"	v
s:margin_set_by_user	plugged/vimwiki/autoload/vimwiki/vars.vim	/^let s:margin_set_by_user = 0$/;"	v
s:mark_complements	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_complements=s:mark_left . 'cOmPLemEnTs' . s:mark_right$/;"	v
s:mark_left	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_left="\\<Esc>" . strftime("%X") . ":" . strftime("%d") . "\\<C-f>"$/;"	v
s:mark_right	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_right="\\<C-l>" . strftime("%X") . ":" . strftime("%d") . "\\<Esc>"$/;"	v
s:mark_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:mark_to_sweep	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^let s:mark_to_sweep = {}$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax = g:vimwiki_syntax_variables['markdown']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.bold_match = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*__Text__\\*'.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.bold_search = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*\\zs'.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.bullet_types = ['-', '*', '+']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_bold = '\\*\\*\\|__'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_bolditalic = '\\*\\*\\*'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_code = '`'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_deltext = '\\~\\~'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_eqin = '\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_italic = '\\*\\|_'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_italicbold = '___'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_subscript = ',,'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_superscript = '^'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.header_match = '^\\s*\\(#\\{1,6}\\)#\\@!\\s*__Header__\\s*$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.header_search = '^\\s*\\(#\\{1,6}\\)\\([^#].*\\)$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.list_markers = ['-', '*', '+', '1.']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.number_types = ['1.']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.recurring_bullets = 0$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxBoldItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxCode = '`[^`]\\+`'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxComment = '^\\s*%%.*$\\|<!--[^>]*-->'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxDelText = '\\~\\~[^~`]\\+\\~\\~'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxEqIn = '\\$[^$`]\\+\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxH = '#'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxHR = '\\(^---*$\\|^___*$\\|^\\*\\*\\**$\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxItalicBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxListDefine = '::\\%(\\s\\|$\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxMathEnd = '\\$\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxMathStart = '\\$\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxPreEnd = '\\%(`\\{3,}\\|\\~\\{3,}\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxPreStart = '\\%(`\\{3,}\\|\\~\\{3,}\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxSubScript = ',,[^,`]\\+,,'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxSuperScript = '\\^[^^`]\\+\\^'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxTableSep = '|'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxTags = '\\%(^\\|\\s\\)\\@<=:\\%([^:[:space:]]\\+:\\)\\+\\%(\\s\\|$\\)\\@/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.symH = 0$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.tag_match = '\\(^\\|\\s\\):\\([^:''[:space:]]\\+:\\)*__Tag__:'.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.tag_search = '\\(^\\|\\s\\)\\zs:\\([^:''[:space:]]\\+:\\)\\+\\ze\\(\\s\\|$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.wikilink = '\\[\\[\\zs[^\\\\\\]|]\\+\\ze\\%(|[^\\\\\\]]\\+\\)\\?\\]\\]'$/;"	v
s:maroon	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:maroon = [ '#800000', 1 ]$/;"	v
s:mask	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^let s:mask = s:bits - 1$/;"	v
s:mask32	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^let s:mask32 = 32 - 1$/;"	v
s:match_expr_on_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
s:match_expr_on_line	plugged/vim-polyglot/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
s:match_key	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
s:match_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
s:match_one	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f
s:match_one	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_one(patterns, string)$/;"	f
s:match_pairs	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
s:match_pairs	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
s:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/config.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:match_words = ''$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:match_words = ''$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:match_words = ""$/;"	v
s:matchaddpos	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:matchaddpos(group, pos) abort$/;"	f
s:matchbegin	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchbegin(text, close)$/;"	f
s:matchdelete_all	plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:matchdelete_all(ids) abort "{{{$/;"	f
s:matchend	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchend(text, open)$/;"	f
s:matches_any_word_in	plugged/vim-polyglot/indent/mermaid.vim	/^function! s:matches_any_word_in(text, list)$/;"	f
s:matchit	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:matchit()$/;"	f
s:matchlist	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:matchlist = []$/;"	v
s:max_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
s:max_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:max_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
s:max_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:max_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:max_by	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
s:max_by	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:max_by(list, f) abort$/;"	f
s:max_by	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:max_by(xs, callable) abort$/;"	f
s:max_lnum	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:max_lnum = 0$/;"	v
s:max_workers	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^let s:max_workers = 50$/;"	v
s:maximal_number_of_compared_movments	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:maximal_number_of_compared_movments = 10000$/;"	v
s:maxoff	plugged/vim-polyglot/indent/bzl.vim	/^let s:maxoff = 50$/;"	v
s:maxoff	plugged/vim-polyglot/indent/gdscript3.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	plugged/vim-polyglot/indent/meson.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	plugged/vim-polyglot/indent/zimbu.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:me	autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax = g:vimwiki_syntax_variables['media']$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.bold_match = '''''''__Text__'''''''$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.bold_search = "'''\\\\zs[^']\\\\+\\\\ze'''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.bullet_types = ['*', '#']$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_bold = "'''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_bolditalic = "'''''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_code = '`'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_deltext = '\\~\\~'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_eqin = '\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_italic = "''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_italicbold = s:media_syntax.char_bolditalic$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_subscript = ',,'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_superscript = '^'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.header_match = '^\\s*\\(=\\{1,6}\\)=\\@!\\s*__Header__\\s*\\1=\\@!\\s*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.header_search = '^\\s*\\(=\\{1,6}\\)\\([^=].*[^=]\\)\\1\\s*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.list_markers = ['*', '#']$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.number_types = []$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.recurring_bullets = 1$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxBold = "'''[^']\\\\+'''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxBoldItalic = "'''''[^']\\\\+'''''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxCode = '`[^`]\\+`'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxComment = '^\\s*%%.*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxDelText = '\\~\\~[^~]\\+\\~\\~'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxEqIn = '\\$[^$`]\\+\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxH = '='$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxHR = '^-----*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxItalic = "''[^']\\\\+''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxItalicBold = s:media_syntax.rxBoldItalic$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxListDefine = '^\\%(;\\|:\\)\\s'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxMathEnd = '}}\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxMathStart = '{{\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxPreEnd = '<\\\/pre>'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxPreStart = '<pre>'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxSubScript = ',,[^,]\\+,,'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxSuperScript = '\\^[^^]\\+\\^'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxTableSep = '|'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxTags = '\\%(^\\|\\s\\)\\@<=:\\%([^:[:space:]]\\+:\\)\\+\\%(\\s\\|$\\)\\@='$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.symH = 1$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.tag_match = '\\(^\\|\\s\\):\\([^:''[:space:]]\\+:\\)*__Tag__:'.$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.tag_search = '\\(^\\|\\s\\)\\zs:\\([^:''[:space:]]\\+:\\)\\+\\ze\\(\\s\\|$\\)/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.wikilink = '\\[\\[\\zs[^\\\\\\]|]\\+\\ze\\%(|[^\\\\\\]]\\+\\)\\?\\]\\]'$/;"	v
s:medium_grey	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:medium_grey  = [ '#585858', 240 ]$/;"	v
s:merge_find	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! s:merge_find() abort$/;"	f
s:merge_heads	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:merge_heads = ['MERGE_HEAD', 'REBASE_HEAD', 'CHERRY_PICK_HEAD', 'REVERT_HEAD']$/;"	v
s:merge_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:merge_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:merge_tags(metadata, pagename, file_metadata) abort$/;"	f
s:message	plugged/calendar.vim/autoload/calendar/message/default.vim	/^  function! s:message() abort$/;"	f
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message = {}$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.access_url_input_code = 'Access %s and paste the code'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.cache_file_unwritable = 'The cache file is not writable'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.cache_write_fail = 'Could not write the cache file'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.clear_completed_task = 'Clear all the completed tasks? (cannot be undone) y\/N: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.curl_wget_not_found = 'curl and wget not found'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.day_name = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.day_name_long = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.delete_event = 'Delete the event? (cannot be undone) y\/N: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.delete_task = 'Delete the task? (cannot be undone) y\/N: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.end_date_time = 'Ending date and time: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.google_access_token_fail = 'Fail in authorization to Google'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.help = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.hit_any_key = '[Hit any key]'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_calendar_index = 'Input the index of the calendar: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_calendar_name = 'Input the name of a new calendar: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_code = 'CODE: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_event = 'EVENT: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_task = 'TASK: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.mark_not_set = 'Mark not set: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.mkdir_fail = 'Could not create the directory for cache files'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.month_name = [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.month_name_long = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July'/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.multiple_argument = 'There are multiple possible arguments'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.start_date_time = 'Starting date and time: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.task = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.today = 'today'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message = {}$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.access_url_input_code = '%s にアクセスして、コードを入力して下さ/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.cache_file_unwritable = 'キャッシュファイルの書き込みが許されて/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.cache_write_fail = 'キャッシュファイルの書き込みに失敗しました/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.clear_completed_task = '完了したタスクを全て削除しますか？ (この/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.curl_wget_not_found = 'curl または wget が必要です'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.day_name = [ '日', '月', '火', '水', '木', '金', '土' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.day_name_long = [ '日曜日', '月曜日', '火曜日', '水曜日', '木曜日',/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.delete_event = 'イベントを削除しますか？ (この操作は元に戻せま/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.delete_task = 'タスクを削除しますか？ (この操作は元に戻せませ/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.end_date_time = '終了日時: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.google_access_token_fail = 'Googleへの認証に失敗しました'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.help = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.hit_any_key = '[キーを押して下さい]'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_calendar_index = 'カレンダーの番号を指定して下さい: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_calendar_name = '新しいカレンダーの名前を入力して下さい: /;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_code = 'コード: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_event = 'イベント: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_task = 'タスク: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.mark_not_set = 'マークが設定されていません: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.mkdir_fail = 'キャッシュ用のディレクトリーの作成に失敗しまし/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.month_name = [ '1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.month_name_long = s:message.month_name$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.multiple_argument = '複数の引数候補があります'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.start_date_time = '開始日時: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.task = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.today = '今日'$/;"	v
s:message	plugged/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
s:message_prefix	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:message_prefix() abort$/;"	f
s:messages	plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:meta_chars	plugged/vim-polyglot/scripts/eregex.vim	/^let s:meta_chars='$*.[\\]^~'$/;"	v
s:mid	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:mid(value, cnt) abort$/;"	f
s:midBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:midBlock = ['case', 'catch', 'else', 'elseif', 'otherwise',$/;"	v
s:middle_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:middle_patt = '\\C\\<\\%(else\\|elseif\\)\\>'$/;"	v
s:min	plugged/vim-polyglot/scripts/eregex.vim	/^let s:min=matchstr(s:tmp, '\\.\\zs\\d\\+') + 0$/;"	v
s:min	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^let s:min = { n -> s:X() && len(s:R()) >= n }$/;"	v
s:min	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! s:min(n) abort$/;"	f
s:min	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^let s:min = s:pow2[-1]$/;"	v
s:min_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
s:min_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:min_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
s:min_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:min_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:min_by	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
s:min_by	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:min_by(list, f) abort$/;"	f
s:min_by	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:min_by(xs, callable) abort$/;"	f
s:min_version	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:min_version = '0.23.0'$/;"	v
s:mindmapHilightLinks	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:mindmapHilightLinks = [$/;"	v
s:mindmap_color	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:mindmap_color = '\\(\\[#[^\\]]\\+\\]\\)\\?'$/;"	v
s:mindmap_options	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:mindmap_options = join([s:mindmap_color, s:mindmap_removing_box], '')$/;"	v
s:mindmap_removing_box	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:mindmap_removing_box = '_\\?'$/;"	v
s:mkdir_nothrow	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:mkdir_nothrow(...) abort$/;"	f
s:mmssff_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\/;"	v
s:mod	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:mod(a,b) abort$/;"	f
s:mode	plugged/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:modeline	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:modeline = lnum? getline(lnum): ""$/;"	v
s:modeline_booleans	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:modeline_booleans = {$/;"	v
s:modeline_numbers	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:modeline_numbers = {$/;"	v
s:modemap	plugged/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modep	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:modep	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:modifierMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:modifierMatcher = s:annotationMatcher . '\\|\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)/;"	v
s:modify_end	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:modify_end(end) abort "{{{$/;"	f
s:modify_region	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:modify_region(region) abort "{{{$/;"	f
s:module	plugged/incsearch-easymotion.vim/autoload/incsearch/over/modules/EasyMotion.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:module	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-polyglot/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	plugged/vim-polyglot/indent/sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:module._easymotion	plugged/incsearch-easymotion.vim/autoload/incsearch/over/modules/EasyMotion.vim	/^function! s:module._easymotion(cmdline) abort$/;"	f
s:module.complete	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
s:module.complete	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
s:module.execute	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:module.execute(cmdline)$/;"	f
s:module.get_complete_words	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
s:module.get_complete_words	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
s:module.histories	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
s:module.histories	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
s:module.is_no_insert	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
s:module.is_no_insert	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
s:module.message	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
s:module.message	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
s:module.on_char	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch-easymotion.vim/autoload/incsearch/over/modules/EasyMotion.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_draw	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
s:module.on_draw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
s:module.on_draw_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
s:module.on_draw_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_draw_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
s:module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:module.on_enter(cmdline)$/;"	f
s:module.on_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:module.on_enter(cmdline)$/;"	f
s:module.on_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_exception	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_exception	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_exception	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_exception	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_execute	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
s:module.on_execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
s:module.on_execute_failed	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
s:module.on_execute_failed	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
s:module.on_execute_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
s:module.on_execute_pre	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
s:module.on_execute_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
s:module.on_execute_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
s:module.on_leave	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
s:module.on_leave	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_leave(...)$/;"	f
s:module.on_leave	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
s:module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.redraw	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
s:module.redraw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
s:module.reset	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
s:module.reset	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
s:module.search_hl_off	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.search_hl_off()$/;"	f
s:module.search_hl_on	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.search_hl_on(pattern)$/;"	f
s:module2file	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:module2file(name) abort$/;"	f
s:module_management	plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^let s:module_management =  {$/;"	v
s:module_management.on_enter	plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^function! s:module_management.on_enter(cmdline) abort$/;"	f
s:module_management.priority	plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^function! s:module_management.priority(event) abort$/;"	f
s:modules	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:modules = vital#incsearch#import('Over.Commandline.Modules')$/;"	v
s:modules	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:modules = vital#incsearch#import('Over.Commandline.Modules')$/;"	v
s:modules	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^let s:modules = [$/;"	v
s:modules	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^let s:modules =  map(split(globpath(expand("<sfile>:p:h"), "\/*.vim"), "\\n"), "fnamemodify(v:va/;"	v
s:modules	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:modules = s:V.import("Over.Commandline.Modules")$/;"	v
s:modulo	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:modulo(m, n) abort$/;"	f
s:month_names	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:month_names(...) abort$/;"	f
s:moon_event	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:moon_event(events) abort$/;"	f
s:motion_map_helper	plugged/vim-easymotion/plugin/EasyMotion.vim	/^function! s:motion_map_helper(motions) "{{{$/;"	f
s:motionwise2visualmode	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:motionwise2visualmode(motionwise) abort "{{{$/;"	f
s:move	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move(pattern, ...) abort$/;"	f
s:move	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:move(src, dest) abort$/;"	f
s:move_around	plugged/vim-polyglot/ftplugin/mf.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
s:move_around	plugged/vim-polyglot/ftplugin/mp.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
s:move_before_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:move_before_begin()$/;"	f
s:move_cursor	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:move_cursor(cli, pattern, ...) abort$/;"	f
s:move_cursor	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:move_cursor(r) abort$/;"	f
s:move_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:move_exe() abort$/;"	f
s:move_exe	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^  function! s:move_exe(src, dest) abort$/;"	f
s:move_f	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f(...) abort$/;"	f
s:move_f2	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f2() abort$/;"	f
s:move_region	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:move_region(r) abort$/;"	f
s:move_to_following_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_following_block() abort$/;"	f
s:move_to_pred_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_pred_block() abort$/;"	f
s:move_to_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_win(winnr) abort$/;"	f
s:move_to_winpos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_winpos(winpos) abort$/;"	f
s:move_vim	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:move_vim(src, dest) abort$/;"	f
s:moveto_block_delim	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_block_delim(toend, backwards, ...)$/;"	f
s:moveto_currentblock_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_currentblock_end()$/;"	f
s:mp_regex	plugged/vim-polyglot/ftplugin/mf.vim	/^let s:mp_regex = {$/;"	v
s:mp_regex	plugged/vim-polyglot/ftplugin/mp.vim	/^let s:mp_regex = {$/;"	v
s:msl_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_ter/;"	v
s:msl_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:mul	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:mul(a,b) abort$/;"	f
s:multiline	plugged/vim-polyglot/scripts/eregex.vim	/^let s:multiline=0$/;"	v
s:name	plugged/vim-polyglot/autoload/svelte.vim	/^let s:name = 'vim-svelte-plugin'$/;"	v
s:name	plugged/vim-polyglot/indent/svelte.vim	/^let s:name = 'vim-svelte-plugin'$/;"	v
s:named_module_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:named_module_entry = '\\v^\\s*-\\s*(name|hosts|role):\\s*\\S' " - name: 'do stuff'$/;"	v
s:names	autoload/plug.vim	/^function! s:names(...)$/;"	f
s:names	plugged/vim-polyglot/syntax/ruby.vim	/^let s:names = { '~': 'Tilde', '`': 'BackQuote', '!': 'Bang', '@': 'At', '#': 'Hash', '$': 'Dolla/;"	v
s:navigate	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:navigate(force, dir) abort$/;"	f
s:navy	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:navy = [ '#000080', 4 ]$/;"	v
s:navy	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:nbs	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:nearest_cargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! s:nearest_cargo(...) abort$/;"	f
s:need_trans	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neg	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:neg(a) abort$/;"	f
s:nested	plugged/vimwiki/syntax/vimwiki.vim	/^  let s:nested = extend(s:nested, vimwiki#base#detect_nested_syntax(), 'keep')$/;"	v
s:nested	plugged/vimwiki/syntax/vimwiki.vim	/^let s:nested = vimwiki#vars#get_wikilocal('nested_syntaxes')$/;"	v
s:new	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:new(resolver) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Data/Counter.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:new(size, f) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:new(v, ...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^function! s:new(token, ...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Hash/HMAC.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^function! s:new(path) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^function! s:new() abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/System/Cache.vim	/^function! s:new(name, ...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^function! s:new() abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/FlowLayout.vim	/^function! s:new() abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^function! s:new() abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^function! s:new(cookie_string, request_uri) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^function! s:new(...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:new(uri, ...) abort$/;"	f
s:new	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new_default_pattern_set	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:new_default_pattern_set() abort$/;"	f
s:new_from_seq_string	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:new_from_seq_string(uri, ...) abort$/;"	f
s:new_from_uri_like_string	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^function! s:new_from_uri_like_string(str, ...) abort$/;"	f
s:new_generator	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:new_generator() abort$/;"	f
s:new_generator	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:new_generator() abort$/;"	f
s:new_log_session	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:new_overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:new_overwin(...) abort$/;"	f
s:new_polyglot_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:new_polyglot_disabled = []$/;"	v
s:new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
s:newid	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:newid(data) abort$/;"	f
s:newid	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! s:newid(data) abort$/;"	f
s:newline	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:newline = (&encoding ==? 'utf-8') ? "\\u21b2 " : '  '$/;"	v
s:next_file	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:next_file = ''$/;"	v
s:next_section	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:next_section(stop_func_begin) abort$/;"	f
s:next_sign_id	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:next_tick	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:next_tick(cmd)$/;"	f
s:nm	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm  = s:type$/;"	v
s:nm	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm = matchstr(s:lng, '^[^=]*')$/;"	v
s:nm	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm = substitute(s:type, '=.*', '', '')$/;"	v
s:nmapping_order	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:nmapping_order =$/;"	v
s:no_visual	plugged/vim-visual-multi/autoload/vm/search.vim	/^let s:no_visual = { p -> substitute(p, '\\\\%V', '', 'g') }$/;"	v
s:node_file	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Sl/;"	v
s:nomacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:nomacro = '\\%(' . s:macro_regex . '\\)\\@<!'$/;"	v
s:nomodeline	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:nomodeline	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:nomodeline	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:non_escaped_backslash	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:non_escaped_backslash = '\\m\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\)\\@1<=\\\\'$/;"	v
s:non_escaped_backslash	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:non_escaped_backslash = '\\m\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\)\\@<=\\\\'$/;"	v
s:non_escaped_backslash	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:non_escaped_backslash = '\\m\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\)\\@<=\\\\'$/;"	v
s:non_escaped_backslash	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^let s:non_escaped_backslash = '\\m\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\)\\@<=\\\\'$/;"	v
s:none	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:none = [ 'NONE', 'NONE' ]$/;"	v
s:none	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:none() abort$/;"	f
s:nonidS_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:nonidS_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonidS_chars = '[:space:])\\U5D}' . s:nonid_chars$/;"	v
s:nonid_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:nonid_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonid_chars = '\\U00-\\U08' . '\\U0A-\\U1F'$/;"	v
s:nonwords	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:nonwords = join([$/;"	v
s:noop	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:noop(...) abort$/;"	f
s:nord0	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord1	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord10	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord11	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord12	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord13	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord14	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord15	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord2	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord3	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord4	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord5	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord6	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord7	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord8	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord9	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:normal	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal = {}$/;"	v
s:normal	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['"']  = s:SID . '(highlightedyank-doublequote)'$/;"	v
s:normal	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['g@'] = s:SID . '(highlightedyank-g@)'$/;"	v
s:normal	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['gv'] = s:SID . '(highlightedyank-gv)'$/;"	v
s:normal	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['y']  = s:SID . '(highlightedyank-y)'$/;"	v
s:normalize	plugged/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
s:normalize_global_settings	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:normalize_global_settings() abort$/;"	f
s:normalize_link_syntax_n	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:normalize_link_syntax_n() abort$/;"	f
s:normalize_link_syntax_n	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! s:normalize_link_syntax_n() abort$/;"	f
s:normalize_link_syntax_v	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:normalize_link_syntax_v() abort$/;"	f
s:normalize_link_syntax_v	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! s:normalize_link_syntax_v() abort$/;"	f
s:normalize_path	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:normalize_path(path) abort$/;"	f
s:normalize_wikilocal_settings	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:normalize_wikilocal_settings() abort$/;"	f
s:not_end	plugged/vim-polyglot/ftplugin/framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:not_git_dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
s:notag	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:notag()$/;"	f
s:note_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:note_pattern = '^\\.\\. '$/;"	v
s:notelse	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notifiers	plugged/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:notify	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:notify(method, params)$/;"	f
s:notprocedure	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:novalue_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:novalue_options = deepcopy(s:all_novalue_options)$/;"	v
s:now	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:now(...) abort$/;"	f
s:nowait	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nr	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:nr(x) abort$/;"	f
s:nr	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
s:nr2byte	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:nr2byte(nr) abort$/;"	f
s:nr2byte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
s:nr2byte	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
s:nr2enc_char	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
s:nr2enc_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
s:nr2enc_char	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
s:nr2hex	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
s:nr2hex	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
s:nr2str	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:nr2str(n, ...) abort$/;"	f
s:ns_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = '\\%([\\n\\r\\uFEFF \\t]\\@!\\p\\)'$/;"	v
s:ns_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)$/;"	v
s:ns_char_without_c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator/;"	v
s:ns_char_without_c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = substitute(s:ns_char, '\\v\\C[\\zs', '\\=s:c_indicator[1:-2]/;"	v
s:ns_directive_name	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_global_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_local_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_plain_char_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|'.s:ns_plain_safe_in_w/;"	v
s:ns_plain_char_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|'.s:ns_plain_safe_out/;"	v
s:ns_plain_first_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_first_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:ns_plain_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_safe_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\\V\\C\\\\%('.s:_collection.'\\\\@!'.s:/;"	v
s:ns_plain_safe_in_without_colhash	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\\V\\C'.s:_neg_collecti/;"	v
s:ns_plain_safe_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_plain_safe_out_without_colhash	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\\V\\C'.s:_neg_collec/;"	v
s:ns_tag_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_tag_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'|[#\/;?:@&=+$.~*''()])'$/;"	v
s:ns_tag_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:ns_tag_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)$/;"	v
s:ns_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_uri_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_uri_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'\\v|[#\/;?:@&=+$,.!~*''()[\\]])'$/;"	v
s:ns_uri_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()[\\]]\\)'$/;"	v
s:ns_uri_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)$/;"	v
s:ns_word_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_word_char = '\\v[[:alnum:]_\\-]'$/;"	v
s:ns_word_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_word_char = '[[:alnum:]_\\-]'$/;"	v
s:nsplit	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
s:nsplit	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
s:null_to_left	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:null_to_left(x, error_msg) abort$/;"	f
s:num	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:num = 0$/;"	v
s:numbering	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:numbering(...)$/;"	f
s:numbering	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:numbering(...)$/;"	f
s:nums	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:nums = {}$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:obj	plugged/vim-polyglot/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:obj	plugged/vim-polyglot/indent/sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:obj	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^let s:obj = { 'tokens' : [] }$/;"	v
s:obj	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^let s:obj = { '_idx' : 0, '_tokens' : [], '_ignore_labels' : [] }$/;"	v
s:obj.config	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:obj.config(dict) dict abort$/;"	f
s:obj.consume	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:obj.consume() dict abort$/;"	f
s:obj.end	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:obj.end() dict abort$/;"	f
s:obj.exec	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:obj.exec(string) dict abort$/;"	f
s:obj.ignore	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:obj.ignore() dict abort$/;"	f
s:obj.next	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:obj.next() dict abort$/;"	f
s:obj.next_is	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:obj.next_is(labels) dict abort$/;"	f
s:obj.tostring	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:obj.tostring() dict abort$/;"	f
s:obsolete	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:obsolete(var)$/;"	f
s:obsolete_gitgutter_signs_to_remove	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
s:ocaml_word_char	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    let s:ocaml_word_char = '\\w|[\\xc0-\\xff]|'''$/;"	v
s:ocre	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:ocre         = [ '#87875f', 101 ]$/;"	v
s:oct_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:oct_regex = '0o\\o\\%(_\\?\\o\\)*\\%(\\>\\|im\\>\\|\\ze\\O\\)'$/;"	v
s:oe	plugged/vim-polyglot/syntax/ledger.vim	/^let s:oe = '\\%#=1'$/;"	v
s:of	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:of(command, dir, initial_queries) abort$/;"	f
s:of	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:of(elem, ...) abort$/;"	f
s:of	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^function! s:of(prefix, ...) abort$/;"	f
s:off_screen_search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
s:old_cpo	plugged/vimwiki/plugin/vimwiki.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:old_spec	plugged/vim-polyglot/syntax/rst.vim	/^    let s:old_spec = g:rst_syntax_code_list$/;"	v
s:old_style	plugged/vim-polyglot/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:old_text	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^let s:old_text = []$/;"	v
s:old_updatetime	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! s:old_updatetime() abort$/;"	f
s:old_width	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:old_width	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:oldcolumn	plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldline	plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:olive	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:olive = [ '#808000', 3 ]$/;"	v
s:olive	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:omit	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
s:omit	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
s:omit	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
s:on_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_begin()$/;"	f
s:on_buf_enter	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_buf_enter(bufnr) abort$/;"	f
s:on_bufenter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
s:on_char	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:on_char(cmdline) abort$/;"	f
s:on_char_pre	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:on_char_pre(cmdline) abort$/;"	f
s:on_close	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_close(popup) dict abort$/;"	f
s:on_cursor_moved	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_cursor_moved() abort$/;"	f
s:on_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_end()$/;"	f
s:on_error	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_error(errmsg) abort$/;"	f
s:on_exit_nvim	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_exit_nvim(job, code, event) dict abort$/;"	f
s:on_exit_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
s:on_exit_vim	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_exit_vim(ch, code) dict abort$/;"	f
s:on_exit_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(channel) dict abort$/;"	f
s:on_open	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_open(blame) dict abort$/;"	f
s:on_output_nvim	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_output_nvim(job, data, event) dict abort$/;"	f
s:on_output_vim	plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_output_vim(event, ch, msg) dict abort$/;"	f
s:on_searching	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:on_searching(func, ...) abort$/;"	f
s:on_stderr_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stderr_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
s:on_stdout_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stdout_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
s:on_unhandled_rejection	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:on_unhandled_rejection(on_unhandled_rejection) abort$/;"	f
s:on_vimenter	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimenter()$/;"	f
s:on_vimleavepre	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimleavepre()$/;"	f
s:one_line_scope_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_line_scope_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_time_notices_issued	plugged/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:oneline_block	plugged/vim-polyglot/indent/svelte.vim	/^let s:oneline_block = '^\\s*{#.*{\/.*}\\s*$'$/;"	v
s:op_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:op_chars = '\\U25\\U26\\U2A\\U2B\\U2D\\U2F\\U3C-\\U3E\\U5C\\U5E\\U7C\\U7E\\UAC\\UB1\\UD7\\/;"	v
s:op_chars_wc	plugged/vim-polyglot/syntax/julia.vim	/^let s:op_chars_wc = '\\U2026\\U205D\\U214B\\U2190-\\U2194\\U219A-\\U219E\\U21A0\\U21A2-\\U21A4\\/;"	v
s:open	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
s:open	plugged/fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
s:open	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:open(buffer, ...) abort$/;"	f
s:open	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
s:open	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:open(filename) abort$/;"	f
s:open	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:open(buffer, ...) abort$/;"	f
s:openBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:openBlock = s:beginBlock + s:midBlock$/;"	v
s:open_browser	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:open_browser(url) abort$/;"	f
s:open_buffer	plugged/vim-startify/autoload/startify.vim	/^function! s:open_buffer(entry)$/;"	f
s:open_hunk_preview_window	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:open_hunk_preview_window()$/;"	f
s:open_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:open_patt = '\\C\\%(\\<\\%(function\\|if\\|repeat\\|do\\)\\>\\|(\\|{\\)'$/;"	v
s:open_wiki_buffer	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:open_wiki_buffer(item) abort$/;"	f
s:openable_bufnr_list	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:openable_bufnr_list()$/;"	f
s:operator_get_region	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:operator_get_region(motionwise) abort "{{{$/;"	f
s:operators	plugged/vim-polyglot/autoload/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&⊻]\\|\/\/\\|\\\\\\|>>\\|>>>\\?\\)\\?='$/;"	v
s:opfirst	plugged/vim-polyglot/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:opfunc	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
s:opfunc2	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
s:opt_x	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:opt_x = { 'c': 'c', 'cpp': 'c++' }$/;"	v
s:option	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:option	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:option	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
s:option	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:option.restore	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
s:option.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
s:option.restore	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
s:option_list	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:option_list = {$/;"	v
s:option_map	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:option_map(letter, option, mode) abort$/;"	f
s:optional	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:optional(x, f, g) abort$/;"	f
s:optionalblock	plugged/vim-polyglot/indent/cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
s:options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:options = copy(s:novalue_options) + map(keys(deepcopy(s:value_options)), 'v:val . "="')$/;"	v
s:options	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:options = {}$/;"	v
s:options	plugged/vimwiki/syntax/vimwiki.vim	/^  let s:options .= s:conceal$/;"	v
s:options	plugged/vimwiki/syntax/vimwiki.vim	/^let s:options = ' contained transparent contains=NONE'$/;"	v
s:options	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^let s:options = ' contained transparent contains=NONE'$/;"	v
s:options_chars2dict	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:options_chars2dict(chars) abort$/;"	f
s:options_chars2raw	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:options_chars2raw(chars) abort$/;"	f
s:options_dict2chars	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:options_dict2chars(dict) abort$/;"	f
s:options_dict2raw	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^function! s:options_dict2raw(dict) abort$/;"	f
s:or	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:or	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:or	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:or	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:or_replace	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orange	plugged/doom-one.vim/colors/doom-one.vim	/^let s:orange     = '#da8548'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:orange       = [ '#ff8700', 208 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:orange = '#ff7733'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:orange = '#FF7733'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:orange = '#ffae57'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:ordered_set	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^let s:ordered_set = {$/;"	v
s:ordered_set.append	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.append(list) abort$/;"	f
s:ordered_set.clear	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.clear() abort$/;"	f
s:ordered_set.empty	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.empty() abort$/;"	f
s:ordered_set.has	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.has(elem) abort$/;"	f
s:ordered_set.has_id	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.has_id(id) abort$/;"	f
s:ordered_set.prepend	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.prepend(list) abort$/;"	f
s:ordered_set.push	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.push(elem) abort$/;"	f
s:ordered_set.remove	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.remove(elem) abort$/;"	f
s:ordered_set.size	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.size() abort$/;"	f
s:ordered_set.to_list	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.to_list() abort$/;"	f
s:ordered_set.unshift	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^function! s:ordered_set.unshift(elem) abort$/;"	f
s:orders	plugged/vim-polyglot/syntax/hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:original_cpo	plugged/vim-polyglot/syntax/tmux.vim	/^let s:original_cpo = &cpo$/;"	v
s:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let s:other_mf_macros = g:other_mf_macros$/;"	v
s:othermonth_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:othermonth_fg_color = 7$/;"	v
s:othermonth_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:othermonth_fg_color = 8$/;"	v
s:othermonth_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:othermonth_fg_color = calendar#color#gen_color(s:fg_color, s:bg_color, 3, 4)$/;"	v
s:output	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
s:over	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:over(j, v, u) abort$/;"	f
s:overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:overwin = {$/;"	v
s:overwin.choose_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.choose_prompt(hint_dict) abort$/;"	f
s:overwin.gather_poses_overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.gather_poses_overwin(pattern) abort$/;"	f
s:overwin.pattern	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.pattern(pattern) abort$/;"	f
s:overwin.restore_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.restore_options() abort$/;"	f
s:overwin.select_winpos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.select_winpos(winnr2poses, keys) abort$/;"	f
s:overwin.set_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.set_options() abort$/;"	f
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:black, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:black, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:silver, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:white, s:purple ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statu/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:s/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:sta/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.left   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.middle = [ [ s:medium_grey, s:darker_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.right  = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.left     = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.right    = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.error    = [ [ s:almost_black, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.left     = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.middle   = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.right    = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.warning  = [ [ s:almost_black, s:orange ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.left    = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.right   = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.left    = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.middle  = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.right   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.tabsel  = [ [ s:darker_grey, s:ocre ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.left     = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.right    = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef'/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75'/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ], s:p.normal.right[1/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678d/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple ], s:p.normal.right/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = copy(s:p.normal.middle)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = copy(s:p.normal.middle)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.tabline.middle)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 2/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ],/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.left    = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.left    = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.middle  = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.left   = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.left    = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['mediumcyan', 'darkestblue'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.right = [ [ 'darkestblue', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.middle = [ [ 'white', 'gray0' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.right = [ ['gray10', 'gray2'], ['white', 'gray1'], ['white', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray0' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray0' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray2' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.visual.left = [ ['black', 'brightestorange', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.left =  [ [ s:gray, s:black ], [ s:black2, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.right = [ [ s:black, s:black2 ], [ s:gray, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.left = [ [ s:black, s:blue ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.right = [ [ s:gray, s:gray4 ], [ s:gray3, s:gray ], [ s:gray2, s:black2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.warning = [ [ s:gold, s:black2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.left = [ [ s:gray4, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.tabsel = [ [ s:blue, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.visual.left = [ [ s:black, s:violet ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:pad_between_letters	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
s:pad_between_letters	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
s:pad_both_sides	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
s:pad_both_sides	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
s:pad_left	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
s:pad_left	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
s:pad_right	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
s:pad_right	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
s:padding_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
s:padding_by_displaywidth	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
s:padding_left	plugged/vim-startify/syntax/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^let s:padding_symbol = ''$/;"	v
s:padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^let s:padding_symbol = '='$/;"	v
s:padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^let s:padding_symbol = '='$/;"	v
s:padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^let s:padding_symbol = '='$/;"	v
s:padding_symbol	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^let s:padding_symbol = ''$/;"	v
s:pair_skip_expr	plugged/vim-polyglot/indent/graphql.vim	/^let s:pair_skip_expr =$/;"	v
s:pairs	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:pairs = [$/;"	v
s:parameter_pattern	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^let s:parameter_pattern = '\\v^\\s*([^\\=]{-1,})\\s*\\=\\s*(.{-})\\s*$'$/;"	v
s:parameterized_wikiname	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:parameterized_wikiname(wikifile) abort$/;"	f
s:paren_pairs	plugged/vim-polyglot/indent/cython.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:paren_pairs	plugged/vim-polyglot/indent/python.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:parse	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
s:parse	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:parse(str) abort$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^function! s:parse(sexp) abort$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^function! s:parse(csvlines) abort$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^function! s:parse(ini, ...) abort$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^function! s:parse(ltsv) abort$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:parse(text) abort$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^function! s:parse(content) abort$/;"	f
s:parse	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:parse(xml) abort$/;"	f
s:parseFile	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^function! s:parseFile(fname) abort$/;"	f
s:parseFile	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:parseFile(fname) abort$/;"	f
s:parseHeader	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:parseHeader(headers) abort$/;"	f
s:parseURL	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^function! s:parseURL(url) abort$/;"	f
s:parseURL	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^function! s:parseURL(url) abort$/;"	f
s:parse_cmd	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^fun! s:parse_cmd(M, r, n, op) abort$/;"	f
s:parse_cmdarg	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
s:parse_cmdarg	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
s:parse_cmdarg	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
s:parse_errors	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! s:parse_errors(filename, lines) abort$/;"	f
s:parse_file	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^function! s:parse_file(file) abort$/;"	f
s:parse_file	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^function! s:parse_file(file, ...) abort$/;"	f
s:parse_file	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^function! s:parse_file(file) abort$/;"	f
s:parse_file	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^function! s:parse_file(filename) abort$/;"	f
s:parse_lhs	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
s:parse_lhs	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
s:parse_lhs_list	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
s:parse_lhs_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
s:parse_line	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:parse_line(line, state) abort$/;"	f
s:parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:parse_record	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^function! s:parse_record(csvline) abort$/;"	f
s:parse_record	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^function! s:parse_record(line) abort$/;"	f
s:parse_record	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^function! s:parse_record(line) abort$/;"	f
s:parse_title	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:parse_title(title, ...) abort$/;"	f
s:parse_title	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:parse_title(title) abort$/;"	f
s:parse_to_name	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
s:parse_to_name	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
s:parser	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^function! s:parser() abort$/;"	f
s:part_of_diff	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:part_of_diff(hunk_diff, first, last)$/;"	f
s:partition	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:partition	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:partition	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:partition	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:partition	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:partition(callable, xs) abort$/;"	f
s:pat	plugged/vim-polyglot/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pat	plugged/vim-polyglot/compiler/ls.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:path = expand('<sfile>:h')$/;"	v
s:path	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:path = &l:path$/;"	v
s:path	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:path = &l:path$/;"	v
s:path2directory	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2directory	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2directory	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2project_directory	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:path2project_directory	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:path2project_directory	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:path_extensions	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:path_extensions() abort$/;"	f
s:path_sep_pattern	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_separator	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:path_separator() abort$/;"	f
s:path_separator	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:path_subcommands	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:path_subcommands = {}$/;"	v
s:pattern	plugged/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^                let s:pattern .= ':'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^            let s:pattern .= '{%\\s*\\<' . s:tag . '\\>\\s*\\%(.*=\\)\\@![^}]\\{-}%}'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern .= ':{%\\s*\\<' . s:element[-1:][0] . '\\>\\s*.\\{-}%}'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern = ''$/;"	v
s:pattern	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
s:pattern	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:pattern(r) abort$/;"	f
s:pattern_rewritten	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:pattern_rewritten(t, i) abort$/;"	f
s:pattern_saver	plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^let s:pattern_saver =  {$/;"	v
s:pattern_saver.on_enter	plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^function! s:pattern_saver.on_enter(cmdline) abort$/;"	f
s:pattern_saver.on_leave	plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^function! s:pattern_saver.on_leave(cmdline) abort$/;"	f
s:patterns	plugged/doom-one.vim/autoload/color.vim	/^let s:patterns = {}$/;"	v
s:patterns	plugged/doom-one.vim/autoload/color.vim	/^let s:patterns['hex']      = '\\v#?(\\x{2})(\\x{2})(\\x{2})'$/;"	v
s:patterns	plugged/doom-one.vim/autoload/color.vim	/^let s:patterns['shortHex'] = '\\v#(\\x{1})(\\x{1})(\\x{1})'$/;"	v
s:paused	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:paused = []$/;"	v
s:peach	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:permutations	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:permutations	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:permutations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:permutations	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:permute_suffixes	plugged/vim-polyglot/syntax/hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
s:persist	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:persist(highlight, hi_group) abort  "{{{$/;"	f
s:phpindent	plugged/vim-polyglot/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:pick	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
s:pick	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
s:pick	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
s:pid	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:pid = 0$/;"	v
s:pink	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:pixel	plugged/calendar.vim/autoload/calendar/pixel.vim	/^let s:pixel = { ' ': [ '..', '..', '..', '..', '..'] }$/;"	v
s:plain	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:plain()$/;"	f
s:plain_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:plain_delims = [$/;"	v
s:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_macros = g:plain_mf_macros$/;"	v
s:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_modes = g:plain_mf_modes$/;"	v
s:plgroups	plugged/vim-polyglot/syntax/pgsql.vim	/^let s:plgroups = 'plpgsql'$/;"	v
s:pluck	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_call	autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
s:plug_expand	autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
s:plug_fnamemodify	autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
s:plug_getcwd	autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_tempname	autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
s:plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin_dir	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:plugin_dir	plugged/vimwiki/plugin/vimwiki.vim	/^let s:plugin_dir = expand('<sfile>:p:h:h')$/;"	v
s:plugin_name	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/vital.vim/autoload/vital/vital.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_path	plugged/vim-polyglot/autoload/nim.vim	/^let s:plugin_path = escape(expand('<sfile>:p:h'), '\\')$/;"	v
s:plugin_vers	plugged/vimwiki/plugin/vimwiki.vim	/^let s:plugin_vers = 2.5$/;"	v
s:plugins	plugged/vim-visual-multi/autoload/vm/comp.vim	/^let s:plugins = extend({$/;"	v
s:plus	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.vim	/^function! s:plus(x, y) abort$/;"	f
s:polyglot	plugged/vim-sleuth/plugin/sleuth.vim	/^  let s:polyglot = 1$/;"	v
s:pop	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:pop	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:pop	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:pop	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:populate_extra_markdown_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:populate_extra_markdown_vars() abort$/;"	f
s:populate_global_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:populate_global_variables() abort$/;"	f
s:populate_hunk_preview_window	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:populate_hunk_preview_window(header, body)$/;"	f
s:populate_wikilocal_options	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:populate_wikilocal_options() abort$/;"	f
s:popup	plugged/fzf/plugin/fzf.vim	/^function! s:popup(opts) abort$/;"	f
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup = {}$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.close = funcref('s:popup__close')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.cursor_moved = funcref('s:popup__cursor_moved')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.echo_help = funcref('s:popup__echo_help')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.floating_win_opts = funcref('s:popup__floating_win_opts')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.get_opener_winnr = funcref('s:popup__get_opener_winnr')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.get_winnr = funcref('s:popup__get_winnr')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.into = funcref('s:popup__into')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.open = funcref('s:popup__open')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.scroll = funcref('s:popup__scroll')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.set_buf_var = funcref('s:popup__set_buf_var')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.update = funcref('s:popup__update')$/;"	v
s:popup	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.window_size = funcref('s:popup__window_size')$/;"	v
s:popup__close	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__close() dict abort$/;"	f
s:popup__cursor_moved	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__cursor_moved() dict abort$/;"	f
s:popup__echo_help	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__echo_help() dict abort$/;"	f
s:popup__floating_win_opts	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__floating_win_opts(width, height) dict abort$/;"	f
s:popup__get_opener_winnr	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__get_opener_winnr() dict abort$/;"	f
s:popup__get_winnr	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__get_winnr() dict abort$/;"	f
s:popup__into	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__into() dict abort$/;"	f
s:popup__open	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__open() dict abort$/;"	f
s:popup__scroll	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__scroll(map) dict abort$/;"	f
s:popup__set_buf_var	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__set_buf_var(name, value) dict abort$/;"	f
s:popup__update	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__update() dict abort$/;"	f
s:popup__window_size	plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__window_size() dict abort$/;"	f
s:popup_for	plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:popup_for(bufnr) abort$/;"	f
s:popup_support	plugged/fzf/plugin/fzf.vim	/^function! s:popup_support()$/;"	f
s:pos2hint_to_line2col2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
s:pos2poskey	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2poskey(pos) abort$/;"	f
s:poskey2pos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:poskey2pos(poskey) abort$/;"	f
s:post	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:post(url, ...) abort$/;"	f
s:postdata	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:postdata(data) abort$/;"	f
s:pow2	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^let s:pow2 = [1]$/;"	v
s:pre_ln	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:pre_ln = -1$/;"	v
s:predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:predefined_quotes = [$/;"	v
s:prefix	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^let s:prefix = expand("<sfile>:p:h:h:t")$/;"	v
s:prefix	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^let s:prefix = expand("<sfile>:p:h:h:t")$/;"	v
s:prefix	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:prefix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:prefix_zero	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:prefix_zero(num) abort$/;"	f
s:prefix_zero	vimrc	/^function! s:prefix_zero(num) abort$/;"	f
s:prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepare_env	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:prepend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:present	plugged/fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
s:prev_ends_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_ends_with(context, expr)$/;"	f
s:prev_lnum	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:prev_lnum(lnum)$/;"	f
s:prev_non_connected_line	plugged/vim-polyglot/indent/applescript.vim	/^func! s:prev_non_connected_line(line)$/;"	f
s:prev_section	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:prev_section(stop_func_begin) abort$/;"	f
s:prev_starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_starts_with(context, expr)$/;"	f
s:prevgood	plugged/vim-polyglot/indent/bst.vim	/^function! s:prevgood(lnum)$/;"	f
s:prevgood	plugged/vim-polyglot/indent/cobol.vim	/^function! s:prevgood(lnum)$/;"	f
s:preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
s:preview_bufnr	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:preview_bufnr = 0$/;"	v
s:preview_color	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:preview_color(linenr) abort$/;"	f
s:preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/scss.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:print_section_header	plugged/vim-startify/autoload/startify.vim	/^function! s:print_section_header() abort$/;"	f
s:print_wiki_list	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:print_wiki_list() abort$/;"	f
s:priorities	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:priorities = {$/;"	v
s:priority	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^let s:priority = []$/;"	v
s:procbar_dots	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:procbar_dots = 0$/;"	v
s:process	plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
s:process	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^fun! s:process(op, M, reg, n) abort$/;"	f
s:process_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_date	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_date(placeholders, default_date) abort$/;"	f
s:process_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
s:process_inline_tags	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_inline_tags(line, header_ids) abort$/;"	f
s:process_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_rtp	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:process_rtp(rtp)$/;"	f
s:process_tag_def_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_def_list(line, deflist) abort$/;"	f
s:process_tag_h	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_h(line, id) abort$/;"	f
s:process_tag_hr	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_hr(line) abort$/;"	f
s:process_tag_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_list(line, lists) abort$/;"	f
s:process_tag_math	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_math(line, math) abort$/;"	f
s:process_tag_para	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_para(line, para) abort$/;"	f
s:process_tag_pre	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_pre(line, pre) abort$/;"	f
s:process_tag_quote	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_quote(line, quote) abort$/;"	f
s:process_tag_table	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_table(line, table, header_ids) abort$/;"	f
s:process_tags_links	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tags_links(line) abort$/;"	f
s:process_tags_remove_links	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tags_remove_links(line) abort$/;"	f
s:process_tags_typefaces	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tags_typefaces(line, header_ids) abort$/;"	f
s:process_title	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_title(placeholders, default_title) abort$/;"	f
s:product	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:product	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:product	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:product	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:program_end	plugged/vim-polyglot/indent/sas.vim	/^let s:program_end = '\\v%(^|;)\\s*endsas\\s*;'$/;"	v
s:progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:project	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:project(projectPath, cont)$/;"	f
s:project_root	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	plugged/vital.vim/autoload/vital/vital.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:prompt	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:prompt(msg)$/;"	f
s:property	plugged/vim-polyglot/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:ps1xml_cpo_save	plugged/vim-polyglot/syntax/ps1xml.vim	/^let s:ps1xml_cpo_save = &cpo$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:purple = [ '#800080', 5 ]$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:push	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:push	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:push	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:push	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:pushd	plugged/fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
s:put_dummy_cursor	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:put_dummy_cursor(curpos) abort "{{{$/;"	f
s:putline	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:putline(how, map) abort$/;"	f
s:py2source	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:py2source = expand('<sfile>:h') . '\/HTTP_python2.py'$/;"	v
s:py3source	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:py3source = expand('<sfile>:h') . '\/HTTP_python3.py'$/;"	v
s:pylint_new	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quench	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:quench(id) abort  "{{{$/;"	f
s:quench_paused	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:quench_paused(...) abort "{{{$/;"	f
s:quench_table	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:quench_table = {}$/;"	v
s:query	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:query(count) abort "{{{$/;"	f
s:query	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:query(db, q, ...) abort$/;"	f
s:query_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
s:query_rawdata	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^function! s:query_rawdata(db, q, ...) abort$/;"	f
s:queue	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:queue(label, queries) abort$/;"	f
s:quickfix_populate	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_populate(data) abort$/;"	f
s:quickfix_toggle	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_toggle(...) abort$/;"	f
s:quiet_warnings	plugged/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	plugged/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:quit_by_error	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^function! s:quit_by_error() abort "{{{$/;"	f
s:quotable	plugged/vim-polyglot/syntax/julia.vim	/^let s:quotable = '\\%(' . s:idregex . '\\|' . s:operators . '\\|[?.]\\|' . s:float_regex . '\\|'/;"	v
s:quoting_colon	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colon = '\\%(\\%(^\\s*\\|\\s\\{6,\\}\\|[' . s:nonid_chars . s:op_chars_wc . ']\\s*/;"	v
s:quoting_colonS	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colonS = '\\s\\@'.s:d(1).'<=:'$/;"	v
s:r_env	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_env = '^\\%(\\' . s:r_envflag . '\\s\\+\\)*\\(\\S\\+\\)'$/;"	v
s:r_envflag	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_envflag = '%(\\S\\+=\\S\\+\\|-[iS]\\|--ignore-environment\\|--split-string\\)'$/;"	v
s:r_hashbang	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_hashbang = '^#!\\s*\\(\\S\\+\\)\\s*\\(.*\\)\\s*'$/;"	v
s:race	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:race(promises) abort$/;"	f
s:rand	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:rand() abort$/;"	f
s:rand	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:rand() abort$/;"	f
s:range	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:range(expr, ...) abort$/;"	f
s:rate_to_state	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:rate_to_state(rate) abort$/;"	f
s:re_escaped	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_escaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs\\\\'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{0}='\\\\\\%([^x_]\\|x\\x\\{0,2}\\|_[.$^]\\=\\)'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{1}= '\\[:\\%(alnum\\|alpha\\|blank\\|cntrl\\|digit\\|graph\\|lower\\|print\\|pun/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{2}='\\[\\%([^^][^]]*\\|\\^.[^]]*\\)\\]'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{3}='{[0-9,]\\+}?\\='$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{4}='(?[iImM]\\{1,2})'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{5}='(\\(?:\\|?=\\|?!\\|?<=\\|?<!\\|?>\\|?[-#ixm]\\)\\=[^()]*)'$/;"	v
s:re_factor_size	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor_size=6$/;"	v
s:re_unescaped	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_unescaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs'$/;"	v
s:read_captions	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:read_captions(files) abort$/;"	f
s:read_content	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
s:read_content	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
s:read_content	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
s:read_global_settings_from_user	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:read_global_settings_from_user() abort$/;"	f
s:readfile	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
s:realpath	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:realpath(path) abort$/;"	f
s:reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:rebase_abbrevs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:red	plugged/doom-one.vim/colors/doom-one.vim	/^let s:red        = '#ff6c6b'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#ff0000', 9 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:red          = [ '#af5f5f', 131 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:red = '#f07178'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:red = '#f07178'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:red = '#f07178'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:red       = ['#ed4a46', 1]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:red       = ['#fa5750', 1]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:red       = ['#d2212d', 1]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:red       = ['#d6000c', 1]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:red = [ '#d70000', '160' ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red1	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red2	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:redraw	plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
s:reduce_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:ref_header	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:ref_header = '\\%(Merge\\|Rebase\\|Upstream\\|Pull\\|Push\\)'$/;"	v
s:reference	plugged/vim-rhubarb/autoload/rhubarb.vim	/^let s:reference = '\\<\\%(\\c\\%(clos\\|resolv\\|referenc\\)e[sd]\\=\\|\\cfix\\%(e[sd]\\)\\=\\)\\/;"	v
s:regex_prefix	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^  let s:regex_prefix = '\\%#=1\\C^'$/;"	v
s:regex_prefix	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^  let s:regex_prefix = '\\C^'$/;"	v
s:regexp_join	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:regexp_join(ps) abort$/;"	f
s:regexp_of_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:regexp_of_marker(item) abort$/;"	f
s:region_vars	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:region_vars(r, cursor, ...) abort$/;"	f
s:register	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:register	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:register	plugged/vim-startify/autoload/startify.vim	/^function! s:register(line, index, type, cmd, path)$/;"	f
s:register	plugged/vital.vim/autoload/vital/__vital__/System/Cache.vim	/^function! s:register(name, class) abort$/;"	f
s:register	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^function! s:register(name) abort$/;"	f
s:register	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:register.restore	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
s:register.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
s:register.restore	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
s:registerAutocmds	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:registerAutocmds()$/;"	f
s:register_table	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^let s:register_table = [$/;"	v
s:registry	plugged/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:registry	plugged/vital.vim/autoload/vital/__vital__/System/Cache.vim	/^let s:registry = {}$/;"	v
s:registry	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^let s:registry = {}$/;"	v
s:regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:reindent	plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() abort " {{{1$/;"	f
s:reject	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:reject(...) abort$/;"	f
s:rel	plugged/vim-polyglot/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:relativenumber	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:relativenumber = exists('&relativenumber')$/;"	v
s:reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:relpath	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:relpath(path) abort$/;"	f
s:remote_headers	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:remote_headers = {}$/;"	v
s:remove_ansi_sequences	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
s:remove_ansi_sequences	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
s:remove_blank_lines	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:remove_blank_lines(lines) abort$/;"	f
s:remove_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:remove_cb(item) abort$/;"	f
s:remove_continuation	plugged/vim-polyglot/indent/make.vim	/^function s:remove_continuation(line)$/;"	f
s:remove_continuation	plugged/vim-polyglot/indent/omake.vim	/^function s:remove_continuation(line)$/;"	f
s:remove_last_separator	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:remove_last_separator(path) abort$/;"	f
s:remove_layout	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:remove_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:remove_mrkr(item) abort$/;"	f
s:remove_page_from_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:remove_page_from_tags(metadata, page_name) abort$/;"	f
s:remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
s:remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:rendered_match	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:rendered_match = 0$/;"	v
s:rendered_par	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:rendered_par = 0$/;"	v
s:reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:repair_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
s:repair_posix_text	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
s:repeat	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:repeat(str,count)$/;"	f
s:repeated_find	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:repeated_find(ai_mode)$/;"	f
s:replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
s:replace	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
s:replace_first	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
s:replace_first	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
s:repo_bare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
s:repo_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
s:repo_git_chomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_homepage	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:repo_homepage() abort$/;"	f
s:repo_list	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! s:repo_list() abort$/;"	f
s:repo_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
s:repo_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:request	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:request(method, url, param, body) abort$/;"	f
s:request	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:request(json, async, url, param, postdata, method) abort$/;"	f
s:request	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^function! s:request(...) abort$/;"	f
s:request_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:request_async(id, cb, method, url, param, body) abort$/;"	f
s:request_async_use_api_key	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:request_async_use_api_key(id, cb, method, url, param, body) abort$/;"	f
s:required_config_value	plugged/vim-polyglot/autoload/unison.vim	/^let s:required_config_value = "!REQUIRED!"$/;"	v
s:reset_buffer	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/cancel.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/count.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/fold.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/highlight.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/insert_register.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/jumplist.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/magic_option.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/module.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/nomagic.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/register.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/scroll.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:reset_buffer()$/;"	f
s:reset_colors	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:reset_colors() abort$/;"	f
s:reset_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
s:reset_tick	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
s:resolve	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:resolve(...) abort$/;"	f
s:rest	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:rest(xs, default) abort$/;"	f
s:restore_cursor_state	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:restore_cursor_state(visualmode) "{{{$/;"	f
s:restore_event_ignore	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:restore_event_ignore() abort$/;"	f
s:restore_fold_state	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:restore_fold_state()$/;"	f
s:restore_options	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:restore_options(options) abort "{{{$/;"	f
s:restore_options	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:restore_options(options) abort "{{{$/;"	f
s:restore_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
s:restore_view	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:restore_view()$/;"	f
s:restorehistory	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:restorehistory(name, history) abort$/;"	f
s:resultset	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:resultset = []$/;"	v
s:resume_queue	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:resume_queue = []$/;"	v
s:retry	autoload/plug.vim	/^function! s:retry()$/;"	f
s:return	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:return(x) abort$/;"	f
s:return0	plugged/vital.vim/test/_testdata/vital/cyclic/autoload/vital/__latest__/Cyclic1.vim	/^function! s:return0() abort$/;"	f
s:return1	plugged/vital.vim/test/_testdata/vital/cyclic/autoload/vital/__latest__/Cyclic1.vim	/^function! s:return1() abort$/;"	f
s:return1	plugged/vital.vim/test/_testdata/vital/cyclic/autoload/vital/__latest__/Cyclic2.vim	/^function! s:return1() abort$/;"	f
s:return1	plugged/vital.vim/test/_testdata/vital/symlink_root/symlink/autoload/vital/__symlink__/Selfmodule.vim	/^function! s:return1() abort$/;"	f
s:return1	plugged/vital.vim/test/_testdata/vital/symlink_source/autoload/vital/__symlink__/Selfmodule.vim	/^function! s:return1() abort$/;"	f
s:return1	plugged/vital.vim/test/_testdata/vital/testplugin/autoload/vital/__latest__/InvalidSelfmodule.vim	/^function! s:return1() abort$/;"	f
s:return1	plugged/vital.vim/test/_testdata/vital/testplugin/autoload/vital/__testplugin__/Selfmodule.vim	/^function! s:return1() abort$/;"	f
s:returnAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! s:returnAppleScriptIndent()$/;"	f
s:returnTypeMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
s:reverse	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
s:reverse_list	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
s:revert	autoload/plug.vim	/^function! s:revert()$/;"	f
s:rfc4648_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^  let s:rfc4648_decode_map[s:rfc4648_encode_table[i]] = i$/;"	v
s:rfc4648_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^let s:rfc4648_decode_map = {}$/;"	v
s:rfc4648_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^  let s:rfc4648_decode_map[s:rfc4648_encode_table[i]] = i$/;"	v
s:rfc4648_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^let s:rfc4648_decode_map = {}$/;"	v
s:rfc4648_encode_table	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^let s:rfc4648_encode_table = [$/;"	v
s:rfc4648_encode_table	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^let s:rfc4648_encode_table = [$/;"	v
s:rgb	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
s:rgb	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:rgb(r, g, b) abort$/;"	f
s:rhs_key_list	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
s:rhs_key_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
s:right	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:right(s)$/;"	f
s:right	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:right(y) abort$/;"	f
s:rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:rmdir	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^function! s:rmdir(path, ...) abort$/;"	f
s:rmdir	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:rmdir(dir) abort$/;"	f
s:rmdir_if_empty	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:rmdir_if_empty(dir) abort$/;"	f
s:rmfile	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:rmfile(file) abort$/;"	f
s:root	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^let s:root = fnamemodify(expand('<sfile>'), ':p:h:h:h:h')$/;"	v
s:root_dir	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/operator_pending_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/smartsign_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-visual-multi/autoload/vm.vim	/^let s:root_dir = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:root_path	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:root_path(subdir) abort$/;"	f
s:rotate16l	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rotate16l(data, bits) abort$/;"	f
s:rotate16r	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rotate16r(data, bits) abort$/;"	f
s:rotate32l	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rotate32l(data, bits) abort$/;"	f
s:rotate32r	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rotate32r(data, bits) abort$/;"	f
s:rotate64l	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^  function! s:rotate64l(data, bits) abort$/;"	f
s:rotate64r	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rotate64r(data, bits) abort$/;"	f
s:rotate8l	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rotate8l(data, bits) abort$/;"	f
s:rotate8r	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rotate8r(data, bits) abort$/;"	f
s:round	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:round(float, ...) abort$/;"	f
s:rshift	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:rshift(a, n) abort$/;"	f
s:rshift32	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^  function! s:rshift32(a, n) abort$/;"	f
s:rst2pseudoxml	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? '/;"	v
s:rtp	autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:ruby_deindent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_endless_def	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_endless_def = '\\<def\\s\\+\\k\\+[!?]\\=\\%((.*)\\|\\s\\)\\s*='$/;"	v
s:ruby_indent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:run	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:run(bfcode) abort$/;"	f
s:run_cmd	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_cmd(cmd) abort$/;"	f
s:run_jobs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:run_jobs = (exists('*job_start') || exists('*jobstart')) && exists('*bufwinid')$/;"	v
s:run_lli	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:run_lli(...) abort$/;"	f
s:run_lua_parse_execute	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:run_lua_parse_execute(bfcode) abort$/;"	f
s:run_processing_procs	plugged/vim-polyglot/indent/sas.vim	/^let s:run_processing_procs = [$/;"	v
s:run_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_spec(root, path, ...) abort$/;"	f
s:run_syntax_fold	plugged/vim-polyglot/syntax/crystal.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
s:run_syntax_fold	plugged/vim-polyglot/syntax/ruby.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
s:run_vim_parse_execute	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^function! s:run_vim_parse_execute(bfcode) abort$/;"	f
s:runtime	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:runtime = resolve($VIMRUNTIME)$/;"	v
s:rxSchemes	plugged/vimwiki/syntax/vimwiki.vim	/^let s:rxSchemes = '\\%('.$/;"	v
s:rxSchemes	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^let s:rxSchemes = '\\%('.$/;"	v
s:rxSep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:rxSep() abort$/;"	f
s:safe_html_line	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:safe_html_line(line) abort$/;"	f
s:safe_html_preformatted	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:safe_html_preformatted(line) abort$/;"	f
s:safe_options	plugged/vim-sleuth/plugin/sleuth.vim	/^let s:safe_options = ['expandtab', 'shiftwidth', 'tabstop', 'textwidth']$/;"	v
s:safesubstitute	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:safesubstitute(text, search, replace, mode) abort$/;"	f
s:safesubstitute	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! s:safesubstitute(text, search, replace, mode) abort$/;"	f
s:safesubstitute	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:safesubstitute(text, search, replace, mode) abort$/;"	f
s:samples	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^let s:samples = []$/;"	v
s:sass_cache_location	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_bg_color = 9$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_bg_color = calendar#color#gen_color(s:saturday_fg_color, s:bg_color, 1, 4)$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_bg_color = calendar#color#select_rgb(s:fg_color, 2, 5)$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:saturday_bg_color = calendar#color#gen_color(s:saturday_fg_color, s:is_dark ? s:fg_color/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_fg_color = 0$/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_fg_color = calendar#color#gen_color(s:saturday_bg_color, s:bg_color, 1, 7)$/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_fg_color = calendar#color#select_rgb(s:bg_color, 2, 6)$/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:saturday_fg_color = calendar#color#select_rgb(s:is_dark ? s:fg_color : s:bg_color, 4)$/;"	v
s:saturday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_title_fg_color = s:saturday_fg_color$/;"	v
s:saturday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:saturday_title_fg_color = calendar#color#gen_color(s:saturday_fg_color, s:saturday_bg_co/;"	v
s:save_cpo	plugged/YankAssassin.vim/plugin/YankAssassin.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/async.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/cipher.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/british.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/france.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/us.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/echo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/mark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message/default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/model.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/pixel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/string.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/task.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/task/google.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/timestamp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/agenda.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/year.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/webapi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/week.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/plugin/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/syntax/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/clrzr/plugin/clrzr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-easymotion.vim/autoload/incsearch/config/easymotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-easymotion.vim/autoload/incsearch/over/modules/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-easymotion.vim/plugin/incsearch/easymotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyspell.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-fuzzy.vim/autoload/incsearch/config/fuzzyword.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch-fuzzy.vim/plugin/incsearch/fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/incsearch.vim/plugin/incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/asl/iasl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/cppclean.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cmake/cmakelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/d/dscanner.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/golangci_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/lynt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/markdown/remark_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nix/nix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phpstan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/po/dennis.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/bandit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pycodestyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/lintr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/raku/raku.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/sorbet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/shfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/solidity/solc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/solidity/solhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/solidity/solium.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/proselint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/textlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/twig/twigcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xquery/basex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yang/pyang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yara/yara.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-asterisk/autoload/asterisk.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-asterisk/plugin/asterisk.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/after/ftplugin/tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/after/indent/objc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/requirements.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/rustc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/swift.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/zig.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/zig_build.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/zig_build_exe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/zig_test.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/fish.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/julia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/kotlin.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/nftables.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/raku.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/ansible.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/fennel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/yaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/gdscript3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/gsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/teraterm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-visual-multi/plugin/visual-multi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base16.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base32.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Base32.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Crockford.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/Hex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base32/RFC4648.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base64.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/Base64.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/RFC4648.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/OrderedSet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/String/Interpolation.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Data/Tree.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Database/SQLite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Locale/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/OptionParser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Random.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Dummy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Cache/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Memory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Cache/SingleFile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Text/CSV.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Text/LTSV.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Text/Parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/BufferManager.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/Search.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/BorderLayout.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/FlowLayout.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Vim/WindowLayout/GridLayout.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/HTML.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/Cookie.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP/CookieJar.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/JSON.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/URI.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTP.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/URI/HTTPS.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vital/__vital__/Web/XML.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/autoload/vitalizer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vital.vim/plugin/vitalizer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpoptions	plugged/vital.vim/autoload/vital/__vital__/System/Process.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:save_cpoptions	plugged/vital.vim/autoload/vital/__vital__/System/Process/Mock.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:save_cpoptions	plugged/vital.vim/autoload/vital/__vital__/System/Process/System.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:save_cpoptions	plugged/vital.vim/autoload/vital/__vital__/System/Process/Vimproc.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:save_expandtab	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_expandtab = &l:expandtab$/;"	v
s:save_fold_state	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:save_fold_state()$/;"	f
s:save_formatoptions	plugged/vim-polyglot/indent/svelte.vim	/^  let s:save_formatoptions = &formatoptions$/;"	v
s:save_last_seen_change	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
s:save_lines	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! s:save_lines() abort$/;"	f
s:save_regions	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! s:save_regions() abort$/;"	f
s:save_shiftwidth	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_shiftwidth = &l:shiftwidth$/;"	v
s:save_softtabstop	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_softtabstop = &l:softtabstop$/;"	v
s:save_tabstop	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_tabstop = &l:tabstop$/;"	v
s:saveflag	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:saveflag = {}$/;"	v
s:savehistory	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:savehistory(name) abort$/;"	f
s:scalar_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:scalar_value = '\\v:\\s*[>|\\|]\\s*$' " shell: >$/;"	v
s:scan	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
s:scan	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
s:scan_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:scan_tags(lines, page_name) abort$/;"	f
s:scissors	plugged/vim-polyglot/syntax/gitcommit.vim	/^  let s:scissors = 1$/;"	v
s:scissors	plugged/vim-polyglot/syntax/gitcommit.vim	/^let s:scissors = 0$/;"	v
s:script_checks	plugged/vim-polyglot/tests/native.vim	/^let s:script_checks = {$/;"	v
s:script_env_checks	plugged/vim-polyglot/tests/native.vim	/^let s:script_env_checks = {$/;"	v
s:script_root_dir	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:script_root_dir = expand('<sfile>:p:h') . "\/..\/"$/;"	v
s:scriptnames	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:scriptnames() abort$/;"	f
s:scroll	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
s:search	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:search(cli, input) abort$/;"	f
s:search	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:search = deepcopy(s:module)$/;"	v
s:search	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:search.prefix = "\/"$/;"	v
s:search	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search = s:cmdline.make()$/;"	v
s:search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search.highlights.prompt = 'Question'$/;"	v
s:search	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search.execute	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:search.execute(cmdline)$/;"	f
s:search.keymapping	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.keymapping() "{{{$/;"	f
s:search.on_char	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_char(cmdline) "{{{$/;"	f
s:search.on_enter	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_enter(cmdline) "{{{$/;"	f
s:search.on_leave	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_leave(cmdline) "{{{$/;"	f
s:search_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:search_old_vital_file	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:search_old_vital_file(to) abort$/;"	f
s:searchsyn	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
s:section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:section_commit_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_delim_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:section_delim_at(lnum) abort$/;"	f
s:section_end	plugged/vim-polyglot/indent/sas.vim	/^let s:section_end = '\\v%(^|;)\\s*%(quit|enddata)\\s*;'$/;"	v
s:section_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:section_pattern	plugged/vital.vim/autoload/vital/__vital__/Text/INI.vim	/^let s:section_pattern = '\\v^\\s*\\[\\s*(.{-1,})\\s*\\]\\s*$'$/;"	v
s:section_run	plugged/vim-polyglot/indent/sas.vim	/^let s:section_run = '\\v%(^|;)\\s*run\\s*;'$/;"	v
s:section_str	plugged/vim-polyglot/indent/sas.vim	/^let s:section_str = '\\v%(^|;)\\s*%(data|proc)>'$/;"	v
s:sectionend	plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionend = '\\s*)\\s*'$/;"	v
s:sectionmovement	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:sectionmovement(pattern,flags,mode,count)$/;"	f
s:sections	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:sections = [$/;"	v
s:sectionstart	plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionstart = '\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|ver/;"	v
s:select	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! s:select(obj) abort$/;"	f
s:select_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:select_color() abort$/;"	f
s:select_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:select_color = 7$/;"	v
s:select_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:select_color = 8$/;"	v
s:select_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:select_color = calendar#color#gen_color(s:fg_color, s:bg_color, 1, 4)$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/cache.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.action_name = ''$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.cursor_pos = [0, 0]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.defaultsyntaxnames = ['Select', 'Sunday', 'Saturday',$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.mode = ''$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.pos = [0, 0]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self.__events = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self._holidays = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self._updated = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:self._events = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:self._key = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:self._events = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:self._key = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/mark.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/model.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task.vim	/^let s:self._updated = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task/google.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._event = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._event_order = []$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._help = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._help_order = []$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._task = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.calendar_views = ['year', 'month', 'week', 'day_4', 'day_1', 'clock']$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.index = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.index_max = len(s:self.calendar_views) - 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.updated = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:self.views = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:self.daynum = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:self.daynum = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:self.daynum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:self.daynum = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:self.daynum = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:self.daynum = 5$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:self.daynum = 6$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:self.daynum = 7$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:self._select_line = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self._contents_cache = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self._select_line = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self._select_title = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:self.x_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:self.x_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:self.y_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:self.x_months = 6$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:self.y_months = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:self.x_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:self.x_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:self.y_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:self.x_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:self.y_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:self.x_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:self.x_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:self.y_months = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:self.x_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:self.y_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:self.x_months = 5$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:self.x_months = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:self.y_months = 6$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:self._select_line = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:self.daynum = 7$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:self.stopend = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:self.daynum = 5$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/year.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:self.views = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:self.ymd = [ 'day', 'month', 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:self.ymd = [ 'month', 'day', 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:self.ymd = [ 'month', 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:self.ymd = [ 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:self.ymd = [ 'year', 'month' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:self.ymd = [ 'year', 'month', 'day' ]$/;"	v
s:self._start_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self._start_visual(mode) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.action	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.action(action) dict abort$/;"	f
s:self.add	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add(time) dict abort$/;"	f
s:self.add_hour	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add_hour(diff) dict abort$/;"	f
s:self.add_minute	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add_minute(diff) dict abort$/;"	f
s:self.add_second	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add_second(diff) dict abort$/;"	f
s:self.add_syntax	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.add_syntax(x, y, l, syn, ...) dict abort$/;"	f
s:self.calendarCandidates	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.calendarCandidates() dict abort$/;"	f
s:self.calendarList	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.calendarList() dict abort$/;"	f
s:self.calendarList	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.calendarList() dict abort$/;"	f
s:self.calendarList	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.calendarList() dict abort$/;"	f
s:self.change_index	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.change_index(diff) dict abort$/;"	f
s:self.check_dir	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.check_dir(...) dict abort$/;"	f
s:self.clear	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.clear() dict abort$/;"	f
s:self.clear	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.clear() dict abort$/;"	f
s:self.clear_cache	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.clear_cache() dict abort$/;"	f
s:self.clear_cache	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.clear_cache() dict abort$/;"	f
s:self.clear_cache	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.clear_cache() dict abort$/;"	f
s:self.clear_cache	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.clear_cache() dict abort$/;"	f
s:self.clear_completed	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.clear_completed(listid) dict abort$/;"	f
s:self.clear_completed	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.clear_completed(listid) dict abort$/;"	f
s:self.clear_completed	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.clear_completed(listid) dict abort$/;"	f
s:self.complete	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.complete(listid, taskid) dict abort$/;"	f
s:self.complete	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.complete(listid, taskid) dict abort$/;"	f
s:self.complete	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.complete(listid, taskid) dict abort$/;"	f
s:self.concat	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.concat(t) dict abort$/;"	f
s:self.contents	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.contents() dict abort$/;"	f
s:self.contents	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.contents() dict abort$/;"	f
s:self.contents	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.contents() dict abort$/;"	f
s:self.contents	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.contents() dict abort$/;"	f
s:self.contents	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.contents() dict abort$/;"	f
s:self.createCalendar	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.createCalendar() dict abort$/;"	f
s:self.createCalendar	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.createCalendar() dict abort$/;"	f
s:self.createCalendar	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.createCalendar() dict abort$/;"	f
s:self.current_view	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.current_view() dict abort$/;"	f
s:self.current_view_index	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.current_view_index() dict abort$/;"	f
s:self.cursor	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.cursor() dict abort$/;"	f
s:self.cursor_moved	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.cursor_moved() dict abort$/;"	f
s:self.day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.day() dict abort$/;"	f
s:self.day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.day() dict abort$/;"	f
s:self.delete	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.delete(key) dict abort$/;"	f
s:self.delete	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.delete(calendarId, eventId, year, month) dict abort$/;"	f
s:self.delete	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.delete(calendarId, eventId, year, month) dict abort$/;"	f
s:self.delete	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.delete(calendarId, eventId, year, month) dict abort$/;"	f
s:self.delete	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.delete(listid, taskid) dict abort$/;"	f
s:self.delete	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.delete(listid, taskid) dict abort$/;"	f
s:self.delete	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.delete(listid, taskid) dict abort$/;"	f
s:self.delmarks	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.delmarks(...) dict abort$/;"	f
s:self.dir	plugged/calendar.vim/autoload/calendar/cache.vim	/^  function! s:self.dir() dict abort$/;"	f
s:self.escape	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.escape(key) dict abort$/;"	f
s:self.event_view	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.event_view() dict abort$/;"	f
s:self.event_visible	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.event_visible() dict abort$/;"	f
s:self.exit_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.exit_visual() dict abort$/;"	f
s:self.exit_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.exit_visual() dict abort$/;"	f
s:self.gather	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.gather(...) dict abort$/;"	f
s:self.get	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.get(key) dict abort$/;"	f
s:self.get	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! s:self.get(k) dict abort$/;"	f
s:self.get	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.get(mark) dict abort$/;"	f
s:self.get_calendar	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.get_calendar() dict abort$/;"	f
s:self.get_calendar	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.get_calendar() dict abort$/;"	f
s:self.get_calendar_views	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.get_calendar_views() dict abort$/;"	f
s:self.get_days	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.get_days() dict abort$/;"	f
s:self.get_days	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.get_days() dict abort$/;"	f
s:self.get_events	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.get_events(year, month) dict abort$/;"	f
s:self.get_events_one_month	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.get_events_one_month(year, month, ...) dict abort$/;"	f
s:self.get_events_one_month	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.get_events_one_month(year, month, ...) dict abort$/;"	f
s:self.get_events_one_month	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.get_events_one_month(year, month, ...) dict abort$/;"	f
s:self.get_hms	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.get_hms() dict abort$/;"	f
s:self.get_holidays	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.get_holidays(year, month) dict abort$/;"	f
s:self.get_index	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_index(listindex, id) dict abort$/;"	f
s:self.get_key	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.get_key() dict abort$/;"	f
s:self.get_key	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:self.get_key() dict abort$/;"	f
s:self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^function! s:self.get_letter() dict abort$/;"	f
s:self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^function! s:self.get_letter() dict abort$/;"	f
s:self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^function! s:self.get_letter() dict abort$/;"	f
s:self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^function! s:self.get_letter() dict abort$/;"	f
s:self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^function! s:self.get_letter() dict abort$/;"	f
s:self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^function! s:self.get_letter() dict abort$/;"	f
s:self.get_mapping	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:self.get_mapping(mode) dict abort$/;"	f
s:self.get_min_day	plugged/calendar.vim/autoload/calendar/view/week.vim	/^function! s:self.get_min_day() dict abort$/;"	f
s:self.get_min_day	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^function! s:self.get_min_day() dict abort$/;"	f
s:self.get_overlap	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.get_overlap() dict abort$/;"	f
s:self.get_padding	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.get_padding() dict abort$/;"	f
s:self.get_raw	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.get_raw(key) dict abort$/;"	f
s:self.get_raw_contents	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.get_raw_contents() dict abort$/;"	f
s:self.get_raw_contents	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:self.get_raw_contents() dict abort$/;"	f
s:self.get_raw_contents	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:self.get_raw_contents() dict abort$/;"	f
s:self.get_task	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.get_task() dict abort$/;"	f
s:self.get_task	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.get_task() dict abort$/;"	f
s:self.get_task	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_task() dict abort$/;"	f
s:self.get_taskList	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.get_taskList() dict abort$/;"	f
s:self.get_taskList	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.get_taskList() dict abort$/;"	f
s:self.get_taskList	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_taskList() dict abort$/;"	f
s:self.get_tasklist_index	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_tasklist_index(id) dict abort$/;"	f
s:self.get_ymd	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.get_ymd() dict abort$/;"	f
s:self.get_ymd	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.get_ymd() dict abort$/;"	f
s:self.go	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.go(day) dict abort$/;"	f
s:self.has_key	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! s:self.has_key(k) dict abort$/;"	f
s:self.height	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.height(h) dict abort$/;"	f
s:self.height	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.height() dict abort$/;"	f
s:self.height	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.height() dict abort$/;"	f
s:self.height	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.height() dict abort$/;"	f
s:self.height	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^function! s:self.height() dict abort$/;"	f
s:self.height	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.height() dict abort$/;"	f
s:self.height	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.height() dict abort$/;"	f
s:self.help_visible	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.help_visible() dict abort$/;"	f
s:self.hour	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.hour() dict abort$/;"	f
s:self.hour	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.hour() dict abort$/;"	f
s:self.hour	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.hour() dict abort$/;"	f
s:self.insert	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.insert(calendarId, title, start, end, year, month, ...) dict abort$/;"	f
s:self.insert	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.insert(calendarId, title, start, end, year, month, ...) dict abort$/;"	f
s:self.insert	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.insert(calendarId, title, start, end, year, month, ...) dict abort$/;"	f
s:self.insert	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.insert(listid, previous, parent, title, ...) dict abort$/;"	f
s:self.insert	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.insert(listid, previous, parent, title, ...) dict abort$/;"	f
s:self.insert	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.insert(listid, previous, parent, title, ...) dict abort$/;"	f
s:self.insert_new_event	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.insert_new_event(action, ...) dict abort$/;"	f
s:self.is_block_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.is_block_visual() dict abort$/;"	f
s:self.is_block_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.is_block_visual() dict abort$/;"	f
s:self.is_gregorian	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.is_gregorian() dict abort$/;"	f
s:self.is_gregorian	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.is_gregorian() dict abort$/;"	f
s:self.is_line_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.is_line_visual() dict abort$/;"	f
s:self.is_line_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.is_line_visual() dict abort$/;"	f
s:self.is_selected	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.is_selected() dict abort$/;"	f
s:self.is_selected	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.is_selected() dict abort$/;"	f
s:self.is_selected	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.is_selected() dict abort$/;"	f
s:self.is_selected	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.is_selected() dict abort$/;"	f
s:self.is_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.is_visual() dict abort$/;"	f
s:self.is_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.is_visual() dict abort$/;"	f
s:self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^function! s:self.max_letter() dict abort$/;"	f
s:self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^function! s:self.max_letter() dict abort$/;"	f
s:self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^function! s:self.max_letter() dict abort$/;"	f
s:self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^function! s:self.max_letter() dict abort$/;"	f
s:self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^function! s:self.max_letter() dict abort$/;"	f
s:self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^function! s:self.max_letter() dict abort$/;"	f
s:self.minute	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.minute() dict abort$/;"	f
s:self.minute	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.minute() dict abort$/;"	f
s:self.minute	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.minute() dict abort$/;"	f
s:self.month	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.month() dict abort$/;"	f
s:self.month	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.month() dict abort$/;"	f
s:self.move	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.move(calendarId, eventId, destination, year, month) dict abort$/;"	f
s:self.move	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.move(calendarId, eventId, destination, year, month) dict abort$/;"	f
s:self.move	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.move(calendarId, eventId, destination, year, month) dict abort$/;"	f
s:self.move	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.move(listid, taskid, previous, parent) dict abort$/;"	f
s:self.move	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.move(listid, taskid, previous, parent) dict abort$/;"	f
s:self.move	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.move(listid, taskid, previous, parent) dict abort$/;"	f
s:self.move	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.move(x, y) dict abort$/;"	f
s:self.move_day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_day(diff) dict abort$/;"	f
s:self.move_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_day(diff) dict abort$/;"	f
s:self.move_event	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.move_event() dict abort$/;"	f
s:self.move_hour	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_hour(diff) dict abort$/;"	f
s:self.move_hour	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_hour(diff) dict abort$/;"	f
s:self.move_minute	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_minute(diff) dict abort$/;"	f
s:self.move_minute	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_minute(diff) dict abort$/;"	f
s:self.move_month	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_month(diff) dict abort$/;"	f
s:self.move_month	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_month(diff) dict abort$/;"	f
s:self.move_second	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_second(diff) dict abort$/;"	f
s:self.move_second	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_second(diff) dict abort$/;"	f
s:self.move_year	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_year(diff) dict abort$/;"	f
s:self.move_year	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_year(diff) dict abort$/;"	f
s:self.new	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.new(...) dict abort$/;"	f
s:self.new	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.new(y, m, d) dict abort$/;"	f
s:self.new	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.new(y, m, d) dict abort$/;"	f
s:self.new	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.new(h, m, s) dict abort$/;"	f
s:self.new_mjd	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.new_mjd(mjd) dict abort$/;"	f
s:self.new_mjd	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.new_mjd(mjd) dict abort$/;"	f
s:self.on_resize	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.on_resize() dict abort$/;"	f
s:self.on_resize	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.on_resize() dict abort$/;"	f
s:self.on_resize	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.on_resize() dict abort$/;"	f
s:self.on_resize	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.on_resize() dict abort$/;"	f
s:self.on_resize	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.on_resize() dict abort$/;"	f
s:self.over	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.over(t) dict abort$/;"	f
s:self.path	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.path(key) dict abort$/;"	f
s:self.prepare	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.prepare() dict abort$/;"	f
s:self.redraw	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.redraw(...) dict abort$/;"	f
s:self.rmdir_on_exit	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.rmdir_on_exit() dict abort$/;"	f
s:self.save	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.save(key, val) dict abort$/;"	f
s:self.save	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! s:self.save(k, v) dict abort$/;"	f
s:self.save	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.save() dict abort$/;"	f
s:self.second	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.second() dict abort$/;"	f
s:self.second	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.second() dict abort$/;"	f
s:self.second	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.second() dict abort$/;"	f
s:self.seconds	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.seconds() dict abort$/;"	f
s:self.select_index	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.select_index() dict abort$/;"	f
s:self.set	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.set(mark) dict abort$/;"	f
s:self.set_calendar_views	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_calendar_views(views) dict abort$/;"	f
s:self.set_contents	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.set_contents() dict abort$/;"	f
s:self.set_day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.set_day(day) dict abort$/;"	f
s:self.set_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_day(day) dict abort$/;"	f
s:self.set_day_name	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.set_day_name() dict abort$/;"	f
s:self.set_index	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_index(view) dict abort$/;"	f
s:self.set_month	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.set_month() dict abort$/;"	f
s:self.set_month	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_month(month) dict abort$/;"	f
s:self.set_month_from_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_month_from_day() dict abort$/;"	f
s:self.set_selected	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
s:self.set_selected	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
s:self.set_selected	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
s:self.set_selected	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
s:self.set_size	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.set_size() dict abort$/;"	f
s:self.set_size	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.set_size() dict abort$/;"	f
s:self.set_size	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.set_size() dict abort$/;"	f
s:self.set_size	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.set_size() dict abort$/;"	f
s:self.set_task_visibility	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_task_visibility(_task) dict abort$/;"	f
s:self.set_time	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.set_time(time) dict abort$/;"	f
s:self.set_time	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_time(time) dict abort$/;"	f
s:self.set_view_source	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_view_source(source) dict abort$/;"	f
s:self.showmarks	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.showmarks() dict abort$/;"	f
s:self.split	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.split() dict abort$/;"	f
s:self.split_message	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:self.split_message(message) dict abort$/;"	f
s:self.start_block_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.start_block_visual() dict abort$/;"	f
s:self.start_block_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.start_block_visual() dict abort$/;"	f
s:self.start_line_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.start_line_visual() dict abort$/;"	f
s:self.start_line_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.start_line_visual() dict abort$/;"	f
s:self.start_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.start_visual() dict abort$/;"	f
s:self.start_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.start_visual() dict abort$/;"	f
s:self.sub	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.sub(time) dict abort$/;"	f
s:self.subtract	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.subtract(time) dict abort$/;"	f
s:self.task_visible	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.task_visible() dict abort$/;"	f
s:self.time	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.time() dict abort$/;"	f
s:self.time	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.time() dict abort$/;"	f
s:self.timerange	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.timerange() dict abort$/;"	f
s:self.timerange	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.timerange() dict abort$/;"	f
s:self.uncomplete	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.uncomplete(listid, taskid) dict abort$/;"	f
s:self.uncomplete	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.uncomplete(listid, taskid) dict abort$/;"	f
s:self.uncomplete	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.uncomplete(listid, taskid) dict abort$/;"	f
s:self.update	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update() dict abort$/;"	f
s:self.update	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.update(calendarId, eventId, title, year, month, ...) dict abort$/;"	f
s:self.update	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.update(calendarId, eventId, title, year, month, ...) dict abort$/;"	f
s:self.update	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.update(calendarId, eventId, title, year, month, ...) dict abort$/;"	f
s:self.update	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.update(listid, taskid, title, ...) dict abort$/;"	f
s:self.update	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.update(listid, taskid, title, ...) dict abort$/;"	f
s:self.update	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.update(listid, taskid, title, ...) dict abort$/;"	f
s:self.update_force	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update_force() dict abort$/;"	f
s:self.update_force_redraw	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update_force_redraw() dict abort$/;"	f
s:self.update_if_resized	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update_if_resized() dict abort$/;"	f
s:self.updated	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.updated() dict abort$/;"	f
s:self.updated	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.updated() dict abort$/;"	f
s:self.updated	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.updated() dict abort$/;"	f
s:self.updated	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.updated() dict abort$/;"	f
s:self.updated	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.updated() dict abort$/;"	f
s:self.view_count	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.view_count() dict abort$/;"	f
s:self.visible_num	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.visible_num() dict abort$/;"	f
s:self.visual_mode	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.visual_mode() dict abort$/;"	f
s:self.visual_mode	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.visual_mode() dict abort$/;"	f
s:self.visual_start_day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.visual_start_day() dict abort$/;"	f
s:self.visual_start_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.visual_start_day() dict abort$/;"	f
s:self.visual_start_time	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.visual_start_time() dict abort$/;"	f
s:self.visual_start_time	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.visual_start_time() dict abort$/;"	f
s:self.width	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.width() dict abort$/;"	f
s:self.width	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.width() dict abort$/;"	f
s:self.width	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.width() dict abort$/;"	f
s:self.width	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.width() dict abort$/;"	f
s:self.width	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.width() dict abort$/;"	f
s:self.year	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.year() dict abort$/;"	f
s:self.year	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.year() dict abort$/;"	f
s:self.ymax	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.ymax() dict abort$/;"	f
s:sep	plugged/vim-startify/autoload/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep	plugged/vim-startify/syntax/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:sep_splitter() abort$/;"	f
s:separator	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
s:separator	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:separator() abort$/;"	f
s:session_dir	plugged/vim-startify/autoload/startify.vim	/^let s:session_dir = startify#get_session_path()$/;"	v
s:set	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
s:set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set(...) abort$/;"	f
s:set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:set = deepcopy(s:_base_set)$/;"	v
s:set	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
s:set	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:set(o, v) abort$/;"	f
s:set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set(...) abort$/;"	f
s:set	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^let s:set = deepcopy(s:_base_set)$/;"	v
s:set.add	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.add(x) abort$/;"	f
s:set.add	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.add(x) abort$/;"	f
s:set.clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.clear() abort$/;"	f
s:set.clear	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.clear() abort$/;"	f
s:set.difference_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.difference_update(t) abort$/;"	f
s:set.difference_update	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.difference_update(t) abort$/;"	f
s:set.discard	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.discard(e) abort$/;"	f
s:set.discard	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.discard(e) abort$/;"	f
s:set.iand	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.iand(t) abort$/;"	f
s:set.iand	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.iand(t) abort$/;"	f
s:set.intersection_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.intersection_update(t) abort$/;"	f
s:set.intersection_update	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.intersection_update(t) abort$/;"	f
s:set.ior	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ior(t) abort$/;"	f
s:set.ior	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.ior(t) abort$/;"	f
s:set.isub	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.isub(t) abort$/;"	f
s:set.isub	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.isub(t) abort$/;"	f
s:set.ixor	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ixor(t) abort$/;"	f
s:set.ixor	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.ixor(t) abort$/;"	f
s:set.pop	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.pop() abort$/;"	f
s:set.pop	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.pop() abort$/;"	f
s:set.remove	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.remove(e) abort$/;"	f
s:set.remove	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.remove(e) abort$/;"	f
s:set.symmetric_difference_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.symmetric_difference_update(t) abort$/;"	f
s:set.symmetric_difference_update	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.symmetric_difference_update(t) abort$/;"	f
s:set.update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.update(iterable) abort$/;"	f
s:set.update	plugged/vital.vim/autoload/vital/__vital__/Data/Set.vim	/^function! s:set.update(iterable) abort$/;"	f
s:set_autocmds	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:set_autocmds(id) abort "{{{$/;"	f
s:set_commands	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! s:set_commands() abort$/;"	f
s:set_config	plugged/vital.vim/autoload/vital/__vital__/Assertion.vim	/^function! s:set_config(config) abort$/;"	f
s:set_current_window	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:set_current_window(expr)$/;"	f
s:set_cursor	plugged/vim-startify/autoload/startify.vim	/^function! s:set_cursor() abort$/;"	f
s:set_custom_section	plugged/vim-startify/autoload/startify.vim	/^function! s:set_custom_section(section) abort$/;"	f
s:set_default	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_default	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_default	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_error_handler	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^function! s:set_error_handler(handler) abort$/;"	f
s:set_event_ignore	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:set_event_ignore() abort$/;"	f
s:set_extend_mode	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:set_extend_mode(X) abort$/;"	f
s:set_fold_levels	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:set_fold_levels()$/;"	f
s:set_global_options	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:set_global_options() abort$/;"	f
s:set_guicolors	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:set_guicolors() abort$/;"	f
s:set_indent	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_indent(lnum, new_indent) abort$/;"	f
s:set_major_version	plugged/vital.vim/autoload/vital/__vital__/Vim/Python.vim	/^function! s:set_major_version(version) abort$/;"	f
s:set_mappings	plugged/vim-startify/autoload/startify.vim	/^function! s:set_mappings() abort$/;"	f
s:set_mark_tick	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:set_mark_tick(...)$/;"	f
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  function! s:set_match_words() abort$/;"	f
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_max_workers	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^function! s:set_max_workers(n) abort$/;"	f
s:set_new_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_new_mrkr(item, new_mrkr) abort$/;"	f
s:set_path_handler	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:set_path_handler = {}$/;"	v
s:set_path_handler.err	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.err(buffer) abort$/;"	f
s:set_path_handler.out	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.out(buffer, path) abort$/;"	f
s:set_prefix	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_prefix	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_prefix	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_prefix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_reg	plugged/vim-visual-multi/autoload/vm.vim	/^fun! s:set_reg() abort$/;"	f
s:set_search	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:set_search(pattern) abort$/;"	f
s:set_search_reg	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:set_search_reg(pattern, command) abort$/;"	f
s:set_search_related_stuff	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:set_search_related_stuff(cli, cmd, ...) abort$/;"	f
s:set_state	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_state(item, new_rate) abort$/;"	f
s:set_state_plus_children	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_state_plus_children(item, new_rate, ...) abort$/;"	f
s:set_state_recursively	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_state_recursively(item, new_rate) abort$/;"	f
s:set_timezone	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:set_timezone(calendarId, obj) abort$/;"	f
s:set_view	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:set_view(view) abort$/;"	f
s:set_vimrepeat	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:set_vimrepeat(cmd) abort$/;"	f
s:set_windowlocal_options	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:set_windowlocal_options() abort$/;"	f
s:setbufline	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! s:setbufline(buf_name, lnum, content) abort$/;"	f
s:setfperm_dir	plugged/calendar.vim/autoload/calendar/cache.vim	/^  function! s:setfperm_dir(dir) abort$/;"	f
s:setfperm_file	plugged/calendar.vim/autoload/calendar/cache.vim	/^  function! s:setfperm_file(path) abort$/;"	f
s:setline	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:setline(lnum, text) abort$/;"	f
s:setup_buffer_enter	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_buffer_enter() abort$/;"	f
s:setup_buffer_leave	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_buffer_leave() abort$/;"	f
s:setup_buffer_win_enter	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_buffer_win_enter() abort$/;"	f
s:setup_cleared_syntax	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_cleared_syntax() abort$/;"	f
s:setup_done	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:setup_new_wiki_buffer	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_new_wiki_buffer() abort$/;"	f
s:setup_path	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_path(bufnr, continuation)$/;"	f
s:setvar	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:setvar(nr, varname, val)$/;"	f
s:setwinvar	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:setwinvar(uniq_winnr, varname, val)$/;"	f
s:sfile	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Lua/Prelude.vim	/^let s:sfile = tr(expand('<sfile>:p'), '\\', '\/')$/;"	v
s:sfile	plugged/vital.vim/autoload/vital/__vital__/Deprecated/Text/Sexp.vim	/^let s:sfile = expand('<sfile>:p')$/;"	v
s:sfile	plugged/vital.vim/autoload/vital/__vital__/Interpreter/Brainf__k.vim	/^let s:sfile = expand('<sfile>:p')$/;"	v
s:sfuncs	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:sfuncs(path) abort$/;"	f
s:sha1blocksize	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^let s:sha1blocksize = 64$/;"	v
s:sha1context	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^let s:sha1context = {$/;"	v
s:sha1context.init	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sha1context.init() dict abort$/;"	f
s:sha1context.input	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sha1context.input(bytes) dict abort$/;"	f
s:sha1context.length.sizeset	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sha1context.length.sizeset(data) dict abort$/;"	f
s:sha1context.messageblock.push	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sha1context.messageblock.push(data) dict abort$/;"	f
s:sha1context.padding	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sha1context.padding() dict abort$/;"	f
s:sha1context.process	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sha1context.process() dict abort$/;"	f
s:sha1context.result	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sha1context.result(digest) dict abort$/;"	f
s:sha1hashsize	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^let s:sha1hashsize  = 20 " byte = 160bit (20*8)$/;"	v
s:shade_hl_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:shellesc	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_cmd	plugged/fzf/plugin/fzf.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:shellesc_ps1	autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:shellesc_sh	autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
s:shellescape	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
s:shellescape	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
s:shellescape	plugged/vital.vim/autoload/vital/__vital__/System/Process/System.vim	/^function! s:shellescape(string) abort$/;"	f
s:shift	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:shift(t, x) abort$/;"	f
s:shift	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shift	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shift	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shift	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^let s:shift = [$/;"	v
s:shift_options	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:shift_options() abort "{{{$/;"	f
s:shift_options	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:shift_options() abort "{{{$/;"	f
s:shiftwidth	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:shiftwidth = &shiftwidth$/;"	v
s:shiftwidth	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:shiftwidth = ''$/;"	v
s:shiftwidth	plugged/vim-polyglot/indent/pgsql.vim	/^    fun! s:shiftwidth()$/;"	f
s:shiftwidth	plugged/vim-polyglot/indent/rust.vim	/^    function! s:shiftwidth()$/;"	f
s:shiftwidth	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:shiftwidth() abort$/;"	f
s:shorten	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:shorten(name) abort$/;"	f
s:shorten_text	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! s:shorten_text(text, len) abort$/;"	f
s:shorten_text_simple	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! s:shorten_text_simple(text, len) abort$/;"	f
s:shortpath	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:shortpath	plugged/fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
s:should_plus_one_count	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:should_plus_one_count(cword, config, mode) abort$/;"	f
s:should_register	plugged/vim-polyglot/syntax/vue.vim	/^function! s:should_register(language, start_pattern)$/;"	f
s:should_use_migemo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
s:should_use_regexp	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
s:should_use_smartsign	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
s:show_bookmarks	plugged/vim-startify/autoload/startify.vim	/^function! s:show_bookmarks() abort$/;"	f
s:show_changes	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:show_changes(current, installing_modules) abort$/;"	f
s:show_commands	plugged/vim-startify/autoload/startify.vim	/^function! s:show_commands() abort$/;"	f
s:show_dir	plugged/vim-startify/autoload/startify.vim	/^function! s:show_dir() abort$/;"	f
s:show_files	plugged/vim-startify/autoload/startify.vim	/^function! s:show_files() abort$/;"	f
s:show_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:show_lists(lists) abort$/;"	f
s:show_sessions	plugged/vim-startify/autoload/startify.vim	/^function! s:show_sessions() abort$/;"	f
s:show_toc	plugged/vim-polyglot/ftplugin/help.vim	/^  function! s:show_toc() abort$/;"	f
s:shutdown	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:shutdown(label) abort$/;"	f
s:sid	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:sid(path) abort$/;"	f
s:sid2path	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:sid2path(sid) abort$/;"	f
s:sid2sfuncs	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2svars	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:sid2svars(sid) abort$/;"	f
s:sign	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:sign(a) abort$/;"	f
s:sign_extension	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^  function! s:sign_extension(n) abort$/;"	f
s:sign_table	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:sign_table = {}$/;"	v
s:sign_table	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:sign_table.ja = {$/;"	v
s:sign_table	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^let s:sign_table.us = {$/;"	v
s:signature	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signature(filePath, line, character, cont)$/;"	f
s:signatureData	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signatureData(filePath, line, character, cont)$/;"	f
s:silent_after_search	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:silent_after_search(...) abort " arg: mode(1)$/;"	f
s:silent_feedkeys	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:silent_feedkeys(expr, name, ...) abort$/;"	f
s:silent_feedkeys	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:silent_feedkeys(expr, name, ...)$/;"	f
s:silver	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:silver = [ '#c0c0c0', 7 ]$/;"	v
s:simple	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:simple           = { m -> index(split('hlwebWEB', '\\zs'), m)          >= 0 }$/;"	v
s:simple_parser	plugged/vital.vim/autoload/vital/__vital__/Text/Lexer.vim	/^function! s:simple_parser(expr) abort$/;"	f
s:single	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^let s:single = { c -> index(split('hljkwebWEB$^0{}()%nN_', '\\zs'), c) >= 0 }$/;"	v
s:single	plugged/vim-visual-multi/autoload/vm/operators.vim	/^let s:single = { c -> index(split('hljkwebWEB$^0{}()%nN', '\\zs'), c) >= 0 }$/;"	v
s:skip	plugged/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort " Vim 8.2.0257 (00f3b4e007), 8.2.0991 (0fe937fd86), 8.2.0996 (40a019f/;"	f
s:skip	plugged/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort$/;"	f
s:skip	plugged/vim-polyglot/indent/cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip	plugged/vim-polyglot/syntax/ledger.vim	/^  let s:skip .= '\\n\\@!'$/;"	v
s:skip	plugged/vim-polyglot/syntax/ledger.vim	/^let s:skip = s:fb > 0 ? '\\|^\\n' : ''$/;"	v
s:skip	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:skip() abort$/;"	f
s:skip2	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip2 = '<SID>InLiteral(line("."), col(".")) || <SID>InComment(line("."), col(".")) == 1'$/;"	v
s:skip3	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip3 = '!<SID>InKeyword(line("."), col("."))'$/;"	v
s:skip4	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip4 = '!<SID>InBracket(line("."), col("."))'$/;"	v
s:skipPatterns	plugged/vim-polyglot/indent/julia.vim	/^let s:skipPatterns = '\\<julia\\%(Comprehension\\%(For\\|If\\)\\|RangeKeyword\\|Comment\\%([LM]\\/;"	v
s:skipPatternsBasic	plugged/vim-polyglot/indent/julia.vim	/^let s:skipPatternsBasic = '\\<julia\\%(Comment\\%([LM]\\|Delim\\)\\)\\>'$/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_event_delete_confirm	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:skip_event_delete_confirm() abort$/;"	f
s:skip_expr	plugged/vim-polyglot/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/lua.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~# 'luaComment\\\\|luaString'"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/solidity.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_if_not	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:skip_if_not(current_lnum, ...)$/;"	f
s:skip_pattern	plugged/vital.vim/autoload/vital/__vital__/Text/TOML.vim	/^let s:skip_pattern = '\\C^\\%(\\%(\\s\\|\\r\\?\\n\\)\\+\\|#[^\\r\\n]*\\)'$/;"	v
s:skip_shorter_lines	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:skip_shorter_lines() abort$/;"	f
s:skip_syntax	plugged/vim-polyglot/indent/nix.vim	/^let s:skip_syntax = '\\%(Comment\\|String\\)$'$/;"	v
s:skip_task_clear_completed_confirm	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:skip_task_clear_completed_confirm() abort$/;"	f
s:skip_task_delete_confirm	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:skip_task_delete_confirm() abort$/;"	f
s:smart_case_change	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:smart_case_change(cursor, txt) abort$/;"	f
s:smart_execute_command	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:smart_execute_command	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:smart_execute_command	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:smartbackword	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:smartbackword = s:modules.get('IgnoreRegexpBackwardWord').make()$/;"	v
s:smartbackword._condition	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:smartbackword._condition() abort$/;"	f
s:smartsign	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:smartsign(pattern, ...) abort$/;"	f
s:smartsign_char	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^function! s:smartsign_char(sign, ...) abort$/;"	f
s:snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:solarized_termcolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:some	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:some(v) abort$/;"	f
s:sort	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sort	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sort	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sort	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:sort(lst) abort$/;"	f
s:sort	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:sort(list, f) abort$/;"	f
s:sort	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:sort(xs, callable) abort$/;"	f
s:sortByLength	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:sortByLength(i1, i2)$/;"	f
s:sort_buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:sort_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sort_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sort_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sort_by	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:sort_by(list, unary_f) abort$/;"	f
s:sort_by	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:sort_by(xs, callable) abort$/;"	f
s:sort_by_mtime	plugged/vim-startify/autoload/startify.vim	/^    function! s:sort_by_mtime(foo, bar)$/;"	f
s:sort_by_tick	plugged/vim-startify/autoload/startify.vim	/^function! s:sort_by_tick(one, two)$/;"	f
s:sort_num	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:sort_num(xs) abort$/;"	f
s:sort_num	plugged/vim-asterisk/autoload/asterisk.vim	/^    function! s:sort_num(xs) abort$/;"	f
s:sort_pos	plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:sort_pos(pos_list) abort$/;"	f
s:sort_pos	plugged/vim-asterisk/autoload/asterisk.vim	/^function! s:sort_pos(pos_list) abort$/;"	f
s:source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:source	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:source.gather_candidates	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
s:space_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:space_bg_color = calendar#color#gen_color(s:fg_color, s:bg_color, 1, 0)$/;"	v
s:space_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:space_fg_color = calendar#color#gen_color(s:fg_color, s:bg_color, 0, 1)$/;"	v
s:span	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:span	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:span	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:span	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:span	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:span(callable, xs) abort$/;"	f
s:spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:spawn	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
s:spawn	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
s:special_chars_syn_pattern	plugged/vim-polyglot/indent/cython.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi/;"	v
s:special_chars_syn_pattern	plugged/vim-polyglot/indent/python.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi/;"	v
s:spell_cluster	plugged/vim-polyglot/syntax/crystal.vim	/^let s:spell_cluster = exists('crystal_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:spell_cluster	plugged/vim-polyglot/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:sphinx_cache_location	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:sphinx_cache_location = syntastic#util#tmpdir()$/;"	v
s:splat_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:split	plugged/fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
s:split	plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:split(str, delimiter)$/;"	f
s:split	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:split(path) abort$/;"	f
s:split3	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
s:split3	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
s:split_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
s:split_by_displaywidth	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
s:split_by_keys	plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
s:split_by_keys	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
s:split_leftright	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
s:split_leftright	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
s:split_over	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:split_over(t, texts, v, llen, i, height) abort$/;"	f
s:split_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
s:split_posix_text	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
s:split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:splittable	plugged/fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
s:srand	plugged/vital.vim/autoload/vital/__vital__/Random/Mt19937ar.vim	/^function! s:srand(...) abort$/;"	f
s:srand	plugged/vital.vim/autoload/vital/__vital__/Random/Xor128.vim	/^function! s:srand(...) abort$/;"	f
s:st	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:stack_size	plugged/vim-polyglot/scripts/eregex.vim	/^let s:stack_size=0$/;"	v
s:stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
s:standard	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:standard(...)$/;"	f
s:standard_search	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:standard_search(...)$/;"	f
s:standard_search_back	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:standard_search_back(...)$/;"	f
s:start_col	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_col(lnum)$/;"	f
s:start_pattern	plugged/vim-polyglot/syntax/vue.vim	/^  let s:start_pattern = '<' . s:language.tag . '\\>\\_[^>]*' . s:attr_pattern . '\\_[^>]*>'$/;"	v
s:start_render	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:start_render = 0$/;"	v
s:start_syntax	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_syntax(lnum)$/;"	f
s:start_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:start_tag = '<\\_s*\\%(>\\|\\${\\|\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\)'$/;"	v
s:start_ts	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:start_ts = -1$/;"	v
s:startexp	plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:startexp = '[\\{\\(]\\s*$'$/;"	v
s:starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:starts_with(context, expr)$/;"	f
s:starts_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
s:starts_with	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
s:state	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:state = s:ON$/;"	v
s:state_error	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^let s:state_error = 3 " called Input after Result$/;"	v
s:status	autoload/plug.vim	/^function! s:status()$/;"	f
s:status	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:statusline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:stay	plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:stay(cli, input) abort$/;"	f
s:step_back	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! s:step_back() abort$/;"	f
s:stepmatch	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
s:steps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
s:stop_statement	plugged/vim-polyglot/indent/cython.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:stop_statement	plugged/vim-polyglot/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:store	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
s:store	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
s:store	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:str2nr	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:str2nr(str, ...) abort$/;"	f
s:str_modifiers	plugged/vim-polyglot/scripts/eregex.vim	/^let s:str_modifiers='iISCDMm'$/;"	v
s:strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
s:strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:string_decode	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_decode(str) abort$/;"	f
s:string_encode	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_encode(str) abort$/;"	f
s:string_length	plugged/vimwiki/autoload/vimwiki/lst.vim	/^  function! s:string_length(str) abort$/;"	f
s:strip	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:strip	plugged/vim-polyglot/indent/bst.vim	/^function! s:strip(lnum)$/;"	f
s:stripComment	plugged/vim-polyglot/indent/haskell.vim	/^function! s:stripComment(line)$/;"	f
s:strip_namespace_and_macro_chars	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f
s:strip_trailing_new_line	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
s:strip_white_space	plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
s:stripped	plugged/vim-polyglot/indent/cobol.vim	/^function! s:stripped(lnum)$/;"	f
s:strwidthpart	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:sub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:sub	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:sub(a,b) abort$/;"	f
s:subcommands_before_2_5	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:subcommands_before_2_5 = [$/;"	v
s:subseparator	plugged/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
s:subseparator	plugged/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
s:subst_func	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:subst_func(line, regexp, func, ...) abort$/;"	f
s:substitute_last	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
s:substitute_last	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
s:substitute_path_separator	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:substitute_path_separator	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:substitute_path_separator	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:substitute_rx_in_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:substitute_rx_in_line(lnum, pattern, new_string) abort$/;"	f
s:substitute_string_in_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:substitute_string_in_line(lnum, old_string, new_string) abort$/;"	f
s:subtype	plugged/vim-polyglot/autoload/svelte.vim	/^  let s:subtype = ''$/;"	v
s:subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:success	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^let s:success     = 0$/;"	v
s:suffix	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
s:suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
s:suffixesadd	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:suffixesadd	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:suite	plugged/calendar.vim/test/cipher.vim	/^let s:suite = themis#suite('cipher')$/;"	v
s:suite	plugged/calendar.vim/test/day.vim	/^let s:suite = themis#suite('day')$/;"	v
s:suite	plugged/calendar.vim/test/pixel.vim	/^let s:suite = themis#suite('pixel')$/;"	v
s:suite	plugged/calendar.vim/test/week.vim	/^let s:suite = themis#suite('week')$/;"	v
s:suite	plugged/incsearch.vim/test/autonohlsearch.vim	/^let s:suite = themis#suite('autonlsearch')$/;"	v
s:suite	plugged/incsearch.vim/test/cancel.vim	/^let s:suite = themis#suite('cancel')$/;"	v
s:suite	plugged/incsearch.vim/test/count.vim	/^let s:suite = themis#suite('count')$/;"	v
s:suite	plugged/incsearch.vim/test/default_behaviors.vim	/^let s:suite = themis#suite('default_behaviors')$/;"	v
s:suite	plugged/incsearch.vim/test/default_settings.vim	/^let s:suite = themis#suite('default_settings')$/;"	v
s:suite	plugged/incsearch.vim/test/error_warning_emulation.vim	/^let s:suite = themis#suite('error_warning_emulation')$/;"	v
s:suite	plugged/incsearch.vim/test/fold.vim	/^let s:suite = themis#suite('fold')$/;"	v
s:suite	plugged/incsearch.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	plugged/incsearch.vim/test/history.vim	/^let s:suite = themis#suite('history')$/;"	v
s:suite	plugged/incsearch.vim/test/incremental_next_prev.vim	/^let s:suite = themis#suite('incremental_next_prev')$/;"	v
s:suite	plugged/incsearch.vim/test/insert_register.vim	/^let s:suite = themis#suite('insert_register')$/;"	v
s:suite	plugged/incsearch.vim/test/jumplist.vim	/^let s:suite = themis#suite('jumplist')$/;"	v
s:suite	plugged/incsearch.vim/test/magic_option.vim	/^let s:suite = themis#suite('magic_option')$/;"	v
s:suite	plugged/incsearch.vim/test/module.vim	/^let s:suite = themis#suite('cancel')$/;"	v
s:suite	plugged/incsearch.vim/test/n_and_N.vim	/^let s:suite = themis#suite('n_and_N')$/;"	v
s:suite	plugged/incsearch.vim/test/nomagic.vim	/^let s:suite = themis#suite('nomagic')$/;"	v
s:suite	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^let s:suite = themis#suite('operator_pending_behavior')$/;"	v
s:suite	plugged/incsearch.vim/test/register.vim	/^let s:suite = themis#suite('register')$/;"	v
s:suite	plugged/incsearch.vim/test/repetition.vim	/^let s:suite = themis#suite('repetition')$/;"	v
s:suite	plugged/incsearch.vim/test/scroll.vim	/^let s:suite = themis#suite('scroll')$/;"	v
s:suite	plugged/incsearch.vim/test/util.vim	/^let s:suite = themis#suite('util')$/;"	v
s:suite	plugged/incsearch.vim/test/visual_behavior.vim	/^let s:suite = themis#suite('visual_behaviors')$/;"	v
s:suite	plugged/incsearch.vim/test/visual_emulation.vim	/^let s:suite = themis#suite('visual_emulation')$/;"	v
s:suite	plugged/lightline.vim/test/autocmd.vim	/^let s:suite = themis#suite('autocmd')$/;"	v
s:suite	plugged/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	plugged/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	plugged/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	plugged/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	plugged/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	plugged/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	plugged/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	plugged/lightline.vim/test/popup.vim	/^let s:suite = themis#suite('popup')$/;"	v
s:suite	plugged/lightline.vim/test/quickfix.vim	/^let s:suite = themis#suite('quickfix')$/;"	v
s:suite	plugged/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	plugged/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	plugged/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	plugged/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	plugged/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:suite	plugged/vital.vim/test/Color.vim	/^let s:suite = themis#suite('Color')$/;"	v
s:suite	plugged/vital.vim/test/ConcurrentProcess.vim	/^let s:suite = themis#suite('ConcurrentProcess')$/;"	v
s:suite	plugged/vital.vim/test/Data/Set.vim	/^let s:suite = themis#suite('Data.Set')$/;"	v
s:suite	plugged/vital.vim/test/Data/String.vim	/^let s:suite = themis#suite('Data.String')$/;"	v
s:suite	plugged/vital.vim/test/Deprecated/Text/Sexp.vim	/^let s:suite = themis#suite('Deprecated.Text.Sexp')$/;"	v
s:suite	plugged/vital.vim/test/Hash/MD5.vim	/^let s:suite = themis#suite('Hash.MD5')$/;"	v
s:suite	plugged/vital.vim/test/Hash/SHA1.vim	/^let s:suite = themis#suite('Hash.SHA1')$/;"	v
s:suite	plugged/vital.vim/test/Math.vim	/^let s:suite = themis#suite('Math')$/;"	v
s:suite	plugged/vital.vim/test/Text/TOML.vim	/^let s:suite = themis#suite('Text.TOML')$/;"	v
s:suite	plugged/vital.vim/test/Text/Table.vim	/^let s:suite = themis#suite('Text.Table')$/;"	v
s:suite	plugged/vital.vim/test/Validator/Args.vim	/^let s:suite = themis#suite('Validator.Args')$/;"	v
s:suite.E888__multi_after_zs_and_ze	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.E888__multi_after_zs_and_ze()$/;"	f
s:suite.It_automatically_resizes_width_for_each_column	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_automatically_resizes_width_for_each_column() abort$/;"	f
s:suite.It_can_changes_joints_and_borders	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_can_changes_joints_and_borders() abort$/;"	f
s:suite.It_can_use_for_sudden_death	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_can_use_for_sudden_death() abort$/;"	f
s:suite.It_configures_properties	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_configures_properties() abort$/;"	f
s:suite.It_configures_properties_step_by_step	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_configures_properties_step_by_step() abort$/;"	f
s:suite.It_has_initial_header_and_footer_and_rows_later	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_has_initial_header_and_footer_and_rows_later() abort$/;"	f
s:suite.It_has_no_header_and_footer	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_has_no_header_and_footer() abort$/;"	f
s:suite.It_instantiates_a_new_object_with_configuration	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_instantiates_a_new_object_with_configuration() abort$/;"	f
s:suite.It_instantiates_a_new_object_without_configuration	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_instantiates_a_new_object_without_configuration() abort$/;"	f
s:suite.It_lays_out_by_cell_style_and_column_style	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_lays_out_by_cell_style_and_column_style() abort$/;"	f
s:suite.It_make_a_table_only_header_and_footer	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_make_a_table_only_header_and_footer() abort$/;"	f
s:suite.It_makes_a_table	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table() abort$/;"	f
s:suite.It_makes_a_table_even_if_there_are_multibyte_characters	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table_even_if_there_are_multibyte_characters() abort$/;"	f
s:suite.It_makes_a_table_which_wraps_each_cells	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table_which_wraps_each_cells() abort$/;"	f
s:suite.It_makes_a_table_with_auto_wrapping_in_the_cell	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table_with_auto_wrapping_in_the_cell() abort$/;"	f
s:suite.It_makes_a_table_with_horizontal_and_vertical_alignment	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table_with_horizontal_and_vertical_alignment() abort$/;"	f
s:suite.It_makes_a_table_without_horizontal_and_vertical_border	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table_without_horizontal_and_vertical_border() abort$/;"	f
s:suite.It_makes_a_table_without_horizontal_border	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table_without_horizontal_border() abort$/;"	f
s:suite.It_makes_a_table_without_vertical_border	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_makes_a_table_without_vertical_border() abort$/;"	f
s:suite.It_suppresses_resizes_if_specified_table_style	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_suppresses_resizes_if_specified_table_style() abort$/;"	f
s:suite.It_throws_when_already_added_columns	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.It_throws_when_already_added_columns() abort$/;"	f
s:suite.__of__	plugged/vital.vim/test/Validator/Args.vim	/^function! s:suite.__of__()$/;"	f
s:suite.__parse__	plugged/vital.vim/test/Text/TOML.vim	/^function! s:suite.__parse__()$/;"	f
s:suite.__parse_file__	plugged/vital.vim/test/Text/TOML.vim	/^function! s:suite.__parse_file__()$/;"	f
s:suite.active_inactive	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
s:suite.add	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.add() abort$/;"	f
s:suite.add_sub	plugged/calendar.vim/test/day.vim	/^function! s:suite.add_sub()$/;"	f
s:suite.after	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/history.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/module.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/Deprecated/Text/Sexp.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/Hash/MD5.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/Hash/SHA1.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/Text/TOML.vim	/^function! s:suite.after()$/;"	f
s:suite.after	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.after() abort$/;"	f
s:suite.after_backward	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after_backward()$/;"	f
s:suite.after_each	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.after_each()$/;"	f
s:suite.after_each	plugged/incsearch.vim/test/util.vim	/^function! s:suite.after_each()$/;"	f
s:suite.after_forward	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after_forward()$/;"	f
s:suite.after_stay	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after_stay()$/;"	f
s:suite.and_is_alias_for_intersection	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.and_is_alias_for_intersection() abort$/;"	f
s:suite.another_search_offset	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.another_search_offset()$/;"	f
s:suite.backward	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.backward()$/;"	f
s:suite.backward	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.backward()$/;"	f
s:suite.backward	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.backward()$/;"	f
s:suite.backward_normal	plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_normal()$/;"	f
s:suite.backward_operator_pending	plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_operator_pending()$/;"	f
s:suite.backward_operator_pending_multiply	plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_operator_pending_multiply()$/;"	f
s:suite.backward_pattern	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.backward_pattern()$/;"	f
s:suite.backward_visual	plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_visual()$/;"	f
s:suite.before	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/history.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/module.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Color.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Deprecated/Text/Sexp.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Hash/MD5.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Hash/SHA1.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Math.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Text/TOML.vim	/^function! s:suite.before()$/;"	f
s:suite.before	plugged/vital.vim/test/Text/Table.vim	/^function! s:suite.before() abort$/;"	f
s:suite.before	plugged/vital.vim/test/Validator/Args.vim	/^function! s:suite.before()$/;"	f
s:suite.before_each	plugged/calendar.vim/test/week.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/count.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/history.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/module.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/register.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/autocmd.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/popup.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/quickfix.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.before_each() abort$/;"	f
s:suite.british	plugged/calendar.vim/test/day.vim	/^function! s:suite.british()$/;"	f
s:suite.cWord	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cWord()$/;"	f
s:suite.can_set_magic	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_magic()$/;"	f
s:suite.can_set_nomagic	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_nomagic()$/;"	f
s:suite.can_set_very_magic	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_very_magic()$/;"	f
s:suite.can_set_very_nomagic	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_very_nomagic()$/;"	f
s:suite.cancel_backward_does_not_move_cursor	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_backward_does_not_move_cursor()$/;"	f
s:suite.cancel_backward_operator_pending	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_backward_operator_pending()$/;"	f
s:suite.cancel_backward_visual	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_backward_visual()$/;"	f
s:suite.cancel_forward_does_not_move_cursor	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_forward_does_not_move_cursor()$/;"	f
s:suite.cancel_forward_operator_pending	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_forward_operator_pending()$/;"	f
s:suite.cancel_forward_visual	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_forward_visual()$/;"	f
s:suite.cancel_stay_does_not_move_cursor	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_stay_does_not_move_cursor()$/;"	f
s:suite.cancel_stay_operator_pending	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_stay_operator_pending()$/;"	f
s:suite.cancel_stay_visual	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_stay_visual()$/;"	f
s:suite.cancel_will_not_change_last_pattern	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_will_not_change_last_pattern()$/;"	f
s:suite.cannot_set_other_char	plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.cannot_set_other_char()$/;"	f
s:suite.cipher_array	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.cipher_array()$/;"	f
s:suite.cipher_number	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.cipher_number()$/;"	f
s:suite.cipher_object	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.cipher_object()$/;"	f
s:suite.cipher_string	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.cipher_string()$/;"	f
s:suite.clear	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.clear() abort$/;"	f
s:suite.color_name	plugged/vital.vim/test/Color.vim	/^function! s:suite.color_name()$/;"	f
s:suite.command_exist	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.command_exist()$/;"	f
s:suite.commandline_history_backward	plugged/incsearch.vim/test/history.vim	/^function! s:suite.commandline_history_backward()$/;"	f
s:suite.commandline_history_forward	plugged/incsearch.vim/test/history.vim	/^function! s:suite.commandline_history_forward()$/;"	f
s:suite.commandline_history_stay	plugged/incsearch.vim/test/history.vim	/^function! s:suite.commandline_history_stay()$/;"	f
s:suite.common_head	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.common_head()$/;"	f
s:suite.component_raw	plugged/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
s:suite.component_type	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
s:suite.component_type	plugged/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
s:suite.config	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.config()$/;"	f
s:suite.consistent_n_and_N_direction	plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.consistent_n_and_N_direction()$/;"	f
s:suite.consume	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.consume()$/;"	f
s:suite.consume_all_blocking	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.consume_all_blocking()$/;"	f
s:suite.contains_multibyte	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.contains_multibyte()$/;"	f
s:suite.count_backward	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.count_backward()$/;"	f
s:suite.count_forward	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.count_forward()$/;"	f
s:suite.custom	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
s:suite.custom_error	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
s:suite.custom_highlight	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.custom_highlight()$/;"	f
s:suite.custom_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
s:suite.custom_mixed	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
s:suite.custom_mixed_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
s:suite.custom_number	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
s:suite.custom_one	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
s:suite.custom_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
s:suite.custom_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
s:suite.custom_two	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
s:suite.custom_type	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
s:suite.custom_type_error	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
s:suite.custom_type_flatten	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
s:suite.custom_type_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
s:suite.custom_type_mixed	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
s:suite.custom_type_mixed_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
s:suite.custom_type_notfound	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
s:suite.custom_type_number	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
s:suite.custom_type_one	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
s:suite.custom_type_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
s:suite.custom_type_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
s:suite.custom_type_two	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
s:suite.custom_type_void_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
s:suite.custom_type_void_string_array	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
s:suite.custom_type_void_string_array_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
s:suite.custom_type_void_string_array_3	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
s:suite.custom_type_void_string_array_4	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
s:suite.custom_void_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
s:suite.custom_void_string_array	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
s:suite.custom_void_string_array_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
s:suite.custom_void_string_array_3	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
s:suite.custom_void_string_array_4	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
s:suite.cword_from_last_matched_pos	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_from_last_matched_pos()$/;"	f
s:suite.cword_incsearch	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch()$/;"	f
s:suite.cword_incsearch_cli_cursor_middle	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch_cli_cursor_middle()$/;"	f
s:suite.cword_incsearch_middle	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch_middle()$/;"	f
s:suite.cword_incsearch_middle_word	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch_middle_word()$/;"	f
s:suite.cword_noincsearch	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_noincsearch()$/;"	f
s:suite.decipher_array	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.decipher_array()$/;"	f
s:suite.decipher_number	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.decipher_number()$/;"	f
s:suite.decipher_object	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.decipher_object()$/;"	f
s:suite.decipher_string	plugged/calendar.vim/test/cipher.vim	/^function! s:suite.decipher_string()$/;"	f
s:suite.default	plugged/calendar.vim/test/day.vim	/^function! s:suite.default()$/;"	f
s:suite.default	plugged/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
s:suite.default	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
s:suite.default_highlight_will_not_remain	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.default_highlight_will_not_remain()$/;"	f
s:suite.detect_case	plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case()$/;"	f
s:suite.detect_case_explicit_flag	plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case_explicit_flag()$/;"	f
s:suite.detect_case_ignore_uppercase_escaped_letters	plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case_ignore_uppercase_escaped_letters()$/;"	f
s:suite.detect_case_parcent	plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case_parcent()$/;"	f
s:suite.dictionary_function	plugged/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
s:suite.difference	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.difference() abort$/;"	f
s:suite.difference_update	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.difference_update() abort$/;"	f
s:suite.diffidx	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.diffidx()$/;"	f
s:suite.disable_enable	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
s:suite.disabled	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
s:suite.discard	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.discard() abort$/;"	f
s:suite.distance	plugged/vital.vim/test/Color.vim	/^function! s:suite.distance() abort$/;"	f
s:suite.do_not_show_search_hit_TOP_or_BOTTOM_warning_with_stay	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.do_not_show_search_hit_TOP_or_BOTTOM_warning_with_stay()$/;"	f
s:suite.do_not_unfold_after_just_stay	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.do_not_unfold_after_just_stay()$/;"	f
s:suite.do_not_unfold_if_foldopen_does_not_contain_search	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.do_not_unfold_if_foldopen_does_not_contain_search()$/;"	f
s:suite.do_not_unfold_when_operator_pending	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.do_not_unfold_when_operator_pending()$/;"	f
s:suite.doautoall	plugged/lightline.vim/test/autocmd.vim	/^function! s:suite.doautoall()$/;"	f
s:suite.dstring	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.dstring()$/;"	f
s:suite.duplicated_both_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
s:suite.duplicated_both_nil_left_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
s:suite.duplicated_both_nil_right_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
s:suite.duplicated_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
s:suite.duplicated_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
s:suite.duplicated_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
s:suite.duplicated_type_both_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
s:suite.duplicated_type_both_nil_left_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
s:suite.duplicated_type_both_nil_right_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
s:suite.duplicated_type_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
s:suite.duplicated_type_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
s:suite.emulate_V	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_V()$/;"	f
s:suite.emulate_V_End	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_V_End()$/;"	f
s:suite.emulate_ctrl_v	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_ctrl_v()$/;"	f
s:suite.emulate_ctrl_v_End	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_ctrl_v_End()$/;"	f
s:suite.emulate_v	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_v()$/;"	f
s:suite.emulate_v_End	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_v_End()$/;"	f
s:suite.enabled	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
s:suite.encode	plugged/vital.vim/test/Hash/MD5.vim	/^function! s:suite.encode() abort$/;"	f
s:suite.encode	plugged/vital.vim/test/Hash/SHA1.vim	/^function! s:suite.encode() abort$/;"	f
s:suite.ends_with	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.ends_with() abort$/;"	f
s:suite.eq	plugged/vital.vim/test/Color.vim	/^function! s:suite.eq() abort$/;"	f
s:suite.error	plugged/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
s:suite.error_forward_backward	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.error_forward_backward()$/;"	f
s:suite.error_hsl	plugged/vital.vim/test/Color.vim	/^function! s:suite.error_hsl()$/;"	f
s:suite.error_parse	plugged/vital.vim/test/Color.vim	/^function! s:suite.error_parse()$/;"	f
s:suite.error_rgb	plugged/vital.vim/test/Color.vim	/^function! s:suite.error_rgb()$/;"	f
s:suite.error_stay	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.error_stay()$/;"	f
s:suite.error_xterm	plugged/vital.vim/test/Color.vim	/^function! s:suite.error_xterm()$/;"	f
s:suite.exit_stay_does_update_jumplist	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.exit_stay_does_update_jumplist()$/;"	f
s:suite.exit_stay_works_with_operator_c	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.exit_stay_works_with_operator_c()$/;"	f
s:suite.expand	plugged/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
s:suite.fib	plugged/vital.vim/test/Math.vim	/^function! s:suite.fib()$/;"	f
s:suite.filename	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
s:suite.filename_modified	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
s:suite.first_day_index	plugged/calendar.vim/test/week.vim	/^function! s:suite.first_day_index()$/;"	f
s:suite.flatten	plugged/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
s:suite.force_exclusive	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.force_exclusive()$/;"	f
s:suite.forward	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.forward()$/;"	f
s:suite.forward	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.forward()$/;"	f
s:suite.forward	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.forward()$/;"	f
s:suite.forward_normal	plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_normal()$/;"	f
s:suite.forward_operator_pending	plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_operator_pending()$/;"	f
s:suite.forward_operator_pending_multiply	plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_operator_pending_multiply()$/;"	f
s:suite.forward_pattern	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.forward_pattern()$/;"	f
s:suite.forward_visual	plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_visual()$/;"	f
s:suite.frozenset	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.frozenset() abort$/;"	f
s:suite.frozenset_has_not_mutable_methods	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.frozenset_has_not_mutable_methods() abort$/;"	f
s:suite.function_works	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.function_works()$/;"	f
s:suite.gcd	plugged/vital.vim/test/Math.vim	/^function! s:suite.gcd()$/;"	f
s:suite.ge_is_alias_for_issuperset	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.ge_is_alias_for_issuperset() abort$/;"	f
s:suite.get_pattern_V	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.get_pattern_V()$/;"	f
s:suite.get_pattern_ctrl_v	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.get_pattern_ctrl_v()$/;"	f
s:suite.get_pattern_v	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.get_pattern_v()$/;"	f
s:suite.gregorian	plugged/calendar.vim/test/day.vim	/^function! s:suite.gregorian()$/;"	f
s:suite.gt	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.gt() abort$/;"	f
s:suite.handle_keymapping_option	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.handle_keymapping_option()$/;"	f
s:suite.handle_shortmess	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.handle_shortmess()$/;"	f
s:suite.hash	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.hash()$/;"	f
s:suite.hi_clear	plugged/lightline.vim/test/link.vim	/^function! s:suite.hi_clear()$/;"	f
s:suite.highlight	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.highlight()$/;"	f
s:suite.highlight	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
s:suite.highlight_will_not_remain	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.highlight_will_not_remain()$/;"	f
s:suite.hlsearch	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.hlsearch()$/;"	f
s:suite.hsl	plugged/vital.vim/test/Color.vim	/^function! s:suite.hsl()$/;"	f
s:suite.iand	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.iand() abort$/;"	f
s:suite.in	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.in() abort$/;"	f
s:suite.inc_last_pattern	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_last_pattern()$/;"	f
s:suite.inc_last_pattern_offset	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_last_pattern_offset()$/;"	f
s:suite.inc_last_pattern_reset	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_last_pattern_reset()$/;"	f
s:suite.inc_next_backward	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_next_backward()$/;"	f
s:suite.inc_next_forward	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_next_forward()$/;"	f
s:suite.inc_next_stay	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_next_stay()$/;"	f
s:suite.inc_prev_backward	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_prev_backward()$/;"	f
s:suite.inc_prev_forward	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_prev_forward()$/;"	f
s:suite.inc_prev_stay	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_prev_stay()$/;"	f
s:suite.incremental_highlight	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.incremental_highlight()$/;"	f
s:suite.incremental_separate_highlight	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.incremental_separate_highlight()$/;"	f
s:suite.insert	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
s:suite.insert	plugged/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
s:suite.intersection	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.intersection() abort$/;"	f
s:suite.intersection_update	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.intersection_update() abort$/;"	f
s:suite.ior	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.ior() abort$/;"	f
s:suite.is_duplicate_helptags	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.is_duplicate_helptags()$/;"	f
s:suite.is_first_day	plugged/calendar.vim/test/week.vim	/^function! s:suite.is_first_day()$/;"	f
s:suite.is_last_day	plugged/calendar.vim/test/week.vim	/^function! s:suite.is_last_day()$/;"	f
s:suite.issubset	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.issubset() abort$/;"	f
s:suite.issuperset	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.issuperset() abort$/;"	f
s:suite.isub	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.isub() abort$/;"	f
s:suite.ixor	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.ixor() abort$/;"	f
s:suite.julian	plugged/calendar.vim/test/day.vim	/^function! s:suite.julian()$/;"	f
s:suite.justify_equal_spacing	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.justify_equal_spacing()$/;"	f
s:suite.keep_original	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
s:suite.last_day_index	plugged/calendar.vim/test/week.vim	/^function! s:suite.last_day_index()$/;"	f
s:suite.lcm	plugged/vital.vim/test/Math.vim	/^function! s:suite.lcm()$/;"	f
s:suite.le_is_alias_for_issubset	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.le_is_alias_for_issubset() abort$/;"	f
s:suite.left_right	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
s:suite.left_right	plugged/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
s:suite.len	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.len() abort$/;"	f
s:suite.levenshtein_distance	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.levenshtein_distance()$/;"	f
s:suite.lines	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.lines()$/;"	f
s:suite.link	plugged/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
s:suite.loaded	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.loaded()$/;"	f
s:suite.lt	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.lt() abort$/;"	f
s:suite.many1	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
s:suite.many2	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
s:suite.many3	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
s:suite.mappings	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.mappings()$/;"	f
s:suite.match_at_cursor_pos_with_nowrapscan	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.match_at_cursor_pos_with_nowrapscan() abort$/;"	f
s:suite.match_at_cursor_pos_with_nowrapscan_backward	plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.match_at_cursor_pos_with_nowrapscan_backward() abort$/;"	f
s:suite.mode	plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
s:suite.mode_map	plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
s:suite.modified	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
s:suite.module_management	plugged/incsearch.vim/test/module.vim	/^function! s:suite.module_management()$/;"	f
s:suite.modulo	plugged/vital.vim/test/Math.vim	/^function! s:suite.modulo()$/;"	f
s:suite.multiple	plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
s:suite.multiple_type	plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
s:suite.nil	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
s:suite.nil	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
s:suite.no_components	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
s:suite.nolsearch_with_cursormove_0	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_cursormove_0()$/;"	f
s:suite.nolsearch_with_cursormove_1	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_cursormove_1()$/;"	f
s:suite.nolsearch_with_cursormove_2	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_cursormove_2()$/;"	f
s:suite.nolsearch_with_insert_enter	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_insert_enter()$/;"	f
s:suite.nomagic_as_a_pattern	plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.nomagic_as_a_pattern()$/;"	f
s:suite.notfound	plugged/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
s:suite.nowrapscan_backward_error	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.nowrapscan_backward_error()$/;"	f
s:suite.nowrapscan_forward_error	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.nowrapscan_forward_error()$/;"	f
s:suite.nowrapscan_scroll_reverse_move_cursor_to_the_last_pattern	plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.nowrapscan_scroll_reverse_move_cursor_to_the_last_pattern()$/;"	f
s:suite.nowrapscan_stay_error	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.nowrapscan_stay_error()$/;"	f
s:suite.nr2str	plugged/vital.vim/test/Math.vim	/^function! s:suite.nr2str()$/;"	f
s:suite.nsplit	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.nsplit()$/;"	f
s:suite.of	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.of()$/;"	f
s:suite.of_with_failure	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.of_with_failure()$/;"	f
s:suite.offset	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.offset()$/;"	f
s:suite.one	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
s:suite.one	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
s:suite.one_empty	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
s:suite.onetab	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
s:suite.operator_c	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.operator_c()$/;"	f
s:suite.or_is_alias_for_union	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.or_is_alias_for_union() abort$/;"	f
s:suite.over_win_height	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.over_win_height()$/;"	f
s:suite.pad_between_letters	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.pad_between_letters()$/;"	f
s:suite.pad_both_sides	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.pad_both_sides()$/;"	f
s:suite.pad_left	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.pad_left()$/;"	f
s:suite.pad_right	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.pad_right()$/;"	f
s:suite.padding_by_displaywidth	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.padding_by_displaywidth()$/;"	f
s:suite.parse	plugged/vital.vim/test/Deprecated/Text/Sexp.vim	/^function! s:suite.parse()$/;"	f
s:suite.parse_pattern	plugged/incsearch.vim/test/util.vim	/^function! s:suite.parse_pattern()$/;"	f
s:suite.pass_hash_func_to_frozenset	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.pass_hash_func_to_frozenset() abort$/;"	f
s:suite.pass_hash_func_to_set	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.pass_hash_func_to_set() abort$/;"	f
s:suite.pixel_get	plugged/calendar.vim/test/pixel.vim	/^function! s:suite.pixel_get()$/;"	f
s:suite.pixel_len	plugged/calendar.vim/test/pixel.vim	/^function! s:suite.pixel_len()$/;"	f
s:suite.pop	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.pop() abort$/;"	f
s:suite.preserve_nohlsearch	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.preserve_nohlsearch() abort$/;"	f
s:suite.preserve_vhlsearch_with_esc	plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.preserve_vhlsearch_with_esc()$/;"	f
s:suite.prop	plugged/vital.vim/test/Hash/MD5.vim	/^function! s:suite.prop() abort$/;"	f
s:suite.prop	plugged/vital.vim/test/Hash/SHA1.vim	/^function! s:suite.prop() abort$/;"	f
s:suite.quickfix_statusline	plugged/lightline.vim/test/quickfix.vim	/^function! s:suite.quickfix_statusline()$/;"	f
s:suite.quote_register	plugged/incsearch.vim/test/register.vim	/^function! s:suite.quote_register()$/;"	f
s:suite.raw_type	plugged/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
s:suite.read_all	plugged/vital.vim/test/ConcurrentProcess.vim	/^function! s:suite.read_all()$/;"	f
s:suite.remove	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.remove() abort$/;"	f
s:suite.repetition_backward	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_backward()$/;"	f
s:suite.repetition_backward_change	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_backward_change()$/;"	f
s:suite.repetition_forward	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_forward()$/;"	f
s:suite.repetition_forward_change	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_forward_change()$/;"	f
s:suite.repetition_stay_change	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_stay_change()$/;"	f
s:suite.replace	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
s:suite.replace	plugged/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
s:suite.replace	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.replace()$/;"	f
s:suite.replace_first	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.replace_first()$/;"	f
s:suite.reverse	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.reverse()$/;"	f
s:suite.rgb	plugged/vital.vim/test/Color.vim	/^function! s:suite.rgb()$/;"	f
s:suite.round	plugged/vital.vim/test/Math.vim	/^function! s:suite.round()$/;"	f
s:suite.scan	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.scan()$/;"	f
s:suite.scroll_b_works	plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.scroll_b_works()$/;"	f
s:suite.scroll_f_works	plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.scroll_f_works()$/;"	f
s:suite.search	plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.search()$/;"	f
s:suite.separate_highlight_with_searching	plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.separate_highlight_with_searching()$/;"	f
s:suite.set	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.set() abort$/;"	f
s:suite.split3	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.split3()$/;"	f
s:suite.split_by_displaywidth	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.split_by_displaywidth()$/;"	f
s:suite.split_leftright	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.split_leftright()$/;"	f
s:suite.starts_with	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.starts_with() abort$/;"	f
s:suite.stay	plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.stay()$/;"	f
s:suite.stay	plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.stay()$/;"	f
s:suite.stay	plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.stay()$/;"	f
s:suite.stay_cancell_operator_c	plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.stay_cancell_operator_c()$/;"	f
s:suite.stay_does_not_update_jumplist	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.stay_does_not_update_jumplist()$/;"	f
s:suite.stay_offset	plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.stay_offset()$/;"	f
s:suite.str2nr	plugged/vital.vim/test/Math.vim	/^function! s:suite.str2nr()$/;"	f
s:suite.strchars	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.strchars()$/;"	f
s:suite.strwidthpart	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.strwidthpart()$/;"	f
s:suite.strwidthpart_reverse	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.strwidthpart_reverse()$/;"	f
s:suite.sub_is_alias_for_difference	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.sub_is_alias_for_difference() abort$/;"	f
s:suite.subseparator	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator	plugged/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator_component	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
s:suite.subseparator_component_expand	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
s:suite.subseparator_component_expand_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
s:suite.subseparator_component_expand_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
s:suite.subseparator_component_expand_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
s:suite.subseparator_component_function	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
s:suite.subseparator_component_function_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
s:suite.subseparator_component_function_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
s:suite.subseparator_component_function_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
s:suite.subseparator_component_function_4	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
s:suite.subseparator_component_function_5	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
s:suite.subseparator_component_function_6	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
s:suite.subseparator_component_function_7	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
s:suite.subseparator_component_function_visible_condition_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
s:suite.subseparator_component_function_visible_condition_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
s:suite.subseparator_component_function_visible_condition_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
s:suite.subseparator_component_function_visible_condition_4	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
s:suite.subseparator_component_function_visible_condition_5	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
s:suite.subseparator_component_function_visible_condition_6	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
s:suite.subseparator_component_function_visible_condition_7	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
s:suite.subseparator_component_not_found	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
s:suite.subseparator_component_not_found_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
s:suite.subseparator_component_not_found_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
s:suite.subseparator_component_visible_condition_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
s:suite.subseparator_component_visible_condition_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
s:suite.subseparator_component_visible_condition_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
s:suite.subseparator_component_visible_condition_4	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
s:suite.subseparator_component_visible_condition_5	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
s:suite.subseparator_component_visible_condition_6	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
s:suite.subseparator_component_visible_condition_7	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
s:suite.substitute_last	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.substitute_last()$/;"	f
s:suite.sum_integeres	plugged/vital.vim/test/Math.vim	/^function! s:suite.sum_integeres()$/;"	f
s:suite.sum_real_numbers	plugged/vital.vim/test/Math.vim	/^function! s:suite.sum_real_numbers()$/;"	f
s:suite.sum_throws_illegal_arguments	plugged/vital.vim/test/Math.vim	/^function! s:suite.sum_throws_illegal_arguments()$/;"	f
s:suite.sum_unit_when_empty	plugged/vital.vim/test/Math.vim	/^function! s:suite.sum_unit_when_empty()$/;"	f
s:suite.symmetric_difference	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.symmetric_difference() abort$/;"	f
s:suite.symmetric_difference_update	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.symmetric_difference_update() abort$/;"	f
s:suite.tab_component	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
s:suite.tab_component_empty_left	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
s:suite.tab_component_empty_middle	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
s:suite.tab_component_function	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
s:suite.tabclose	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
s:suite.tabclose_last	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
s:suite.tabline	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
s:suite.tabnew	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew_20	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
s:suite.tabnew_20_tabfirst	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
s:suite.tabnew_20_tabfirst_tabnext	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
s:suite.tabnew_20_tabnext_10	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
s:suite.tabnew_20_tabprevious	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
s:suite.tabnew_20_tabprevious_tabprevious	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
s:suite.tabnew_first	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
s:suite.tabnew_tabfirst	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew_tabfirst	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew_tabprevious	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
s:suite.tabnext	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
s:suite.tabonly	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
s:suite.tabs	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
s:suite.test_autoload_function	plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.test_autoload_function()$/;"	f
s:suite.three	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
s:suite.three	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
s:suite.three_duplicated	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
s:suite.three_empty_all	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
s:suite.three_empty_left	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
s:suite.three_empty_left_middle	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
s:suite.three_empty_left_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
s:suite.three_empty_middle	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
s:suite.three_empty_middle_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
s:suite.three_empty_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
s:suite.to_list	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.to_list() abort$/;"	f
s:suite.toggle	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
s:suite.trim	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.trim()$/;"	f
s:suite.trim_end	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.trim_end()$/;"	f
s:suite.trim_start	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.trim_start()$/;"	f
s:suite.truncate	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.truncate()$/;"	f
s:suite.truncate_skipping	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.truncate_skipping()$/;"	f
s:suite.two	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
s:suite.two	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
s:suite.two_duplicated	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
s:suite.two_empty_both	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
s:suite.two_empty_left	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
s:suite.two_empty_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
s:suite.two_error_E383_and_E367	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.two_error_E383_and_E367()$/;"	f
s:suite.unexpected_mode	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.unexpected_mode()$/;"	f
s:suite.unfold_after_exit_stay	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_exit_stay()$/;"	f
s:suite.unfold_after_exit_stay_offset	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_exit_stay_offset()$/;"	f
s:suite.unfold_after_search_backward	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_search_backward()$/;"	f
s:suite.unfold_after_search_forward_backward	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_search_forward_backward()$/;"	f
s:suite.unfold_after_search_forward_offset	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_search_forward_offset()$/;"	f
s:suite.unfold_if_foldopen_does_contain_all	plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_if_foldopen_does_contain_all()$/;"	f
s:suite.union	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.union() abort$/;"	f
s:suite.unnamed_register	plugged/incsearch.vim/test/register.vim	/^function! s:suite.unnamed_register()$/;"	f
s:suite.update	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.update() abort$/;"	f
s:suite.update_highlight_on_colorscheme	plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.update_highlight_on_colorscheme()$/;"	f
s:suite.visual	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
s:suite.visual	plugged/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
s:suite.warning_backward	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.warning_backward()$/;"	f
s:suite.warning_forward	plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.warning_forward()$/;"	f
s:suite.week_index	plugged/calendar.vim/test/week.vim	/^function! s:suite.week_index()$/;"	f
s:suite.week_number	plugged/calendar.vim/test/week.vim	/^function! s:suite.week_number()$/;"	f
s:suite.win_execute_setfiletype	plugged/lightline.vim/test/popup.vim	/^function! s:suite.win_execute_setfiletype()$/;"	f
s:suite.work_with_other_search_mappings	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.work_with_other_search_mappings()$/;"	f
s:suite.work_with_search	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.work_with_search()$/;"	f
s:suite.work_with_search_offset	plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.work_with_search_offset()$/;"	f
s:suite.works_with_nomagic	plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.works_with_nomagic()$/;"	f
s:suite.works_with_nomagic_stay	plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.works_with_nomagic_stay()$/;"	f
s:suite.wrap	plugged/vital.vim/test/Data/String.vim	/^function! s:suite.wrap()$/;"	f
s:suite.wrapscan_scroll_reverse__move_cursor	plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.wrapscan_scroll_reverse__move_cursor()$/;"	f
s:suite.xor_is_alias_for_symmetric_difference	plugged/vital.vim/test/Data/Set.vim	/^function! s:suite.xor_is_alias_for_symmetric_difference() abort$/;"	f
s:suite.xterm	plugged/vital.vim/test/Color.vim	/^function! s:suite.xterm()$/;"	f
s:sum	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:sum(l) abort$/;"	f
s:sum	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^function! s:sum(data) abort$/;"	f
s:sum	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sum(data) abort$/;"	f
s:sum	plugged/vital.vim/autoload/vital/__vital__/Math.vim	/^function! s:sum(list) abort$/;"	f
s:sum_colspan	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:sum_colspan(table) abort$/;"	f
s:sum_raw	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^function! s:sum_raw(bytes) abort$/;"	f
s:sum_raw	plugged/vital.vim/autoload/vital/__vital__/Hash/SHA1.vim	/^function! s:sum_raw(bytes) abort$/;"	f
s:sum_rowspan	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:sum_rowspan(table) abort$/;"	f
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_bg_color = 12$/;"	v
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_bg_color = calendar#color#gen_color(s:sunday_fg_color, s:bg_color, 1, 4)$/;"	v
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_bg_color = calendar#color#select_rgb(s:fg_color, 0, 5)$/;"	v
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:sunday_bg_color = calendar#color#gen_color(s:sunday_fg_color, s:is_dark ? s:fg_color : s/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_fg_color = 0$/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_fg_color = calendar#color#gen_color(s:sunday_bg_color, s:bg_color, 1, 7)$/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_fg_color = calendar#color#select_rgb(s:bg_color, 0, 6)$/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:sunday_fg_color = calendar#color#select_rgb(s:is_dark ? s:fg_color : s:bg_color, 1)$/;"	v
s:sunday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_title_fg_color = s:sunday_fg_color$/;"	v
s:sunday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:sunday_title_fg_color = calendar#color#gen_color(s:sunday_fg_color, s:sunday_bg_color, 3/;"	v
s:super	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:super(sub, ...) abort "{{{$/;"	f
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:super_constructor = calendar#constructor#day#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:supercall	plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:supercall(sub, supername, funcname) abort "{{{$/;"	f
s:supported	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:supported = [$/;"	v
s:supported	plugged/vim-polyglot/syntax/debsources.vim	/^let s:supported = [$/;"	v
s:supports_star	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:surroundings	plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
s:svars	plugged/vital.vim/autoload/vital/__vital__/Vim/ScriptLocal.vim	/^function! s:svars(path) abort$/;"	f
s:svelte_internal_blocks	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:svelte_internal_blocks = '\\v:(else|then|catch)'$/;"	v
s:svelte_tag_end	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:svelte_tag_end = '\\v^\\<\\\/\\w+' $/;"	v
s:svelte_tag_end	plugged/vim-polyglot/indent/svelte.vim	/^let s:svelte_tag_end = '\\v^\\<\\\/(script|style)'$/;"	v
s:svelte_tag_start	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:svelte_tag_start = '\\v^\\<\\w+' $/;"	v
s:svelte_tag_start	plugged/vim-polyglot/indent/svelte.vim	/^let s:svelte_tag_start = '\\v^\\<(script|style)' $/;"	v
s:sw	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^  function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/caddyfile.vim	/^	function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/crystal.vim	/^  function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/crystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
s:sw	plugged/vim-polyglot/indent/cython.vim	/^    function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/ecrystal.vim	/^  function s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/ecrystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
s:sw	plugged/vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/python.vim	/^    function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/svelte.vim	/^let s:sw = &sw$/;"	v
s:swap	plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
s:swap	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
s:swap	plugged/vital.vim/autoload/vital/__vital__/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
s:sweep_functions	plugged/vital.vim/autoload/vital/__vital__/Data/Closure.vim	/^function! s:sweep_functions() abort$/;"	f
s:switch_highlight	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:switch_highlight(id) abort "{{{$/;"	f
s:switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:symbol	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:symbol           = {   -> index(['^', '0', '%', '$'],     s:v.motion) >= 0 }$/;"	v
s:symchar	plugged/vim-polyglot/syntax/fennel.vim	/^let s:symchar = '0-9' . s:symcharnodig$/;"	v
s:symcharnodig	plugged/vim-polyglot/syntax/fennel.vim	/^let s:symcharnodig = '\\!\\$%\\&\\#\\*\\+\\-.\/:<=>?A-Z^_a-z|\\x80-\\U10FFFF'$/;"	v
s:syn	plugged/vim-polyglot/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
s:syn_blocks	plugged/vim-polyglot/indent/hog.vim	/^let s:syn_blocks = '\\<SnortRuleTypeBody\\>'$/;"	v
s:syn_contains	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_contains(lnum, cnum, syn_name)$/;"	f
s:syn_id_name	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f
s:syn_id_name	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:syn_id_name()$/;"	f
s:syn_name	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_name(lnum, cnum)$/;"	f
s:syng_linecom	plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_linecom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_multiline	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_strcom = '\\<falcon\\%(String\\|StringEscape\\|Comment\\)\\>'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc + [$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_string = '\\<falcon\\%(String\\|StringEscape\\)\\>'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_stringdoc	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:synid	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
s:syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
s:syntax_at	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_at(lnum, col)$/;"	f
s:syntax_context	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_context(lnum)$/;"	f
s:syntax_keyword	plugged/vim-polyglot/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f
s:syntax_keyword	plugged/vim-polyglot/syntax/zig.vim	/^function! s:syntax_keyword(dict)$/;"	f
s:syntax_name	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:syntax_name(line, col)$/;"	f
s:syntax_stack_at	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_stack_at(lnum, col)$/;"	f
s:syntax_supported	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:syntax_supported() abort$/;"	f
s:system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	plugged/vim-polyglot/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
s:system	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:system(str, ...) abort$/;"	f
s:system	plugged/vital.vim/autoload/vital/__vital__/Process.vim	/^function! s:system(str, ...) abort$/;"	f
s:system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:t	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:t = strftime('%z')$/;"	v
s:t_funcref	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:t_funcref = type(function('tr'))$/;"	v
s:t_funcref	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^let s:t_funcref = type(function('tr'))$/;"	v
s:t_number	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:t_number = type(0)$/;"	v
s:t_number	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^let s:t_number = type(0)$/;"	v
s:t_string	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:t_string = type('')$/;"	v
s:t_string	plugged/vital.vim/autoload/vital/__vital__/Vim/Buffer.vim	/^let s:t_string = type('')$/;"	v
s:tab	plugged/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
s:tab2spacelen	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:tab2spacelen(line, col_num) abort$/;"	f
s:tabcnt	plugged/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:table	plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:table	plugged/vital.vim/autoload/vital/__vital__/Hash/MD5.vim	/^let s:table = [$/;"	v
s:table	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^let s:table = {$/;"	v
s:table.add_column	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.add_column(def) abort$/;"	f
s:table.add_row	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.add_row(row) abort$/;"	f
s:table.border_style	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.border_style(...) abort$/;"	f
s:table.columns	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.columns(...) abort$/;"	f
s:table.footer	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.footer(...) abort$/;"	f
s:table.hborder	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.hborder(...) abort$/;"	f
s:table.header	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.header(...) abort$/;"	f
s:table.rows	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.rows(...) abort$/;"	f
s:table.stringify	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.stringify(...) abort$/;"	f
s:table.vborder	plugged/vital.vim/autoload/vital/__vital__/Text/Table.vim	/^function! s:table.vborder(...) abort$/;"	f
s:table_add_row	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:table_add_row(table, line) abort$/;"	f
s:table_empty_cell	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:table_empty_cell(value) abort$/;"	f
s:tabline	plugged/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabnr	plugged/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tabnr	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:tabnr(handle) abort$/;"	f
s:tabpagewinnr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:tabpagewinnr(...)$/;"	f
s:tabpagewinnr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:tabpagewinnr(nr)$/;"	f
s:tabpagewinnr_list	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:tabpagewinnr_list()$/;"	f
s:tabpagewinnr_list	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:tabpagewinnr_list()$/;"	f
s:tag	plugged/doom-one.vim/colors/doom-one.vim	/^let s:tag    = color#Mix(s:blue, s:cyan)$/;"	v
s:tag	plugged/vim-polyglot/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/slim.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/slime.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag_code	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_code(value) abort$/;"	f
s:tag_em	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_em(value) abort$/;"	f
s:tag_end	plugged/vim-polyglot/indent/svelte.vim	/^let s:tag_end = '\\v^\\s*\\\/?\\>\\s*'$/;"	v
s:tag_eqin	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_eqin(value) abort$/;"	f
s:tag_remove_external_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_remove_external_link(value) abort$/;"	f
s:tag_remove_internal_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_remove_internal_link(value) abort$/;"	f
s:tag_strike	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_strike(value) abort$/;"	f
s:tag_strong	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_strong(value, header_ids) abort$/;"	f
s:tag_sub	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_sub(value) abort$/;"	f
s:tag_super	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_super(value) abort$/;"	f
s:tag_tags	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_tags(value, header_ids) abort$/;"	f
s:tag_todo	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_todo(value) abort$/;"	f
s:tag_weblink	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_weblink(value) abort$/;"	f
s:tag_wikiincl	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_wikiincl(value) abort$/;"	f
s:tag_wikilink	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_wikilink(value) abort$/;"	f
s:tags	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:tags = get(g:, 'vim_jsx_pretty_template_tags', ['html', 'jsx'])$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:tags_entry_cmp	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:tags_entry_cmp(i1, i2) abort$/;"	f
s:tags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:tail_name	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:tail_name(fname) abort$/;"	f
s:take	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:take(n, xs) abort$/;"	f
s:take_while	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:take_while	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:take_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:take_while	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:take_while(xs, f) abort$/;"	f
s:take_while	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:take_while	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:take_while(callable, xs) abort$/;"	f
s:target	plugged/vimwiki/syntax/vimwiki.vim	/^let s:target = vimwiki#base#apply_template($/;"	v
s:target	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^let s:target = vimwiki#base#apply_template($/;"	v
s:target_hl2_first_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_move = {$/;"	v
s:task	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:task() abort$/;"	f
s:task_cache	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:task_cache = s:cache.new('task')$/;"	v
s:task_cache	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:task_cache = s:cache.new('task')$/;"	v
s:task_delete	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:task_delete() abort$/;"	f
s:task_width	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:task_width() abort$/;"	f
s:tasks	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^let s:tasks = []$/;"	v
s:teal	plugged/doom-one.vim/colors/doom-one.vim	/^let s:teal       = '#4db5bd'$/;"	v
s:teal	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:teal = [ '#008080', 6 ]$/;"	v
s:temp	plugged/vim-polyglot/syntax/raku.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	plugged/vim-polyglot/syntax/raku.vim	/^let s:temp = split(s:words_space)$/;"	v
s:temp_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_buffer	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! s:temp_buffer() abort$/;"	f
s:temp_files	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_from	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_from = tempname()$/;"	v
s:temp_scripts	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_scripts = {}$/;"	v
s:template_full_name	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:template_full_name(name) abort$/;"	f
s:template_sink	plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! s:template_sink(templates) abort$/;"	f
s:template_tag	plugged/vim-polyglot/indent/svelte.vim	/^let s:template_tag = '\\v^\\s*\\<\\\/?template'$/;"	v
s:term	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:term = s:is_gui ? 'gui' : 'cterm'$/;"	v
s:term	plugged/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
s:term_black	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_blue	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_green	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_grey	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_marker	plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = ";#FZF"$/;"	v
s:term_marker	plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = '&::FZF'$/;"	v
s:term_purple	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_red	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_white	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_yellow	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:ternary	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary	plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary = '^\\s\\+[?:]'$/;"	v
s:ternary_q	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:ternary_q	plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary_q = '^\\s\\+?[.?]\\@!'$/;"	v
s:test	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	plugged/vim-polyglot/indent/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:testset	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^let s:testset = [$/;"	v
s:texMathDelimList	plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathDelimList= s:texMathDelimList + [$/;"	v
s:texMathDelimList	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:texMathDelimList=[$/;"	v
s:texMathList	plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathList= s:texMathList + [$/;"	v
s:texMathList	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_comment_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_comment_nospell= 0$/;"	v
s:tex_comment_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_comment_nospell= 1$/;"	v
s:tex_conceal	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_conceal= 'abdmgsS'$/;"	v
s:tex_conceal	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:tex_excludematcher	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_excludematcher= 0$/;"	v
s:tex_excludematcher	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_excludematcher= g:tex_excludematcher$/;"	v
s:tex_fast	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:tex_fast= ""$/;"	v
s:tex_fast	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:tex_fast= g:tex_fast$/;"	v
s:tex_fast	plugged/vim-polyglot/after/syntax/tex.vim	/^let s:tex_fast= "bcmMprsSvV"$/;"	v
s:tex_fold_enabled	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_fold_enabled= 0$/;"	v
s:tex_fold_enabled	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_fold_enabled= 1$/;"	v
s:tex_matchcheck	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_matchcheck= '[({[]'$/;"	v
s:tex_matchcheck	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_matchcheck= g:tex_matchcheck$/;"	v
s:tex_no_error	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_no_error= 0$/;"	v
s:tex_no_error	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_no_error= 1$/;"	v
s:tex_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_nospell = 0$/;"	v
s:tex_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_nospell = 1$/;"	v
s:tex_subscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_subscripts= '[0-9aehijklmnoprstuvx,+-\/().]'$/;"	v
s:tex_subscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_subscripts= g:tex_subscripts$/;"	v
s:tex_superscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_superscripts= '[0-9a-zA-W.,:;+-<>\/()=]'$/;"	v
s:tex_superscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_superscripts= g:tex_superscripts$/;"	v
s:text_begin	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:text_begin(lnum) abort$/;"	f
s:text_colors	plugged/doom-one.vim/colors/doom-one.vim	/^let s:text_colors = {$/;"	v
s:textobject	plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
s:textwidth	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^let s:textwidth = &textwidth$/;"	v
s:throw	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
s:throw	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:throw(message) abort$/;"	f
s:throw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
s:throw	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:throw	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:throw(string) abort$/;"	f
s:throw_cmd	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
s:throw_cmd	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
s:tick	autoload/plug.vim	/^function! s:tick()$/;"	f
s:tick	plugged/vital.vim/autoload/vital/__vital__/ConcurrentProcess.vim	/^function! s:tick(label) abort$/;"	f
s:time_cache	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:time_cache = {}$/;"	v
s:time_zone	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:time_zone() abort$/;"	f
s:time_zone_cache	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:time_zone_cache = {}$/;"	v
s:timer	plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:timer = -1$/;"	v
s:timer_id	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:timer_id = -1$/;"	v
s:timezone	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:timezone(...) abort$/;"	f
s:tmp	plugged/vim-polyglot/scripts/eregex.vim	/^let s:tmp=matchstr("$Revision: 2.60 $", '[0-9.]\\+')$/;"	v
s:tmux_enabled	plugged/fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
s:toSnakeCase	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:toSnakeCase(str)$/;"	f
s:to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_blob	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:to_blob(bytes) abort$/;"	f
s:to_cursor	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:to_cursor = {}$/;"	v
s:to_cursor.failure_message_for_should	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.failure_message_for_should(actual, expected)$/;"	f
s:to_cursor.match	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.match(actual, expected)$/;"	f
s:to_fullpath	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:to_fullpath(filename)$/;"	f
s:to_hexstring	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:to_hexstring(bytes) abort$/;"	f
s:to_int	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:to_int(bytes) abort$/;"	f
s:to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:to_slash	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:to_slash(path) abort$/;"	f
s:to_string	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
s:to_string	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
s:to_string	plugged/vital.vim/autoload/vital/__vital__/Data/BigNum.vim	/^function! s:to_string(bignum) abort$/;"	f
s:to_string	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:to_string(bytes) abort$/;"	f
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_color = 10$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_color = 2$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_color = calendar#color#gen_color(s:today_fg_color, s:bg_color, 1, 3)$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_color = calendar#color#select_rgb(s:fg_color, 1, 5)$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:today_color = calendar#color#gen_color(s:today_fg_color, s:is_dark ? s:fg_color : s:bg_c/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_fg_color = 0$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_fg_color = 15$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_fg_color = calendar#color#gen_color(calendar#color#select_rgb(s:fg_color, 1, 6),/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_fg_color = calendar#color#gen_color(s:today_color, s:bg_color, 1, 5)$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:today_fg_color = calendar#color#gen_color(calendar#color#select_rgb(s:is_dark ? s:fg_col/;"	v
s:toend	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:toend(direction)$/;"	f
s:toggle_create_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:toggle_create_cb(from_line, to_line, state1, state2, start_rate) abort$/;"	f
s:toggle_each_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function s:toggle_each_buffer(enable)$/;"	f
s:token_pattern	plugged/vim-polyglot/indent/dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:token_url	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:token_url = 'https:\/\/accounts.google.com\/o\/oauth2\/token'$/;"	v
s:tolerance	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:tolerance = 5$/;"	v
s:topLev	plugged/vim-polyglot/after/indent/objc.vim	/^let s:topLev = '^\\s*@\\%(class\\|end\\|implementation\\|interface\\|protocol\\|\\)\\>'$/;"	v
s:topindent	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
s:trace_tabpage	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:trace_tabpage(...) abort$/;"	f
s:trace_window	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:trace_window(...) abort$/;"	f
s:transaction	plugged/vim-polyglot/autoload/ledger.vim	/^let s:transaction = {} "{{{1$/;"	v
s:transaction.format_head	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.format_head() abort dict "{{{2$/;"	f
s:transaction.from_lnum	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.from_lnum(lnum) abort dict "{{{2$/;"	f
s:transaction.new	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.new() abort dict$/;"	f
s:transaction.parse_body	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.parse_body(...) abort dict "{{{2$/;"	f
s:transaction.set_state	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.set_state(char) abort dict "{{{2$/;"	f
s:transform	plugged/vim-startify/autoload/startify.vim	/^function s:transform(absolute_path)$/;"	f
s:trees	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:trigger_gitgutter	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:trim(line)$/;"	f
s:trim	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim(str) abort$/;"	f
s:trim	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:trim(str) abort$/;"	f
s:trim_end	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
s:trim_end	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
s:trim_start	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
s:trim_start	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
s:truncate	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate_skipping	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:truncate_skipping	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:truncate_skipping	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:truncate_skipping	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:truncate_skipping	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:turn_off_hl_error	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_off_hl_error() "{{{$/;"	f
s:turn_on_hl_error	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_on_hl_error() "{{{$/;"	f
s:type	plugged/vim-polyglot/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	plugged/vim-polyglot/indent/sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:typeKeywordIncPattern	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:typeKeywordIncPattern() abort$/;"	f
s:typeSpecMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:type_map	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:type_names	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^let s:type_names = {$/;"	v
s:type_names	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^  let s:type_names[s:idx] = s:typelist[s:idx]$/;"	v
s:type_names	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^let s:type_names = {}$/;"	v
s:typelist	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^let s:typelist = ['number', 'string', 'func', 'list', 'dict', 'float', 'bool', 'none', 'job', 'c/;"	v
s:types	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^let s:types = {$/;"	v
s:types	plugged/vim-polyglot/syntax/raku.vim	/^let s:types = [$/;"	v
s:types	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^  let s:types[s:typelist[s:idx]] = s:idx$/;"	v
s:types	plugged/vital.vim/autoload/vital/__vital__/Vim/Type.vim	/^let s:types = {}$/;"	v
s:uint16	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:uint16(value) abort$/;"	f
s:uint32	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:uint32(value) abort$/;"	f
s:uint64	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^  function! s:uint64(value) abort$/;"	f
s:uint8	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^function! s:uint8(value) abort$/;"	f
s:ulen	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ulen(s)$/;"	f
s:unc_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
s:uncons	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:uncons(xs) abort$/;"	f
s:undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . ' | ' . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:undo_ftplugin = ''$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . ' | ' . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:undo_ftplugin = ''$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:undo_ftplugin = "setl fo< com< cms< def< inc<"$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_lock	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^let s:undo_lock = {}$/;"	v
s:undo_lock	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:undo_lock = {}$/;"	v
s:undo_lock._save	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock._save() abort$/;"	f
s:undo_lock._save	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock._save() abort$/;"	f
s:undo_lock.restore	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.restore() abort$/;"	f
s:undo_lock.restore	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.restore() abort$/;"	f
s:undo_lock.save	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.save() abort$/;"	f
s:undo_lock.save	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.save() abort$/;"	f
s:undo_lock.undobreak	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
s:undo_lock.undobreak	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
s:undo_spelllang	plugged/vim-polyglot/extras/menu.vim	/^  let s:undo_spelllang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:undolevels	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:undolevels = v:version > 704 || v:version == 704 && has('patch073')$/;"	v
s:unescape	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
s:unescape	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
s:unescape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
s:unescape_pattern	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
s:unescape_question_for_backward	plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:unescape_question_for_backward(pattern) abort$/;"	f
s:unfnameescape	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:unfnameescape(str) abort$/;"	f
s:unformat_ocaml_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function s:unformat_ocaml_type(res)$/;"	f
s:unify_separator	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:unify_separator(path) abort$/;"	f
s:uninstall	plugged/vital.vim/autoload/vitalizer.vim	/^function! s:uninstall(target_dir, name) abort$/;"	f
s:uniop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜"$/;"	v
s:uniq	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq	plugged/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
s:uniq	plugged/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:uniq	plugged/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
s:uniq	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq_by	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:uniq_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:uniq_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:uniq_by	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:uniq_by	plugged/vital.vim/autoload/vital/__vital__/Data/List/Closure.vim	/^function! s:uniq_by(xs, callable) abort$/;"	f
s:uniq_counter	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^let s:uniq_counter = 0$/;"	v
s:uniq_counter	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^	let s:uniq_counter = 0$/;"	v
s:uniq_nr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:uniq_nr(...)$/;"	f
s:uniq_nr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:uniq_nr(...)$/;"	f
s:uniq_tabpagenr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:uniq_tabpagenr(...)$/;"	f
s:uniq_winnr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:uniq_winnr(...)$/;"	f
s:uniq_winnr_list	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:uniq_winnr_list(...)$/;"	f
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:unite_source.action_table.expand.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate) abort$/;"	f
s:unite_source.action_table.preview.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate) abort$/;"	f
s:unite_source.gather_candidates	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context) abort$/;"	f
s:unite_source.get_longest_snippet_len	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list) abort$/;"	f
s:unite_source.hooks.on_syntax	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
s:unixpath	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:unixpath(path) abort$/;"	f
s:unload	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:unload() abort dict$/;"	f
s:unload	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:unload() abort dict$/;"	f
s:unload	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:unload() abort dict$/;"	f
s:unload	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:unload() abort dict$/;"	f
s:unload	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:unload() abort dict$/;"	f
s:unload	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:unload() abort dict$/;"	f
s:unmap	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:unmap(function)$/;"	f
s:unmap	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! s:unmap(key, buffer) abort$/;"	f
s:unmapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
s:unmapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
s:unregister	plugged/vital.vim/autoload/vital/__vital__/System/Cache.vim	/^function! s:unregister(name) abort$/;"	f
s:unsafe_from_left	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:unsafe_from_left(either) abort$/;"	f
s:unsafe_from_right	plugged/vital.vim/autoload/vital/__vital__/Data/Either.vim	/^function! s:unsafe_from_right(either) abort$/;"	f
s:unset	plugged/vital.vim/autoload/vital/__vital__/Data/Optional.vim	/^function! s:unset(o) abort$/;"	f
s:unshift	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:unshift	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:unshift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:unshift	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:unsupported	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:unsupported = [$/;"	v
s:unsupported	plugged/vim-polyglot/syntax/debsources.vim	/^let s:unsupported = [$/;"	v
s:upconvert	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
s:update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_current	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:update_current(...) abort$/;"	f
s:update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_oldfiles	plugged/vim-startify/plugin/startify.vim	/^function! s:update_oldfiles(file)$/;"	f
s:update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_search	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! s:update_search(p) abort$/;"	f
s:update_state	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:update_state(item) abort$/;"	f
s:update_unix	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:update_unix()$/;"	f
s:update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:update_visible	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^function! s:update_visible(bufnr, is_colorscheme) abort$/;"	f
s:update_wiki_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:update_wiki_link(fname, old, new) abort$/;"	f
s:update_wiki_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:update_wiki_links(wiki_nr, dir, old_url, new_url) abort$/;"	f
s:update_win	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:update_win()$/;"	f
s:updatetime	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:updatetime() abort$/;"	f
s:updatetime	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! s:updatetime() abort$/;"	f
s:upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:upsert_new_gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
s:urgency	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:urgency='urgency=\\(low\\|medium\\|high\\|emergency\\|critical\\)\\( [^[:space:],][^,]*\\)/;"	v
s:url_decode	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_decode(str) abort$/;"	f
s:url_encode	plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:url_encode(str) abort$/;"	f
s:url_encode	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_encode(str) abort$/;"	f
s:urlsafe_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^  let s:urlsafe_decode_map[s:urlsafe_encode_table[i]] = i$/;"	v
s:urlsafe_decode_map	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^let s:urlsafe_decode_map = {}$/;"	v
s:urlsafe_encode_table	plugged/vital.vim/autoload/vital/__vital__/Data/Base64/URLSafe.vim	/^let s:urlsafe_encode_table = [$/;"	v
s:use_coffee	plugged/vim-polyglot/indent/svelte.vim	/^let s:use_coffee = svelte#GetConfig('use_coffee', 0)$/;"	v
s:use_coffee	plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_coffee = svelte#GetConfig('use_coffee', 0)$/;"	v
s:use_custom_wiki2html	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:use_custom_wiki2html() abort$/;"	f
s:use_foldexpr	plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:use_foldexpr = exists("g:vim_svelte_plugin_use_foldexpr") $/;"	v
s:use_known_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
s:use_less	plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_less = svelte#GetConfig('use_less', 0)$/;"	v
s:use_pug	plugged/vim-polyglot/indent/svelte.vim	/^let s:use_pug = svelte#GetConfig('use_pug', 0)$/;"	v
s:use_pug	plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_pug = svelte#GetConfig('use_pug', 0)$/;"	v
s:use_sass	plugged/vim-polyglot/indent/svelte.vim	/^let s:use_sass = svelte#GetConfig('use_sass', 0)$/;"	v
s:use_sass	plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_sass = svelte#GetConfig('use_sass', 0)$/;"	v
s:use_sh	plugged/fzf/plugin/fzf.vim	/^function! s:use_sh()$/;"	f
s:use_timer	plugged/calendar.vim/autoload/calendar/async.vim	/^let s:use_timer = has('timers') && (v:version >= 800 || has('nvim'))$/;"	v
s:use_typescript	plugged/vim-polyglot/indent/svelte.vim	/^let s:use_typescript = svelte#GetConfig('use_typescript', 0)$/;"	v
s:use_typescript	plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_typescript = svelte#GetConfig('use_typescript', 0)$/;"	v
s:useful_diff_colours	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:useful_diff_colours()$/;"	f
s:val	plugged/vim-polyglot/indent/sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:valMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:valMatcher = '\\%(' . s:modifierMatcher . '\\|lazy\\s\\+\\)*\\<va[lr]\\>'$/;"	v
s:vala_cpo_save	plugged/vim-polyglot/syntax/vala.vim	/^let s:vala_cpo_save = &cpo$/;"	v
s:valid	plugged/vital.vim/test/_testdata/vital/datatest/autoload/vital/__latest__/DataTest.vim	/^function! s:valid() abort$/;"	f
s:validate	plugged/vital.vim/autoload/vital/__vital__/Data/List/Byte.vim	/^function! s:validate(data) abort$/;"	f
s:validate_layout	plugged/fzf/plugin/fzf.vim	/^function! s:validate_layout(layout)$/;"	f
s:value_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:value_options = deepcopy(s:all_value_options)$/;"	v
s:var	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(<\\%(cword\\|cWORD\\|cexpr\\|cfile\\|sfile\\|slnum\\|afile\\|abuf\\|amatch' . (/;"	v
s:var_stmt	plugged/vim-polyglot/indent/solidity.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:var_stmt	plugged/vim-polyglot/indent/typescript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:variable	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:variable	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:variable	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:variable.restore	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
s:variable.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
s:variable.restore	plugged/vital.vim/autoload/vital/__vital__/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
s:vblock	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:vblock(extend) abort$/;"	f
s:vchar	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:vchar() abort$/;"	f
s:vcs_marker	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^let s:vcs_marker = ['.git', '.svn', '.bzr', '_darcs']$/;"	v
s:verbosefiles	plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:verbosefiles	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:version	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:version() abort$/;"	f
s:version	plugged/vim-polyglot/scripts/eregex.vim	/^let s:version = s:maj + s:min$/;"	v
s:version_file	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:versions	plugged/fzf/plugin/fzf.vim	/^let s:versions = {}$/;"	v
s:vertical	plugged/vim-visual-multi/autoload/vm/commands.vim	/^let s:vertical         = {   -> index(['j', 'k'],               s:v.motion) >= 0 }$/;"	v
s:vertical	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! s:vertical() abort$/;"	f
s:veryDarkGray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:view	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:view() abort$/;"	f
s:view_source	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:view_source() abort$/;"	f
s:views	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:views() abort$/;"	f
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vimReturnFocus	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:vimReturnFocus(window)$/;"	f
s:vim_cmap	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:vim_cmap = s:KeyMapping.make_vim_cmdline_mapping()$/;"	v
s:vim_cmap._condition	plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:vim_cmap._condition() abort$/;"	f
s:vim_cmdline_mapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:vim_cmdline_mapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:vim_cmdline_mapping.keymapping	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
s:vim_cmdline_mapping.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
s:vim_cmdline_mapping.on_enter	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
s:vim_cmdline_mapping.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
s:vim_cmdline_mapping.on_update	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_update(cmdline)$/;"	f
s:vim_jsx_pretty_colorful_config	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:vim_jsx_pretty_colorful_config = get(g:, 'vim_jsx_pretty_colorful_config', 0)$/;"	v
s:vim_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
s:vimlintOutput	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
s:vimwiki_autowriteall_saved	plugged/vimwiki/plugin/vimwiki.vim	/^  let s:vimwiki_autowriteall_saved = 1$/;"	v
s:vimwiki_autowriteall_saved	plugged/vimwiki/plugin/vimwiki.vim	/^  let s:vimwiki_autowriteall_saved = g:vimwiki_autowriteall$/;"	v
s:vimwiki_get_known_extensions	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:vimwiki_get_known_extensions() abort$/;"	f
s:vimwiki_get_known_syntaxes	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:vimwiki_get_known_syntaxes() abort$/;"	f
s:violet	plugged/doom-one.vim/colors/doom-one.vim	/^let s:violet     = '#a9a1e1'$/;"	v
s:violet	plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:violet = [ '#cf73e6', '170' ]$/;"	v
s:violet	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:visual_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:visual_merge	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:visual_merge() abort$/;"	f
s:visual_reselect	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! s:visual_reselect(cmd) abort$/;"	f
s:visual_subtract	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:visual_subtract() abort$/;"	f
s:visualmode2motionwise	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:visualmode2motionwise(visualmode) abort "{{{$/;"	f
s:vital_base_dir	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	plugged/vital.vim/autoload/vital/vital.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! s:vital_files() abort$/;"	f
s:vital_files	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:vital_files() abort$/;"	f
s:vital_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:vital_files() abort$/;"	f
s:vital_files	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:vital_files() abort$/;"	f
s:vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:vital_files() abort$/;"	f
s:vital_files	plugged/vital.vim/autoload/vital/vital.vim	/^function! s:vital_files() abort$/;"	f
s:vline	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! s:vline() abort$/;"	f
s:vm_persist	plugged/vim-visual-multi/plugin/visual-multi.vim	/^fun! s:vm_persist()$/;"	f
s:vm_registers	plugged/vim-visual-multi/plugin/visual-multi.vim	/^fun! s:vm_registers()$/;"	f
s:vname	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:vname	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:wait	plugged/vital.vim/autoload/vital/__vital__/Async/Promise.vim	/^function! s:wait(promise, ...) abort$/;"	f
s:wait_for_input	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:wait_for_input(highlight, duration) abort  "{{{$/;"	f
s:warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	plugged/fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
s:warn	plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
s:warn	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
s:warn	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:warn(...) abort$/;"	f
s:warn	plugged/vim-startify/autoload/startify.vim	/^function! s:warn(msg) abort$/;"	f
s:warn	plugged/vital.vim/autoload/vital/__vital__/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
s:warned	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:warning_message	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:warning_message(msg) abort$/;"	f
s:wcswidth	plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:wcswidth	plugged/vital.vim/autoload/vital/__vital__/Prelude.vim	/^function! s:wcswidth(str) abort$/;"	f
s:week_number	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:week_number() abort$/;"	f
s:weekday_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:weekday_color = 8$/;"	v
s:weekday_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:weekday_color = calendar#color#gen_color(s:fg_color, s:bg_color, 1, 5)$/;"	v
s:weekday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:weekday_fg_color = 0$/;"	v
s:weekday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:weekday_fg_color = calendar#color#gen_color(s:fg_color, s:bg_color, 3, 2)$/;"	v
s:weekday_names	plugged/vital.vim/autoload/vital/__vital__/DateTime.vim	/^function! s:weekday_names(...) abort$/;"	f
s:weeks	plugged/calendar.vim/autoload/calendar/week.vim	/^let s:weeks = [ 'sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday' ]$/;"	v
s:went_too_far	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! s:went_too_far() abort$/;"	f
s:when_no_matched_or_others	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched/;"	v
s:which	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:which(command, ...) abort$/;"	f
s:which	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^  function! s:which(str) abort$/;"	f
s:white	plugged/doom-one.vim/colors/doom-one.vim	/^let s:white      = '#efefef'$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:white = [ '#ffffff', 15 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:wide	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:wide_len	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:wide_len(str) abort$/;"	f
s:win2pos2hint_to_w2l2c2h	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:win2pos2hint_to_w2l2c2h(win2pos2hint) abort$/;"	f
s:win32_handler	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! s:win32_handler(url) abort$/;"	f
s:win_getid	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:win_getid(...) abort$/;"	f
s:win_getid	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  let s:win_getid = function('win_getid')$/;"	v
s:win_gotoid	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:win_gotoid(id) abort$/;"	f
s:win_gotoid_safe	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:win_gotoid_safe(winid)$/;"	f
s:win_sep	plugged/vim-polyglot/ftplugin/dart.vim	/^let s:win_sep = (has('win32') || has('win64')) ? '\/' : ''$/;"	v
s:wincall	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:wincall(func, arglist, ...) abort$/;"	f
s:windo	plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:windo(func, args, ...)$/;"	f
s:window	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:windows_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winid	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:winid = 0$/;"	v
s:winnr	plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:winnr(uniqnr)$/;"	f
s:winnr	plugged/vital.vim/autoload/vital/__vital__/Vim/ViewTracer.vim	/^function! s:winnr(handle) abort$/;"	f
s:winnr2poses_to_list	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:winnr2poses_to_list(winnr2poses, ...) abort$/;"	f
s:winpath	plugged/vital.vim/autoload/vital/__vital__/System/Filepath.vim	/^function! s:winpath(path) abort$/;"	f
s:winpos_map	plugged/vim-polyglot/autoload/ledger.vim	/^let s:winpos_map = {$/;"	v
s:winshell	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:winshell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
s:with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:with_index	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:with_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:with_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:with_index	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:words	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-/;"	v
s:words	plugged/vim-polyglot/syntax/raku.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	plugged/vim-polyglot/syntax/raku.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^    let s:words_space = join(s:words_list, " ")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:alpha_metaops, " ")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:types, " ")$/;"	v
s:workers	plugged/vital.vim/autoload/vital/__vital__/Async/Later.vim	/^let s:workers = []$/;"	v
s:workspace	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:workspace = []$/;"	v
s:workspaceLoad	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspaceLoad(files, cont)$/;"	f
s:workspacePeek	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspacePeek(directory, depth, excludedDirs, cont)$/;"	f
s:worktree_error	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:worktree_error = "core.worktree is required when using an external Git dir"$/;"	v
s:worktree_for_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrap	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:wrap	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
s:wrap	plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
s:wrap	plugged/vital.vim/autoload/vital/__vital__/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
s:wrap	plugged/vital.vim/autoload/vital/__vital__/Experimental/Functor.vim	/^function! s:wrap(callable) abort$/;"	f
s:wrap_a	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
s:wrap_around	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_around()$/;"	f
s:wrap_cmds	autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrap_cmds	plugged/fzf/plugin/fzf.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrap_i	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
s:wrap_inside	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_inside()$/;"	f
s:wrap_wikilink1_rx	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:wrap_wikilink1_rx(target) abort$/;"	f
s:wrapreg	plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
s:write_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
s:write_tags_metadata	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:write_tags_metadata(metadata) abort$/;"	f
s:write_to_preview_window	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:write_to_preview_window(content, ftype, buffername)$/;"	f
s:writefile	plugged/fzf/plugin/fzf.vim	/^function! s:writefile(...)$/;"	f
s:writefile	plugged/vital.vim/autoload/vital/__vital__/System/Cache/Deprecated.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
s:writefile	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:writefile(...) abort$/;"	f
s:writefile	plugged/vital.vim/autoload/vital/__vital__/Vim/Compat.vim	/^  function! s:writefile(list, fname, ...) abort$/;"	f
s:wsh_cpo_save	plugged/vim-polyglot/syntax/wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xFFFFFFFF00000000	plugged/vital.vim/autoload/vital/__vital__/Bitwise.vim	/^  let s:xFFFFFFFF00000000 = 0xFFFFFFFF * s:pow2[and(32, s:mask)]$/;"	v
s:xml_cpo_save	plugged/vim-polyglot/syntax/xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:xml_decode	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_decode(str) abort$/;"	f
s:xml_encode	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_encode(str) abort$/;"	f
s:xml_entity_decode	plugged/vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_entity_decode(str) abort$/;"	f
s:xterm	plugged/vital.vim/autoload/vital/__vital__/Color.vim	/^function! s:xterm(code) abort$/;"	f
s:xterm_launcher	plugged/fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = "yamlBlockMappingKey"$/;"	v
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = g:ansible_yamlKeyName$/;"	v
s:yank_at_cursors	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^fun! s:yank_at_cursors(M, reg, n) abort$/;"	f
s:yank_deleting	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:yank_deleting() abort$/;"	f
s:yank_normal	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:yank_normal(count, register) abort "{{{$/;"	f
s:yank_to_register	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
s:yank_visual	plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:yank_visual(register) abort "{{{$/;"	f
s:yellow	plugged/doom-one.vim/colors/doom-one.vim	/^let s:yellow     = '#ECBE7B'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#ffff00', 11 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:yellow       = [ '#ffffaf', 229 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:yellow = '#e6b673'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:yellow = '#E6B673'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:yellow = '#ffc44c'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:yellow    = ['#ad8900', 3]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:yellow    = ['#c49700', 3]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:yesmacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:yesmacro = s:nomacro . '\\%('. s:macro_regex . '\\)\\+'$/;"	v
s:ymd	plugged/calendar.vim/autoload/calendar/day.vim	/^  function! s:ymd() abort$/;"	f
s:z	plugged/vim-polyglot/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
s:zig_syntax_keywords	plugged/vim-polyglot/syntax/zig.vim	/^let s:zig_syntax_keywords = {$/;"	v
s:zip	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip	plugged/vital.vim/autoload/vital/__vital__/Data/LazyList.vim	/^function! s:zip(xs, ys) abort$/;"	f
s:zip	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^function! s:zip(streams) abort$/;"	f
s:zip_fill	plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zip_fill	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zip_fill	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zip_fill	plugged/vital.vim/autoload/vital/__vital__/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
sameContentLayout	plugged/fzf/src/options.go	/^func (a previewOpts) sameContentLayout(b previewOpts) bool {$/;"	f	struct:fzf.previewOpts	typeref:typename:bool
sameLayout	plugged/fzf/src/options.go	/^func (a previewOpts) sameLayout(b previewOpts) bool {$/;"	f	struct:fzf.previewOpts	typeref:typename:bool
save_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def save_mark(name):$/;"	f
scala	plugged/vim-polyglot/ctags/scala.ctags	/^--langdef=scala$/;"	l
scala#ConditionalConfirm	plugged/vim-polyglot/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	plugged/vim-polyglot/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	plugged/vim-polyglot/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	plugged/vim-polyglot/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scan	plugged/fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f	struct:fzf.Matcher	typeref:typename:(*Merger, bool)
scoreGapExtension	plugged/fzf/src/algo/algo.go	/^	scoreGapExtension = -1$/;"	c	package:algo
scoreGapStart	plugged/fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c	package:algo
scoreMatch	plugged/fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c	package:algo
scroll	plugged/fzf/src/options.go	/^	scroll      string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
scrollOff	plugged/fzf/src/terminal.go	/^	scrollOff          int$/;"	m	struct:fzf.Terminal	typeref:typename:int
scrollOffset	plugged/fzf/src/terminal.go	/^	scrollOffset int$/;"	m	struct:fzf.previewRequest	typeref:typename:int
scrollable	plugged/fzf/src/terminal.go	/^	scrollable bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
searchRequest	plugged/fzf/src/terminal.go	/^type searchRequest struct {$/;"	s	package:fzf
sed_delimiter	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = __sed_i + 1$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
select	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def select(start, end):$/;"	f
selectItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
selectItemChanged	plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
select_count	plugged/fzf/test/test_go.rb	/^          def select_count$/;"	f	method:Tmux.until
select_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def select_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
selected	plugged/fzf/src/terminal.go	/^	selected           map[int32]selectedItem$/;"	m	struct:fzf.Terminal	typeref:typename:map[int32]selectedItem
selected	plugged/fzf/src/terminal.go	/^	selected bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
selectedItem	plugged/fzf/src/terminal.go	/^type selectedItem struct {$/;"	s	package:fzf
selenized_black	plugged/lightline.vim/colorscheme.md	/^### selenized_black$/;"	S	chapter:Available Colorschemes
selenized_dark	plugged/lightline.vim/colorscheme.md	/^### selenized_dark$/;"	S	chapter:Available Colorschemes
selenized_light	plugged/lightline.vim/colorscheme.md	/^### selenized_light$/;"	S	chapter:Available Colorschemes
selenized_white	plugged/lightline.vim/colorscheme.md	/^### selenized_white$/;"	S	chapter:Available Colorschemes
self.get_completions	plugged/vim-polyglot/autoload/rubycomplete.vim	/^  def self.get_completions(base)$/;"	f
self.preload_rails	plugged/vim-polyglot/autoload/rubycomplete.vim	/^  def self.preload_rails$/;"	f
send	plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send_keys	plugged/fzf/test/test_go.rb	/^  def send_keys(*args)$/;"	f	class:Tmux
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
seoul256	plugged/lightline.vim/colorscheme.md	/^### seoul256$/;"	S	chapter:Available Colorschemes
set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
setBg	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) setBg() {$/;"	f	struct:tui.LightWindow
setUp	plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
set_cursor_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_cursor_from_pos(pos):$/;"	f
set_mark_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_mark_from_pos(name, pos):$/;"	f
set_quit	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^            def set_quit(self):$/;"	m	class:RemotePDB.start_server.Pdb
set_trace	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def set_trace(self, frame):$/;"	m	class:RemotePDB
set_var	plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestFish
set_var	plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	module:TestShell
setup	plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestGoFZF
setup	plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	module:TestShell
setupTerminal	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) setupTerminal() {$/;"	f	unknown:tui.LightRenderer
setupTerminal	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) setupTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
setup_other_plugins	plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
shape	plugged/fzf/src/tui/tui.go	/^	shape       BorderShape$/;"	m	struct:tui.BorderStyle	typeref:typename:BorderShape
shell	plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestBash
shell	plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestFish
shell	plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestZsh
shellPath	plugged/fzf/src/util/util_windows.go	/^var shellPath atomic.Value$/;"	v	package:util	typeref:typename:atomic.Value
shell_in_repro	plugged/ultisnips/Makefile	/^shell_in_repro:$/;"	t
shift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
show a diff for failed tests	plugged/vim-visual-multi/test/README.md	/^## show a diff for failed tests$/;"	s	chapter:How to Run:
show_warnings	plugged/vim-polyglot/scripts/build	/^def show_warnings(all_filetypes, expected_filetypes)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
sigstop	plugged/fzf/src/terminal.go	/^	sigstop            bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
silent_call	plugged/ultisnips/test/vim_interface.py	/^def silent_call(cmd):$/;"	f
simpleblack	plugged/lightline.vim/colorscheme.md	/^### simpleblack$/;"	S	chapter:Available Colorschemes
singleton	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    singleton = None$/;"	v	class:RemotePDB
site	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*site[[:space:]]*([a-zA-Z0-9_\\-]+)\/\\1\/s,site\/$/;"	k	langdef:puppet
size	plugged/fzf/src/options.go	/^	size        sizeSpec$/;"	m	struct:fzf.previewOpts	typeref:typename:sizeSpec
size	plugged/fzf/src/options.go	/^	size    float64$/;"	m	struct:fzf.sizeSpec	typeref:typename:float64
sizeSpec	plugged/fzf/src/options.go	/^type sizeSpec struct {$/;"	s	package:fzf
skip_if	plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:_UmlautsBase
skip_if	plugged/ultisnips/test/test_ContextSnippets.py	/^    skip_if = lambda self: "Bug in Neovim." if self.vim_flavor == "neovim" else None$/;"	m	class:ContextSnippets_ReportErrorOnIndexOutOfRange
skip_if	plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Leave
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_ShebangPython
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_SimpleExample
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TextInNextLine
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_WithUmlauts
skip_if	plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_LowerCaseAsciiResult
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_SimpleCaseAsciiResult
skip_if	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	m	class:VimTestCase
slab	plugged/fzf/src/matcher.go	/^	slab           []*util.Slab$/;"	m	struct:fzf.Matcher	typeref:typename:[]*util.Slab
slab	plugged/fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v	package:fzf	typeref:typename:*util.Slab
slab	plugged/fzf/src/terminal.go	/^	slab               *util.Slab$/;"	m	struct:fzf.Terminal	typeref:typename:*util.Slab
slab16Size	plugged/fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c	package:fzf	typeref:typename:int
slab32Size	plugged/fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c	package:fzf	typeref:typename:int
sleeptime	plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
sleuth	plugged/vim-sleuth/plugin/sleuth.vim	/^augroup sleuth$/;"	a
sleuth.vim	plugged/vim-sleuth/README.markdown	/^# sleuth.vim$/;"	c
slice	plugged/fzf/src/util/chars.go	/^	slice           []byte \/\/ or []rune$/;"	m	struct:util.Chars	typeref:typename:[]byte
sliceChunks	plugged/fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f	struct:fzf.Matcher	typeref:typename:[][]*Chunk
smartdict_jp	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_jp = g:EasyMotion#sticky_table#jp$/;"	v
smartdict_us	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_us = g:EasyMotion#sticky_table#us$/;"	v
smcup	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) smcup() {$/;"	f	struct:tui.LightRenderer
smt2#formatter#FormatAllParagraphs	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^    function! smt2#formatter#FormatAllParagraphs()$/;"	f
smt2#formatter#FormatAllParagraphs	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^def smt2#formatter#FormatAllParagraphs()$/;"	f
smt2#formatter#FormatCurrentParagraph	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^    function! smt2#formatter#FormatCurrentParagraph()$/;"	f
smt2#formatter#FormatCurrentParagraph	plugged/vim-polyglot/autoload/smt2/formatter.vim	/^def smt2#formatter#FormatCurrentParagraph()$/;"	f
smt2#parser#ParseAllParagraphs	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def smt2#parser#ParseAllParagraphs(): list<dict<any>>$/;"	f
smt2#parser#ParseCurrentParagraph	plugged/vim-polyglot/autoload/smt2/parser.vim	/^def smt2#parser#ParseCurrentParagraph(): dict<any>$/;"	f
smt2#scanner#Enforce	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def smt2#scanner#Enforce(scanner: dict<any>, expr: bool, msg: string, pos: number)$/;"	f
smt2#scanner#NextToken	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def smt2#scanner#NextToken(scanner: dict<any>)$/;"	f
smt2#scanner#Scanner	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def smt2#scanner#Scanner(source: string, line_offset = 1): dict<any>$/;"	f
smt2#scanner#TokenKind2Str	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^def smt2#scanner#TokenKind2Str(kind: number): string$/;"	f
smt2#solver#PrintVersion	plugged/vim-polyglot/autoload/smt2/solver.vim	/^function! smt2#solver#PrintVersion()$/;"	f
smt2#solver#Run	plugged/vim-polyglot/autoload/smt2/solver.vim	/^function! smt2#solver#Run()$/;"	f
smt2#solver#RunAndShowResult	plugged/vim-polyglot/autoload/smt2/solver.vim	/^function! smt2#solver#RunAndShowResult()$/;"	f
snipMate_Disabled	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue1325	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue1325(_VimTest):$/;"	c
snipMate_Issue1344	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue1344(_VimTest):$/;"	c
snipMate_Issue658	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_start	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ("test", "[ ${1:foo} ]")$/;"	v	class:Autocommands
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """Hello \\t ${1:default}\\n$2""")$/;"	v	class:LeaveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """Hello\\t ${1:default}\\n$2""", "", "s")$/;"	v	class:RemoveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """next line\\n\\nshould be empty""", "", "")$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """next line\\n\\nshould be empty""", "", "m")$/;"	v	class:TrimSpacesAtEndOfLines
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü $1")$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üüüüüßßßß")$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_JustNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_StartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:_MultiLineDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${0|red,blue|}")$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}} ${3}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,,c|}")$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|} is ${2:color}\\nline 2")$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_WillBeExpandedToInlineSelection
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1||}")$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|Русский язык,中文,한국어,öääö|}")$/;"	v	class:Choices_CanTakeNonAsciiCharacters
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ($/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_ChangesInPlaceholder
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:one}(${2:xxx})${3:three}")$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo ${1:Welt}")$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", r"${1:\\Safe\\\\}")$/;"	v	class:SimpleExpand_Issue1343
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("pd", "padding: ${1:0}px")$/;"	v	class:VirtualEdit
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${2:#2} ${1:#1};$0")$/;"	v	class:Bug1251994
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "\\t${1}${0}")$/;"	v	class:ShiftWidthZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "hello")$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldOverwrite_Simple_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:PerlSyntaxFold
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = (("m1", "Something"), ("m", "\\t$0"))$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """${1:hi} `!p res = t[1]+".blah"` End""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """${1:hi} `!p snip.rv = t[1]+".blah"` End""")$/;"	v	class:PythonCode_ReferencePlaceholder
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """`!p res = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """`!p snip.rv = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCode_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!p res = "Hallo"` End""")$/;"	v	class:PythonCodeOld_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!p snip.rv = "Hallo"` End""")$/;"	v	class:PythonCode_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!v indent(".")` End""")$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi`!p snip.rv = ""`End""")$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "`!p snip.rv = 5`")$/;"	v	class:Python_SnipRvCanBeNonText
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo höüäh` you!")$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""${2:${1\/.+\/egal\/}} ${1:$3} ${3:`!p snip.rv = "hi"`}""")$/;"	v	class:PythonCode_TrickyReferences
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""`echo \\`echo "\\\\$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""`hi="blah"; echo \\`echo "$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi `!p snip.rv = snip.opt("g:UStest") or "no"` End""")$/;"	v	class:PythonCode_OptExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi `!p snip.rv = snip.opt("g:UStest") or "no"` End""")$/;"	v	class:PythonCode_OptNoExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi`!p snip.rv = "a" * 100 + '\\n'*100 + "a"*100`end""")$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi`!p snip.rv = "a" * 100`end""")$/;"	v	class:PythonCode_LongerTextThanSource_Chars
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_IndentedMultiline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSw
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSwOffset
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentNoetSwTs
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentProblem
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_Locals
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShift
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultilineIndented
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_ResetIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleMkline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_UseNewOverOld
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:TabStop_Shell_ShebangPython
snippets	plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = ($/;"	v	class:_ListAllSnippets
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1$1 ")$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1$1")$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = (("test", "$1$1 "), ("outer", "$1"))$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = (("test", "$1$1"), ("outer", "$1"))$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:_MultipleMatches
snippets	plugged/ultisnips/test/test_Plugin.py	/^    snippets = ("long", "Hello", "", "w")$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ $1 $2 ] $1"), ("m1", "ASnip $1 ASnip $2 ASnip"))$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"${1:one}${0:explicit zero}${2:two}", "snip", "i"),)$/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"_${0:explicit zero}", "snip", "i"),)$/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "Just some Text"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "[ ${1:first} $0 ${2:sec} ]"), ("m", "[ ${1:first} ${2:sec} ]"))$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:OldSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test ", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:_TabExpand_RealWorld
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "w"),)$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "w"),)$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (r"cabfed", r"""`!p snip.rv =  match or "No match"`""")$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We do not overwrite", "Overwrite the two", "", -1),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", -5),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", 1),)$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "[ $1$2 ] $1")$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world")$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "t$1t${2: }t{\\n\\t$0\\n}")$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict3
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("testâ", "abc123ά", "123'êabc")$/;"	v	class:VerifyVimDict1
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict2
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("if", "if {\\n\\t${VISUAL}$0\\n}")$/;"	v	class:Visual_LineSelect_DedentLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordExclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordInclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, search_all):$/;"	m	class:SnippetManager
solarized (`background=dark`)	plugged/lightline.vim/README.md	/^### solarized (`background=dark`)$/;"	S	chapter:lightline.vim
solarized (`background=dark`)	plugged/lightline.vim/colorscheme.md	/^### solarized (`background=dark`)$/;"	S	chapter:Available Colorschemes
solarized (`background=light`)	plugged/lightline.vim/README.md	/^### solarized (`background=light`)$/;"	S	chapter:lightline.vim
solarized (`background=light`)	plugged/lightline.vim/colorscheme.md	/^### solarized (`background=light`)$/;"	S	chapter:Available Colorschemes
sort	plugged/fzf/src/matcher.go	/^	sort           bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
sort	plugged/fzf/src/matcher.go	/^	sort       bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
sort	plugged/fzf/src/terminal.go	/^	sort               bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
sort	plugged/fzf/src/terminal.go	/^	sort    bool$/;"	m	struct:fzf.searchRequest	typeref:typename:bool
sortCriteria	plugged/fzf/src/result.go	/^var sortCriteria []criterion$/;"	v	package:fzf	typeref:typename:[]criterion
sortSelected	plugged/fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f	struct:fzf.Terminal	typeref:typename:[]selectedItem
sort_packages	plugged/vim-polyglot/scripts/build	/^def sort_packages(packages)$/;"	f
sortable	plugged/fzf/src/pattern.go	/^	sortable      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
sorted	plugged/fzf/src/merger.go	/^	sorted  bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
spaces_to_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
spellmenu	plugged/vim-polyglot/extras/menu.vim	/^    augroup spellmenu$/;"	a
spinner	plugged/fzf/src/terminal.go	/^	spinner            []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
spinner	plugged/fzf/src/terminal.go	/^	spinner    string$/;"	m	struct:fzf.previewer	typeref:typename:string
spinner	plugged/fzf/src/terminal.go	/^	spinner string$/;"	m	struct:fzf.previewResult	typeref:typename:string
spinnerDuration	plugged/fzf/src/constants.go	/^	spinnerDuration   = 100 * time.Millisecond$/;"	c	package:fzf
splitNth	plugged/fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f	package:fzf	typeref:typename:[]Range
split_at_equals	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([$=|T], Acc) ->$/;"	f
split_at_equals	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([H|T], Acc) ->$/;"	f
split_at_equals	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([], Acc) ->$/;"	f
split_at_whitespace	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def split_at_whitespace(string):$/;"	f
splitmix32	plugged/vital.vim/test/Random/xor128.c	/^uint32_t splitmix32(void) {$/;"	f	typeref:typename:uint32_t
square_expansion	plugged/vim-polyglot/scripts/build	/^def square_expansion(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
square_expansion	plugged/vim-polyglot/scripts/import_vim	/^def square_expansion(s)$/;"	f
srcery_drk	plugged/lightline.vim/colorscheme.md	/^### srcery_drk$/;"	S	chapter:Available Colorschemes
standard_group	sources/50-autostuff.vim	/^augroup standard_group$/;"	a
start	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def start(self):$/;"	m	class:TextObject
startChan	plugged/fzf/src/terminal.go	/^	startChan          chan bool$/;"	m	struct:fzf.Terminal	typeref:typename:chan bool
startEventPoller	plugged/fzf/src/reader.go	/^func (r *Reader) startEventPoller() {$/;"	f	struct:fzf.Reader
start_server	plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def start_server(self):$/;"	m	class:RemotePDB
startify	plugged/vim-startify/plugin/startify.vim	/^augroup startify$/;"	a
startify#center	plugged/vim-startify/autoload/startify.vim	/^function! startify#center(lines) abort$/;"	f
startify#debug	plugged/vim-startify/autoload/startify.vim	/^function! startify#debug()$/;"	f
startify#fortune#boxed	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#boxed(...) abort$/;"	f
startify#fortune#cowsay	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#cowsay(...) abort$/;"	f
startify#fortune#predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#predefined_quotes() abort$/;"	f
startify#fortune#quote	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#quote() abort$/;"	f
startify#get_lastline	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_lastline() abort$/;"	f
startify#get_separator	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_separator() abort$/;"	f
startify#get_session_path	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_session_path() abort$/;"	f
startify#insane_in_the_membrane	plugged/vim-startify/autoload/startify.vim	/^function! startify#insane_in_the_membrane(on_vimenter) abort$/;"	f
startify#open_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#open_buffers(...) abort$/;"	f
startify#pad	plugged/vim-startify/autoload/startify.vim	/^function! startify#pad(lines) abort$/;"	f
startify#session_close	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_close() abort$/;"	f
startify#session_delete	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete(bang, ...) abort$/;"	f
startify#session_delete_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete_buffers()$/;"	f
startify#session_list	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list(lead, ...) abort$/;"	f
startify#session_list_as_string	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list_as_string(lead, ...) abort$/;"	f
startify#session_load	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_load(source_last_session, ...) abort$/;"	f
startify#session_save	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_save(bang, ...) abort$/;"	f
startify#session_write	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_write(session_path)$/;"	f
startify#set_batchmode	plugged/vim-startify/autoload/startify.vim	/^function! startify#set_batchmode(batchmode) abort$/;"	f
startify#set_mark	plugged/vim-startify/autoload/startify.vim	/^function! startify#set_mark(type, ...) abort$/;"	f
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ChoicesToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream, chars=r"{}\\$`"):$/;"	m	class:EscapeCharToken
state	plugged/fzf/src/util/atomicbool.go	/^	state int32 \/\/ "1" is true, "0" is false$/;"	m	struct:util.AtomicBool	typeref:typename:int32
status	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^            def status(code, msg):$/;"	f	member:DummyClassForLocalScope.main	file:
status	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^            def status(code, msg):$/;"	f	member:DummyClassForLocalScope.main	file:
stderr	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderr(str string) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderrInternal(str string, allowNLCR bool) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) stderrInternal(str string, allowNLCR bool) {$/;"	f	struct:tui.LightWindow
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 1), (0, -8), (0, 1)), ((0, 1), (0, 1), (0, 2)))$/;"	v	class:MovePosition_DelSameLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 12), (0, -4), (1, 0)), ((0, 12), (-1, 0), (0, 12)))$/;"	v	class:MovePosition_DelSecondLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 3), (0, 3), (0, 12)),)$/;"	v	class:MovePosition_InsSameLine2
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 4), (0, -3), (0, 3)), ((0, 8), (0, -1), (0, 3)))$/;"	v	class:MovePosition_DelSameLine1
str	plugged/fzf/src/tokenizer.go	/^	str   *string$/;"	m	struct:fzf.Delimiter	typeref:typename:*string
strLines	plugged/fzf/src/options.go	/^func strLines(str string) []string {$/;"	f	package:fzf	typeref:typename:[]string
stream.__compare__	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^  function! stream.__compare__(a, b) abort$/;"	f
stream.__estimate_size__	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^    function! stream.__estimate_size__() abort$/;"	f
stream.__estimate_size__	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^  function! stream.__estimate_size__() abort$/;"	f
stream.__sum__	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^    function! stream.__sum__(sizes) abort$/;"	f
stream.__take_possible__	plugged/vital.vim/autoload/vital/__vital__/Stream.vim	/^  function! stream.__take_possible__(n) abort$/;"	f
strong	plugged/fzf/src/terminal.go	/^	strong             tui.Attr$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Attr
structure names	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?struct[ \\t]+([a-zA-Z0-9_]+)\/\\2\/s,structure names\/$/;"	k	langdef:Rust
style	plugged/fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f	unknown:tui.ColorPair	typeref:typename:tcell.Style
summary	plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
suppress	plugged/fzf/src/terminal.go	/^	suppress           bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
surround.vim	plugged/vim-surround/README.markdown	/^# surround.vim$/;"	c
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
svelte#GetConfig	plugged/vim-polyglot/autoload/svelte.vim	/^function! svelte#GetConfig(name, default)$/;"	f
syntastic	plugged/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	plugged/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	plugged/syntastic/syntax_checkers/java/javac.vim	/^        augroup syntastic$/;"	a
syntastic	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^augroup syntastic$/;"	a
syntastic	plugged/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#ndebug	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#ndebug(level, title, messages) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#postprocess#iconv	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#bandit	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bandit(errors) abort " {{{2$/;"	f
syntastic#preprocess#basex	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#basex(errors) abort " {{{2$/;"	f
syntastic#preprocess#bro	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bro(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#coffeelint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#coffeelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#dockerfile_lint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dockerfile_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#dscanner	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dscanner(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#iconv	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#jscs	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#jscs(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#lynt	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#lynt(errors) abort " {{{2$/;"	f
syntastic#preprocess#mypy	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#mypy(errors) abort " {{{2$/;"	f
syntastic#preprocess#nix	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#nix(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#raku	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#raku(errors) abort " {{{2$/;"	f
syntastic#preprocess#remark_lint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#remark_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#scss_lint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#scss_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#stylelint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#stylelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tern_lint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tern_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#bufRawVar	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufRawVar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#bufVar	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufVar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#compareLexi	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findFileInParent	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findFileInParent(what, where) abort " {{{2$/;"	f
syntastic#util#findGlobInParent	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findGlobInParent(what, where) abort " {{{2$/;"	f
syntastic#util#float2str	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#float2str(val) abort " {{{2$/;"	f
syntastic#util#fname2buf	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#fname2buf(fname) abort " {{{2$/;"	f
syntastic#util#getbufvar	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#getbufvar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang(buf) abort " {{{2$/;"	f
syntastic#util#parseVersion	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#rawVar	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rawVar(name, ...) abort " {{{2$/;"	f
syntastic#util#redraw	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#setLastTick	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setLastTick(buf) abort " {{{2$/;"	f
syntastic#util#setWids	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setWids() abort " {{{2$/;"	f
syntastic#util#shescape	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#str2float	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#str2float(val) abort " {{{2$/;"	f
syntastic#util#system	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wformat	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wformat(format, str) abort " {{{2$/;"	f
syntastic#util#wideMsg	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
t	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> t <Plug>(calendar_today)$/;"	m
t	plugged/fzf/src/terminal.go	/^	t actionType$/;"	m	struct:fzf.action	typeref:typename:actionType
t	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> t             :call startify#set_mark('T')<cr>$/;"	m
t	plugged/vital.vim/benchmark/database-sqlite.vim	/^let t = reltime()$/;"	v
t	vimrc	/^map t <Plug>(incsearch-nohl)<Plug>(easymotion-bd-tl)$/;"	m
t/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
table	plugged/vimwiki/autoload/vimwiki/style.css	/^p, pre, blockquote, table, ul, ol, dl {$/;"	s
table.nested	plugged/vital.vim/test/Text/TOML.vim	/^    function! table.nested()$/;"	f
table.nested_without_super_tables	plugged/vital.vim/test/Text/TOML.vim	/^    function! table.nested_without_super_tables()$/;"	f
table.simple	plugged/vital.vim/test/Text/TOML.vim	/^    function! table.simple()$/;"	f
tabstop	plugged/fzf/src/terminal.go	/^	tabstop            int$/;"	m	struct:fzf.Terminal	typeref:typename:int
tabstop	plugged/fzf/src/tui/light.go	/^	tabstop       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
tabstop	plugged/fzf/src/tui/light.go	/^	tabstop  int$/;"	m	struct:tui.LightWindow	typeref:typename:int
tac	plugged/fzf/src/matcher.go	/^	tac            bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
tac	plugged/fzf/src/merger.go	/^	tac     bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
tads_minlines	plugged/vim-polyglot/syntax/tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	plugged/vim-polyglot/syntax/tads.vim	/^  let tads_sync_dist = 100$/;"	v
target/$(BINARY32)	plugged/fzf/Makefile	/^target\/$(BINARY32): $(SOURCES)$/;"	t
target/$(BINARY64)	plugged/fzf/Makefile	/^target\/$(BINARY64): $(SOURCES)$/;"	t
target/$(BINARYARM5)	plugged/fzf/Makefile	/^target\/$(BINARYARM5): $(SOURCES)$/;"	t
target/$(BINARYARM6)	plugged/fzf/Makefile	/^target\/$(BINARYARM6): $(SOURCES)$/;"	t
target/$(BINARYARM7)	plugged/fzf/Makefile	/^target\/$(BINARYARM7): $(SOURCES)$/;"	t
target/$(BINARYARM8)	plugged/fzf/Makefile	/^target\/$(BINARYARM8): $(SOURCES)$/;"	t
target/$(BINARYPPC64LE)	plugged/fzf/Makefile	/^target\/$(BINARYPPC64LE): $(SOURCES)$/;"	t
target/$(BINARYRISCV64)	plugged/fzf/Makefile	/^target\/$(BINARYRISCV64): $(SOURCES)$/;"	t
td	plugged/vimwiki/autoload/vimwiki/style.css	/^th, td {$/;"	s
tearDown	plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
teardown	plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestGoFZF
teardown	plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	module:TestShell
template	plugged/fzf/src/terminal.go	/^	template     string$/;"	m	struct:fzf.previewRequest	typeref:typename:string
template	plugged/fzf/src/terminal_test.go	/^	template string$/;"	m	struct:fzf.give	typeref:typename:string
templateToString	plugged/fzf/src/terminal_test.go	/^func templateToString(format string, data interface{}) string {$/;"	f	package:fzf	typeref:typename:string
tempname	plugged/fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	plugged/fzf/src/pattern.go	/^type term struct {$/;"	s	package:fzf
termEqual	plugged/fzf/src/pattern.go	/^	termEqual$/;"	c	package:fzf
termExact	plugged/fzf/src/pattern.go	/^	termExact$/;"	c	package:fzf
termFuzzy	plugged/fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c	package:fzf	typeref:type:termType
termPrefix	plugged/fzf/src/pattern.go	/^	termPrefix$/;"	c	package:fzf
termSet	plugged/fzf/src/pattern.go	/^type termSet []term$/;"	t	package:fzf	typeref:typename:[]term
termSets	plugged/fzf/src/pattern.go	/^	termSets      []termSet$/;"	m	struct:fzf.Pattern	typeref:typename:[]termSet
termSuffix	plugged/fzf/src/pattern.go	/^	termSuffix$/;"	c	package:fzf
termType	plugged/fzf/src/pattern.go	/^type termType int$/;"	t	package:fzf	typeref:typename:int
terminate	plugged/fzf/src/reader.go	/^func (r *Reader) terminate() {$/;"	f	struct:fzf.Reader
terraform#commands	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#commands(ArgLead, CmdLine, CursorPos) abort$/;"	f
terraform#fmt	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#fmt() abort$/;"	f
test	plugged/fzf/Makefile	/^test: $(SOURCES)$/;"	t
test	plugged/vim-polyglot/Makefile	/^test:$/;"	t
testCase	plugged/fzf/src/terminal_test.go	/^type testCase struct {$/;"	s	package:fzf
testCommands	plugged/fzf/src/terminal_test.go	/^func testCommands(t *testing.T, tests []testCase) {$/;"	f	package:fzf
testParserReference	plugged/fzf/src/ansi_test.go	/^func testParserReference(t testing.TB, str string) {$/;"	f	package:fzf
test_accept_non_empty	plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty$/;"	f	class:TestGoFZF
test_accept_non_empty_with_empty_list	plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_empty_list$/;"	f	class:TestGoFZF
test_accept_non_empty_with_multi_selection	plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_multi_selection$/;"	f	class:TestGoFZF
test_alt_c	plugged/fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	module:TestShell
test_alt_c_command	plugged/fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	module:TestShell
test_backward_delete_char_eof	plugged/fzf/test/test_go.rb	/^  def test_backward_delete_char_eof$/;"	f	class:TestGoFZF
test_backward_eof	plugged/fzf/test/test_go.rb	/^  def test_backward_eof$/;"	f	class:TestGoFZF
test_bind	plugged/fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestGoFZF
test_bind_print_query	plugged/fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestGoFZF
test_bind_replace_query	plugged/fzf/test/test_go.rb	/^  def test_bind_replace_query$/;"	f	class:TestGoFZF
test_cancel	plugged/fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestGoFZF
test_change_first_last	plugged/fzf/test/test_go.rb	/^  def test_change_first_last$/;"	f	class:TestGoFZF
test_change_preview_window	plugged/fzf/test/test_go.rb	/^  def test_change_preview_window$/;"	f	class:TestGoFZF
test_change_preview_window_rotate	plugged/fzf/test/test_go.rb	/^  def test_change_preview_window_rotate$/;"	f	class:TestGoFZF
test_change_prompt	plugged/fzf/test/test_go.rb	/^  def test_change_prompt$/;"	f	class:TestGoFZF
test_clear_list_when_header_lines_changed_due_to_reload	plugged/fzf/test/test_go.rb	/^  def test_clear_list_when_header_lines_changed_due_to_reload$/;"	f	class:TestGoFZF
test_clear_query	plugged/fzf/test/test_go.rb	/^  def test_clear_query$/;"	f	class:TestGoFZF
test_clear_selection	plugged/fzf/test/test_go.rb	/^  def test_clear_selection$/;"	f	class:TestGoFZF
test_close	plugged/fzf/test/test_go.rb	/^  def test_close$/;"	f	class:TestGoFZF
test_complete_quoted_command	plugged/fzf/test/test_go.rb	/^  def test_complete_quoted_command$/;"	f	class:TestZsh
test_ctrl_r	plugged/fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	module:TestShell
test_ctrl_r_abort	plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_abort$/;"	f	module:TestShell
test_ctrl_r_multiline	plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_multiline$/;"	f	module:TestShell
test_ctrl_t	plugged/fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	module:TestShell
test_ctrl_t_unicode	plugged/fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	module:TestShell
test_custom_completion	plugged/fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	module:CompletionTest
test_custom_completion_api	plugged/fzf/test/test_go.rb	/^  def test_custom_completion_api$/;"	f	module:CompletionTest
test_cycle	plugged/fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestGoFZF
test_default_extended	plugged/fzf/test/test_go.rb	/^  def test_default_extended$/;"	f	class:TestGoFZF
test_dir_completion	plugged/fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	module:CompletionTest
test_disabled	plugged/fzf/test/test_go.rb	/^  def test_disabled$/;"	f	class:TestGoFZF
test_dynamic_completion_loader	plugged/fzf/test/test_go.rb	/^  def test_dynamic_completion_loader$/;"	f	class:TestBash
test_escaped_meta_characters	plugged/fzf/test/test_go.rb	/^  def test_escaped_meta_characters$/;"	f	class:TestGoFZF
test_exact	plugged/fzf/test/test_go.rb	/^  def test_exact$/;"	f	class:TestGoFZF
test_execute	plugged/fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestGoFZF
test_execute_multi	plugged/fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestGoFZF
test_execute_plus_flag	plugged/fzf/test/test_go.rb	/^  def test_execute_plus_flag$/;"	f	class:TestGoFZF
test_execute_shell	plugged/fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestGoFZF
test_exit_0	plugged/fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestGoFZF
test_exit_0_exit_code	plugged/fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestGoFZF
test_exitstatus_empty	plugged/fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f	class:TestGoFZF
test_expect	plugged/fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestGoFZF
test_expect_print_query	plugged/fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestGoFZF
test_expect_print_query_select_1	plugged/fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestGoFZF
test_expect_printable_character_print_query	plugged/fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestGoFZF
test_file_completion	plugged/fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	module:CompletionTest
test_file_completion_root	plugged/fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	module:CompletionTest
test_file_completion_unicode	plugged/fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	module:CompletionTest
test_file_word	plugged/fzf/test/test_go.rb	/^  def test_file_word$/;"	f	class:TestGoFZF
test_filter_exitstatus	plugged/fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestGoFZF
test_fzf_default_command	plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestGoFZF
test_fzf_default_command_failure	plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command_failure$/;"	f	class:TestGoFZF
test_header	plugged/fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestGoFZF
test_header_and_header_lines	plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_first	plugged/fzf/test/test_go.rb	/^  def test_header_first$/;"	f	class:TestGoFZF
test_header_first_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_first_reverse$/;"	f	class:TestGoFZF
test_header_lines	plugged/fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestGoFZF
test_header_lines_overflow	plugged/fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestGoFZF
test_header_lines_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_lines_with_nth	plugged/fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestGoFZF
test_header_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestGoFZF
test_header_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_header_reverse_list$/;"	f	class:TestGoFZF
test_history	plugged/fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestGoFZF
test_hscroll_off	plugged/fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f	class:TestGoFZF
test_info_hidden	plugged/fzf/test/test_go.rb	/^  def test_info_hidden$/;"	f	class:TestGoFZF
test_interrupt_execute	plugged/fzf/test/test_go.rb	/^  def test_interrupt_execute$/;"	f	class:TestGoFZF
test_invalid_cache	plugged/fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestGoFZF
test_invalid_cache_query_type	plugged/fzf/test/test_go.rb	/^  def test_invalid_cache_query_type$/;"	f	class:TestGoFZF
test_invalid_option	plugged/fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestGoFZF
test_inverse_only_search_should_not_sort_the_result	plugged/fzf/test/test_go.rb	/^  def test_inverse_only_search_should_not_sort_the_result$/;"	f	class:TestGoFZF
test_item_index_reset_on_reload	plugged/fzf/test/test_go.rb	/^  def test_item_index_reset_on_reload$/;"	f	class:TestGoFZF
test_jump	plugged/fzf/test/test_go.rb	/^  def test_jump$/;"	f	class:TestGoFZF
test_jump_accept	plugged/fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f	class:TestGoFZF
test_keep_right	plugged/fzf/test/test_go.rb	/^  def test_keep_right$/;"	f	class:TestGoFZF
test_key_bindings	plugged/fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestGoFZF
test_kill_default_command_on_abort	plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_abort$/;"	f	class:TestGoFZF
test_kill_default_command_on_accept	plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_accept$/;"	f	class:TestGoFZF
test_kill_reload_command_on_abort	plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_abort$/;"	f	class:TestGoFZF
test_kill_reload_command_on_accept	plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_accept$/;"	f	class:TestGoFZF
test_long_line	plugged/fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestGoFZF
test_margin	plugged/fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestGoFZF
test_margin_reverse	plugged/fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestGoFZF
test_margin_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_margin_reverse_list$/;"	f	class:TestGoFZF
test_marker	plugged/fzf/test/test_go.rb	/^  def test_marker$/;"	f	class:TestGoFZF
test_multi_max	plugged/fzf/test/test_go.rb	/^  def test_multi_max$/;"	f	class:TestGoFZF
test_multi_order	plugged/fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestGoFZF
test_no_clear	plugged/fzf/test/test_go.rb	/^  def test_no_clear$/;"	f	class:TestGoFZF
test_normalized_match	plugged/fzf/test/test_go.rb	/^  def test_normalized_match$/;"	f	class:TestGoFZF
test_or_operator	plugged/fzf/test/test_go.rb	/^  def test_or_operator$/;"	f	class:TestGoFZF
test_partial_caching	plugged/fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f	class:TestGoFZF
test_pointer	plugged/fzf/test/test_go.rb	/^  def test_pointer$/;"	f	class:TestGoFZF
test_pointer_with_jump	plugged/fzf/test/test_go.rb	/^  def test_pointer_with_jump$/;"	f	class:TestGoFZF
test_preview	plugged/fzf/test/test_go.rb	/^  def test_preview$/;"	f	class:TestGoFZF
test_preview_bindings_with_default_preview	plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_with_default_preview$/;"	f	class:TestGoFZF
test_preview_bindings_without_default_preview	plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_without_default_preview$/;"	f	class:TestGoFZF
test_preview_clear_screen	plugged/fzf/test/test_go.rb	/^  def test_preview_clear_screen$/;"	f	class:TestGoFZF
test_preview_correct_tab_width_after_ansi_reset_code	plugged/fzf/test/test_go.rb	/^  def test_preview_correct_tab_width_after_ansi_reset_code$/;"	f	class:TestGoFZF
test_preview_file	plugged/fzf/test/test_go.rb	/^  def test_preview_file$/;"	f	class:TestGoFZF
test_preview_flags	plugged/fzf/test/test_go.rb	/^  def test_preview_flags$/;"	f	class:TestGoFZF
test_preview_header	plugged/fzf/test/test_go.rb	/^  def test_preview_header$/;"	f	class:TestGoFZF
test_preview_hidden	plugged/fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f	class:TestGoFZF
test_preview_q_no_match	plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match$/;"	f	class:TestGoFZF
test_preview_q_no_match_with_initial_query	plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match_with_initial_query$/;"	f	class:TestGoFZF
test_preview_scroll_begin_and_offset	plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_and_offset$/;"	f	class:TestGoFZF
test_preview_scroll_begin_constant	plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_constant$/;"	f	class:TestGoFZF
test_preview_scroll_begin_expr	plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_expr$/;"	f	class:TestGoFZF
test_preview_size_0	plugged/fzf/test/test_go.rb	/^  def test_preview_size_0$/;"	f	class:TestGoFZF
test_preview_update_on_select	plugged/fzf/test/test_go.rb	/^  def test_preview_update_on_select$/;"	f	class:TestGoFZF
test_preview_window_follow	plugged/fzf/test/test_go.rb	/^  def test_preview_window_follow$/;"	f	class:TestGoFZF
test_process_completion	plugged/fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	module:CompletionTest
test_query_unicode	plugged/fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestGoFZF
test_read0	plugged/fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestGoFZF
test_reload	plugged/fzf/test/test_go.rb	/^  def test_reload$/;"	f	class:TestGoFZF
test_reload_even_when_theres_no_match	plugged/fzf/test/test_go.rb	/^  def test_reload_even_when_theres_no_match$/;"	f	class:TestGoFZF
test_reload_should_update_preview	plugged/fzf/test/test_go.rb	/^  def test_reload_should_update_preview$/;"	f	class:TestGoFZF
test_scroll	plugged/fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestGoFZF
test_scroll_off	plugged/fzf/test/test_go.rb	/^  def test_scroll_off$/;"	f	class:TestGoFZF
test_scroll_off_large	plugged/fzf/test/test_go.rb	/^  def test_scroll_off_large$/;"	f	class:TestGoFZF
test_select_1	plugged/fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestGoFZF
test_select_1_exit_0_fail	plugged/fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestGoFZF
test_select_all_deselect_all_toggle_all	plugged/fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestGoFZF
test_select_deselect	plugged/fzf/test/test_go.rb	/^  def test_select_deselect$/;"	f	class:TestGoFZF
test_smart_case_for_each_term	plugged/fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestGoFZF
test_strip_xterm_osc_sequence	plugged/fzf/test/test_go.rb	/^  def test_strip_xterm_osc_sequence$/;"	f	class:TestGoFZF
test_sync	plugged/fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestGoFZF
test_tabstop	plugged/fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestGoFZF
test_tac	plugged/fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestGoFZF
test_tac_nosort	plugged/fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestGoFZF
test_tac_sort	plugged/fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestGoFZF
test_tiebreak	plugged/fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestGoFZF
test_tiebreak_begin_algo_v2	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_begin_algo_v2$/;"	f	class:TestGoFZF
test_tiebreak_end	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestGoFZF
test_tiebreak_index_begin	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestGoFZF
test_toggle_preview_wrap	plugged/fzf/test/test_go.rb	/^  def test_toggle_preview_wrap$/;"	f	class:TestGoFZF
test_toggle_sort	plugged/fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestGoFZF
test_unbind	plugged/fzf/test/test_go.rb	/^  def test_unbind$/;"	f	class:TestGoFZF
test_unicode_case	plugged/fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestGoFZF
test_unset_completion	plugged/fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	module:CompletionTest
test_vanilla	plugged/fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestGoFZF
test_with_nth	plugged/fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestGoFZF
test_with_nth_ansi	plugged/fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestGoFZF
test_with_nth_basic	plugged/fzf/test/test_go.rb	/^  def test_with_nth_basic$/;"	f	class:TestGoFZF
test_with_nth_no_ansi	plugged/fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestGoFZF
text	plugged/fzf/src/item.go	/^	text        util.Chars    \/\/ 32 = 24 + 1 + 1 + 2 + 4$/;"	m	struct:fzf.Item	typeref:typename:util.Chars
text	plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.Pattern	typeref:typename:[]rune
text	plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.term	typeref:typename:[]rune
text	plugged/fzf/src/tokenizer.go	/^	text         *util.Chars$/;"	m	struct:fzf.Token	typeref:typename:*util.Chars
text	plugged/fzf/src/tui/light.go	/^	text         string$/;"	m	struct:tui.wrappedLine	typeref:typename:string
text	plugged/syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
text	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text_after	plugged/ultisnips/test/test_Format.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	plugged/ultisnips/test/vim_test_case.py	/^    text_after = "\\n\\n --- some text after --- "$/;"	v	class:VimTestCase
text_before	plugged/ultisnips/test/test_Format.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	plugged/ultisnips/test/vim_test_case.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:VimTestCase
th	plugged/vimwiki/autoload/vimwiki/style.css	/^th { background-color: #f0f0f0; }$/;"	s
th	plugged/vimwiki/autoload/vimwiki/style.css	/^th, td {$/;"	s
theme	plugged/fzf/src/terminal.go	/^	theme              *tui.ColorTheme$/;"	m	struct:fzf.Terminal	typeref:typename:*tui.ColorTheme
theme	plugged/fzf/src/tui/light.go	/^	theme         *ColorTheme$/;"	m	struct:tui.LightRenderer	typeref:typename:*ColorTheme
theme	plugged/fzf/src/tui/tui.go	/^	theme        *ColorTheme$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:*ColorTheme
timeoutInterval	plugged/fzf/src/tui/light_windows.go	/^	timeoutInterval = 10$/;"	c	package:tui
tmux	plugged/fzf/test/test_go.rb	/^  attr_reader :tmux$/;"	A	class:TestBase
tmux_args=	plugged/fzf/bin/fzf-tmux	/^tmux_args=()$/;"	f
toActions	plugged/fzf/src/terminal.go	/^func toActions(types ...actionType) []*action {$/;"	f	package:fzf	typeref:typename:[]*action
toAnsiString	plugged/fzf/src/ansi.go	/^func toAnsiString(color tui.Color, offset int) string {$/;"	f	package:fzf	typeref:typename:string
toModuleName	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^func toModuleName(path string) string {$/;"	f	package:main	typeref:typename:string
to_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
toggleItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) toggleItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
toggleSort	plugged/fzf/src/terminal.go	/^	toggleSort         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
token_bv	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_bv = 4$/;"	C
token_comment	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_comment = 8$/;"	C
token_decimal	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_decimal = 3$/;"	C
token_eof	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_eof = 9$/;"	C
token_keyword	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_keyword = 7$/;"	C
token_lparen	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_lparen = 0$/;"	C
token_numeral	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_numeral = 2$/;"	C
token_rparen	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_rparen = 1$/;"	C
token_string	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_string = 5$/;"	C
token_symbol	plugged/vim-polyglot/autoload/smt2/scanner.vim	/^const token_symbol = 6$/;"	C
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def tokenize_snippet_text($/;"	f
top	plugged/fzf/src/tui/light.go	/^	top      int$/;"	m	struct:tui.LightWindow	typeref:typename:int
top	plugged/fzf/src/tui/tcell.go	/^	top         int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
topLeft	plugged/fzf/src/tui/tui.go	/^	topLeft     rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
topRight	plugged/fzf/src/tui/tui.go	/^	topRight    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
traits	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
traits,traits	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?trait[ \\t]+([a-zA-Z0-9_]+)\/\\2\/t,traits,traits\/$/;"	k	langdef:Rust
trans	plugged/fzf/src/chunklist.go	/^	trans  ItemBuilder$/;"	m	struct:fzf.ChunkList	typeref:typename:ItemBuilder
transform	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
transformInput	plugged/fzf/src/pattern.go	/^func (p *Pattern) transformInput(item *Item) []Token {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Token
transform_patterns	plugged/vim-polyglot/scripts/build	/^def transform_patterns(heuristics)$/;"	f
transformed	plugged/fzf/src/item.go	/^	transformed *[]Token      \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]Token
translate_path	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(Dir, {i, Path}) ->$/;"	f
translate_path	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(_, Other) -> Other.$/;"	f
translate_paths	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_paths(Dir, RebarOpts) ->$/;"	f
trigger	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
trimLeft	plugged/fzf/src/terminal.go	/^func (t *Terminal) trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, int32)
trimLength	plugged/fzf/src/util/chars.go	/^	trimLength      uint16$/;"	m	struct:util.Chars	typeref:typename:uint16
trimLengthKnown	plugged/fzf/src/util/chars.go	/^	trimLengthKnown bool$/;"	m	struct:util.Chars	typeref:typename:bool
trimMessage	plugged/fzf/src/terminal.go	/^func (t *Terminal) trimMessage(message string, maxWidth int) string {$/;"	f	struct:fzf.Terminal	typeref:typename:string
trimQuery	plugged/fzf/src/terminal.go	/^func trimQuery(query string) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
trimRight	plugged/fzf/src/terminal.go	/^func (t *Terminal) trimRight(runes []rune, width int) ([]rune, bool) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, bool)
truncateQuery	plugged/fzf/src/terminal.go	/^func (t *Terminal) truncateQuery() {$/;"	f	struct:fzf.Terminal
trySkip	plugged/fzf/src/algo/algo.go	/^func trySkip(input *util.Chars, caseSensitive bool, b byte, from int) int {$/;"	f	package:algo	typeref:typename:int
try_curl	plugged/fzf/install	/^try_curl() {$/;"	f
try_wget	plugged/fzf/install	/^try_wget() {$/;"	f
ttyin	plugged/fzf/src/tui/light.go	/^	ttyin         *os.File$/;"	m	struct:tui.LightRenderer	typeref:typename:*os.File
ttyinChannel	plugged/fzf/src/tui/light.go	/^	ttyinChannel    chan byte$/;"	m	struct:tui.LightRenderer	typeref:typename:chan byte
ttyname	plugged/fzf/src/tui/ttyname_unix.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
ttyname	plugged/fzf/src/tui/ttyname_windows.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
tui	plugged/fzf/src/terminal.go	/^	tui                tui.Renderer$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Renderer
tui	plugged/fzf/src/tui/dummy.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/light.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/light_unix.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/light_windows.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tcell_test.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/ttyname_unix.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/ttyname_windows.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tui.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tui_test.go	/^package tui$/;"	p
typ	plugged/fzf/src/pattern.go	/^	typ           termType$/;"	m	struct:fzf.term	typeref:typename:termType
type	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*type[[:space:]]*([A-Z][a-zA-Z0-9_:]*)[[:space:]]*=\/\\1\/t,type\/$/;"	k	langdef:puppet
types	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*type[ \\t]+([a-zA-Z0-9_]+)\/\\1\/T,types\/$/;"	k	langdef:scala
types	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*type[ \\t]+([a-zA-Z0-9_]+)\/\\2\/t,types\/$/;"	k	langdef:typescript
types,type definitions	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?type[ \\t]+([a-zA-Z0-9_]+)\/\\2\/T,types,type definitions\/$/;"	k	langdef:Rust
typescript	plugged/vim-polyglot/ctags/typescript.ctags	/^--langdef=typescript$/;"	l
typescript_props	plugged/vim-polyglot/syntax/yats.vim	/^let typescript_props = 1$/;"	v
u	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> u <Plug>(calendar_undo)$/;"	m
u	plugged/vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
uc_minlines	plugged/vim-polyglot/syntax/uc.vim	/^  let uc_minlines = 10$/;"	v
ul	plugged/vimwiki/autoload/vimwiki/style.css	/^p, pre, blockquote, table, ul, ol, dl {$/;"	s
ul	plugged/vimwiki/autoload/vimwiki/style.css	/^ul {$/;"	s
ul ol	plugged/vimwiki/autoload/vimwiki/style.css	/^ul ul, ul ol, ol ol, ol ul {$/;"	s
ul ul	plugged/vimwiki/autoload/vimwiki/style.css	/^ul ul, ul ol, ol ol, ol ul {$/;"	s
ultisnips_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
unescape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unicode	plugged/fzf/src/terminal.go	/^	unicode            bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
unimpaired.vim	plugged/vim-unimpaired/README.markdown	/^# unimpaired.vim$/;"	c
unimpaired_paste	plugged/vim-unimpaired/plugin/unimpaired.vim	/^  augroup unimpaired_paste$/;"	a
unique_name_temp	plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix="", prefix=""):$/;"	m	class:TempFileManager
unison#Complete	plugged/vim-polyglot/autoload/unison.vim	/^function! unison#Complete(findstart, base) abort$/;"	f
unison#CompleteForBase	plugged/vim-polyglot/autoload/unison.vim	/^function! unison#CompleteForBase(base) abort$/;"	f
unison#SetBufferDefaults	plugged/vim-polyglot/autoload/unison.vim	/^function! unison#SetBufferDefaults() abort$/;"	f
unite#sources#ultisnips#define	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define() abort$/;"	f
unregister_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unset_var	plugged/fzf/test/test_go.rb	/^  def unset_var(name)$/;"	f	module:TestShell
unshift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
until	plugged/fzf/test/test_go.rb	/^  def until(refresh = false)$/;"	f	class:Tmux
upOneLine	plugged/fzf/src/tui/light.go	/^	upOneLine     bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
update	plugged/fzf/Makefile	/^update:$/;"	t
updatePromptOffset	plugged/fzf/src/terminal.go	/^func (t *Terminal) updatePromptOffset() ([]rune, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, []rune)
updateTerminalSize	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
updateTerminalSize	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
update_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_textobjects	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
usage	plugged/fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c	package:fzf
usage	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^func usage() {$/;"	f	package:main
usageMessage	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^const usageMessage = "" +$/;"	c	package:main
use a different key interval (default 0.1s)	plugged/vim-visual-multi/test/README.md	/^## use a different key interval (default 0.1s)$/;"	s	chapter:How to Run:
use_mutt_sidebar	plugged/vim-polyglot/syntax/muttrc.vim	/^  let use_mutt_sidebar=0$/;"	v
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
util	plugged/fzf/src/util/atomicbool.go	/^package util$/;"	p
util	plugged/fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/chars.go	/^package util$/;"	p
util	plugged/fzf/src/util/chars_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/eventbox.go	/^package util$/;"	p
util	plugged/fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/slab.go	/^package util$/;"	p
util	plugged/fzf/src/util/util.go	/^package util$/;"	p
util	plugged/fzf/src/util/util_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/util_unix.go	/^package util$/;"	p
util	plugged/fzf/src/util/util_windows.go	/^package util$/;"	p
v	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> v <Plug>(calendar_visual)$/;"	m
v	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
v	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> v             :call startify#set_mark('V')<cr>$/;"	m
v_fmt	plugged/vim-polyglot/ftplugin/vlang.vim	/^	augroup v_fmt$/;"	a
vader_color	plugged/vimwiki/test/run_tests.sh	/^vader_color() {$/;"	f
vader_filter	plugged/vimwiki/test/run_tests.sh	/^vader_filter() {$/;"	f
val	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let val = matchstr(s:filetype, "[^=]*$")$/;"	v
validateSign	plugged/fzf/src/options.go	/^func validateSign(sign string, signOptName string) error {$/;"	f	package:fzf	typeref:typename:error
validate_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
validator.assert	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^  function! validator.assert(no, funclist, ...) abort$/;"	f
validator.type	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^  function! validator.type(...) abort$/;"	f
validator.validate	plugged/vital.vim/autoload/vital/__vital__/Validator/Args.vim	/^  function! validator.validate(args) abort$/;"	f
values	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ /;"	k	langdef:scala
variable	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*([\\$][a-zA-Z0-9_:]+)[[:space:]]*=\/\\1\/v,variable\/$/;"	k	langdef:puppet
variables	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ /;"	k	langdef:scala
variables	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*export[ \\t]+(var|const|let)[ \\t]+([a-zA-Z0-9_]+)\/\\1\/v,variable/;"	k	langdef:typescript
varlambdas	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*var[ \\t]+([a-zA-Z0-9_]+)[ \\t]*=[ \\t]*function[ \\t]*\\(\\)\/\\1\//;"	k	langdef:typescript
vera_comment_strings	plugged/vim-polyglot/syntax/vera.vim	/^let vera_comment_strings = 1$/;"	v
verify	plugged/vim-polyglot/scripts/build	/^def verify(packages, heuristics)$/;"	f
version	plugged/fzf/install.ps1	/^$version="0.29.0"$/;"	v
version	plugged/fzf/main.go	/^var version string = "0.29"$/;"	v	package:main	typeref:typename:string
version	plugged/fzf/src/terminal.go	/^	version            int64$/;"	m	struct:fzf.Terminal	typeref:typename:int64
version	plugged/fzf/src/terminal.go	/^	version    int64$/;"	m	struct:fzf.previewer	typeref:typename:int64
version	plugged/fzf/src/terminal.go	/^	version  int64$/;"	m	struct:fzf.previewed	typeref:typename:int64
version	plugged/fzf/src/terminal.go	/^	version int64$/;"	m	struct:fzf.previewResult	typeref:typename:int64
version	plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
vertical	plugged/fzf/src/tui/tui.go	/^	vertical    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
vim	plugged/vim-polyglot/ftplugin/terraform.vim	/^  augroup vim.terraform.fmt$/;"	a
vim	plugged/vim-polyglot/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-asterisk: * -Improved	plugged/vim-asterisk/README.md	/^vim-asterisk: * -Improved$/;"	c
vim-highlightedyank	plugged/vim-highlightedyank/README.md	/^# vim-highlightedyank$/;"	c
vim-indent-object	plugged/vim-indent-object/README.md	/^## vim-indent-object$/;"	s
vim-visual-multi	plugged/vim-visual-multi/README.md	/^## vim-visual-multi$/;"	s
vim_executable	plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None  # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
vim_svelte_plugin	plugged/vim-polyglot/autoload/svelte.vim	/^  augroup vim_svelte_plugin$/;"	a
vimlist2str	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python2.py	/^            def vimlist2str(list):$/;"	f	member:DummyClassForLocalScope.main	file:
vimlist2str	plugged/vital.vim/autoload/vital/__vital__/Web/HTTP_python3.py	/^            def vimlist2str(list):$/;"	f	member:DummyClassForLocalScope.main	file:
vimlparser	plugged/vital.vim/.github/actions/vital-throw-message/scripts/lint-throw.go	/^	vimlparser "github.com\/haya14busa\/go-vimlparser"$/;"	P	package:github.com/haya14busa/go-vimlparser
vimwiki	plugged/vimwiki/ftplugin/vimwiki.vim	/^  augroup vimwiki$/;"	a
vimwiki	plugged/vimwiki/plugin/vimwiki.vim	/^augroup vimwiki$/;"	a
vimwiki#base#AddHeaderLevel	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#AddHeaderLevel(...) abort$/;"	f
vimwiki#base#RemoveHeaderLevel	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#RemoveHeaderLevel(...) abort$/;"	f
vimwiki#base#TO_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#TO_header(inner, including_subheaders, count) abort$/;"	f
vimwiki#base#TO_table_cell	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#TO_table_cell(inner, visual) abort$/;"	f
vimwiki#base#TO_table_col	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#TO_table_col(inner, visual) abort$/;"	f
vimwiki#base#apply_template	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#apply_template(template, rxUrl, rxDesc, rxStyle) abort$/;"	f
vimwiki#base#backlinks	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#backlinks() abort$/;"	f
vimwiki#base#check_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#check_links() abort$/;"	f
vimwiki#base#complete_links_escaped	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#complete_links_escaped(ArgLead, CmdLine, CursorPos) abort abort$/;"	f
vimwiki#base#current_subdir	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#current_subdir() abort$/;"	f
vimwiki#base#delete_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#delete_link() abort$/;"	f
vimwiki#base#deprecate	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#deprecate(old, new) abort$/;"	f
vimwiki#base#detect_nested_syntax	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#detect_nested_syntax() abort$/;"	f
vimwiki#base#edit_file	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#edit_file(command, filename, anchor, ...) abort$/;"	f
vimwiki#base#file_pattern	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#file_pattern(files) abort$/;"	f
vimwiki#base#find_files	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_files(wiki_nr, directories_only, ...) abort$/;"	f
vimwiki#base#find_next_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_next_link() abort$/;"	f
vimwiki#base#find_next_task	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_next_task() abort$/;"	f
vimwiki#base#find_prev_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_prev_link() abort$/;"	f
vimwiki#base#find_wiki	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_wiki(path) abort$/;"	f
vimwiki#base#follow_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#follow_link(split, ...) abort$/;"	f
vimwiki#base#generate_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#generate_links(create, ...) abort$/;"	f
vimwiki#base#get_anchors	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_anchors(filename, syntax) abort$/;"	f
vimwiki#base#get_globlinks_escaped	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_globlinks_escaped(...) abort$/;"	f
vimwiki#base#get_wiki_directories	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_wiki_directories(wiki_nr) abort$/;"	f
vimwiki#base#get_wikilinks	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_wikilinks(wiki_nr, also_absolute_links, pattern) abort$/;"	f
vimwiki#base#go_back_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#go_back_link() abort$/;"	f
vimwiki#base#goto	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto(...) abort$/;"	f
vimwiki#base#goto_index	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_index(wnum, ...) abort$/;"	f
vimwiki#base#goto_next_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_next_header() abort$/;"	f
vimwiki#base#goto_parent_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_parent_header() abort$/;"	f
vimwiki#base#goto_prev_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_prev_header() abort$/;"	f
vimwiki#base#goto_sibling	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_sibling(direction) abort$/;"	f
vimwiki#base#invsubdir	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#invsubdir(subdir) abort$/;"	f
vimwiki#base#is_diary_file	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#is_diary_file(filename, ...) abort$/;"	f
vimwiki#base#matchstr_at_cursor	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#matchstr_at_cursor(wikiRX) abort$/;"	f
vimwiki#base#nested_syntax	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#nested_syntax(filetype, start, end, textSnipHl) abort$/;"	f
vimwiki#base#normalize_imagelink_helper	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_imagelink_helper(str, rxUrl, rxDesc, rxStyle, template) abort$/;"	f
vimwiki#base#normalize_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_link(is_visual_mode) abort$/;"	f
vimwiki#base#normalize_link_helper	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_link_helper(str, rxUrl, rxDesc, template) abort$/;"	f
vimwiki#base#normalize_link_in_diary	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_link_in_diary(lnk) abort$/;"	f
vimwiki#base#open_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#open_link(cmd, link, ...) abort$/;"	f
vimwiki#base#read_caption	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#read_caption(file) abort$/;"	f
vimwiki#base#rename_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#rename_link() abort$/;"	f
vimwiki#base#replacestr_at_cursor	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#replacestr_at_cursor(wikiRX, sub) abort$/;"	f
vimwiki#base#resolve_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#resolve_link(link_text, ...) abort$/;"	f
vimwiki#base#search	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#search(search_pattern) abort$/;"	f
vimwiki#base#search_word	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#search_word(wikiRx, cmd) abort$/;"	f
vimwiki#base#subdir	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#subdir(path, filename) abort$/;"	f
vimwiki#base#system_open_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#system_open_link(url) abort$/;"	f
vimwiki#base#table_of_contents	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#table_of_contents(create) abort$/;"	f
vimwiki#base#ui_select	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#ui_select() abort$/;"	f
vimwiki#base#update_listing_in_buffer	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#update_listing_in_buffer(Generator, start_header,$/;"	f
vimwiki#diary#calendar_action	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#calendar_action(day, month, year, week, dir) abort$/;"	f
vimwiki#diary#calendar_sign	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#calendar_sign(day, month, year) abort$/;"	f
vimwiki#diary#diary_date_link	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#diary_date_link(...) abort$/;"	f
vimwiki#diary#generate_diary_section	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#generate_diary_section() abort$/;"	f
vimwiki#diary#get_diary_files	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#get_diary_files() abort$/;"	f
vimwiki#diary#goto_diary_index	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#goto_diary_index(wnum) abort$/;"	f
vimwiki#diary#goto_next_day	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#goto_next_day() abort$/;"	f
vimwiki#diary#goto_prev_day	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#goto_prev_day() abort$/;"	f
vimwiki#diary#make_note	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#make_note(wnum, ...) abort$/;"	f
vimwiki#html#CatUrl	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#CatUrl(wikifile) abort$/;"	f
vimwiki#html#CustomWiki2HTML	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#CustomWiki2HTML(path, wikifile, force) abort$/;"	f
vimwiki#html#PasteUrl	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#PasteUrl(wikifile) abort$/;"	f
vimwiki#html#Wiki2HTML	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#Wiki2HTML(path_html, wikifile) abort$/;"	f
vimwiki#html#WikiAll2HTML	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#WikiAll2HTML(path_html, force) abort$/;"	f
vimwiki#lst#TO_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#TO_list_item(inner, visual) abort$/;"	f
vimwiki#lst#adjust_numbered_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#adjust_numbered_list() abort$/;"	f
vimwiki#lst#adjust_whole_buffer	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#adjust_whole_buffer() abort$/;"	f
vimwiki#lst#change_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#change_level(from_line, to_line, direction, plus_children) abort$/;"	f
vimwiki#lst#change_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#change_marker(from_line, to_line, new_mrkr, mode) abort$/;"	f
vimwiki#lst#change_marker_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#change_marker_in_list(new_mrkr) abort$/;"	f
vimwiki#lst#decrement_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#decrement_cb(from_line, to_line) abort$/;"	f
vimwiki#lst#default_symbol	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#default_symbol() abort$/;"	f
vimwiki#lst#fold_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#fold_level(lnum) abort$/;"	f
vimwiki#lst#get_list_margin	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#get_list_margin() abort$/;"	f
vimwiki#lst#increment_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#increment_cb(from_line, to_line) abort$/;"	f
vimwiki#lst#kbd_O	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#kbd_O() abort$/;"	f
vimwiki#lst#kbd_cr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#kbd_cr(normal, just_mrkr) abort$/;"	f
vimwiki#lst#kbd_o	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#kbd_o() abort$/;"	f
vimwiki#lst#remove_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#remove_cb(first_line, last_line) abort$/;"	f
vimwiki#lst#remove_cb_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#remove_cb_in_list() abort$/;"	f
vimwiki#lst#toggle_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#toggle_cb(from_line, to_line) abort$/;"	f
vimwiki#lst#toggle_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#toggle_list_item() abort$/;"	f
vimwiki#lst#toggle_rejected_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#toggle_rejected_cb(from_line, to_line) abort$/;"	f
vimwiki#markdown_base#normalize_link	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! vimwiki#markdown_base#normalize_link(is_visual_mode) abort$/;"	f
vimwiki#markdown_base#open_reflink	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! vimwiki#markdown_base#open_reflink(link) abort$/;"	f
vimwiki#markdown_base#scan_reflinks	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! vimwiki#markdown_base#scan_reflinks() abort$/;"	f
vimwiki#path#abs_path_of_link	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#abs_path_of_link(link) abort$/;"	f
vimwiki#path#chomp_slash	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#chomp_slash(str) abort$/;"	f
vimwiki#path#current_wiki_file	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#current_wiki_file() abort$/;"	f
vimwiki#path#is_absolute	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#is_absolute(path) abort$/;"	f
vimwiki#path#is_equal	plugged/vimwiki/autoload/vimwiki/path.vim	/^  function! vimwiki#path#is_equal(p1, p2) abort$/;"	f
vimwiki#path#is_link_to_dir	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#is_link_to_dir(link) abort$/;"	f
vimwiki#path#join_path	plugged/vimwiki/autoload/vimwiki/path.vim	/^  function! vimwiki#path#join_path(directory, file) abort$/;"	f
vimwiki#path#mkdir	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#mkdir(path, ...) abort$/;"	f
vimwiki#path#normalize	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#normalize(path) abort$/;"	f
vimwiki#path#path_common_pfx	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#path_common_pfx(path1, path2) abort$/;"	f
vimwiki#path#path_norm	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#path_norm(path) abort$/;"	f
vimwiki#path#relpath	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#relpath(dir, file) abort$/;"	f
vimwiki#path#wikify_path	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#wikify_path(path) abort$/;"	f
vimwiki#tags#complete_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#complete_tags(ArgLead, CmdLine, CursorPos) abort$/;"	f
vimwiki#tags#generate_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#generate_tags(create, ...) abort$/;"	f
vimwiki#tags#get_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#get_tags() abort$/;"	f
vimwiki#tags#metadata_file_path	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#metadata_file_path() abort$/;"	f
vimwiki#tags#update_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#update_tags(full_rebuild, all_files) abort$/;"	f
vimwiki#tbl#align_or_cmd	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#align_or_cmd(cmd, ...) abort$/;"	f
vimwiki#tbl#cell_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#cell_splitter() abort$/;"	f
vimwiki#tbl#create	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#create(...) abort$/;"	f
vimwiki#tbl#format	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#format(lnum, ...) abort$/;"	f
vimwiki#tbl#get_cells	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#get_cells(line, ...) abort$/;"	f
vimwiki#tbl#get_rows	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#get_rows(lnum) abort$/;"	f
vimwiki#tbl#goto_next_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#goto_next_col() abort$/;"	f
vimwiki#tbl#goto_prev_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#goto_prev_col() abort$/;"	f
vimwiki#tbl#is_separator	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#is_separator(line) abort$/;"	f
vimwiki#tbl#is_table	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#is_table(line) abort$/;"	f
vimwiki#tbl#kbd_cr	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#kbd_cr() abort$/;"	f
vimwiki#tbl#kbd_shift_tab	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#kbd_shift_tab() abort$/;"	f
vimwiki#tbl#kbd_tab	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#kbd_tab() abort$/;"	f
vimwiki#tbl#move_column_left	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#move_column_left() abort$/;"	f
vimwiki#tbl#move_column_right	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#move_column_right() abort$/;"	f
vimwiki#tbl#reset_tw	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#reset_tw(lnum) abort$/;"	f
vimwiki#tbl#sep_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#sep_splitter() abort$/;"	f
vimwiki#u#count_exe	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#count_exe(cmd) abort$/;"	f
vimwiki#u#count_first_sym	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#count_first_sym(line) abort$/;"	f
vimwiki#u#cursor	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#cursor(lnum, cnum) abort$/;"	f
vimwiki#u#escape	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#escape(string) abort$/;"	f
vimwiki#u#ft_is_vw	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#ft_is_vw() abort$/;"	f
vimwiki#u#ft_set	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#ft_set() abort$/;"	f
vimwiki#u#is_codeblock	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#is_codeblock(lnum) abort$/;"	f
vimwiki#u#is_macos	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#is_macos() abort$/;"	f
vimwiki#u#is_windows	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#is_windows() abort$/;"	f
vimwiki#u#map_key	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#map_key(mode, key, plug, ...) abort$/;"	f
vimwiki#u#os_name	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#os_name() abort$/;"	f
vimwiki#u#reload_regexes	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#reload_regexes() abort$/;"	f
vimwiki#u#reload_regexes_custom	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#reload_regexes_custom() abort$/;"	f
vimwiki#u#sw	plugged/vimwiki/autoload/vimwiki/u.vim	/^  function! vimwiki#u#sw() abort$/;"	f
vimwiki#u#trim	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#trim(string, ...) abort$/;"	f
vimwiki#vars#add_temporary_wiki	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#add_temporary_wiki(settings) abort$/;"	f
vimwiki#vars#get_bufferlocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_bufferlocal(key, ...) abort$/;"	f
vimwiki#vars#get_global	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_global(key) abort$/;"	f
vimwiki#vars#get_syntaxlocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_syntaxlocal(key, ...) abort$/;"	f
vimwiki#vars#get_wikilocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_wikilocal(key, ...) abort$/;"	f
vimwiki#vars#get_wikilocal_default	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_wikilocal_default(key) abort$/;"	f
vimwiki#vars#init	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#init() abort$/;"	f
vimwiki#vars#number_of_wikis	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#number_of_wikis() abort$/;"	f
vimwiki#vars#populate_syntax_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#populate_syntax_vars(syntax) abort$/;"	f
vimwiki#vars#set_bufferlocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#set_bufferlocal(key, value, ...) abort$/;"	f
vimwiki#vars#set_wikilocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#set_wikilocal(key, value, wiki_nr) abort$/;"	f
vimwiki_default	plugged/vimwiki/test/vimrc	/^let vimwiki_default = {}$/;"	v
vimwiki_default	plugged/vimwiki/test/vimrc	/^let vimwiki_default.ext = '.wiki'$/;"	v
vimwiki_default	plugged/vimwiki/test/vimrc	/^let vimwiki_default.name = 'DefaultSyntax'$/;"	v
vimwiki_default	plugged/vimwiki/test/vimrc	/^let vimwiki_default.path = $HOME . '\/testwiki'$/;"	v
vimwiki_default	plugged/vimwiki/test/vimrc	/^let vimwiki_default.path_html = $HOME . '\/html\/default'$/;"	v
vimwiki_default	plugged/vimwiki/test/vimrc	/^let vimwiki_default.syntax = 'default'$/;"	v
vimwiki_markdown	plugged/vimwiki/test/vimrc	/^let vimwiki_markdown = {}$/;"	v
vimwiki_markdown	plugged/vimwiki/test/vimrc	/^let vimwiki_markdown.ext = '.md'$/;"	v
vimwiki_markdown	plugged/vimwiki/test/vimrc	/^let vimwiki_markdown.name = 'MarkdownSyntax'$/;"	v
vimwiki_markdown	plugged/vimwiki/test/vimrc	/^let vimwiki_markdown.path = $HOME . '\/testmarkdown'$/;"	v
vimwiki_markdown	plugged/vimwiki/test/vimrc	/^let vimwiki_markdown.path_html = $HOME . '\/html\/markdown'$/;"	v
vimwiki_markdown	plugged/vimwiki/test/vimrc	/^let vimwiki_markdown.syntax = 'markdown'$/;"	v
vimwiki_mediawiki	plugged/vimwiki/test/vimrc	/^let vimwiki_mediawiki = {}$/;"	v
vimwiki_mediawiki	plugged/vimwiki/test/vimrc	/^let vimwiki_mediawiki.ext = '.mw'$/;"	v
vimwiki_mediawiki	plugged/vimwiki/test/vimrc	/^let vimwiki_mediawiki.name = 'MediaWikiSyntax'$/;"	v
vimwiki_mediawiki	plugged/vimwiki/test/vimrc	/^let vimwiki_mediawiki.path = $HOME . '\/testmediawiki'$/;"	v
vimwiki_mediawiki	plugged/vimwiki/test/vimrc	/^let vimwiki_mediawiki.path_html = $HOME . '\/html\/mediawiki'$/;"	v
vimwiki_mediawiki	plugged/vimwiki/test/vimrc	/^let vimwiki_mediawiki.syntax = 'media'$/;"	v
virtual_position	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def virtual_position(line, col):$/;"	f
vital	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^augroup vital-hit-a-hint-motion-default-highlight$/;"	a
vital#	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/incsearch-fuzzy.vim/autoload/vital/incsearch_fuzzy.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugged/incsearch.vim/autoload/vital/_incsearch.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	plugged/incsearch.vim/autoload/vital/_incsearch.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugged/vim-highlightedyank/autoload/vital/_highlightedyank.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	plugged/vim-highlightedyank/autoload/vital/_highlightedyank.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugged/vital.vim/autoload/vital/_vital.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	plugged/vital.vim/autoload/vital/_vital.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vital.vim/autoload/vital/vital.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/vital.vim/autoload/vital/vital.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_easymotion#Data#Dict#import	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^  function! vital#_easymotion#Data#Dict#import() abort$/;"	f
vital#_easymotion#Data#List#import	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^  function! vital#_easymotion#Data#List#import() abort$/;"	f
vital#_easymotion#Data#Set#import	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^  function! vital#_easymotion#Data#Set#import() abort$/;"	f
vital#_easymotion#HitAHint#Hint#import	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! vital#_easymotion#HitAHint#Hint#import() abort$/;"	f
vital#_easymotion#HitAHint#Motion#import	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! vital#_easymotion#HitAHint#Motion#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Base#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! vital#_easymotion#Over#Commandline#Base#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#BufferComplete#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#BufferComplete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Cancel#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Cancel#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#CursorMove#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#CursorMove#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Delete#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Delete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Doautocmd#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Doautocmd#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Exit#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Exit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#History#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#History#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#InsertRegister#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#InsertRegister#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#KeyMapping#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#KeyMapping#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#NoInsert#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#NoInsert#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Paste#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Paste#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Redraw#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Redraw#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#import() abort$/;"	f
vital#_easymotion#Over#Exception#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^  function! vital#_easymotion#Over#Exception#import() abort$/;"	f
vital#_easymotion#Over#Input#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^  function! vital#_easymotion#Over#Input#import() abort$/;"	f
vital#_easymotion#Over#Keymapping#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! vital#_easymotion#Over#Keymapping#import() abort$/;"	f
vital#_easymotion#Over#Signals#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^  function! vital#_easymotion#Over#Signals#import() abort$/;"	f
vital#_easymotion#Over#String#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^  function! vital#_easymotion#Over#String#import() abort$/;"	f
vital#_easymotion#Palette#Capture#import	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! vital#_easymotion#Palette#Capture#import() abort$/;"	f
vital#_easymotion#Palette#Highlight#import	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! vital#_easymotion#Palette#Highlight#import() abort$/;"	f
vital#_easymotion#Palette#Keymapping#import	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! vital#_easymotion#Palette#Keymapping#import() abort$/;"	f
vital#_easymotion#Prelude#import	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! vital#_easymotion#Prelude#import() abort$/;"	f
vital#_easymotion#Vim#Buffer#import	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! vital#_easymotion#Vim#Buffer#import() abort$/;"	f
vital#_easymotion#Vim#Guard#import	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! vital#_easymotion#Vim#Guard#import() abort$/;"	f
vital#_easymotion#Vim#Message#import	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^  function! vital#_easymotion#Vim#Message#import() abort$/;"	f
vital#_incsearch_fuzzy#Data#String#Converter#import	plugged/incsearch-fuzzy.vim/autoload/vital/_incsearch_fuzzy/Data/String/Converter.vim	/^  function! vital#_incsearch_fuzzy#Data#String#Converter#import() abort$/;"	f
vital#of	plugged/incsearch-fuzzy.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	plugged/incsearch.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	plugged/vim-easymotion/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital.vim [![Matrix Test status](https://github.com/vim-jp/vital.vim/workflows/build%20and%20test%20at%20vim/badge.svg)](https://github.com/vim-jp/vital.vim/actions) [![codecov](https://codecov.io/gh/vim-jp/vital.vim/branch/master/graph/badge.svg)](https://codecov.io/gh/vim-jp/vital.vim)	plugged/vital.vim/README.md	/^# vital.vim [![Matrix Test status](https:\/\/github.com\/vim-jp\/vital.vim\/workflows\/build%20a/;"	c
vitalizer#command	plugged/vital.vim/autoload/vitalizer.vim	/^function! vitalizer#command(args) abort$/;"	f
vitalizer#complete	plugged/vital.vim/autoload/vitalizer.vim	/^function! vitalizer#complete(arglead, cmdline, cursorpos) abort$/;"	f
vitalizer#vitalize	plugged/vital.vim/autoload/vitalizer.vim	/^function! vitalizer#vitalize(name, to, modules, hash) abort$/;"	f
vm#au_cursor	plugged/vim-visual-multi/autoload/vm.vim	/^fun! vm#au_cursor(end) abort$/;"	f
vm#augroup	plugged/vim-visual-multi/autoload/vm.vim	/^fun! vm#augroup(end) abort$/;"	f
vm#clearmatches	plugged/vim-visual-multi/autoload/vm.vim	/^fun! vm#clearmatches() abort$/;"	f
vm#commands#add_cursor_at_pos	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#add_cursor_at_pos(extend) abort$/;"	f
vm#commands#add_cursor_at_word	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#add_cursor_at_word(yank, search) abort$/;"	f
vm#commands#add_cursor_down	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#add_cursor_down(extend, count) abort$/;"	f
vm#commands#add_cursor_up	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#add_cursor_up(extend, count) abort$/;"	f
vm#commands#align	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#align() abort$/;"	f
vm#commands#align_char	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#align_char(count) abort$/;"	f
vm#commands#align_regex	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#align_regex() abort$/;"	f
vm#commands#ctrln	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#ctrln(count) abort$/;"	f
vm#commands#find_all	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#find_all(visual, whole) abort$/;"	f
vm#commands#find_by_regex	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#find_by_regex(mode) abort$/;"	f
vm#commands#find_motion	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#find_motion(motion, char) abort$/;"	f
vm#commands#find_next	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#find_next(skip, nav) abort$/;"	f
vm#commands#find_prev	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#find_prev(skip, nav) abort$/;"	f
vm#commands#find_under	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#find_under(visual, whole, ...) abort$/;"	f
vm#commands#increase_or_decrease	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#increase_or_decrease(increase, all_types, count)$/;"	f
vm#commands#init	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#init() abort$/;"	f
vm#commands#invert_direction	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#invert_direction(...) abort$/;"	f
vm#commands#merge_to_beol	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#merge_to_beol(eol) abort$/;"	f
vm#commands#motion	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#motion(motion, count, select, single) abort$/;"	f
vm#commands#mouse_column	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#mouse_column() abort$/;"	f
vm#commands#redo	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#redo() abort$/;"	f
vm#commands#regex_abort	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#regex_abort()$/;"	f
vm#commands#regex_done	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#regex_done() abort$/;"	f
vm#commands#regex_motion	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#regex_motion(regex, count, remove) abort$/;"	f
vm#commands#regex_reset	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#regex_reset(...) abort$/;"	f
vm#commands#remove_empty_lines	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#remove_empty_lines() abort$/;"	f
vm#commands#remove_every_n_regions	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#remove_every_n_regions(count) abort$/;"	f
vm#commands#reselect_last	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#reselect_last()$/;"	f
vm#commands#seek_down	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#seek_down() abort$/;"	f
vm#commands#seek_up	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#seek_up() abort$/;"	f
vm#commands#shrink_or_enlarge	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#shrink_or_enlarge(shrink) abort$/;"	f
vm#commands#skip	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#skip(just_remove) abort$/;"	f
vm#commands#split_lines	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#split_lines() abort$/;"	f
vm#commands#undo	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#undo() abort$/;"	f
vm#commands#visual_add	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#visual_add() abort$/;"	f
vm#commands#visual_cursors	plugged/vim-visual-multi/autoload/vm/commands.vim	/^fun! vm#commands#visual_cursors() abort$/;"	f
vm#comp#TextChangedI	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#TextChangedI() abort$/;"	f
vm#comp#add_line	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#add_line() abort$/;"	f
vm#comp#conceallevel	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#conceallevel() abort$/;"	f
vm#comp#exit	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#exit() abort$/;"	f
vm#comp#icmds	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#icmds() abort$/;"	f
vm#comp#init	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#init() abort$/;"	f
vm#comp#iobj	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#iobj() abort$/;"	f
vm#comp#no_reindents	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#no_reindents() abort$/;"	f
vm#comp#reset	plugged/vim-visual-multi/autoload/vm/comp.vim	/^fun! vm#comp#reset() abort$/;"	f
vm#cursors#operation	plugged/vim-visual-multi/autoload/vm/cursors.vim	/^fun! vm#cursors#operation(op, n, register, ...) abort$/;"	f
vm#ecmds1#init	plugged/vim-visual-multi/autoload/vm/ecmds1.vim	/^fun! vm#ecmds1#init() abort$/;"	f
vm#ecmds2#init	plugged/vim-visual-multi/autoload/vm/ecmds2.vim	/^fun! vm#ecmds2#init() abort$/;"	f
vm#edit#init	plugged/vim-visual-multi/autoload/vm/edit.vim	/^fun! vm#edit#init() abort$/;"	f
vm#funcs#init	plugged/vim-visual-multi/autoload/vm/funcs.vim	/^fun! vm#funcs#init() abort$/;"	f
vm#global#init	plugged/vim-visual-multi/autoload/vm/global.vim	/^fun! vm#global#init() abort$/;"	f
vm#hard_reset	plugged/vim-visual-multi/autoload/vm.vim	/^fun! vm#hard_reset()$/;"	f
vm#icmds#cw	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! vm#icmds#cw(ctrlu) abort$/;"	f
vm#icmds#goto	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! vm#icmds#goto(next) abort$/;"	f
vm#icmds#init	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! vm#icmds#init() abort$/;"	f
vm#icmds#insert_line	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! vm#icmds#insert_line(above) abort$/;"	f
vm#icmds#paste	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! vm#icmds#paste() abort$/;"	f
vm#icmds#return	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! vm#icmds#return() abort$/;"	f
vm#icmds#x	plugged/vim-visual-multi/autoload/vm/icmds.vim	/^fun! vm#icmds#x(cmd) abort$/;"	f
vm#init_buffer	plugged/vim-visual-multi/autoload/vm.vim	/^fun! vm#init_buffer(cmd_type) abort$/;"	f
vm#insert#init	plugged/vim-visual-multi/autoload/vm/insert.vim	/^fun! vm#insert#init() abort$/;"	f
vm#maps#all#buffer	plugged/vim-visual-multi/autoload/vm/maps/all.vim	/^fun! vm#maps#all#buffer() abort$/;"	f
vm#maps#all#permanent	plugged/vim-visual-multi/autoload/vm/maps/all.vim	/^fun! vm#maps#all#permanent() abort$/;"	f
vm#maps#default	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! vm#maps#default() abort$/;"	f
vm#maps#init	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! vm#maps#init() abort$/;"	f
vm#maps#reset	plugged/vim-visual-multi/autoload/vm/maps.vim	/^fun! vm#maps#reset() abort$/;"	f
vm#operators#after_yank	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! vm#operators#after_yank() abort$/;"	f
vm#operators#find	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! vm#operators#find(start, visual, ...) abort$/;"	f
vm#operators#init	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! vm#operators#init() abort$/;"	f
vm#operators#select	plugged/vim-visual-multi/autoload/vm/operators.vim	/^fun! vm#operators#select(count, ...) abort$/;"	f
vm#plugs#buffer	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! vm#plugs#buffer() abort$/;"	f
vm#plugs#permanent	plugged/vim-visual-multi/autoload/vm/plugs.vim	/^fun! vm#plugs#permanent() abort$/;"	f
vm#region#init	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! vm#region#init() abort$/;"	f
vm#region#new	plugged/vim-visual-multi/autoload/vm/region.vim	/^fun! vm#region#new(cursor, ...) abort$/;"	f
vm#reset	plugged/vim-visual-multi/autoload/vm.vim	/^fun! vm#reset(...)$/;"	f
vm#search#init	plugged/vim-visual-multi/autoload/vm/search.vim	/^fun! vm#search#init() abort$/;"	f
vm#special#case#init	plugged/vim-visual-multi/autoload/vm/special/case.vim	/^fun! vm#special#case#init() abort$/;"	f
vm#special#commands#debug	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#debug() abort$/;"	f
vm#special#commands#deprecated	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#deprecated(cmd) abort$/;"	f
vm#special#commands#filter_lines	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#filter_lines() abort$/;"	f
vm#special#commands#filter_regions	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#filter_regions(type, exp, prompt) abort$/;"	f
vm#special#commands#init	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#init() abort$/;"	f
vm#special#commands#live	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#live()$/;"	f
vm#special#commands#mass_transpose	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#mass_transpose()$/;"	f
vm#special#commands#menu	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#menu() abort$/;"	f
vm#special#commands#new_test	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#new_test() abort$/;"	f
vm#special#commands#qfix	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#qfix(full_line)$/;"	f
vm#special#commands#regions_to_buffer	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#regions_to_buffer() abort$/;"	f
vm#special#commands#search	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#search(bang, l1, l2, pattern) abort$/;"	f
vm#special#commands#show_registers	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#show_registers(delete, args) abort$/;"	f
vm#special#commands#sort	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#sort(...) abort$/;"	f
vm#special#commands#unset	plugged/vim-visual-multi/autoload/vm/special/commands.vim	/^fun! vm#special#commands#unset()$/;"	f
vm#themes#complete	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! vm#themes#complete(A, L, P) abort$/;"	f
vm#themes#init	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! vm#themes#init() abort$/;"	f
vm#themes#load	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! vm#themes#load(theme) abort$/;"	f
vm#themes#search_highlight	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! vm#themes#search_highlight() abort$/;"	f
vm#themes#statusline	plugged/vim-visual-multi/autoload/vm/themes.vim	/^fun! vm#themes#statusline() abort$/;"	f
vm#variables#init	plugged/vim-visual-multi/autoload/vm/variables.vim	/^fun! vm#variables#init() abort$/;"	f
vm#variables#reset	plugged/vim-visual-multi/autoload/vm/variables.vim	/^fun! vm#variables#reset() abort$/;"	f
vm#variables#reset_globals	plugged/vim-visual-multi/autoload/vm/variables.vim	/^fun! vm#variables#reset_globals()$/;"	f
vm#variables#set	plugged/vim-visual-multi/autoload/vm/variables.vim	/^fun! vm#variables#set() abort$/;"	f
vm#visual#add	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! vm#visual#add(mode) abort$/;"	f
vm#visual#cursors	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! vm#visual#cursors(mode) abort$/;"	f
vm#visual#reduce	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! vm#visual#reduce() abort$/;"	f
vm#visual#split	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! vm#visual#split() abort$/;"	f
vm#visual#subtract	plugged/vim-visual-multi/autoload/vm/visual.vim	/^fun! vm#visual#subtract(mode) abort$/;"	f
vmode	plugged/ctrlsf.vim/syntax/ctrlsf.vim	/^let vmode = ctrlsf#CurrentMode()$/;"	v
vmove	plugged/fzf/src/terminal.go	/^func (t *Terminal) vmove(o int, allowCycle bool) {$/;"	f	struct:fzf.Terminal
vset	plugged/fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
w	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> w <Plug>(calendar_next)$/;"	m
w	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map w <Plug>(easymotion-w)$/;"	m
w	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap w <Plug>(easymotion-w)$/;"	m
w	plugged/vital.vim/test/Random/xor128.c	/^uint32_t x, y, z, w;$/;"	v	typeref:typename:uint32_t
wait	plugged/fzf/src/reader.go	/^	wait     bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
wait	plugged/fzf/test/test_go.rb	/^def wait$/;"	f
wait_until_file_exists	plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
want	plugged/fzf/src/terminal_test.go	/^	want$/;"	M	struct:fzf.testCase	typeref:typename:want
want	plugged/fzf/src/terminal_test.go	/^type want struct {$/;"	s	package:fzf
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 0, "abc"), ("I", 0, 0, "def"))$/;"	v	class:TestNoSubstring
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "asomelongertextb"), ("I", 0, 1, "o"))$/;"	v	class:TestCommonCharacters
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "tdin.h"),)$/;"	v	class:MatchIsTooCheap
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 10, "Beginning"), ("I", 0, 10, "t"))$/;"	v	class:TestRealLife
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 11, "this is it"), ("I", 0, 11, "a"))$/;"	v	class:TestUltiSnipsProblem
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " "),)$/;"	v	class:TestGuessing_DeleteOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " hallo"),)$/;"	v	class:TestCheapDelete
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 6, " "),)$/;"	v	class:TestGuessing_BackspaceOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 1, 6, "kjsdhfjksdhfkjhsdfkh"), ("I", 1, 6, "b"))$/;"	v	class:TestCrash
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 11, " "),)$/;"	v	class:TestRealLife1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 6, " "),)$/;"	v	class:TestGuessing_InsertOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 7, " "),)$/;"	v	class:TestGuessing_InsertOneChar1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	plugged/ultisnips/test/test_Autocommands.py	/^    wanted = "[ [ bar ] ] done M1U1"$/;"	v	class:Autocommands
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered\\na"$/;"	v	class:Autotrigger_CanMatchContext
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "if var == nil: pass\\n="$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_BS
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Jump
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Type
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_JustNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_StartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello \\t \\nGoodbye"""$/;"	v	class:LeaveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello\\nGoodbye"""$/;"	v	class:RemoveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\n\\tshould be empty"""$/;"	v	class:TrimSpacesAtEndOfLines
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\t\\n\\tshould be empty"""$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "oouu success b"$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "ööuu success b"$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1 is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.a|2.c"$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.red|2.gray"$/;"	v	class:Choices_WillBeExpandedToInlineSelection
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.Русский язык|2.中文|3.한국어|4.öääö"$/;"	v	class:Choices_CanTakeNonAsciiCharacters
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "a is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan is a color, mirror: cyan is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan, mirror: cyan"$/;"	v	class:Choices_With_Mirror
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "fun2(param1, param_end) result: fun2(param1, "$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray is color\\nline 2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray"$/;"	v	class:Choices_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah"$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer foo"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "||"$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = ($/;"	v	class:Completion_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "b"$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportError
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "{ < a > }"$/;"	v	class:ContextSnippets_UseContext
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = negative + EX + "HERE"$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = r"""$/;"	v	class:ContextSnippets_SnippetPriority
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = """\\$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = ""$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnot"$/;"	v	class:JumpForward_DefSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "aaaaa()3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "first line\\n\\n\\ntest\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if :\\n\\t"$/;"	v	class:Undo_ChangesInPlaceholder
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if a: test"$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\t"$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\ti"$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:DeleteSnippetInsertion1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo \\n"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = r"\\Safe\\foo"$/;"	v	class:SimpleExpand_Issue1343
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "  world hello;blub"$/;"	v	class:Bug1251994
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\nblah\\nhello world "$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\t\\t\\tpadding: 2px"$/;"	v	class:VirtualEdit
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\tfoo"$/;"	v	class:ShiftWidthZero
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "hello"$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "yank HELLO world yank"$/;"	v	class:RetainsTheUnnamedRegister
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = """Hello {{{$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v	class:FoldOverwrite_Simple_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v	class:Fold_DeleteMiddleLine_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v	class:PerlSyntaxFold
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """BeforeThis is a$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """This is a longer$/;"	v	class:FOTextAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """This is a$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <foo>"$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCode_MultilineIndented
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """        hi World End"""$/;"	v	class:PythonCode_IndentProblem
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """    hi$/;"	v	class:PythonCode_IndentEtSwOffset
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentEtSw
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentNoetSwTs
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShift
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShiftMethods
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendSimpleIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_ResetIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_SimpleMkline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first second (placeholder: ))$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first)$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi no End"""$/;"	v	class:PythonCode_OptNoExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi nothing test End"""$/;"	v	class:PythonCode_Locals
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi yes End"""$/;"	v	class:PythonCode_OptExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "5"$/;"	v	class:Python_SnipRvCanBeNonText
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v	class:TabStop_Shell_ShebangPython
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v	class:PythonCode_SimpleAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v	class:PythonCode_MultiAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi New End"$/;"	v	class:PythonCode_UseNewOverOld
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi höüäh you!and more"$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + 100 * "\\n" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = """for(size_t a_variable = 0; a_variable < 100; a_variable *= 2)$/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo "$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo "$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo"$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = ($/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab blub tab " + JF + "hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab\\nblub this\\n" + JF + "testhallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello" + JF + "hallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = ($/;"	v	class:CursorMovement_Multiline_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x first a bob b y"$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	plugged/ultisnips/test/test_Plugin.py	/^    wanted = "longtextlongtext\\nlongtextlongtext\\nHello"$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END -> hallo\\n" "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = ($/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:OldSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">not<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">some<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """\/*$/;"	v	class:snipMate_Issue658
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a stand alone snippet\\nThis is two stand alone snippet\\nThree"$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet"$/;"	v	class:snipMate_SimpleSnippetSubDirectory
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet\\n# With a comment"$/;"	v	class:snipMate_SimpleSnippet
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blah"$/;"	v	class:snipMate_Extends
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blah"$/;"	v	class:snipMate_TestNoBraceTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blub, blah is blah"$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub\\n\\nblah\\n"$/;"	v	class:snipMate_EmptyLinesContinueSnippets
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "for (j; j < blub; blub++) {\\n\\thi\\n}"$/;"	v	class:snipMate_TestMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "h$${2:blub}$$hi"$/;"	v	class:snipMate_NoNestedTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hblablubb"$/;"	v	class:snipMate_Visual_Simple
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX + "\\nworked"$/;"	v	class:snipMate_OtherFiletype
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX$/;"	v	class:snipMate_Disabled
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "lac03lu"$/;"	v	class:snipMate_Interpolation
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "laöäülu"$/;"	v	class:snipMate_InterpolationWithSystem
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "os.\\tfoo\\nself."$/;"	v	class:snipMate_Issue1344
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "two"$/;"	v	class:snipMate_MultiMatches
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "ultisnips"$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = r"$\\frac{num}{denom} blub"$/;"	v	class:snipMate_Issue1325
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_CanModifyParentBody
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_EnsureIndent
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_MoveVisual
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1 {$/;"	v	class:SnippetActions_UseCorrectJumpActions
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1, 2"""$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """debug(test(some(complex(cond(a)))))$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if not blah: pass"""$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if some_check(1, 2, 3) or 4: 5"""$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """import smthing$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some context$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some_wrapper(wrapme(2, 1)3): 4"""$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """totally_different(2, 1)3"""$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "1: 1\\n2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "[(1)2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "\\nabc"$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "abc\\n"$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "def123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = """\\t\\thi$/;"	v	class:No_Tab_Expand_RealWorld
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test fedcab"$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Hallo"$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Should only expand in p.\\ntest" + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "again"$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div allaway>\\n  Third Last\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div blah>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="no">\\n  End\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="some_id">\\n  \\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="yes">\\n  Begin Hi\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<divSomethingElse>\\n  Nupl  Nox\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """halongertextblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haoverwriteblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haupsblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hoverwritelEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hupslEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "[ HelloWorld ] Hello"$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah Lets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah mitteLets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Hi" + 2 * JF + "du Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "tt\\nt{\\n\\tt\\n}"$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "world = require('WORLD')End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "world = require(WORLD)End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "* test\\n* test\\n* test"$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes:no)"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "ab no\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR"$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur"$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi;$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "blumba" + EX + "\\n" + "this is a dynamic snippet" + "\\n" + "blumba" + EX$/;"	v	class:AddNewSnippetSource
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "test41123'êabc0"$/;"	v	class:VerifyVimDict1
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}"$/;"	v	class:Visual_LineSelect_DedentLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyybyxxx"$/;"	v	class:Visual_SelectOneWordExclusive
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyyybxxx"$/;"	v	class:Visual_SelectOneWordInclusive
wanted	plugged/ultisnips/test/vim_test_case.py	/^    wanted = ""$/;"	v	class:VimTestCase
warn_return_any	plugged/ultisnips/mypy.ini	/^warn_return_any = True$/;"	k	section:mypy
warn_unused_configs	plugged/ultisnips/mypy.ini	/^warn_unused_configs = True$/;"	k	section:mypy
which_build_tool	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^which_build_tool(Dir, Profile) ->$/;"	f
which_compile_opts_profile	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^which_compile_opts_profile(File) ->$/;"	f
whiteSuffix	plugged/fzf/src/terminal.go	/^var whiteSuffix *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
widget_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_attributes = {$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_role = [$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'grid/;"	v
width	plugged/fzf/src/terminal.go	/^	width    int$/;"	m	struct:fzf.itemLine	typeref:typename:int
width	plugged/fzf/src/tui/light.go	/^	width         int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
width	plugged/fzf/src/tui/light.go	/^	width    int$/;"	m	struct:tui.LightWindow	typeref:typename:int
width	plugged/fzf/src/tui/tcell.go	/^	width       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
win	plugged/fzf/test/test_go.rb	/^  attr_reader :win$/;"	A	class:Tmux
window	plugged/fzf/src/terminal.go	/^	window             tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
windowPosition	plugged/fzf/src/options.go	/^type windowPosition int$/;"	t	package:fzf	typeref:typename:int
withIndex	plugged/fzf/src/result_test.go	/^func withIndex(i *Item, index int) *Item {$/;"	f	package:fzf	typeref:typename:*Item
withPrefixLengths	plugged/fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []string, begin int) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
wombat	plugged/lightline.vim/README.md	/^### wombat$/;"	S	chapter:lightline.vim
wombat	plugged/lightline.vim/colorscheme.md	/^### wombat$/;"	S	chapter:Available Colorschemes
wordNext	plugged/fzf/src/terminal.go	/^	wordNext           string$/;"	m	struct:fzf.Terminal	typeref:typename:string
wordRubout	plugged/fzf/src/terminal.go	/^	wordRubout         string$/;"	m	struct:fzf.Terminal	typeref:typename:string
wrap	plugged/fzf/src/options.go	/^	wrap        bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
wrap	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrapLine	plugged/fzf/src/tui/light.go	/^func wrapLine(input string, prefixLength int, max int, tabstop int) []wrappedLine {$/;"	f	package:tui	typeref:typename:[]wrappedLine
wrapped.newsink	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f
wrappedLine	plugged/fzf/src/tui/light.go	/^type wrappedLine struct {$/;"	s	package:tui
wrapper	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap	file:
writeTemporaryFile	plugged/fzf/src/terminal.go	/^func writeTemporaryFile(data []string, printSep string) string {$/;"	f	package:fzf	typeref:typename:string
write_temp	plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
writelines	plugged/fzf/test/test_go.rb	/^  def writelines(path, lines)$/;"	f	class:TestBase
x	plugged/fzf/src/tui/light.go	/^	x             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
x	plugged/vital.vim/test/Random/xor128.c	/^uint32_t x, y, z, w;$/;"	v	typeref:typename:uint32_t
x	vimrc	/^xmap x <Plug>VSurround$/;"	m
xml_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': /;"	v
xoffset	plugged/fzf/src/terminal.go	/^	xoffset            int$/;"	m	struct:fzf.Terminal	typeref:typename:int
xor128	plugged/vital.vim/test/Random/xor128.c	/^uint32_t xor128(void) {$/;"	f	typeref:typename:uint32_t
y	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> y <Plug>(calendar_yank)$/;"	m
y	plugged/fzf/src/tui/light.go	/^	y             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
y	plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^map y <Plug>(highlightedyank)$/;"	m
y	plugged/vim-visual-multi/autoload/vm/operators.vim	/^        nmap <silent> <nowait> <buffer> y <Plug>(VM-Yank)$/;"	m
y	plugged/vim-visual-multi/autoload/vm/operators.vim	/^    nmap <silent><nowait><buffer> y <Plug>(VM-Yank)$/;"	m
y	plugged/vital.vim/test/Random/xor128.c	/^uint32_t x, y, z, w;$/;"	v	typeref:typename:uint32_t
y	sources/50-pluginSettings.vim	/^nmap y <Plug>YAMotion$/;"	m
y	sources/50-pluginSettings.vim	/^xmap y <Plug>YAVisual$/;"	m
yS	plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yanked	plugged/fzf/src/terminal.go	/^	yanked             []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
yats#IsInMultilineComment	plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsInMultilineComment(lnum, col)$/;"	f
yats#IsLineComment	plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsLineComment(lnum, col)$/;"	f
yoffset	plugged/fzf/src/tui/light.go	/^	yoffset       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
ys	plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
yx	vimrc	/^nmap yx  <Plug>Ysurround$/;"	m
yxx	vimrc	/^nmap yxx <Plug>Yssurround$/;"	m
yy	sources/50-pluginSettings.vim	/^nmap yy <Plug>YALine$/;"	m
z	plugged/vital.vim/test/Random/xor128.c	/^uint32_t x, y, z, w;$/;"	v	typeref:typename:uint32_t
z#	vimrc	/^map z#  <Plug>(incsearch-nohl0)<Plug>(asterisk-z#)$/;"	m
z*	vimrc	/^map z*  <Plug>(incsearch-nohl0)<Plug>(asterisk-z*)$/;"	m
z-	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> z- <Plug>(calendar_scroll_bottom_head)$/;"	m
z.	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> z. <Plug>(calendar_scroll_center_head)$/;"	m
z<CR>	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> z<CR> <Plug>(calendar_scroll_top_head)$/;"	m
zb	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> zb <Plug>(calendar_scroll_bottom)$/;"	m
zig#fmt#Format	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! zig#fmt#Format() abort$/;"	f
zsh	plugged/fzf/test/test_go.rb	/^    def zsh$/;"	S	class:Shell
zt	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> zt <Plug>(calendar_scroll_top)$/;"	m
zz	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> zz <Plug>(calendar_scroll_center)$/;"	m
{	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> { ($/;"	m
{{	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ {{}}<left><left>$/;"	m
{{!	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{! {{!}}<left><left>$/;"	m
{{#	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{# {{#}}<cr>{{\/}}<up><left><left>$/;"	m
{{<	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{< {{<}}<left><left>$/;"	m
{{>	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{> {{>}}<left><left>$/;"	m
{{if	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{if {{#if }}<cr>{{\/if}}<up><left>$/;"	m
{{ife	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ife {{#if }}<cr>{{else}}<cr>{{\/if}}<up><up><left>$/;"	m
{{{	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{{ {{{}}}<left><left><left>$/;"	m
}	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> } )$/;"	m
~	plugged/calendar.vim/autoload/calendar/mapping.vim	/^  nmap <buffer> ~ <Nop>$/;"	m
介绍	plugged/vimwiki/README-cn.md	/^介绍$/;"	s	chapter:VimWiki —— Vim 个人 Wiki 插件
准备工作	plugged/vimwiki/README-cn.md	/^准备工作$/;"	s	chapter:安装
命令	plugged/vimwiki/README-cn.md	/^命令$/;"	s	chapter:VimWiki —— Vim 个人 Wiki 插件
基本标记	plugged/vimwiki/README-cn.md	/^基本标记$/;"	s	chapter:VimWiki —— Vim 个人 Wiki 插件
安装	plugged/vimwiki/README-cn.md	/^安装$/;"	c
获取帮助	plugged/vimwiki/README-cn.md	/^获取帮助$/;"	c
通过 [Pathogen](http://www.vim.org/scripts/script.php?script_id=2332) 安装	plugged/vimwiki/README-cn.md	/^通过 [Pathogen](http:\/\/www.vim.org\/scripts\/script.php?script_id=2332) 安装$/;"	s	chapter:安装
通过 [Vim packages](http://vimhelp.appspot.com/repeat.txt.html#packages) 安装（Vim 7.4.1528 后）	plugged/vimwiki/README-cn.md	/^通过 [Vim packages](http:\/\/vimhelp.appspot.com\/repeat.txt.html#packages) 安装（Vim 7.4.1/;"	s	chapter:安装
通过 [Vim-Plug](https://github.com/junegunn/vim-plug) 安装	plugged/vimwiki/README-cn.md	/^通过 [Vim-Plug](https:\/\/github.com\/junegunn\/vim-plug) 安装$/;"	s	chapter:安装
通过 [Vundle](https://github.com/VundleVim/Vundle.vim) 安装	plugged/vimwiki/README-cn.md	/^通过 [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim) 安装$/;"	s	chapter:安装
键位绑定	plugged/vimwiki/README-cn.md	/^键位绑定$/;"	s	chapter:VimWiki —— Vim 个人 Wiki 插件
